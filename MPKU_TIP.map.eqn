-- Copyright (C) 1991-2010 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--SB1_r_BitCnt[2] is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_BitCnt[2]
SB1_r_BitCnt[2] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[3] is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_BitCnt[3]
SB1_r_BitCnt[3] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[0] is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_BitCnt[0]
SB1_r_BitCnt[0] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[1] is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_BitCnt[1]
SB1_r_BitCnt[1] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--KC1_q_b[5] is DPRAM_1WIRE_ID:inst30|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[5]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[5]_PORT_A_data_in_reg = DFFE(KC1_q_b[5]_PORT_A_data_in, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[5]_PORT_A_address_reg = DFFE(KC1_q_b[5]_PORT_A_address, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[5]_PORT_B_address_reg = DFFE(KC1_q_b[5]_PORT_B_address, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5]_PORT_A_write_enable = inst48;
KC1_q_b[5]_PORT_A_write_enable_reg = DFFE(KC1_q_b[5]_PORT_A_write_enable, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_B_read_enable = VCC;
KC1_q_b[5]_PORT_B_read_enable_reg = DFFE(KC1_q_b[5]_PORT_B_read_enable, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5]_clock_0 = !CLK_25MHz2;
KC1_q_b[5]_clock_1 = !CLK_25MHz2;
KC1_q_b[5]_clock_enable_0 = inst48;
KC1_q_b[5]_PORT_B_data_out = MEMORY(KC1_q_b[5]_PORT_A_data_in_reg, , KC1_q_b[5]_PORT_A_address_reg, KC1_q_b[5]_PORT_B_address_reg, KC1_q_b[5]_PORT_A_write_enable_reg, KC1_q_b[5]_PORT_B_read_enable_reg, , , KC1_q_b[5]_clock_0, KC1_q_b[5]_clock_1, KC1_q_b[5]_clock_enable_0, , , );
KC1_q_b[5]_PORT_B_data_out_reg = DFFE(KC1_q_b[5]_PORT_B_data_out, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5] = KC1_q_b[5]_PORT_B_data_out_reg[0];


--W1_r_Cnt_Time1MHz_BitLow[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[0]
W1_r_Cnt_Time1MHz_BitLow[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitLow,  );


--W1_r_Cnt_Time1MHz_BitLow[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[5]
W1_r_Cnt_Time1MHz_BitLow[5] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitLow,  );


--W1_r_Cnt_Time1MHz_BitLow[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[4]
W1_r_Cnt_Time1MHz_BitLow[4] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitLow,  );


--W1_r_Cnt_Time1MHz_BitLow[9] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[9]
W1_r_Cnt_Time1MHz_BitLow[9] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitLow,  );


--W1_r_Cnt_Time1MHz_BitLow[7] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[7]
W1_r_Cnt_Time1MHz_BitLow[7] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitLow,  );


--W1_r_Cnt_Time1MHz_BitLow[8] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[8]
W1_r_Cnt_Time1MHz_BitLow[8] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitLow,  );


--W1_r_Cnt_Time1MHz_BitLow[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[1]
W1_r_Cnt_Time1MHz_BitLow[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitLow,  );


--W1_r_Cnt_Time1MHz_BitLow[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[2]
W1_r_Cnt_Time1MHz_BitLow[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitLow,  );


--W1_r_Cnt_Time1MHz_BitLow[6] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[6]
W1_r_Cnt_Time1MHz_BitLow[6] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitLow,  );


--W1_r_Cnt_Time1MHz_BitLow[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[3]
W1_r_Cnt_Time1MHz_BitLow[3] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitLow,  );


--KC1_q_b[3] is DPRAM_1WIRE_ID:inst30|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[3]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[3]_PORT_A_data_in_reg = DFFE(KC1_q_b[3]_PORT_A_data_in, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[3]_PORT_A_address_reg = DFFE(KC1_q_b[3]_PORT_A_address, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[3]_PORT_B_address_reg = DFFE(KC1_q_b[3]_PORT_B_address, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3]_PORT_A_write_enable = inst48;
KC1_q_b[3]_PORT_A_write_enable_reg = DFFE(KC1_q_b[3]_PORT_A_write_enable, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_B_read_enable = VCC;
KC1_q_b[3]_PORT_B_read_enable_reg = DFFE(KC1_q_b[3]_PORT_B_read_enable, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3]_clock_0 = !CLK_25MHz2;
KC1_q_b[3]_clock_1 = !CLK_25MHz2;
KC1_q_b[3]_clock_enable_0 = inst48;
KC1_q_b[3]_PORT_B_data_out = MEMORY(KC1_q_b[3]_PORT_A_data_in_reg, , KC1_q_b[3]_PORT_A_address_reg, KC1_q_b[3]_PORT_B_address_reg, KC1_q_b[3]_PORT_A_write_enable_reg, KC1_q_b[3]_PORT_B_read_enable_reg, , , KC1_q_b[3]_clock_0, KC1_q_b[3]_clock_1, KC1_q_b[3]_clock_enable_0, , , );
KC1_q_b[3]_PORT_B_data_out_reg = DFFE(KC1_q_b[3]_PORT_B_data_out, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3] = KC1_q_b[3]_PORT_B_data_out_reg[0];


--KC1_q_b[1] is DPRAM_1WIRE_ID:inst30|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[1]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[1]_PORT_A_data_in_reg = DFFE(KC1_q_b[1]_PORT_A_data_in, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[1]_PORT_A_address_reg = DFFE(KC1_q_b[1]_PORT_A_address, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[1]_PORT_B_address_reg = DFFE(KC1_q_b[1]_PORT_B_address, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1]_PORT_A_write_enable = inst48;
KC1_q_b[1]_PORT_A_write_enable_reg = DFFE(KC1_q_b[1]_PORT_A_write_enable, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_B_read_enable = VCC;
KC1_q_b[1]_PORT_B_read_enable_reg = DFFE(KC1_q_b[1]_PORT_B_read_enable, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1]_clock_0 = !CLK_25MHz2;
KC1_q_b[1]_clock_1 = !CLK_25MHz2;
KC1_q_b[1]_clock_enable_0 = inst48;
KC1_q_b[1]_PORT_B_data_out = MEMORY(KC1_q_b[1]_PORT_A_data_in_reg, , KC1_q_b[1]_PORT_A_address_reg, KC1_q_b[1]_PORT_B_address_reg, KC1_q_b[1]_PORT_A_write_enable_reg, KC1_q_b[1]_PORT_B_read_enable_reg, , , KC1_q_b[1]_clock_0, KC1_q_b[1]_clock_1, KC1_q_b[1]_clock_enable_0, , , );
KC1_q_b[1]_PORT_B_data_out_reg = DFFE(KC1_q_b[1]_PORT_B_data_out, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1] = KC1_q_b[1]_PORT_B_data_out_reg[0];


--KC1_q_b[7] is DPRAM_1WIRE_ID:inst30|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[7]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[7]_PORT_A_data_in_reg = DFFE(KC1_q_b[7]_PORT_A_data_in, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[7]_PORT_A_address_reg = DFFE(KC1_q_b[7]_PORT_A_address, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[7]_PORT_B_address_reg = DFFE(KC1_q_b[7]_PORT_B_address, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7]_PORT_A_write_enable = inst48;
KC1_q_b[7]_PORT_A_write_enable_reg = DFFE(KC1_q_b[7]_PORT_A_write_enable, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_B_read_enable = VCC;
KC1_q_b[7]_PORT_B_read_enable_reg = DFFE(KC1_q_b[7]_PORT_B_read_enable, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7]_clock_0 = !CLK_25MHz2;
KC1_q_b[7]_clock_1 = !CLK_25MHz2;
KC1_q_b[7]_clock_enable_0 = inst48;
KC1_q_b[7]_PORT_B_data_out = MEMORY(KC1_q_b[7]_PORT_A_data_in_reg, , KC1_q_b[7]_PORT_A_address_reg, KC1_q_b[7]_PORT_B_address_reg, KC1_q_b[7]_PORT_A_write_enable_reg, KC1_q_b[7]_PORT_B_read_enable_reg, , , KC1_q_b[7]_clock_0, KC1_q_b[7]_clock_1, KC1_q_b[7]_clock_enable_0, , , );
KC1_q_b[7]_PORT_B_data_out_reg = DFFE(KC1_q_b[7]_PORT_B_data_out, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7] = KC1_q_b[7]_PORT_B_data_out_reg[0];


--KC1_q_b[2] is DPRAM_1WIRE_ID:inst30|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[2]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[2]_PORT_A_data_in_reg = DFFE(KC1_q_b[2]_PORT_A_data_in, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[2]_PORT_A_address_reg = DFFE(KC1_q_b[2]_PORT_A_address, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[2]_PORT_B_address_reg = DFFE(KC1_q_b[2]_PORT_B_address, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2]_PORT_A_write_enable = inst48;
KC1_q_b[2]_PORT_A_write_enable_reg = DFFE(KC1_q_b[2]_PORT_A_write_enable, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_B_read_enable = VCC;
KC1_q_b[2]_PORT_B_read_enable_reg = DFFE(KC1_q_b[2]_PORT_B_read_enable, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2]_clock_0 = !CLK_25MHz2;
KC1_q_b[2]_clock_1 = !CLK_25MHz2;
KC1_q_b[2]_clock_enable_0 = inst48;
KC1_q_b[2]_PORT_B_data_out = MEMORY(KC1_q_b[2]_PORT_A_data_in_reg, , KC1_q_b[2]_PORT_A_address_reg, KC1_q_b[2]_PORT_B_address_reg, KC1_q_b[2]_PORT_A_write_enable_reg, KC1_q_b[2]_PORT_B_read_enable_reg, , , KC1_q_b[2]_clock_0, KC1_q_b[2]_clock_1, KC1_q_b[2]_clock_enable_0, , , );
KC1_q_b[2]_PORT_B_data_out_reg = DFFE(KC1_q_b[2]_PORT_B_data_out, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2] = KC1_q_b[2]_PORT_B_data_out_reg[0];


--KC1_q_b[4] is DPRAM_1WIRE_ID:inst30|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[4]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[4]_PORT_A_data_in_reg = DFFE(KC1_q_b[4]_PORT_A_data_in, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[4]_PORT_A_address_reg = DFFE(KC1_q_b[4]_PORT_A_address, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[4]_PORT_B_address_reg = DFFE(KC1_q_b[4]_PORT_B_address, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4]_PORT_A_write_enable = inst48;
KC1_q_b[4]_PORT_A_write_enable_reg = DFFE(KC1_q_b[4]_PORT_A_write_enable, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_B_read_enable = VCC;
KC1_q_b[4]_PORT_B_read_enable_reg = DFFE(KC1_q_b[4]_PORT_B_read_enable, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4]_clock_0 = !CLK_25MHz2;
KC1_q_b[4]_clock_1 = !CLK_25MHz2;
KC1_q_b[4]_clock_enable_0 = inst48;
KC1_q_b[4]_PORT_B_data_out = MEMORY(KC1_q_b[4]_PORT_A_data_in_reg, , KC1_q_b[4]_PORT_A_address_reg, KC1_q_b[4]_PORT_B_address_reg, KC1_q_b[4]_PORT_A_write_enable_reg, KC1_q_b[4]_PORT_B_read_enable_reg, , , KC1_q_b[4]_clock_0, KC1_q_b[4]_clock_1, KC1_q_b[4]_clock_enable_0, , , );
KC1_q_b[4]_PORT_B_data_out_reg = DFFE(KC1_q_b[4]_PORT_B_data_out, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4] = KC1_q_b[4]_PORT_B_data_out_reg[0];


--KC1_q_b[0] is DPRAM_1WIRE_ID:inst30|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[0]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[0]_PORT_A_data_in_reg = DFFE(KC1_q_b[0]_PORT_A_data_in, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[0]_PORT_A_address_reg = DFFE(KC1_q_b[0]_PORT_A_address, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[0]_PORT_B_address_reg = DFFE(KC1_q_b[0]_PORT_B_address, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0]_PORT_A_write_enable = inst48;
KC1_q_b[0]_PORT_A_write_enable_reg = DFFE(KC1_q_b[0]_PORT_A_write_enable, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_B_read_enable = VCC;
KC1_q_b[0]_PORT_B_read_enable_reg = DFFE(KC1_q_b[0]_PORT_B_read_enable, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0]_clock_0 = !CLK_25MHz2;
KC1_q_b[0]_clock_1 = !CLK_25MHz2;
KC1_q_b[0]_clock_enable_0 = inst48;
KC1_q_b[0]_PORT_B_data_out = MEMORY(KC1_q_b[0]_PORT_A_data_in_reg, , KC1_q_b[0]_PORT_A_address_reg, KC1_q_b[0]_PORT_B_address_reg, KC1_q_b[0]_PORT_A_write_enable_reg, KC1_q_b[0]_PORT_B_read_enable_reg, , , KC1_q_b[0]_clock_0, KC1_q_b[0]_clock_1, KC1_q_b[0]_clock_enable_0, , , );
KC1_q_b[0]_PORT_B_data_out_reg = DFFE(KC1_q_b[0]_PORT_B_data_out, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0] = KC1_q_b[0]_PORT_B_data_out_reg[0];


--KC1_q_b[6] is DPRAM_1WIRE_ID:inst30|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[6]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[6]_PORT_A_data_in_reg = DFFE(KC1_q_b[6]_PORT_A_data_in, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[6]_PORT_A_address_reg = DFFE(KC1_q_b[6]_PORT_A_address, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[6]_PORT_B_address_reg = DFFE(KC1_q_b[6]_PORT_B_address, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6]_PORT_A_write_enable = inst48;
KC1_q_b[6]_PORT_A_write_enable_reg = DFFE(KC1_q_b[6]_PORT_A_write_enable, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_B_read_enable = VCC;
KC1_q_b[6]_PORT_B_read_enable_reg = DFFE(KC1_q_b[6]_PORT_B_read_enable, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6]_clock_0 = !CLK_25MHz2;
KC1_q_b[6]_clock_1 = !CLK_25MHz2;
KC1_q_b[6]_clock_enable_0 = inst48;
KC1_q_b[6]_PORT_B_data_out = MEMORY(KC1_q_b[6]_PORT_A_data_in_reg, , KC1_q_b[6]_PORT_A_address_reg, KC1_q_b[6]_PORT_B_address_reg, KC1_q_b[6]_PORT_A_write_enable_reg, KC1_q_b[6]_PORT_B_read_enable_reg, , , KC1_q_b[6]_clock_0, KC1_q_b[6]_clock_1, KC1_q_b[6]_clock_enable_0, , , );
KC1_q_b[6]_PORT_B_data_out_reg = DFFE(KC1_q_b[6]_PORT_B_data_out, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6] = KC1_q_b[6]_PORT_B_data_out_reg[0];


--KC1_q_b[5] is DPRAM_1WIRE_ID:inst86|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[5]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[5]_PORT_A_data_in_reg = DFFE(KC1_q_b[5]_PORT_A_data_in, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[5]_PORT_A_address_reg = DFFE(KC1_q_b[5]_PORT_A_address, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[5]_PORT_B_address_reg = DFFE(KC1_q_b[5]_PORT_B_address, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5]_PORT_A_write_enable = inst49;
KC1_q_b[5]_PORT_A_write_enable_reg = DFFE(KC1_q_b[5]_PORT_A_write_enable, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_B_read_enable = VCC;
KC1_q_b[5]_PORT_B_read_enable_reg = DFFE(KC1_q_b[5]_PORT_B_read_enable, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5]_clock_0 = !CLK_25MHz2;
KC1_q_b[5]_clock_1 = !CLK_25MHz2;
KC1_q_b[5]_clock_enable_0 = inst49;
KC1_q_b[5]_PORT_B_data_out = MEMORY(KC1_q_b[5]_PORT_A_data_in_reg, , KC1_q_b[5]_PORT_A_address_reg, KC1_q_b[5]_PORT_B_address_reg, KC1_q_b[5]_PORT_A_write_enable_reg, KC1_q_b[5]_PORT_B_read_enable_reg, , , KC1_q_b[5]_clock_0, KC1_q_b[5]_clock_1, KC1_q_b[5]_clock_enable_0, , , );
KC1_q_b[5]_PORT_B_data_out_reg = DFFE(KC1_q_b[5]_PORT_B_data_out, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5] = KC1_q_b[5]_PORT_B_data_out_reg[0];


--KC1_q_b[3] is DPRAM_1WIRE_ID:inst86|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[3]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[3]_PORT_A_data_in_reg = DFFE(KC1_q_b[3]_PORT_A_data_in, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[3]_PORT_A_address_reg = DFFE(KC1_q_b[3]_PORT_A_address, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[3]_PORT_B_address_reg = DFFE(KC1_q_b[3]_PORT_B_address, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3]_PORT_A_write_enable = inst49;
KC1_q_b[3]_PORT_A_write_enable_reg = DFFE(KC1_q_b[3]_PORT_A_write_enable, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_B_read_enable = VCC;
KC1_q_b[3]_PORT_B_read_enable_reg = DFFE(KC1_q_b[3]_PORT_B_read_enable, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3]_clock_0 = !CLK_25MHz2;
KC1_q_b[3]_clock_1 = !CLK_25MHz2;
KC1_q_b[3]_clock_enable_0 = inst49;
KC1_q_b[3]_PORT_B_data_out = MEMORY(KC1_q_b[3]_PORT_A_data_in_reg, , KC1_q_b[3]_PORT_A_address_reg, KC1_q_b[3]_PORT_B_address_reg, KC1_q_b[3]_PORT_A_write_enable_reg, KC1_q_b[3]_PORT_B_read_enable_reg, , , KC1_q_b[3]_clock_0, KC1_q_b[3]_clock_1, KC1_q_b[3]_clock_enable_0, , , );
KC1_q_b[3]_PORT_B_data_out_reg = DFFE(KC1_q_b[3]_PORT_B_data_out, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3] = KC1_q_b[3]_PORT_B_data_out_reg[0];


--KC1_q_b[1] is DPRAM_1WIRE_ID:inst86|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[1]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[1]_PORT_A_data_in_reg = DFFE(KC1_q_b[1]_PORT_A_data_in, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[1]_PORT_A_address_reg = DFFE(KC1_q_b[1]_PORT_A_address, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[1]_PORT_B_address_reg = DFFE(KC1_q_b[1]_PORT_B_address, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1]_PORT_A_write_enable = inst49;
KC1_q_b[1]_PORT_A_write_enable_reg = DFFE(KC1_q_b[1]_PORT_A_write_enable, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_B_read_enable = VCC;
KC1_q_b[1]_PORT_B_read_enable_reg = DFFE(KC1_q_b[1]_PORT_B_read_enable, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1]_clock_0 = !CLK_25MHz2;
KC1_q_b[1]_clock_1 = !CLK_25MHz2;
KC1_q_b[1]_clock_enable_0 = inst49;
KC1_q_b[1]_PORT_B_data_out = MEMORY(KC1_q_b[1]_PORT_A_data_in_reg, , KC1_q_b[1]_PORT_A_address_reg, KC1_q_b[1]_PORT_B_address_reg, KC1_q_b[1]_PORT_A_write_enable_reg, KC1_q_b[1]_PORT_B_read_enable_reg, , , KC1_q_b[1]_clock_0, KC1_q_b[1]_clock_1, KC1_q_b[1]_clock_enable_0, , , );
KC1_q_b[1]_PORT_B_data_out_reg = DFFE(KC1_q_b[1]_PORT_B_data_out, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1] = KC1_q_b[1]_PORT_B_data_out_reg[0];


--KC1_q_b[7] is DPRAM_1WIRE_ID:inst86|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[7]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[7]_PORT_A_data_in_reg = DFFE(KC1_q_b[7]_PORT_A_data_in, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[7]_PORT_A_address_reg = DFFE(KC1_q_b[7]_PORT_A_address, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[7]_PORT_B_address_reg = DFFE(KC1_q_b[7]_PORT_B_address, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7]_PORT_A_write_enable = inst49;
KC1_q_b[7]_PORT_A_write_enable_reg = DFFE(KC1_q_b[7]_PORT_A_write_enable, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_B_read_enable = VCC;
KC1_q_b[7]_PORT_B_read_enable_reg = DFFE(KC1_q_b[7]_PORT_B_read_enable, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7]_clock_0 = !CLK_25MHz2;
KC1_q_b[7]_clock_1 = !CLK_25MHz2;
KC1_q_b[7]_clock_enable_0 = inst49;
KC1_q_b[7]_PORT_B_data_out = MEMORY(KC1_q_b[7]_PORT_A_data_in_reg, , KC1_q_b[7]_PORT_A_address_reg, KC1_q_b[7]_PORT_B_address_reg, KC1_q_b[7]_PORT_A_write_enable_reg, KC1_q_b[7]_PORT_B_read_enable_reg, , , KC1_q_b[7]_clock_0, KC1_q_b[7]_clock_1, KC1_q_b[7]_clock_enable_0, , , );
KC1_q_b[7]_PORT_B_data_out_reg = DFFE(KC1_q_b[7]_PORT_B_data_out, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7] = KC1_q_b[7]_PORT_B_data_out_reg[0];


--KC1_q_b[2] is DPRAM_1WIRE_ID:inst86|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[2]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[2]_PORT_A_data_in_reg = DFFE(KC1_q_b[2]_PORT_A_data_in, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[2]_PORT_A_address_reg = DFFE(KC1_q_b[2]_PORT_A_address, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[2]_PORT_B_address_reg = DFFE(KC1_q_b[2]_PORT_B_address, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2]_PORT_A_write_enable = inst49;
KC1_q_b[2]_PORT_A_write_enable_reg = DFFE(KC1_q_b[2]_PORT_A_write_enable, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_B_read_enable = VCC;
KC1_q_b[2]_PORT_B_read_enable_reg = DFFE(KC1_q_b[2]_PORT_B_read_enable, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2]_clock_0 = !CLK_25MHz2;
KC1_q_b[2]_clock_1 = !CLK_25MHz2;
KC1_q_b[2]_clock_enable_0 = inst49;
KC1_q_b[2]_PORT_B_data_out = MEMORY(KC1_q_b[2]_PORT_A_data_in_reg, , KC1_q_b[2]_PORT_A_address_reg, KC1_q_b[2]_PORT_B_address_reg, KC1_q_b[2]_PORT_A_write_enable_reg, KC1_q_b[2]_PORT_B_read_enable_reg, , , KC1_q_b[2]_clock_0, KC1_q_b[2]_clock_1, KC1_q_b[2]_clock_enable_0, , , );
KC1_q_b[2]_PORT_B_data_out_reg = DFFE(KC1_q_b[2]_PORT_B_data_out, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2] = KC1_q_b[2]_PORT_B_data_out_reg[0];


--KC1_q_b[4] is DPRAM_1WIRE_ID:inst86|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[4]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[4]_PORT_A_data_in_reg = DFFE(KC1_q_b[4]_PORT_A_data_in, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[4]_PORT_A_address_reg = DFFE(KC1_q_b[4]_PORT_A_address, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[4]_PORT_B_address_reg = DFFE(KC1_q_b[4]_PORT_B_address, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4]_PORT_A_write_enable = inst49;
KC1_q_b[4]_PORT_A_write_enable_reg = DFFE(KC1_q_b[4]_PORT_A_write_enable, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_B_read_enable = VCC;
KC1_q_b[4]_PORT_B_read_enable_reg = DFFE(KC1_q_b[4]_PORT_B_read_enable, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4]_clock_0 = !CLK_25MHz2;
KC1_q_b[4]_clock_1 = !CLK_25MHz2;
KC1_q_b[4]_clock_enable_0 = inst49;
KC1_q_b[4]_PORT_B_data_out = MEMORY(KC1_q_b[4]_PORT_A_data_in_reg, , KC1_q_b[4]_PORT_A_address_reg, KC1_q_b[4]_PORT_B_address_reg, KC1_q_b[4]_PORT_A_write_enable_reg, KC1_q_b[4]_PORT_B_read_enable_reg, , , KC1_q_b[4]_clock_0, KC1_q_b[4]_clock_1, KC1_q_b[4]_clock_enable_0, , , );
KC1_q_b[4]_PORT_B_data_out_reg = DFFE(KC1_q_b[4]_PORT_B_data_out, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4] = KC1_q_b[4]_PORT_B_data_out_reg[0];


--KC1_q_b[0] is DPRAM_1WIRE_ID:inst86|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[0]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[0]_PORT_A_data_in_reg = DFFE(KC1_q_b[0]_PORT_A_data_in, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[0]_PORT_A_address_reg = DFFE(KC1_q_b[0]_PORT_A_address, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[0]_PORT_B_address_reg = DFFE(KC1_q_b[0]_PORT_B_address, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0]_PORT_A_write_enable = inst49;
KC1_q_b[0]_PORT_A_write_enable_reg = DFFE(KC1_q_b[0]_PORT_A_write_enable, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_B_read_enable = VCC;
KC1_q_b[0]_PORT_B_read_enable_reg = DFFE(KC1_q_b[0]_PORT_B_read_enable, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0]_clock_0 = !CLK_25MHz2;
KC1_q_b[0]_clock_1 = !CLK_25MHz2;
KC1_q_b[0]_clock_enable_0 = inst49;
KC1_q_b[0]_PORT_B_data_out = MEMORY(KC1_q_b[0]_PORT_A_data_in_reg, , KC1_q_b[0]_PORT_A_address_reg, KC1_q_b[0]_PORT_B_address_reg, KC1_q_b[0]_PORT_A_write_enable_reg, KC1_q_b[0]_PORT_B_read_enable_reg, , , KC1_q_b[0]_clock_0, KC1_q_b[0]_clock_1, KC1_q_b[0]_clock_enable_0, , , );
KC1_q_b[0]_PORT_B_data_out_reg = DFFE(KC1_q_b[0]_PORT_B_data_out, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0] = KC1_q_b[0]_PORT_B_data_out_reg[0];


--KC1_q_b[6] is DPRAM_1WIRE_ID:inst86|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[6]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[6]_PORT_A_data_in_reg = DFFE(KC1_q_b[6]_PORT_A_data_in, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[6]_PORT_A_address_reg = DFFE(KC1_q_b[6]_PORT_A_address, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[6]_PORT_B_address_reg = DFFE(KC1_q_b[6]_PORT_B_address, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6]_PORT_A_write_enable = inst49;
KC1_q_b[6]_PORT_A_write_enable_reg = DFFE(KC1_q_b[6]_PORT_A_write_enable, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_B_read_enable = VCC;
KC1_q_b[6]_PORT_B_read_enable_reg = DFFE(KC1_q_b[6]_PORT_B_read_enable, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6]_clock_0 = !CLK_25MHz2;
KC1_q_b[6]_clock_1 = !CLK_25MHz2;
KC1_q_b[6]_clock_enable_0 = inst49;
KC1_q_b[6]_PORT_B_data_out = MEMORY(KC1_q_b[6]_PORT_A_data_in_reg, , KC1_q_b[6]_PORT_A_address_reg, KC1_q_b[6]_PORT_B_address_reg, KC1_q_b[6]_PORT_A_write_enable_reg, KC1_q_b[6]_PORT_B_read_enable_reg, , , KC1_q_b[6]_clock_0, KC1_q_b[6]_clock_1, KC1_q_b[6]_clock_enable_0, , , );
KC1_q_b[6]_PORT_B_data_out_reg = DFFE(KC1_q_b[6]_PORT_B_data_out, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6] = KC1_q_b[6]_PORT_B_data_out_reg[0];


--SB1_r_BitCnt[1] is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_BitCnt[1]
SB1_r_BitCnt[1] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[0] is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_BitCnt[0]
SB1_r_BitCnt[0] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[2] is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_BitCnt[2]
SB1_r_BitCnt[2] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[3] is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_BitCnt[3]
SB1_r_BitCnt[3] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[1] is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_BitCnt[1]
SB1_r_BitCnt[1] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[0] is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_BitCnt[0]
SB1_r_BitCnt[0] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[2] is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_BitCnt[2]
SB1_r_BitCnt[2] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[3] is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_BitCnt[3]
SB1_r_BitCnt[3] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[1] is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_BitCnt[1]
SB1_r_BitCnt[1] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[0] is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_BitCnt[0]
SB1_r_BitCnt[0] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[2] is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_BitCnt[2]
SB1_r_BitCnt[2] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[3] is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_BitCnt[3]
SB1_r_BitCnt[3] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--KC1_q_b[5] is DPRAM_1WIRE_ID:inst104|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[5]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[5]_PORT_A_data_in_reg = DFFE(KC1_q_b[5]_PORT_A_data_in, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[5]_PORT_A_address_reg = DFFE(KC1_q_b[5]_PORT_A_address, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[5]_PORT_B_address_reg = DFFE(KC1_q_b[5]_PORT_B_address, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5]_PORT_A_write_enable = inst51;
KC1_q_b[5]_PORT_A_write_enable_reg = DFFE(KC1_q_b[5]_PORT_A_write_enable, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_B_read_enable = VCC;
KC1_q_b[5]_PORT_B_read_enable_reg = DFFE(KC1_q_b[5]_PORT_B_read_enable, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5]_clock_0 = !CLK_25MHz2;
KC1_q_b[5]_clock_1 = !CLK_25MHz2;
KC1_q_b[5]_clock_enable_0 = inst51;
KC1_q_b[5]_PORT_B_data_out = MEMORY(KC1_q_b[5]_PORT_A_data_in_reg, , KC1_q_b[5]_PORT_A_address_reg, KC1_q_b[5]_PORT_B_address_reg, KC1_q_b[5]_PORT_A_write_enable_reg, KC1_q_b[5]_PORT_B_read_enable_reg, , , KC1_q_b[5]_clock_0, KC1_q_b[5]_clock_1, KC1_q_b[5]_clock_enable_0, , , );
KC1_q_b[5]_PORT_B_data_out_reg = DFFE(KC1_q_b[5]_PORT_B_data_out, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5] = KC1_q_b[5]_PORT_B_data_out_reg[0];


--KC1_q_b[3] is DPRAM_1WIRE_ID:inst104|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[3]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[3]_PORT_A_data_in_reg = DFFE(KC1_q_b[3]_PORT_A_data_in, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[3]_PORT_A_address_reg = DFFE(KC1_q_b[3]_PORT_A_address, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[3]_PORT_B_address_reg = DFFE(KC1_q_b[3]_PORT_B_address, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3]_PORT_A_write_enable = inst51;
KC1_q_b[3]_PORT_A_write_enable_reg = DFFE(KC1_q_b[3]_PORT_A_write_enable, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_B_read_enable = VCC;
KC1_q_b[3]_PORT_B_read_enable_reg = DFFE(KC1_q_b[3]_PORT_B_read_enable, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3]_clock_0 = !CLK_25MHz2;
KC1_q_b[3]_clock_1 = !CLK_25MHz2;
KC1_q_b[3]_clock_enable_0 = inst51;
KC1_q_b[3]_PORT_B_data_out = MEMORY(KC1_q_b[3]_PORT_A_data_in_reg, , KC1_q_b[3]_PORT_A_address_reg, KC1_q_b[3]_PORT_B_address_reg, KC1_q_b[3]_PORT_A_write_enable_reg, KC1_q_b[3]_PORT_B_read_enable_reg, , , KC1_q_b[3]_clock_0, KC1_q_b[3]_clock_1, KC1_q_b[3]_clock_enable_0, , , );
KC1_q_b[3]_PORT_B_data_out_reg = DFFE(KC1_q_b[3]_PORT_B_data_out, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3] = KC1_q_b[3]_PORT_B_data_out_reg[0];


--KC1_q_b[1] is DPRAM_1WIRE_ID:inst104|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[1]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[1]_PORT_A_data_in_reg = DFFE(KC1_q_b[1]_PORT_A_data_in, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[1]_PORT_A_address_reg = DFFE(KC1_q_b[1]_PORT_A_address, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[1]_PORT_B_address_reg = DFFE(KC1_q_b[1]_PORT_B_address, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1]_PORT_A_write_enable = inst51;
KC1_q_b[1]_PORT_A_write_enable_reg = DFFE(KC1_q_b[1]_PORT_A_write_enable, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_B_read_enable = VCC;
KC1_q_b[1]_PORT_B_read_enable_reg = DFFE(KC1_q_b[1]_PORT_B_read_enable, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1]_clock_0 = !CLK_25MHz2;
KC1_q_b[1]_clock_1 = !CLK_25MHz2;
KC1_q_b[1]_clock_enable_0 = inst51;
KC1_q_b[1]_PORT_B_data_out = MEMORY(KC1_q_b[1]_PORT_A_data_in_reg, , KC1_q_b[1]_PORT_A_address_reg, KC1_q_b[1]_PORT_B_address_reg, KC1_q_b[1]_PORT_A_write_enable_reg, KC1_q_b[1]_PORT_B_read_enable_reg, , , KC1_q_b[1]_clock_0, KC1_q_b[1]_clock_1, KC1_q_b[1]_clock_enable_0, , , );
KC1_q_b[1]_PORT_B_data_out_reg = DFFE(KC1_q_b[1]_PORT_B_data_out, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1] = KC1_q_b[1]_PORT_B_data_out_reg[0];


--KC1_q_b[7] is DPRAM_1WIRE_ID:inst104|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[7]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[7]_PORT_A_data_in_reg = DFFE(KC1_q_b[7]_PORT_A_data_in, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[7]_PORT_A_address_reg = DFFE(KC1_q_b[7]_PORT_A_address, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[7]_PORT_B_address_reg = DFFE(KC1_q_b[7]_PORT_B_address, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7]_PORT_A_write_enable = inst51;
KC1_q_b[7]_PORT_A_write_enable_reg = DFFE(KC1_q_b[7]_PORT_A_write_enable, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_B_read_enable = VCC;
KC1_q_b[7]_PORT_B_read_enable_reg = DFFE(KC1_q_b[7]_PORT_B_read_enable, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7]_clock_0 = !CLK_25MHz2;
KC1_q_b[7]_clock_1 = !CLK_25MHz2;
KC1_q_b[7]_clock_enable_0 = inst51;
KC1_q_b[7]_PORT_B_data_out = MEMORY(KC1_q_b[7]_PORT_A_data_in_reg, , KC1_q_b[7]_PORT_A_address_reg, KC1_q_b[7]_PORT_B_address_reg, KC1_q_b[7]_PORT_A_write_enable_reg, KC1_q_b[7]_PORT_B_read_enable_reg, , , KC1_q_b[7]_clock_0, KC1_q_b[7]_clock_1, KC1_q_b[7]_clock_enable_0, , , );
KC1_q_b[7]_PORT_B_data_out_reg = DFFE(KC1_q_b[7]_PORT_B_data_out, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7] = KC1_q_b[7]_PORT_B_data_out_reg[0];


--KC1_q_b[2] is DPRAM_1WIRE_ID:inst104|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[2]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[2]_PORT_A_data_in_reg = DFFE(KC1_q_b[2]_PORT_A_data_in, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[2]_PORT_A_address_reg = DFFE(KC1_q_b[2]_PORT_A_address, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[2]_PORT_B_address_reg = DFFE(KC1_q_b[2]_PORT_B_address, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2]_PORT_A_write_enable = inst51;
KC1_q_b[2]_PORT_A_write_enable_reg = DFFE(KC1_q_b[2]_PORT_A_write_enable, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_B_read_enable = VCC;
KC1_q_b[2]_PORT_B_read_enable_reg = DFFE(KC1_q_b[2]_PORT_B_read_enable, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2]_clock_0 = !CLK_25MHz2;
KC1_q_b[2]_clock_1 = !CLK_25MHz2;
KC1_q_b[2]_clock_enable_0 = inst51;
KC1_q_b[2]_PORT_B_data_out = MEMORY(KC1_q_b[2]_PORT_A_data_in_reg, , KC1_q_b[2]_PORT_A_address_reg, KC1_q_b[2]_PORT_B_address_reg, KC1_q_b[2]_PORT_A_write_enable_reg, KC1_q_b[2]_PORT_B_read_enable_reg, , , KC1_q_b[2]_clock_0, KC1_q_b[2]_clock_1, KC1_q_b[2]_clock_enable_0, , , );
KC1_q_b[2]_PORT_B_data_out_reg = DFFE(KC1_q_b[2]_PORT_B_data_out, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2] = KC1_q_b[2]_PORT_B_data_out_reg[0];


--KC1_q_b[4] is DPRAM_1WIRE_ID:inst104|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[4]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[4]_PORT_A_data_in_reg = DFFE(KC1_q_b[4]_PORT_A_data_in, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[4]_PORT_A_address_reg = DFFE(KC1_q_b[4]_PORT_A_address, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[4]_PORT_B_address_reg = DFFE(KC1_q_b[4]_PORT_B_address, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4]_PORT_A_write_enable = inst51;
KC1_q_b[4]_PORT_A_write_enable_reg = DFFE(KC1_q_b[4]_PORT_A_write_enable, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_B_read_enable = VCC;
KC1_q_b[4]_PORT_B_read_enable_reg = DFFE(KC1_q_b[4]_PORT_B_read_enable, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4]_clock_0 = !CLK_25MHz2;
KC1_q_b[4]_clock_1 = !CLK_25MHz2;
KC1_q_b[4]_clock_enable_0 = inst51;
KC1_q_b[4]_PORT_B_data_out = MEMORY(KC1_q_b[4]_PORT_A_data_in_reg, , KC1_q_b[4]_PORT_A_address_reg, KC1_q_b[4]_PORT_B_address_reg, KC1_q_b[4]_PORT_A_write_enable_reg, KC1_q_b[4]_PORT_B_read_enable_reg, , , KC1_q_b[4]_clock_0, KC1_q_b[4]_clock_1, KC1_q_b[4]_clock_enable_0, , , );
KC1_q_b[4]_PORT_B_data_out_reg = DFFE(KC1_q_b[4]_PORT_B_data_out, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4] = KC1_q_b[4]_PORT_B_data_out_reg[0];


--KC1_q_b[0] is DPRAM_1WIRE_ID:inst104|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[0]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[0]_PORT_A_data_in_reg = DFFE(KC1_q_b[0]_PORT_A_data_in, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[0]_PORT_A_address_reg = DFFE(KC1_q_b[0]_PORT_A_address, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[0]_PORT_B_address_reg = DFFE(KC1_q_b[0]_PORT_B_address, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0]_PORT_A_write_enable = inst51;
KC1_q_b[0]_PORT_A_write_enable_reg = DFFE(KC1_q_b[0]_PORT_A_write_enable, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_B_read_enable = VCC;
KC1_q_b[0]_PORT_B_read_enable_reg = DFFE(KC1_q_b[0]_PORT_B_read_enable, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0]_clock_0 = !CLK_25MHz2;
KC1_q_b[0]_clock_1 = !CLK_25MHz2;
KC1_q_b[0]_clock_enable_0 = inst51;
KC1_q_b[0]_PORT_B_data_out = MEMORY(KC1_q_b[0]_PORT_A_data_in_reg, , KC1_q_b[0]_PORT_A_address_reg, KC1_q_b[0]_PORT_B_address_reg, KC1_q_b[0]_PORT_A_write_enable_reg, KC1_q_b[0]_PORT_B_read_enable_reg, , , KC1_q_b[0]_clock_0, KC1_q_b[0]_clock_1, KC1_q_b[0]_clock_enable_0, , , );
KC1_q_b[0]_PORT_B_data_out_reg = DFFE(KC1_q_b[0]_PORT_B_data_out, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0] = KC1_q_b[0]_PORT_B_data_out_reg[0];


--KC1_q_b[6] is DPRAM_1WIRE_ID:inst104|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[6]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[6]_PORT_A_data_in_reg = DFFE(KC1_q_b[6]_PORT_A_data_in, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[6]_PORT_A_address_reg = DFFE(KC1_q_b[6]_PORT_A_address, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[6]_PORT_B_address_reg = DFFE(KC1_q_b[6]_PORT_B_address, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6]_PORT_A_write_enable = inst51;
KC1_q_b[6]_PORT_A_write_enable_reg = DFFE(KC1_q_b[6]_PORT_A_write_enable, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_B_read_enable = VCC;
KC1_q_b[6]_PORT_B_read_enable_reg = DFFE(KC1_q_b[6]_PORT_B_read_enable, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6]_clock_0 = !CLK_25MHz2;
KC1_q_b[6]_clock_1 = !CLK_25MHz2;
KC1_q_b[6]_clock_enable_0 = inst51;
KC1_q_b[6]_PORT_B_data_out = MEMORY(KC1_q_b[6]_PORT_A_data_in_reg, , KC1_q_b[6]_PORT_A_address_reg, KC1_q_b[6]_PORT_B_address_reg, KC1_q_b[6]_PORT_A_write_enable_reg, KC1_q_b[6]_PORT_B_read_enable_reg, , , KC1_q_b[6]_clock_0, KC1_q_b[6]_clock_1, KC1_q_b[6]_clock_enable_0, , , );
KC1_q_b[6]_PORT_B_data_out_reg = DFFE(KC1_q_b[6]_PORT_B_data_out, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6] = KC1_q_b[6]_PORT_B_data_out_reg[0];


--KC1_q_b[5] is DPRAM_1WIRE_ID:inst139|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[5]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[5]_PORT_A_data_in_reg = DFFE(KC1_q_b[5]_PORT_A_data_in, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[5]_PORT_A_address_reg = DFFE(KC1_q_b[5]_PORT_A_address, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[5]_PORT_B_address_reg = DFFE(KC1_q_b[5]_PORT_B_address, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5]_PORT_A_write_enable = inst57;
KC1_q_b[5]_PORT_A_write_enable_reg = DFFE(KC1_q_b[5]_PORT_A_write_enable, KC1_q_b[5]_clock_0, , , KC1_q_b[5]_clock_enable_0);
KC1_q_b[5]_PORT_B_read_enable = VCC;
KC1_q_b[5]_PORT_B_read_enable_reg = DFFE(KC1_q_b[5]_PORT_B_read_enable, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5]_clock_0 = !CLK_25MHz2;
KC1_q_b[5]_clock_1 = !CLK_25MHz2;
KC1_q_b[5]_clock_enable_0 = inst57;
KC1_q_b[5]_PORT_B_data_out = MEMORY(KC1_q_b[5]_PORT_A_data_in_reg, , KC1_q_b[5]_PORT_A_address_reg, KC1_q_b[5]_PORT_B_address_reg, KC1_q_b[5]_PORT_A_write_enable_reg, KC1_q_b[5]_PORT_B_read_enable_reg, , , KC1_q_b[5]_clock_0, KC1_q_b[5]_clock_1, KC1_q_b[5]_clock_enable_0, , , );
KC1_q_b[5]_PORT_B_data_out_reg = DFFE(KC1_q_b[5]_PORT_B_data_out, KC1_q_b[5]_clock_1, , , );
KC1_q_b[5] = KC1_q_b[5]_PORT_B_data_out_reg[0];


--KC1_q_b[3] is DPRAM_1WIRE_ID:inst139|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[3]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[3]_PORT_A_data_in_reg = DFFE(KC1_q_b[3]_PORT_A_data_in, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[3]_PORT_A_address_reg = DFFE(KC1_q_b[3]_PORT_A_address, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[3]_PORT_B_address_reg = DFFE(KC1_q_b[3]_PORT_B_address, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3]_PORT_A_write_enable = inst57;
KC1_q_b[3]_PORT_A_write_enable_reg = DFFE(KC1_q_b[3]_PORT_A_write_enable, KC1_q_b[3]_clock_0, , , KC1_q_b[3]_clock_enable_0);
KC1_q_b[3]_PORT_B_read_enable = VCC;
KC1_q_b[3]_PORT_B_read_enable_reg = DFFE(KC1_q_b[3]_PORT_B_read_enable, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3]_clock_0 = !CLK_25MHz2;
KC1_q_b[3]_clock_1 = !CLK_25MHz2;
KC1_q_b[3]_clock_enable_0 = inst57;
KC1_q_b[3]_PORT_B_data_out = MEMORY(KC1_q_b[3]_PORT_A_data_in_reg, , KC1_q_b[3]_PORT_A_address_reg, KC1_q_b[3]_PORT_B_address_reg, KC1_q_b[3]_PORT_A_write_enable_reg, KC1_q_b[3]_PORT_B_read_enable_reg, , , KC1_q_b[3]_clock_0, KC1_q_b[3]_clock_1, KC1_q_b[3]_clock_enable_0, , , );
KC1_q_b[3]_PORT_B_data_out_reg = DFFE(KC1_q_b[3]_PORT_B_data_out, KC1_q_b[3]_clock_1, , , );
KC1_q_b[3] = KC1_q_b[3]_PORT_B_data_out_reg[0];


--KC1_q_b[1] is DPRAM_1WIRE_ID:inst139|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[1]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[1]_PORT_A_data_in_reg = DFFE(KC1_q_b[1]_PORT_A_data_in, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[1]_PORT_A_address_reg = DFFE(KC1_q_b[1]_PORT_A_address, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[1]_PORT_B_address_reg = DFFE(KC1_q_b[1]_PORT_B_address, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1]_PORT_A_write_enable = inst57;
KC1_q_b[1]_PORT_A_write_enable_reg = DFFE(KC1_q_b[1]_PORT_A_write_enable, KC1_q_b[1]_clock_0, , , KC1_q_b[1]_clock_enable_0);
KC1_q_b[1]_PORT_B_read_enable = VCC;
KC1_q_b[1]_PORT_B_read_enable_reg = DFFE(KC1_q_b[1]_PORT_B_read_enable, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1]_clock_0 = !CLK_25MHz2;
KC1_q_b[1]_clock_1 = !CLK_25MHz2;
KC1_q_b[1]_clock_enable_0 = inst57;
KC1_q_b[1]_PORT_B_data_out = MEMORY(KC1_q_b[1]_PORT_A_data_in_reg, , KC1_q_b[1]_PORT_A_address_reg, KC1_q_b[1]_PORT_B_address_reg, KC1_q_b[1]_PORT_A_write_enable_reg, KC1_q_b[1]_PORT_B_read_enable_reg, , , KC1_q_b[1]_clock_0, KC1_q_b[1]_clock_1, KC1_q_b[1]_clock_enable_0, , , );
KC1_q_b[1]_PORT_B_data_out_reg = DFFE(KC1_q_b[1]_PORT_B_data_out, KC1_q_b[1]_clock_1, , , );
KC1_q_b[1] = KC1_q_b[1]_PORT_B_data_out_reg[0];


--KC1_q_b[7] is DPRAM_1WIRE_ID:inst139|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[7]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[7]_PORT_A_data_in_reg = DFFE(KC1_q_b[7]_PORT_A_data_in, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[7]_PORT_A_address_reg = DFFE(KC1_q_b[7]_PORT_A_address, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[7]_PORT_B_address_reg = DFFE(KC1_q_b[7]_PORT_B_address, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7]_PORT_A_write_enable = inst57;
KC1_q_b[7]_PORT_A_write_enable_reg = DFFE(KC1_q_b[7]_PORT_A_write_enable, KC1_q_b[7]_clock_0, , , KC1_q_b[7]_clock_enable_0);
KC1_q_b[7]_PORT_B_read_enable = VCC;
KC1_q_b[7]_PORT_B_read_enable_reg = DFFE(KC1_q_b[7]_PORT_B_read_enable, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7]_clock_0 = !CLK_25MHz2;
KC1_q_b[7]_clock_1 = !CLK_25MHz2;
KC1_q_b[7]_clock_enable_0 = inst57;
KC1_q_b[7]_PORT_B_data_out = MEMORY(KC1_q_b[7]_PORT_A_data_in_reg, , KC1_q_b[7]_PORT_A_address_reg, KC1_q_b[7]_PORT_B_address_reg, KC1_q_b[7]_PORT_A_write_enable_reg, KC1_q_b[7]_PORT_B_read_enable_reg, , , KC1_q_b[7]_clock_0, KC1_q_b[7]_clock_1, KC1_q_b[7]_clock_enable_0, , , );
KC1_q_b[7]_PORT_B_data_out_reg = DFFE(KC1_q_b[7]_PORT_B_data_out, KC1_q_b[7]_clock_1, , , );
KC1_q_b[7] = KC1_q_b[7]_PORT_B_data_out_reg[0];


--KC1_q_b[2] is DPRAM_1WIRE_ID:inst139|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[2]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[2]_PORT_A_data_in_reg = DFFE(KC1_q_b[2]_PORT_A_data_in, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[2]_PORT_A_address_reg = DFFE(KC1_q_b[2]_PORT_A_address, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[2]_PORT_B_address_reg = DFFE(KC1_q_b[2]_PORT_B_address, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2]_PORT_A_write_enable = inst57;
KC1_q_b[2]_PORT_A_write_enable_reg = DFFE(KC1_q_b[2]_PORT_A_write_enable, KC1_q_b[2]_clock_0, , , KC1_q_b[2]_clock_enable_0);
KC1_q_b[2]_PORT_B_read_enable = VCC;
KC1_q_b[2]_PORT_B_read_enable_reg = DFFE(KC1_q_b[2]_PORT_B_read_enable, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2]_clock_0 = !CLK_25MHz2;
KC1_q_b[2]_clock_1 = !CLK_25MHz2;
KC1_q_b[2]_clock_enable_0 = inst57;
KC1_q_b[2]_PORT_B_data_out = MEMORY(KC1_q_b[2]_PORT_A_data_in_reg, , KC1_q_b[2]_PORT_A_address_reg, KC1_q_b[2]_PORT_B_address_reg, KC1_q_b[2]_PORT_A_write_enable_reg, KC1_q_b[2]_PORT_B_read_enable_reg, , , KC1_q_b[2]_clock_0, KC1_q_b[2]_clock_1, KC1_q_b[2]_clock_enable_0, , , );
KC1_q_b[2]_PORT_B_data_out_reg = DFFE(KC1_q_b[2]_PORT_B_data_out, KC1_q_b[2]_clock_1, , , );
KC1_q_b[2] = KC1_q_b[2]_PORT_B_data_out_reg[0];


--KC1_q_b[4] is DPRAM_1WIRE_ID:inst139|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[4]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[4]_PORT_A_data_in_reg = DFFE(KC1_q_b[4]_PORT_A_data_in, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[4]_PORT_A_address_reg = DFFE(KC1_q_b[4]_PORT_A_address, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[4]_PORT_B_address_reg = DFFE(KC1_q_b[4]_PORT_B_address, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4]_PORT_A_write_enable = inst57;
KC1_q_b[4]_PORT_A_write_enable_reg = DFFE(KC1_q_b[4]_PORT_A_write_enable, KC1_q_b[4]_clock_0, , , KC1_q_b[4]_clock_enable_0);
KC1_q_b[4]_PORT_B_read_enable = VCC;
KC1_q_b[4]_PORT_B_read_enable_reg = DFFE(KC1_q_b[4]_PORT_B_read_enable, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4]_clock_0 = !CLK_25MHz2;
KC1_q_b[4]_clock_1 = !CLK_25MHz2;
KC1_q_b[4]_clock_enable_0 = inst57;
KC1_q_b[4]_PORT_B_data_out = MEMORY(KC1_q_b[4]_PORT_A_data_in_reg, , KC1_q_b[4]_PORT_A_address_reg, KC1_q_b[4]_PORT_B_address_reg, KC1_q_b[4]_PORT_A_write_enable_reg, KC1_q_b[4]_PORT_B_read_enable_reg, , , KC1_q_b[4]_clock_0, KC1_q_b[4]_clock_1, KC1_q_b[4]_clock_enable_0, , , );
KC1_q_b[4]_PORT_B_data_out_reg = DFFE(KC1_q_b[4]_PORT_B_data_out, KC1_q_b[4]_clock_1, , , );
KC1_q_b[4] = KC1_q_b[4]_PORT_B_data_out_reg[0];


--KC1_q_b[0] is DPRAM_1WIRE_ID:inst139|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[0]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[0]_PORT_A_data_in_reg = DFFE(KC1_q_b[0]_PORT_A_data_in, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[0]_PORT_A_address_reg = DFFE(KC1_q_b[0]_PORT_A_address, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[0]_PORT_B_address_reg = DFFE(KC1_q_b[0]_PORT_B_address, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0]_PORT_A_write_enable = inst57;
KC1_q_b[0]_PORT_A_write_enable_reg = DFFE(KC1_q_b[0]_PORT_A_write_enable, KC1_q_b[0]_clock_0, , , KC1_q_b[0]_clock_enable_0);
KC1_q_b[0]_PORT_B_read_enable = VCC;
KC1_q_b[0]_PORT_B_read_enable_reg = DFFE(KC1_q_b[0]_PORT_B_read_enable, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0]_clock_0 = !CLK_25MHz2;
KC1_q_b[0]_clock_1 = !CLK_25MHz2;
KC1_q_b[0]_clock_enable_0 = inst57;
KC1_q_b[0]_PORT_B_data_out = MEMORY(KC1_q_b[0]_PORT_A_data_in_reg, , KC1_q_b[0]_PORT_A_address_reg, KC1_q_b[0]_PORT_B_address_reg, KC1_q_b[0]_PORT_A_write_enable_reg, KC1_q_b[0]_PORT_B_read_enable_reg, , , KC1_q_b[0]_clock_0, KC1_q_b[0]_clock_1, KC1_q_b[0]_clock_enable_0, , , );
KC1_q_b[0]_PORT_B_data_out_reg = DFFE(KC1_q_b[0]_PORT_B_data_out, KC1_q_b[0]_clock_1, , , );
KC1_q_b[0] = KC1_q_b[0]_PORT_B_data_out_reg[0];


--KC1_q_b[6] is DPRAM_1WIRE_ID:inst139|altsyncram:altsyncram_component|altsyncram_lco1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 32, Port A Width: 4, Port B Depth: 128, Port B Width: 1
--Port A Logical Depth: 32, Port A Logical Width: 32, Port B Logical Depth: 128, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
KC1_q_b[6]_PORT_A_data_in = BUS(C1L0, C1L0, C1L0, C1L0);
KC1_q_b[6]_PORT_A_data_in_reg = DFFE(KC1_q_b[6]_PORT_A_data_in, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_A_address = BUS(A0, A1, A2, A3, A4);
KC1_q_b[6]_PORT_A_address_reg = DFFE(KC1_q_b[6]_PORT_A_address, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_B_address = BUS(W1_r_Cnt_Byte_Rom[0], W1_r_Cnt_Byte_Rom[1], W1_r_Cnt_Byte_Rom[2], W1_r_Cnt_Byte_Rom[3], W1_r_Cnt_Byte_Rom[4], W1_r_Cnt_Byte_Rom[5], W1_r_Cnt_Byte_Rom[6]);
KC1_q_b[6]_PORT_B_address_reg = DFFE(KC1_q_b[6]_PORT_B_address, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6]_PORT_A_write_enable = inst57;
KC1_q_b[6]_PORT_A_write_enable_reg = DFFE(KC1_q_b[6]_PORT_A_write_enable, KC1_q_b[6]_clock_0, , , KC1_q_b[6]_clock_enable_0);
KC1_q_b[6]_PORT_B_read_enable = VCC;
KC1_q_b[6]_PORT_B_read_enable_reg = DFFE(KC1_q_b[6]_PORT_B_read_enable, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6]_clock_0 = !CLK_25MHz2;
KC1_q_b[6]_clock_1 = !CLK_25MHz2;
KC1_q_b[6]_clock_enable_0 = inst57;
KC1_q_b[6]_PORT_B_data_out = MEMORY(KC1_q_b[6]_PORT_A_data_in_reg, , KC1_q_b[6]_PORT_A_address_reg, KC1_q_b[6]_PORT_B_address_reg, KC1_q_b[6]_PORT_A_write_enable_reg, KC1_q_b[6]_PORT_B_read_enable_reg, , , KC1_q_b[6]_clock_0, KC1_q_b[6]_clock_1, KC1_q_b[6]_clock_enable_0, , , );
KC1_q_b[6]_PORT_B_data_out_reg = DFFE(KC1_q_b[6]_PORT_B_data_out, KC1_q_b[6]_clock_1, , , );
KC1_q_b[6] = KC1_q_b[6]_PORT_B_data_out_reg[0];


--SB1_r_BitCnt[1] is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_BitCnt[1]
SB1_r_BitCnt[1] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[0] is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_BitCnt[0]
SB1_r_BitCnt[0] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[2] is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_BitCnt[2]
SB1_r_BitCnt[2] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--SB1_r_BitCnt[3] is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_BitCnt[3]
SB1_r_BitCnt[3] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , !SB1_r_State,  );


--N1_r_Cnt[0] is PK_OUT_BLOCK:inst22|r_Cnt[0]
N1_r_Cnt[0] = DFFEAS(N1L0, !CLK_25MHz2,  ,  , N1L0,  ,  , N1L0,  );


--N1_r_Cnt[1] is PK_OUT_BLOCK:inst22|r_Cnt[1]
N1_r_Cnt[1] = DFFEAS(N1L0, !CLK_25MHz2,  ,  , N1L0,  ,  , N1L0,  );


--N1_r_Cnt[2] is PK_OUT_BLOCK:inst22|r_Cnt[2]
N1_r_Cnt[2] = DFFEAS(N1L0, !CLK_25MHz2,  ,  , N1L0,  ,  , N1L0,  );


--N1_r_Cnt[3] is PK_OUT_BLOCK:inst22|r_Cnt[3]
N1_r_Cnt[3] = DFFEAS(N1L0, !CLK_25MHz2,  ,  , N1L0,  ,  , N1L0,  );


--N1_r_Cnt[5] is PK_OUT_BLOCK:inst22|r_Cnt[5]
N1_r_Cnt[5] = DFFEAS(N1L0, !CLK_25MHz2,  ,  , N1L0,  ,  , N1L0,  );


--N1_r_Cnt[6] is PK_OUT_BLOCK:inst22|r_Cnt[6]
N1_r_Cnt[6] = DFFEAS(N1L0, !CLK_25MHz2,  ,  , N1L0,  ,  , N1L0,  );


--N1_r_Cnt[4] is PK_OUT_BLOCK:inst22|r_Cnt[4]
N1_r_Cnt[4] = DFFEAS(N1L0, !CLK_25MHz2,  ,  , N1L0,  ,  , N1L0,  );


--SB1_r_ClkCnt[0] is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[0]
SB1_r_ClkCnt[0] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[2] is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[2]
SB1_r_ClkCnt[2] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[1] is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[1]
SB1_r_ClkCnt[1] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[3] is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[3]
SB1_r_ClkCnt[3] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[4] is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[4]
SB1_r_ClkCnt[4] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_BitCnt[0]~4
SB1L0 = (SB1L0 & (SB1_r_BitCnt[0] & VCC)) # (!SB1L0 & (SB1_r_BitCnt[0] $ (VCC)));

--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_BitCnt[0]~5
SB1L0 = CARRY((!SB1L0 & SB1_r_BitCnt[0]));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_BitCnt[1]~6
SB1L0 = (SB1_r_BitCnt[1] & (!SB1L0)) # (!SB1_r_BitCnt[1] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_BitCnt[1]~7
SB1L0 = CARRY((!SB1L0) # (!SB1_r_BitCnt[1]));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_BitCnt[2]~8
SB1L0 = (SB1_r_BitCnt[2] & (SB1L0 $ (GND))) # (!SB1_r_BitCnt[2] & (!SB1L0 & VCC));

--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_BitCnt[2]~9
SB1L0 = CARRY((SB1_r_BitCnt[2] & !SB1L0));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_BitCnt[3]~10
SB1L0 = SB1_r_BitCnt[3] $ (SB1L0);


--W1_r_Cnt_Byte_Rom[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[0]
W1_r_Cnt_Byte_Rom[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Byte_Rom[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[1]
W1_r_Cnt_Byte_Rom[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Byte_Rom[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[2]
W1_r_Cnt_Byte_Rom[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Byte_Rom[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[3]
W1_r_Cnt_Byte_Rom[3] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Byte_Rom[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[4]
W1_r_Cnt_Byte_Rom[4] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Byte_Rom[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[5]
W1_r_Cnt_Byte_Rom[5] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Byte_Rom[6] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[6]
W1_r_Cnt_Byte_Rom[6] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Time125Hz[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[1]
W1_r_Cnt_Time125Hz[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , W1_r_Reset_125Hz,  );


--W1_r_Cnt_Time125Hz[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[2]
W1_r_Cnt_Time125Hz[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , W1_r_Reset_125Hz,  );


--W1_r_Cnt_Time125Hz[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[3]
W1_r_Cnt_Time125Hz[3] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , W1_r_Reset_125Hz,  );


--W1_r_Cnt_Time125Hz[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[0]
W1_r_Cnt_Time125Hz[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , W1_r_Reset_125Hz,  );


--W1_r_Cnt_Time125Hz[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[4]
W1_r_Cnt_Time125Hz[4] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , W1_r_Reset_125Hz,  );


--W1_r_Cnt_Time125Hz[6] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[6]
W1_r_Cnt_Time125Hz[6] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , W1_r_Reset_125Hz,  );


--W1_r_Cnt_Time125Hz[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[5]
W1_r_Cnt_Time125Hz[5] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , W1_r_Reset_125Hz,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[0]~10
W1L0 = (U1_o_MHz & (W1_r_Cnt_Time1MHz_BitLow[0] $ (VCC))) # (!U1_o_MHz & (W1_r_Cnt_Time1MHz_BitLow[0] & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[0]~11
W1L0 = CARRY((U1_o_MHz & W1_r_Cnt_Time1MHz_BitLow[0]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[1]~12
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[1] & (!W1L0)) # (!W1_r_Cnt_Time1MHz_BitLow[1] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[1]~13
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Time1MHz_BitLow[1]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[2]~14
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[2] & (W1L0 $ (GND))) # (!W1_r_Cnt_Time1MHz_BitLow[2] & (!W1L0 & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[2]~15
W1L0 = CARRY((W1_r_Cnt_Time1MHz_BitLow[2] & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[3]~16
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[3] & (!W1L0)) # (!W1_r_Cnt_Time1MHz_BitLow[3] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[3]~17
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Time1MHz_BitLow[3]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[4]~18
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[4] & (W1L0 $ (GND))) # (!W1_r_Cnt_Time1MHz_BitLow[4] & (!W1L0 & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[4]~19
W1L0 = CARRY((W1_r_Cnt_Time1MHz_BitLow[4] & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[5]~20
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[5] & (!W1L0)) # (!W1_r_Cnt_Time1MHz_BitLow[5] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[5]~21
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Time1MHz_BitLow[5]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[6]~22
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[6] & (W1L0 $ (GND))) # (!W1_r_Cnt_Time1MHz_BitLow[6] & (!W1L0 & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[6]~23
W1L0 = CARRY((W1_r_Cnt_Time1MHz_BitLow[6] & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[7]~24
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[7] & (!W1L0)) # (!W1_r_Cnt_Time1MHz_BitLow[7] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[7]~25
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Time1MHz_BitLow[7]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[8]~26
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[8] & (W1L0 $ (GND))) # (!W1_r_Cnt_Time1MHz_BitLow[8] & (!W1L0 & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[8]~27
W1L0 = CARRY((W1_r_Cnt_Time1MHz_BitLow[8] & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitLow[9]~28
W1L0 = W1_r_Cnt_Time1MHz_BitLow[9] $ (W1L0);


--W1_r_Cnt_Time1MHz_BitHigh[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[3]
W1_r_Cnt_Time1MHz_BitHigh[3] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitHigh,  );


--W1_r_Cnt_Time1MHz_BitHigh[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[0]
W1_r_Cnt_Time1MHz_BitHigh[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitHigh,  );


--W1_r_Cnt_Time1MHz_BitHigh[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[1]
W1_r_Cnt_Time1MHz_BitHigh[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitHigh,  );


--W1_r_Cnt_Time1MHz_BitHigh[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[2]
W1_r_Cnt_Time1MHz_BitHigh[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitHigh,  );


--W1_r_Cnt_Time1MHz_BitHigh[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[4]
W1_r_Cnt_Time1MHz_BitHigh[4] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitHigh,  );


--W1_r_Cnt_Time1MHz_BitHigh[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[5]
W1_r_Cnt_Time1MHz_BitHigh[5] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  , !W1_r_Reset_1MHz_BitHigh,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~2
W1L0 = W1_r_Cnt_Bit_Rx[0] $ (VCC);

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~3
W1L0 = CARRY(W1_r_Cnt_Bit_Rx[0]);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~4
W1L0 = (W1_r_Cnt_Bit_Rx[1] & (!W1L0)) # (!W1_r_Cnt_Bit_Rx[1] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~5
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Bit_Rx[1]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~6
W1L0 = (W1_r_Cnt_Bit_Rx[2] & (W1L0 $ (GND))) # (!W1_r_Cnt_Bit_Rx[2] & (!W1L0 & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~7
W1L0 = CARRY((W1_r_Cnt_Bit_Rx[2] & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~8
W1L0 = (W1_r_Cnt_Bit_Rx[3] & (!W1L0)) # (!W1_r_Cnt_Bit_Rx[3] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~9
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Bit_Rx[3]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~10
W1L0 = W1_r_Cnt_Bit_Rx[4] $ (!W1L0);


--XB1_r_TxTail[0] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[0]
XB1_r_TxTail[0] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[1] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[1]
XB1_r_TxTail[1] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--SB1_r_ClkCnt[0] is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[0]
SB1_r_ClkCnt[0] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[2] is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[2]
SB1_r_ClkCnt[2] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[1] is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[1]
SB1_r_ClkCnt[1] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[3] is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[3]
SB1_r_ClkCnt[3] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[4] is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[4]
SB1_r_ClkCnt[4] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_BitCnt[0]~4
SB1L0 = (SB1L0 & (SB1_r_BitCnt[0] & VCC)) # (!SB1L0 & (SB1_r_BitCnt[0] $ (VCC)));

--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_BitCnt[0]~5
SB1L0 = CARRY((!SB1L0 & SB1_r_BitCnt[0]));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_BitCnt[1]~6
SB1L0 = (SB1_r_BitCnt[1] & (!SB1L0)) # (!SB1_r_BitCnt[1] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_BitCnt[1]~7
SB1L0 = CARRY((!SB1L0) # (!SB1_r_BitCnt[1]));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_BitCnt[2]~8
SB1L0 = (SB1_r_BitCnt[2] & (SB1L0 $ (GND))) # (!SB1_r_BitCnt[2] & (!SB1L0 & VCC));

--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_BitCnt[2]~9
SB1L0 = CARRY((SB1_r_BitCnt[2] & !SB1L0));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_BitCnt[3]~10
SB1L0 = SB1_r_BitCnt[3] $ (SB1L0);


--XB1_r_TxTail[0] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[0]
XB1_r_TxTail[0] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[1] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[1]
XB1_r_TxTail[1] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--SB1_r_ClkCnt[0] is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[0]
SB1_r_ClkCnt[0] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[2] is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[2]
SB1_r_ClkCnt[2] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[1] is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[1]
SB1_r_ClkCnt[1] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[3] is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[3]
SB1_r_ClkCnt[3] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[4] is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[4]
SB1_r_ClkCnt[4] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_BitCnt[0]~4
SB1L0 = (SB1L0 & (SB1_r_BitCnt[0] & VCC)) # (!SB1L0 & (SB1_r_BitCnt[0] $ (VCC)));

--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_BitCnt[0]~5
SB1L0 = CARRY((!SB1L0 & SB1_r_BitCnt[0]));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_BitCnt[1]~6
SB1L0 = (SB1_r_BitCnt[1] & (!SB1L0)) # (!SB1_r_BitCnt[1] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_BitCnt[1]~7
SB1L0 = CARRY((!SB1L0) # (!SB1_r_BitCnt[1]));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_BitCnt[2]~8
SB1L0 = (SB1_r_BitCnt[2] & (SB1L0 $ (GND))) # (!SB1_r_BitCnt[2] & (!SB1L0 & VCC));

--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_BitCnt[2]~9
SB1L0 = CARRY((SB1_r_BitCnt[2] & !SB1L0));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_BitCnt[3]~10
SB1L0 = SB1_r_BitCnt[3] $ (SB1L0);


--XB1_r_TxTail[0] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[0]
XB1_r_TxTail[0] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[1] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[1]
XB1_r_TxTail[1] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--SB1_r_ClkCnt[0] is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[0]
SB1_r_ClkCnt[0] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[2] is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[2]
SB1_r_ClkCnt[2] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[1] is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[1]
SB1_r_ClkCnt[1] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[3] is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[3]
SB1_r_ClkCnt[3] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[4] is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[4]
SB1_r_ClkCnt[4] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_BitCnt[0]~4
SB1L0 = (SB1L0 & (SB1_r_BitCnt[0] & VCC)) # (!SB1L0 & (SB1_r_BitCnt[0] $ (VCC)));

--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_BitCnt[0]~5
SB1L0 = CARRY((!SB1L0 & SB1_r_BitCnt[0]));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_BitCnt[1]~6
SB1L0 = (SB1_r_BitCnt[1] & (!SB1L0)) # (!SB1_r_BitCnt[1] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_BitCnt[1]~7
SB1L0 = CARRY((!SB1L0) # (!SB1_r_BitCnt[1]));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_BitCnt[2]~8
SB1L0 = (SB1_r_BitCnt[2] & (SB1L0 $ (GND))) # (!SB1_r_BitCnt[2] & (!SB1L0 & VCC));

--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_BitCnt[2]~9
SB1L0 = CARRY((SB1_r_BitCnt[2] & !SB1L0));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_BitCnt[3]~10
SB1L0 = SB1_r_BitCnt[3] $ (SB1L0);


--XB1_r_TxTail[0] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[0]
XB1_r_TxTail[0] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[1] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[1]
XB1_r_TxTail[1] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[0] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[0]
XB1_r_TxTail[0] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[1] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[1]
XB1_r_TxTail[1] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--SB1_r_ClkCnt[0] is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[0]
SB1_r_ClkCnt[0] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[2] is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[2]
SB1_r_ClkCnt[2] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[1] is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[1]
SB1_r_ClkCnt[1] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[3] is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[3]
SB1_r_ClkCnt[3] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1_r_ClkCnt[4] is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[4]
SB1_r_ClkCnt[4] = DFFEAS(SB1L0, !B1_inst56,  ,  ,  ,  ,  , SB1L0,  );


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_BitCnt[0]~4
SB1L0 = (SB1L0 & (SB1_r_BitCnt[0] & VCC)) # (!SB1L0 & (SB1_r_BitCnt[0] $ (VCC)));

--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_BitCnt[0]~5
SB1L0 = CARRY((!SB1L0 & SB1_r_BitCnt[0]));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_BitCnt[1]~6
SB1L0 = (SB1_r_BitCnt[1] & (!SB1L0)) # (!SB1_r_BitCnt[1] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_BitCnt[1]~7
SB1L0 = CARRY((!SB1L0) # (!SB1_r_BitCnt[1]));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_BitCnt[2]~8
SB1L0 = (SB1_r_BitCnt[2] & (SB1L0 $ (GND))) # (!SB1_r_BitCnt[2] & (!SB1L0 & VCC));

--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_BitCnt[2]~9
SB1L0 = CARRY((SB1_r_BitCnt[2] & !SB1L0));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_BitCnt[3]~10
SB1L0 = SB1_r_BitCnt[3] $ (SB1L0);


--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[0]~7
N1L0 = N1_r_Cnt[0] $ (VCC);

--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[0]~8
N1L0 = CARRY(N1_r_Cnt[0]);


--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[1]~11
N1L0 = (N1_r_Cnt[1] & (!N1L0)) # (!N1_r_Cnt[1] & ((N1L0) # (GND)));

--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[1]~12
N1L0 = CARRY((!N1L0) # (!N1_r_Cnt[1]));


--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[2]~13
N1L0 = (N1_r_Cnt[2] & (N1L0 $ (GND))) # (!N1_r_Cnt[2] & (!N1L0 & VCC));

--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[2]~14
N1L0 = CARRY((N1_r_Cnt[2] & !N1L0));


--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[3]~15
N1L0 = (N1_r_Cnt[3] & (!N1L0)) # (!N1_r_Cnt[3] & ((N1L0) # (GND)));

--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[3]~16
N1L0 = CARRY((!N1L0) # (!N1_r_Cnt[3]));


--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[4]~17
N1L0 = (N1_r_Cnt[4] & (N1L0 $ (GND))) # (!N1_r_Cnt[4] & (!N1L0 & VCC));

--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[4]~18
N1L0 = CARRY((N1_r_Cnt[4] & !N1L0));


--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[5]~19
N1L0 = (N1_r_Cnt[5] & (!N1L0)) # (!N1_r_Cnt[5] & ((N1L0) # (GND)));

--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[5]~20
N1L0 = CARRY((!N1L0) # (!N1_r_Cnt[5]));


--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[6]~21
N1L0 = N1_r_Cnt[6] $ (!N1L0);


--ZB1_r_RxHead[0] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[0]
ZB1_r_RxHead[0] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[0] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[0]
ZB1_r_RxHead[0] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[0] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[0]
ZB1_r_RxHead[0] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[0] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[0]
ZB1_r_RxHead[0] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[0] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[0]
ZB1_r_RxHead[0] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--LC1_q_b[0] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[0]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[0];
LC1_q_b[0]_PORT_A_data_in_reg = DFFE(LC1_q_b[0]_PORT_A_data_in, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[0]_PORT_A_address_reg = DFFE(LC1_q_b[0]_PORT_A_address, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[0]_PORT_B_address_reg = DFFE(LC1_q_b[0]_PORT_B_address, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[0]_PORT_A_write_enable_reg = DFFE(LC1_q_b[0]_PORT_A_write_enable, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_B_read_enable = VCC;
LC1_q_b[0]_PORT_B_read_enable_reg = DFFE(LC1_q_b[0]_PORT_B_read_enable, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0]_PORT_A_byte_mask = A1L0;
LC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[0]_PORT_A_byte_mask, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_clock_0 = !CLK_25MHz2;
LC1_q_b[0]_clock_1 = !CLK_25MHz2;
LC1_q_b[0]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[0]_clock_enable_1 = inst146;
LC1_q_b[0]_PORT_B_data_out = MEMORY(LC1_q_b[0]_PORT_A_data_in_reg, , LC1_q_b[0]_PORT_A_address_reg, LC1_q_b[0]_PORT_B_address_reg, LC1_q_b[0]_PORT_A_write_enable_reg, LC1_q_b[0]_PORT_B_read_enable_reg, LC1_q_b[0]_PORT_A_byte_mask_reg, , LC1_q_b[0]_clock_0, LC1_q_b[0]_clock_1, LC1_q_b[0]_clock_enable_0, LC1_q_b[0]_clock_enable_1, , );
LC1_q_b[0]_PORT_B_data_out_reg = DFFE(LC1_q_b[0]_PORT_B_data_out, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0] = LC1_q_b[0]_PORT_B_data_out_reg[0];


--LC1_q_b[0] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[0]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[0];
LC1_q_b[0]_PORT_A_data_in_reg = DFFE(LC1_q_b[0]_PORT_A_data_in, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[0]_PORT_A_address_reg = DFFE(LC1_q_b[0]_PORT_A_address, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[0]_PORT_B_address_reg = DFFE(LC1_q_b[0]_PORT_B_address, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[0]_PORT_A_write_enable_reg = DFFE(LC1_q_b[0]_PORT_A_write_enable, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_B_read_enable = VCC;
LC1_q_b[0]_PORT_B_read_enable_reg = DFFE(LC1_q_b[0]_PORT_B_read_enable, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0]_PORT_A_byte_mask = A1L0;
LC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[0]_PORT_A_byte_mask, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_clock_0 = !CLK_25MHz2;
LC1_q_b[0]_clock_1 = !CLK_25MHz2;
LC1_q_b[0]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[0]_clock_enable_1 = inst80;
LC1_q_b[0]_PORT_B_data_out = MEMORY(LC1_q_b[0]_PORT_A_data_in_reg, , LC1_q_b[0]_PORT_A_address_reg, LC1_q_b[0]_PORT_B_address_reg, LC1_q_b[0]_PORT_A_write_enable_reg, LC1_q_b[0]_PORT_B_read_enable_reg, LC1_q_b[0]_PORT_A_byte_mask_reg, , LC1_q_b[0]_clock_0, LC1_q_b[0]_clock_1, LC1_q_b[0]_clock_enable_0, LC1_q_b[0]_clock_enable_1, , );
LC1_q_b[0]_PORT_B_data_out_reg = DFFE(LC1_q_b[0]_PORT_B_data_out, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0] = LC1_q_b[0]_PORT_B_data_out_reg[0];


--LC1_q_b[0] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[0]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[0];
LC1_q_b[0]_PORT_A_data_in_reg = DFFE(LC1_q_b[0]_PORT_A_data_in, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[0]_PORT_A_address_reg = DFFE(LC1_q_b[0]_PORT_A_address, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[0]_PORT_B_address_reg = DFFE(LC1_q_b[0]_PORT_B_address, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[0]_PORT_A_write_enable_reg = DFFE(LC1_q_b[0]_PORT_A_write_enable, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_B_read_enable = VCC;
LC1_q_b[0]_PORT_B_read_enable_reg = DFFE(LC1_q_b[0]_PORT_B_read_enable, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0]_PORT_A_byte_mask = A1L0;
LC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[0]_PORT_A_byte_mask, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_clock_0 = !CLK_25MHz2;
LC1_q_b[0]_clock_1 = !CLK_25MHz2;
LC1_q_b[0]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[0]_clock_enable_1 = inst154;
LC1_q_b[0]_PORT_B_data_out = MEMORY(LC1_q_b[0]_PORT_A_data_in_reg, , LC1_q_b[0]_PORT_A_address_reg, LC1_q_b[0]_PORT_B_address_reg, LC1_q_b[0]_PORT_A_write_enable_reg, LC1_q_b[0]_PORT_B_read_enable_reg, LC1_q_b[0]_PORT_A_byte_mask_reg, , LC1_q_b[0]_clock_0, LC1_q_b[0]_clock_1, LC1_q_b[0]_clock_enable_0, LC1_q_b[0]_clock_enable_1, , );
LC1_q_b[0]_PORT_B_data_out_reg = DFFE(LC1_q_b[0]_PORT_B_data_out, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0] = LC1_q_b[0]_PORT_B_data_out_reg[0];


--LC1_q_b[0] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[0]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[0];
LC1_q_b[0]_PORT_A_data_in_reg = DFFE(LC1_q_b[0]_PORT_A_data_in, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[0]_PORT_A_address_reg = DFFE(LC1_q_b[0]_PORT_A_address, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[0]_PORT_B_address_reg = DFFE(LC1_q_b[0]_PORT_B_address, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[0]_PORT_A_write_enable_reg = DFFE(LC1_q_b[0]_PORT_A_write_enable, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_PORT_B_read_enable = VCC;
LC1_q_b[0]_PORT_B_read_enable_reg = DFFE(LC1_q_b[0]_PORT_B_read_enable, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0]_PORT_A_byte_mask = A1L0;
LC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[0]_PORT_A_byte_mask, LC1_q_b[0]_clock_0, , , LC1_q_b[0]_clock_enable_0);
LC1_q_b[0]_clock_0 = !CLK_25MHz2;
LC1_q_b[0]_clock_1 = !CLK_25MHz2;
LC1_q_b[0]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[0]_clock_enable_1 = inst182;
LC1_q_b[0]_PORT_B_data_out = MEMORY(LC1_q_b[0]_PORT_A_data_in_reg, , LC1_q_b[0]_PORT_A_address_reg, LC1_q_b[0]_PORT_B_address_reg, LC1_q_b[0]_PORT_A_write_enable_reg, LC1_q_b[0]_PORT_B_read_enable_reg, LC1_q_b[0]_PORT_A_byte_mask_reg, , LC1_q_b[0]_clock_0, LC1_q_b[0]_clock_1, LC1_q_b[0]_clock_enable_0, LC1_q_b[0]_clock_enable_1, , );
LC1_q_b[0]_PORT_B_data_out_reg = DFFE(LC1_q_b[0]_PORT_B_data_out, LC1_q_b[0]_clock_1, , , LC1_q_b[0]_clock_enable_1);
LC1_q_b[0] = LC1_q_b[0]_PORT_B_data_out_reg[0];


--GC1_q_b[0] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[0]_PORT_A_data_in = ZB1_o_RamData[0];
GC1_q_b[0]_PORT_A_data_in_reg = DFFE(GC1_q_b[0]_PORT_A_data_in, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[0]_PORT_A_address_reg = DFFE(GC1_q_b[0]_PORT_A_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[0]_PORT_B_address_reg = DFFE(GC1_q_b[0]_PORT_B_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[0]_PORT_A_write_enable_reg = DFFE(GC1_q_b[0]_PORT_A_write_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_read_enable = B1L0;
GC1_q_b[0]_PORT_B_read_enable_reg = DFFE(GC1_q_b[0]_PORT_B_read_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[0]_PORT_A_byte_mask, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_clock_0 = !CLK_25MHz2;
GC1_q_b[0]_clock_1 = !CLK_25MHz2;
GC1_q_b[0]_PORT_B_data_out = MEMORY(GC1_q_b[0]_PORT_A_data_in_reg, , GC1_q_b[0]_PORT_A_address_reg, GC1_q_b[0]_PORT_B_address_reg, GC1_q_b[0]_PORT_A_write_enable_reg, GC1_q_b[0]_PORT_B_read_enable_reg, GC1_q_b[0]_PORT_A_byte_mask_reg, , GC1_q_b[0]_clock_0, GC1_q_b[0]_clock_1, , , , );
GC1_q_b[0]_PORT_B_data_out_reg = DFFE(GC1_q_b[0]_PORT_B_data_out, GC1_q_b[0]_clock_1, , , );
GC1_q_b[0] = GC1_q_b[0]_PORT_B_data_out_reg[0];


--GC1_q_b[0] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[0]_PORT_A_data_in = ZB1_o_RamData[0];
GC1_q_b[0]_PORT_A_data_in_reg = DFFE(GC1_q_b[0]_PORT_A_data_in, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[0]_PORT_A_address_reg = DFFE(GC1_q_b[0]_PORT_A_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[0]_PORT_B_address_reg = DFFE(GC1_q_b[0]_PORT_B_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[0]_PORT_A_write_enable_reg = DFFE(GC1_q_b[0]_PORT_A_write_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_read_enable = B1L0;
GC1_q_b[0]_PORT_B_read_enable_reg = DFFE(GC1_q_b[0]_PORT_B_read_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[0]_PORT_A_byte_mask, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_clock_0 = !CLK_25MHz2;
GC1_q_b[0]_clock_1 = !CLK_25MHz2;
GC1_q_b[0]_PORT_B_data_out = MEMORY(GC1_q_b[0]_PORT_A_data_in_reg, , GC1_q_b[0]_PORT_A_address_reg, GC1_q_b[0]_PORT_B_address_reg, GC1_q_b[0]_PORT_A_write_enable_reg, GC1_q_b[0]_PORT_B_read_enable_reg, GC1_q_b[0]_PORT_A_byte_mask_reg, , GC1_q_b[0]_clock_0, GC1_q_b[0]_clock_1, , , , );
GC1_q_b[0]_PORT_B_data_out_reg = DFFE(GC1_q_b[0]_PORT_B_data_out, GC1_q_b[0]_clock_1, , , );
GC1_q_b[0] = GC1_q_b[0]_PORT_B_data_out_reg[0];


--GC1_q_b[0] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[0]_PORT_A_data_in = ZB1_o_RamData[0];
GC1_q_b[0]_PORT_A_data_in_reg = DFFE(GC1_q_b[0]_PORT_A_data_in, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[0]_PORT_A_address_reg = DFFE(GC1_q_b[0]_PORT_A_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[0]_PORT_B_address_reg = DFFE(GC1_q_b[0]_PORT_B_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[0]_PORT_A_write_enable_reg = DFFE(GC1_q_b[0]_PORT_A_write_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_read_enable = B1L0;
GC1_q_b[0]_PORT_B_read_enable_reg = DFFE(GC1_q_b[0]_PORT_B_read_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[0]_PORT_A_byte_mask, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_clock_0 = !CLK_25MHz2;
GC1_q_b[0]_clock_1 = !CLK_25MHz2;
GC1_q_b[0]_PORT_B_data_out = MEMORY(GC1_q_b[0]_PORT_A_data_in_reg, , GC1_q_b[0]_PORT_A_address_reg, GC1_q_b[0]_PORT_B_address_reg, GC1_q_b[0]_PORT_A_write_enable_reg, GC1_q_b[0]_PORT_B_read_enable_reg, GC1_q_b[0]_PORT_A_byte_mask_reg, , GC1_q_b[0]_clock_0, GC1_q_b[0]_clock_1, , , , );
GC1_q_b[0]_PORT_B_data_out_reg = DFFE(GC1_q_b[0]_PORT_B_data_out, GC1_q_b[0]_clock_1, , , );
GC1_q_b[0] = GC1_q_b[0]_PORT_B_data_out_reg[0];


--GC1_q_b[0] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[0]_PORT_A_data_in = ZB1_o_RamData[0];
GC1_q_b[0]_PORT_A_data_in_reg = DFFE(GC1_q_b[0]_PORT_A_data_in, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[0]_PORT_A_address_reg = DFFE(GC1_q_b[0]_PORT_A_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[0]_PORT_B_address_reg = DFFE(GC1_q_b[0]_PORT_B_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[0]_PORT_A_write_enable_reg = DFFE(GC1_q_b[0]_PORT_A_write_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_read_enable = B1L0;
GC1_q_b[0]_PORT_B_read_enable_reg = DFFE(GC1_q_b[0]_PORT_B_read_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[0]_PORT_A_byte_mask, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_clock_0 = !CLK_25MHz2;
GC1_q_b[0]_clock_1 = !CLK_25MHz2;
GC1_q_b[0]_PORT_B_data_out = MEMORY(GC1_q_b[0]_PORT_A_data_in_reg, , GC1_q_b[0]_PORT_A_address_reg, GC1_q_b[0]_PORT_B_address_reg, GC1_q_b[0]_PORT_A_write_enable_reg, GC1_q_b[0]_PORT_B_read_enable_reg, GC1_q_b[0]_PORT_A_byte_mask_reg, , GC1_q_b[0]_clock_0, GC1_q_b[0]_clock_1, , , , );
GC1_q_b[0]_PORT_B_data_out_reg = DFFE(GC1_q_b[0]_PORT_B_data_out, GC1_q_b[0]_clock_1, , , );
GC1_q_b[0] = GC1_q_b[0]_PORT_B_data_out_reg[0];


--GC1_q_b[0] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[0]_PORT_A_data_in = ZB1_o_RamData[0];
GC1_q_b[0]_PORT_A_data_in_reg = DFFE(GC1_q_b[0]_PORT_A_data_in, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[0]_PORT_A_address_reg = DFFE(GC1_q_b[0]_PORT_A_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[0]_PORT_B_address_reg = DFFE(GC1_q_b[0]_PORT_B_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[0]_PORT_A_write_enable_reg = DFFE(GC1_q_b[0]_PORT_A_write_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_read_enable = B1L0;
GC1_q_b[0]_PORT_B_read_enable_reg = DFFE(GC1_q_b[0]_PORT_B_read_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[0]_PORT_A_byte_mask, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_clock_0 = !CLK_25MHz2;
GC1_q_b[0]_clock_1 = !CLK_25MHz2;
GC1_q_b[0]_PORT_B_data_out = MEMORY(GC1_q_b[0]_PORT_A_data_in_reg, , GC1_q_b[0]_PORT_A_address_reg, GC1_q_b[0]_PORT_B_address_reg, GC1_q_b[0]_PORT_A_write_enable_reg, GC1_q_b[0]_PORT_B_read_enable_reg, GC1_q_b[0]_PORT_A_byte_mask_reg, , GC1_q_b[0]_clock_0, GC1_q_b[0]_clock_1, , , , );
GC1_q_b[0]_PORT_B_data_out_reg = DFFE(GC1_q_b[0]_PORT_B_data_out, GC1_q_b[0]_clock_1, , , );
GC1_q_b[0] = GC1_q_b[0]_PORT_B_data_out_reg[0];


--ZB1_r_RxHead[1] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[1]
ZB1_r_RxHead[1] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[1] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[1]
ZB1_r_RxHead[1] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[1] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[1]
ZB1_r_RxHead[1] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[1] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[1]
ZB1_r_RxHead[1] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[1] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[1]
ZB1_r_RxHead[1] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--LC1_q_b[1] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[1]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[1];
LC1_q_b[1]_PORT_A_data_in_reg = DFFE(LC1_q_b[1]_PORT_A_data_in, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[1]_PORT_A_address_reg = DFFE(LC1_q_b[1]_PORT_A_address, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[1]_PORT_B_address_reg = DFFE(LC1_q_b[1]_PORT_B_address, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[1]_PORT_A_write_enable_reg = DFFE(LC1_q_b[1]_PORT_A_write_enable, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_B_read_enable = VCC;
LC1_q_b[1]_PORT_B_read_enable_reg = DFFE(LC1_q_b[1]_PORT_B_read_enable, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1]_PORT_A_byte_mask = A1L0;
LC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[1]_PORT_A_byte_mask, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_clock_0 = !CLK_25MHz2;
LC1_q_b[1]_clock_1 = !CLK_25MHz2;
LC1_q_b[1]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[1]_clock_enable_1 = inst146;
LC1_q_b[1]_PORT_B_data_out = MEMORY(LC1_q_b[1]_PORT_A_data_in_reg, , LC1_q_b[1]_PORT_A_address_reg, LC1_q_b[1]_PORT_B_address_reg, LC1_q_b[1]_PORT_A_write_enable_reg, LC1_q_b[1]_PORT_B_read_enable_reg, LC1_q_b[1]_PORT_A_byte_mask_reg, , LC1_q_b[1]_clock_0, LC1_q_b[1]_clock_1, LC1_q_b[1]_clock_enable_0, LC1_q_b[1]_clock_enable_1, , );
LC1_q_b[1]_PORT_B_data_out_reg = DFFE(LC1_q_b[1]_PORT_B_data_out, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1] = LC1_q_b[1]_PORT_B_data_out_reg[0];


--LC1_q_b[1] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[1]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[1];
LC1_q_b[1]_PORT_A_data_in_reg = DFFE(LC1_q_b[1]_PORT_A_data_in, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[1]_PORT_A_address_reg = DFFE(LC1_q_b[1]_PORT_A_address, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[1]_PORT_B_address_reg = DFFE(LC1_q_b[1]_PORT_B_address, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[1]_PORT_A_write_enable_reg = DFFE(LC1_q_b[1]_PORT_A_write_enable, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_B_read_enable = VCC;
LC1_q_b[1]_PORT_B_read_enable_reg = DFFE(LC1_q_b[1]_PORT_B_read_enable, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1]_PORT_A_byte_mask = A1L0;
LC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[1]_PORT_A_byte_mask, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_clock_0 = !CLK_25MHz2;
LC1_q_b[1]_clock_1 = !CLK_25MHz2;
LC1_q_b[1]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[1]_clock_enable_1 = inst80;
LC1_q_b[1]_PORT_B_data_out = MEMORY(LC1_q_b[1]_PORT_A_data_in_reg, , LC1_q_b[1]_PORT_A_address_reg, LC1_q_b[1]_PORT_B_address_reg, LC1_q_b[1]_PORT_A_write_enable_reg, LC1_q_b[1]_PORT_B_read_enable_reg, LC1_q_b[1]_PORT_A_byte_mask_reg, , LC1_q_b[1]_clock_0, LC1_q_b[1]_clock_1, LC1_q_b[1]_clock_enable_0, LC1_q_b[1]_clock_enable_1, , );
LC1_q_b[1]_PORT_B_data_out_reg = DFFE(LC1_q_b[1]_PORT_B_data_out, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1] = LC1_q_b[1]_PORT_B_data_out_reg[0];


--LC1_q_b[1] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[1]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[1];
LC1_q_b[1]_PORT_A_data_in_reg = DFFE(LC1_q_b[1]_PORT_A_data_in, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[1]_PORT_A_address_reg = DFFE(LC1_q_b[1]_PORT_A_address, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[1]_PORT_B_address_reg = DFFE(LC1_q_b[1]_PORT_B_address, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[1]_PORT_A_write_enable_reg = DFFE(LC1_q_b[1]_PORT_A_write_enable, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_B_read_enable = VCC;
LC1_q_b[1]_PORT_B_read_enable_reg = DFFE(LC1_q_b[1]_PORT_B_read_enable, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1]_PORT_A_byte_mask = A1L0;
LC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[1]_PORT_A_byte_mask, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_clock_0 = !CLK_25MHz2;
LC1_q_b[1]_clock_1 = !CLK_25MHz2;
LC1_q_b[1]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[1]_clock_enable_1 = inst182;
LC1_q_b[1]_PORT_B_data_out = MEMORY(LC1_q_b[1]_PORT_A_data_in_reg, , LC1_q_b[1]_PORT_A_address_reg, LC1_q_b[1]_PORT_B_address_reg, LC1_q_b[1]_PORT_A_write_enable_reg, LC1_q_b[1]_PORT_B_read_enable_reg, LC1_q_b[1]_PORT_A_byte_mask_reg, , LC1_q_b[1]_clock_0, LC1_q_b[1]_clock_1, LC1_q_b[1]_clock_enable_0, LC1_q_b[1]_clock_enable_1, , );
LC1_q_b[1]_PORT_B_data_out_reg = DFFE(LC1_q_b[1]_PORT_B_data_out, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1] = LC1_q_b[1]_PORT_B_data_out_reg[0];


--LC1_q_b[1] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[1]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[1];
LC1_q_b[1]_PORT_A_data_in_reg = DFFE(LC1_q_b[1]_PORT_A_data_in, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[1]_PORT_A_address_reg = DFFE(LC1_q_b[1]_PORT_A_address, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[1]_PORT_B_address_reg = DFFE(LC1_q_b[1]_PORT_B_address, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[1]_PORT_A_write_enable_reg = DFFE(LC1_q_b[1]_PORT_A_write_enable, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_PORT_B_read_enable = VCC;
LC1_q_b[1]_PORT_B_read_enable_reg = DFFE(LC1_q_b[1]_PORT_B_read_enable, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1]_PORT_A_byte_mask = A1L0;
LC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[1]_PORT_A_byte_mask, LC1_q_b[1]_clock_0, , , LC1_q_b[1]_clock_enable_0);
LC1_q_b[1]_clock_0 = !CLK_25MHz2;
LC1_q_b[1]_clock_1 = !CLK_25MHz2;
LC1_q_b[1]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[1]_clock_enable_1 = inst154;
LC1_q_b[1]_PORT_B_data_out = MEMORY(LC1_q_b[1]_PORT_A_data_in_reg, , LC1_q_b[1]_PORT_A_address_reg, LC1_q_b[1]_PORT_B_address_reg, LC1_q_b[1]_PORT_A_write_enable_reg, LC1_q_b[1]_PORT_B_read_enable_reg, LC1_q_b[1]_PORT_A_byte_mask_reg, , LC1_q_b[1]_clock_0, LC1_q_b[1]_clock_1, LC1_q_b[1]_clock_enable_0, LC1_q_b[1]_clock_enable_1, , );
LC1_q_b[1]_PORT_B_data_out_reg = DFFE(LC1_q_b[1]_PORT_B_data_out, LC1_q_b[1]_clock_1, , , LC1_q_b[1]_clock_enable_1);
LC1_q_b[1] = LC1_q_b[1]_PORT_B_data_out_reg[0];


--GC1_q_b[1] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[1]_PORT_A_data_in = ZB1_o_RamData[1];
GC1_q_b[1]_PORT_A_data_in_reg = DFFE(GC1_q_b[1]_PORT_A_data_in, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[1]_PORT_A_address_reg = DFFE(GC1_q_b[1]_PORT_A_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[1]_PORT_B_address_reg = DFFE(GC1_q_b[1]_PORT_B_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[1]_PORT_A_write_enable_reg = DFFE(GC1_q_b[1]_PORT_A_write_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_read_enable = B1L0;
GC1_q_b[1]_PORT_B_read_enable_reg = DFFE(GC1_q_b[1]_PORT_B_read_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[1]_PORT_A_byte_mask, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_clock_0 = !CLK_25MHz2;
GC1_q_b[1]_clock_1 = !CLK_25MHz2;
GC1_q_b[1]_PORT_B_data_out = MEMORY(GC1_q_b[1]_PORT_A_data_in_reg, , GC1_q_b[1]_PORT_A_address_reg, GC1_q_b[1]_PORT_B_address_reg, GC1_q_b[1]_PORT_A_write_enable_reg, GC1_q_b[1]_PORT_B_read_enable_reg, GC1_q_b[1]_PORT_A_byte_mask_reg, , GC1_q_b[1]_clock_0, GC1_q_b[1]_clock_1, , , , );
GC1_q_b[1]_PORT_B_data_out_reg = DFFE(GC1_q_b[1]_PORT_B_data_out, GC1_q_b[1]_clock_1, , , );
GC1_q_b[1] = GC1_q_b[1]_PORT_B_data_out_reg[0];


--GC1_q_b[1] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[1]_PORT_A_data_in = ZB1_o_RamData[1];
GC1_q_b[1]_PORT_A_data_in_reg = DFFE(GC1_q_b[1]_PORT_A_data_in, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[1]_PORT_A_address_reg = DFFE(GC1_q_b[1]_PORT_A_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[1]_PORT_B_address_reg = DFFE(GC1_q_b[1]_PORT_B_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[1]_PORT_A_write_enable_reg = DFFE(GC1_q_b[1]_PORT_A_write_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_read_enable = B1L0;
GC1_q_b[1]_PORT_B_read_enable_reg = DFFE(GC1_q_b[1]_PORT_B_read_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[1]_PORT_A_byte_mask, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_clock_0 = !CLK_25MHz2;
GC1_q_b[1]_clock_1 = !CLK_25MHz2;
GC1_q_b[1]_PORT_B_data_out = MEMORY(GC1_q_b[1]_PORT_A_data_in_reg, , GC1_q_b[1]_PORT_A_address_reg, GC1_q_b[1]_PORT_B_address_reg, GC1_q_b[1]_PORT_A_write_enable_reg, GC1_q_b[1]_PORT_B_read_enable_reg, GC1_q_b[1]_PORT_A_byte_mask_reg, , GC1_q_b[1]_clock_0, GC1_q_b[1]_clock_1, , , , );
GC1_q_b[1]_PORT_B_data_out_reg = DFFE(GC1_q_b[1]_PORT_B_data_out, GC1_q_b[1]_clock_1, , , );
GC1_q_b[1] = GC1_q_b[1]_PORT_B_data_out_reg[0];


--GC1_q_b[1] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[1]_PORT_A_data_in = ZB1_o_RamData[1];
GC1_q_b[1]_PORT_A_data_in_reg = DFFE(GC1_q_b[1]_PORT_A_data_in, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[1]_PORT_A_address_reg = DFFE(GC1_q_b[1]_PORT_A_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[1]_PORT_B_address_reg = DFFE(GC1_q_b[1]_PORT_B_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[1]_PORT_A_write_enable_reg = DFFE(GC1_q_b[1]_PORT_A_write_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_read_enable = B1L0;
GC1_q_b[1]_PORT_B_read_enable_reg = DFFE(GC1_q_b[1]_PORT_B_read_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[1]_PORT_A_byte_mask, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_clock_0 = !CLK_25MHz2;
GC1_q_b[1]_clock_1 = !CLK_25MHz2;
GC1_q_b[1]_PORT_B_data_out = MEMORY(GC1_q_b[1]_PORT_A_data_in_reg, , GC1_q_b[1]_PORT_A_address_reg, GC1_q_b[1]_PORT_B_address_reg, GC1_q_b[1]_PORT_A_write_enable_reg, GC1_q_b[1]_PORT_B_read_enable_reg, GC1_q_b[1]_PORT_A_byte_mask_reg, , GC1_q_b[1]_clock_0, GC1_q_b[1]_clock_1, , , , );
GC1_q_b[1]_PORT_B_data_out_reg = DFFE(GC1_q_b[1]_PORT_B_data_out, GC1_q_b[1]_clock_1, , , );
GC1_q_b[1] = GC1_q_b[1]_PORT_B_data_out_reg[0];


--GC1_q_b[1] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[1]_PORT_A_data_in = ZB1_o_RamData[1];
GC1_q_b[1]_PORT_A_data_in_reg = DFFE(GC1_q_b[1]_PORT_A_data_in, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[1]_PORT_A_address_reg = DFFE(GC1_q_b[1]_PORT_A_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[1]_PORT_B_address_reg = DFFE(GC1_q_b[1]_PORT_B_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[1]_PORT_A_write_enable_reg = DFFE(GC1_q_b[1]_PORT_A_write_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_read_enable = B1L0;
GC1_q_b[1]_PORT_B_read_enable_reg = DFFE(GC1_q_b[1]_PORT_B_read_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[1]_PORT_A_byte_mask, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_clock_0 = !CLK_25MHz2;
GC1_q_b[1]_clock_1 = !CLK_25MHz2;
GC1_q_b[1]_PORT_B_data_out = MEMORY(GC1_q_b[1]_PORT_A_data_in_reg, , GC1_q_b[1]_PORT_A_address_reg, GC1_q_b[1]_PORT_B_address_reg, GC1_q_b[1]_PORT_A_write_enable_reg, GC1_q_b[1]_PORT_B_read_enable_reg, GC1_q_b[1]_PORT_A_byte_mask_reg, , GC1_q_b[1]_clock_0, GC1_q_b[1]_clock_1, , , , );
GC1_q_b[1]_PORT_B_data_out_reg = DFFE(GC1_q_b[1]_PORT_B_data_out, GC1_q_b[1]_clock_1, , , );
GC1_q_b[1] = GC1_q_b[1]_PORT_B_data_out_reg[0];


--GC1_q_b[1] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[1]_PORT_A_data_in = ZB1_o_RamData[1];
GC1_q_b[1]_PORT_A_data_in_reg = DFFE(GC1_q_b[1]_PORT_A_data_in, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[1]_PORT_A_address_reg = DFFE(GC1_q_b[1]_PORT_A_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[1]_PORT_B_address_reg = DFFE(GC1_q_b[1]_PORT_B_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[1]_PORT_A_write_enable_reg = DFFE(GC1_q_b[1]_PORT_A_write_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_read_enable = B1L0;
GC1_q_b[1]_PORT_B_read_enable_reg = DFFE(GC1_q_b[1]_PORT_B_read_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[1]_PORT_A_byte_mask, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_clock_0 = !CLK_25MHz2;
GC1_q_b[1]_clock_1 = !CLK_25MHz2;
GC1_q_b[1]_PORT_B_data_out = MEMORY(GC1_q_b[1]_PORT_A_data_in_reg, , GC1_q_b[1]_PORT_A_address_reg, GC1_q_b[1]_PORT_B_address_reg, GC1_q_b[1]_PORT_A_write_enable_reg, GC1_q_b[1]_PORT_B_read_enable_reg, GC1_q_b[1]_PORT_A_byte_mask_reg, , GC1_q_b[1]_clock_0, GC1_q_b[1]_clock_1, , , , );
GC1_q_b[1]_PORT_B_data_out_reg = DFFE(GC1_q_b[1]_PORT_B_data_out, GC1_q_b[1]_clock_1, , , );
GC1_q_b[1] = GC1_q_b[1]_PORT_B_data_out_reg[0];


--XB1_r_TxTail[2] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[2]
XB1_r_TxTail[2] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[2] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[2]
XB1_r_TxTail[2] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[2] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[2]
XB1_r_TxTail[2] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[2] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[2]
ZB1_r_RxHead[2] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[2] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[2]
ZB1_r_RxHead[2] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[2] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[2]
ZB1_r_RxHead[2] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[2] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[2]
ZB1_r_RxHead[2] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[2] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[2]
XB1_r_TxTail[2] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[2] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[2]
XB1_r_TxTail[2] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[2] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[2]
ZB1_r_RxHead[2] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--LC1_q_b[2] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[2]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[2];
LC1_q_b[2]_PORT_A_data_in_reg = DFFE(LC1_q_b[2]_PORT_A_data_in, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[2]_PORT_A_address_reg = DFFE(LC1_q_b[2]_PORT_A_address, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[2]_PORT_B_address_reg = DFFE(LC1_q_b[2]_PORT_B_address, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[2]_PORT_A_write_enable_reg = DFFE(LC1_q_b[2]_PORT_A_write_enable, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_B_read_enable = VCC;
LC1_q_b[2]_PORT_B_read_enable_reg = DFFE(LC1_q_b[2]_PORT_B_read_enable, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2]_PORT_A_byte_mask = A1L0;
LC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[2]_PORT_A_byte_mask, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_clock_0 = !CLK_25MHz2;
LC1_q_b[2]_clock_1 = !CLK_25MHz2;
LC1_q_b[2]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[2]_clock_enable_1 = inst146;
LC1_q_b[2]_PORT_B_data_out = MEMORY(LC1_q_b[2]_PORT_A_data_in_reg, , LC1_q_b[2]_PORT_A_address_reg, LC1_q_b[2]_PORT_B_address_reg, LC1_q_b[2]_PORT_A_write_enable_reg, LC1_q_b[2]_PORT_B_read_enable_reg, LC1_q_b[2]_PORT_A_byte_mask_reg, , LC1_q_b[2]_clock_0, LC1_q_b[2]_clock_1, LC1_q_b[2]_clock_enable_0, LC1_q_b[2]_clock_enable_1, , );
LC1_q_b[2]_PORT_B_data_out_reg = DFFE(LC1_q_b[2]_PORT_B_data_out, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2] = LC1_q_b[2]_PORT_B_data_out_reg[0];


--LC1_q_b[2] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[2]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[2];
LC1_q_b[2]_PORT_A_data_in_reg = DFFE(LC1_q_b[2]_PORT_A_data_in, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[2]_PORT_A_address_reg = DFFE(LC1_q_b[2]_PORT_A_address, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[2]_PORT_B_address_reg = DFFE(LC1_q_b[2]_PORT_B_address, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[2]_PORT_A_write_enable_reg = DFFE(LC1_q_b[2]_PORT_A_write_enable, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_B_read_enable = VCC;
LC1_q_b[2]_PORT_B_read_enable_reg = DFFE(LC1_q_b[2]_PORT_B_read_enable, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2]_PORT_A_byte_mask = A1L0;
LC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[2]_PORT_A_byte_mask, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_clock_0 = !CLK_25MHz2;
LC1_q_b[2]_clock_1 = !CLK_25MHz2;
LC1_q_b[2]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[2]_clock_enable_1 = inst80;
LC1_q_b[2]_PORT_B_data_out = MEMORY(LC1_q_b[2]_PORT_A_data_in_reg, , LC1_q_b[2]_PORT_A_address_reg, LC1_q_b[2]_PORT_B_address_reg, LC1_q_b[2]_PORT_A_write_enable_reg, LC1_q_b[2]_PORT_B_read_enable_reg, LC1_q_b[2]_PORT_A_byte_mask_reg, , LC1_q_b[2]_clock_0, LC1_q_b[2]_clock_1, LC1_q_b[2]_clock_enable_0, LC1_q_b[2]_clock_enable_1, , );
LC1_q_b[2]_PORT_B_data_out_reg = DFFE(LC1_q_b[2]_PORT_B_data_out, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2] = LC1_q_b[2]_PORT_B_data_out_reg[0];


--LC1_q_b[2] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[2]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[2];
LC1_q_b[2]_PORT_A_data_in_reg = DFFE(LC1_q_b[2]_PORT_A_data_in, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[2]_PORT_A_address_reg = DFFE(LC1_q_b[2]_PORT_A_address, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[2]_PORT_B_address_reg = DFFE(LC1_q_b[2]_PORT_B_address, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[2]_PORT_A_write_enable_reg = DFFE(LC1_q_b[2]_PORT_A_write_enable, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_B_read_enable = VCC;
LC1_q_b[2]_PORT_B_read_enable_reg = DFFE(LC1_q_b[2]_PORT_B_read_enable, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2]_PORT_A_byte_mask = A1L0;
LC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[2]_PORT_A_byte_mask, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_clock_0 = !CLK_25MHz2;
LC1_q_b[2]_clock_1 = !CLK_25MHz2;
LC1_q_b[2]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[2]_clock_enable_1 = inst182;
LC1_q_b[2]_PORT_B_data_out = MEMORY(LC1_q_b[2]_PORT_A_data_in_reg, , LC1_q_b[2]_PORT_A_address_reg, LC1_q_b[2]_PORT_B_address_reg, LC1_q_b[2]_PORT_A_write_enable_reg, LC1_q_b[2]_PORT_B_read_enable_reg, LC1_q_b[2]_PORT_A_byte_mask_reg, , LC1_q_b[2]_clock_0, LC1_q_b[2]_clock_1, LC1_q_b[2]_clock_enable_0, LC1_q_b[2]_clock_enable_1, , );
LC1_q_b[2]_PORT_B_data_out_reg = DFFE(LC1_q_b[2]_PORT_B_data_out, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2] = LC1_q_b[2]_PORT_B_data_out_reg[0];


--LC1_q_b[2] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[2]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[2];
LC1_q_b[2]_PORT_A_data_in_reg = DFFE(LC1_q_b[2]_PORT_A_data_in, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[2]_PORT_A_address_reg = DFFE(LC1_q_b[2]_PORT_A_address, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[2]_PORT_B_address_reg = DFFE(LC1_q_b[2]_PORT_B_address, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[2]_PORT_A_write_enable_reg = DFFE(LC1_q_b[2]_PORT_A_write_enable, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_PORT_B_read_enable = VCC;
LC1_q_b[2]_PORT_B_read_enable_reg = DFFE(LC1_q_b[2]_PORT_B_read_enable, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2]_PORT_A_byte_mask = A1L0;
LC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[2]_PORT_A_byte_mask, LC1_q_b[2]_clock_0, , , LC1_q_b[2]_clock_enable_0);
LC1_q_b[2]_clock_0 = !CLK_25MHz2;
LC1_q_b[2]_clock_1 = !CLK_25MHz2;
LC1_q_b[2]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[2]_clock_enable_1 = inst154;
LC1_q_b[2]_PORT_B_data_out = MEMORY(LC1_q_b[2]_PORT_A_data_in_reg, , LC1_q_b[2]_PORT_A_address_reg, LC1_q_b[2]_PORT_B_address_reg, LC1_q_b[2]_PORT_A_write_enable_reg, LC1_q_b[2]_PORT_B_read_enable_reg, LC1_q_b[2]_PORT_A_byte_mask_reg, , LC1_q_b[2]_clock_0, LC1_q_b[2]_clock_1, LC1_q_b[2]_clock_enable_0, LC1_q_b[2]_clock_enable_1, , );
LC1_q_b[2]_PORT_B_data_out_reg = DFFE(LC1_q_b[2]_PORT_B_data_out, LC1_q_b[2]_clock_1, , , LC1_q_b[2]_clock_enable_1);
LC1_q_b[2] = LC1_q_b[2]_PORT_B_data_out_reg[0];


--GC1_q_b[2] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[2]_PORT_A_data_in = ZB1_o_RamData[2];
GC1_q_b[2]_PORT_A_data_in_reg = DFFE(GC1_q_b[2]_PORT_A_data_in, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[2]_PORT_A_address_reg = DFFE(GC1_q_b[2]_PORT_A_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[2]_PORT_B_address_reg = DFFE(GC1_q_b[2]_PORT_B_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[2]_PORT_A_write_enable_reg = DFFE(GC1_q_b[2]_PORT_A_write_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_read_enable = B1L0;
GC1_q_b[2]_PORT_B_read_enable_reg = DFFE(GC1_q_b[2]_PORT_B_read_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[2]_PORT_A_byte_mask, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_clock_0 = !CLK_25MHz2;
GC1_q_b[2]_clock_1 = !CLK_25MHz2;
GC1_q_b[2]_PORT_B_data_out = MEMORY(GC1_q_b[2]_PORT_A_data_in_reg, , GC1_q_b[2]_PORT_A_address_reg, GC1_q_b[2]_PORT_B_address_reg, GC1_q_b[2]_PORT_A_write_enable_reg, GC1_q_b[2]_PORT_B_read_enable_reg, GC1_q_b[2]_PORT_A_byte_mask_reg, , GC1_q_b[2]_clock_0, GC1_q_b[2]_clock_1, , , , );
GC1_q_b[2]_PORT_B_data_out_reg = DFFE(GC1_q_b[2]_PORT_B_data_out, GC1_q_b[2]_clock_1, , , );
GC1_q_b[2] = GC1_q_b[2]_PORT_B_data_out_reg[0];


--GC1_q_b[2] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[2]_PORT_A_data_in = ZB1_o_RamData[2];
GC1_q_b[2]_PORT_A_data_in_reg = DFFE(GC1_q_b[2]_PORT_A_data_in, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[2]_PORT_A_address_reg = DFFE(GC1_q_b[2]_PORT_A_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[2]_PORT_B_address_reg = DFFE(GC1_q_b[2]_PORT_B_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[2]_PORT_A_write_enable_reg = DFFE(GC1_q_b[2]_PORT_A_write_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_read_enable = B1L0;
GC1_q_b[2]_PORT_B_read_enable_reg = DFFE(GC1_q_b[2]_PORT_B_read_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[2]_PORT_A_byte_mask, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_clock_0 = !CLK_25MHz2;
GC1_q_b[2]_clock_1 = !CLK_25MHz2;
GC1_q_b[2]_PORT_B_data_out = MEMORY(GC1_q_b[2]_PORT_A_data_in_reg, , GC1_q_b[2]_PORT_A_address_reg, GC1_q_b[2]_PORT_B_address_reg, GC1_q_b[2]_PORT_A_write_enable_reg, GC1_q_b[2]_PORT_B_read_enable_reg, GC1_q_b[2]_PORT_A_byte_mask_reg, , GC1_q_b[2]_clock_0, GC1_q_b[2]_clock_1, , , , );
GC1_q_b[2]_PORT_B_data_out_reg = DFFE(GC1_q_b[2]_PORT_B_data_out, GC1_q_b[2]_clock_1, , , );
GC1_q_b[2] = GC1_q_b[2]_PORT_B_data_out_reg[0];


--GC1_q_b[2] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[2]_PORT_A_data_in = ZB1_o_RamData[2];
GC1_q_b[2]_PORT_A_data_in_reg = DFFE(GC1_q_b[2]_PORT_A_data_in, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[2]_PORT_A_address_reg = DFFE(GC1_q_b[2]_PORT_A_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[2]_PORT_B_address_reg = DFFE(GC1_q_b[2]_PORT_B_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[2]_PORT_A_write_enable_reg = DFFE(GC1_q_b[2]_PORT_A_write_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_read_enable = B1L0;
GC1_q_b[2]_PORT_B_read_enable_reg = DFFE(GC1_q_b[2]_PORT_B_read_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[2]_PORT_A_byte_mask, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_clock_0 = !CLK_25MHz2;
GC1_q_b[2]_clock_1 = !CLK_25MHz2;
GC1_q_b[2]_PORT_B_data_out = MEMORY(GC1_q_b[2]_PORT_A_data_in_reg, , GC1_q_b[2]_PORT_A_address_reg, GC1_q_b[2]_PORT_B_address_reg, GC1_q_b[2]_PORT_A_write_enable_reg, GC1_q_b[2]_PORT_B_read_enable_reg, GC1_q_b[2]_PORT_A_byte_mask_reg, , GC1_q_b[2]_clock_0, GC1_q_b[2]_clock_1, , , , );
GC1_q_b[2]_PORT_B_data_out_reg = DFFE(GC1_q_b[2]_PORT_B_data_out, GC1_q_b[2]_clock_1, , , );
GC1_q_b[2] = GC1_q_b[2]_PORT_B_data_out_reg[0];


--GC1_q_b[2] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[2]_PORT_A_data_in = ZB1_o_RamData[2];
GC1_q_b[2]_PORT_A_data_in_reg = DFFE(GC1_q_b[2]_PORT_A_data_in, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[2]_PORT_A_address_reg = DFFE(GC1_q_b[2]_PORT_A_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[2]_PORT_B_address_reg = DFFE(GC1_q_b[2]_PORT_B_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[2]_PORT_A_write_enable_reg = DFFE(GC1_q_b[2]_PORT_A_write_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_read_enable = B1L0;
GC1_q_b[2]_PORT_B_read_enable_reg = DFFE(GC1_q_b[2]_PORT_B_read_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[2]_PORT_A_byte_mask, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_clock_0 = !CLK_25MHz2;
GC1_q_b[2]_clock_1 = !CLK_25MHz2;
GC1_q_b[2]_PORT_B_data_out = MEMORY(GC1_q_b[2]_PORT_A_data_in_reg, , GC1_q_b[2]_PORT_A_address_reg, GC1_q_b[2]_PORT_B_address_reg, GC1_q_b[2]_PORT_A_write_enable_reg, GC1_q_b[2]_PORT_B_read_enable_reg, GC1_q_b[2]_PORT_A_byte_mask_reg, , GC1_q_b[2]_clock_0, GC1_q_b[2]_clock_1, , , , );
GC1_q_b[2]_PORT_B_data_out_reg = DFFE(GC1_q_b[2]_PORT_B_data_out, GC1_q_b[2]_clock_1, , , );
GC1_q_b[2] = GC1_q_b[2]_PORT_B_data_out_reg[0];


--GC1_q_b[2] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[2]_PORT_A_data_in = ZB1_o_RamData[2];
GC1_q_b[2]_PORT_A_data_in_reg = DFFE(GC1_q_b[2]_PORT_A_data_in, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[2]_PORT_A_address_reg = DFFE(GC1_q_b[2]_PORT_A_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[2]_PORT_B_address_reg = DFFE(GC1_q_b[2]_PORT_B_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[2]_PORT_A_write_enable_reg = DFFE(GC1_q_b[2]_PORT_A_write_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_read_enable = B1L0;
GC1_q_b[2]_PORT_B_read_enable_reg = DFFE(GC1_q_b[2]_PORT_B_read_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[2]_PORT_A_byte_mask, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_clock_0 = !CLK_25MHz2;
GC1_q_b[2]_clock_1 = !CLK_25MHz2;
GC1_q_b[2]_PORT_B_data_out = MEMORY(GC1_q_b[2]_PORT_A_data_in_reg, , GC1_q_b[2]_PORT_A_address_reg, GC1_q_b[2]_PORT_B_address_reg, GC1_q_b[2]_PORT_A_write_enable_reg, GC1_q_b[2]_PORT_B_read_enable_reg, GC1_q_b[2]_PORT_A_byte_mask_reg, , GC1_q_b[2]_clock_0, GC1_q_b[2]_clock_1, , , , );
GC1_q_b[2]_PORT_B_data_out_reg = DFFE(GC1_q_b[2]_PORT_B_data_out, GC1_q_b[2]_clock_1, , , );
GC1_q_b[2] = GC1_q_b[2]_PORT_B_data_out_reg[0];


--LC1_q_b[3] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[3]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[3];
LC1_q_b[3]_PORT_A_data_in_reg = DFFE(LC1_q_b[3]_PORT_A_data_in, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[3]_PORT_A_address_reg = DFFE(LC1_q_b[3]_PORT_A_address, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[3]_PORT_B_address_reg = DFFE(LC1_q_b[3]_PORT_B_address, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[3]_PORT_A_write_enable_reg = DFFE(LC1_q_b[3]_PORT_A_write_enable, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_B_read_enable = VCC;
LC1_q_b[3]_PORT_B_read_enable_reg = DFFE(LC1_q_b[3]_PORT_B_read_enable, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3]_PORT_A_byte_mask = A1L0;
LC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[3]_PORT_A_byte_mask, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_clock_0 = !CLK_25MHz2;
LC1_q_b[3]_clock_1 = !CLK_25MHz2;
LC1_q_b[3]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[3]_clock_enable_1 = inst146;
LC1_q_b[3]_PORT_B_data_out = MEMORY(LC1_q_b[3]_PORT_A_data_in_reg, , LC1_q_b[3]_PORT_A_address_reg, LC1_q_b[3]_PORT_B_address_reg, LC1_q_b[3]_PORT_A_write_enable_reg, LC1_q_b[3]_PORT_B_read_enable_reg, LC1_q_b[3]_PORT_A_byte_mask_reg, , LC1_q_b[3]_clock_0, LC1_q_b[3]_clock_1, LC1_q_b[3]_clock_enable_0, LC1_q_b[3]_clock_enable_1, , );
LC1_q_b[3]_PORT_B_data_out_reg = DFFE(LC1_q_b[3]_PORT_B_data_out, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3] = LC1_q_b[3]_PORT_B_data_out_reg[0];


--LC1_q_b[3] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[3]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[3];
LC1_q_b[3]_PORT_A_data_in_reg = DFFE(LC1_q_b[3]_PORT_A_data_in, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[3]_PORT_A_address_reg = DFFE(LC1_q_b[3]_PORT_A_address, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[3]_PORT_B_address_reg = DFFE(LC1_q_b[3]_PORT_B_address, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[3]_PORT_A_write_enable_reg = DFFE(LC1_q_b[3]_PORT_A_write_enable, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_B_read_enable = VCC;
LC1_q_b[3]_PORT_B_read_enable_reg = DFFE(LC1_q_b[3]_PORT_B_read_enable, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3]_PORT_A_byte_mask = A1L0;
LC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[3]_PORT_A_byte_mask, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_clock_0 = !CLK_25MHz2;
LC1_q_b[3]_clock_1 = !CLK_25MHz2;
LC1_q_b[3]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[3]_clock_enable_1 = inst80;
LC1_q_b[3]_PORT_B_data_out = MEMORY(LC1_q_b[3]_PORT_A_data_in_reg, , LC1_q_b[3]_PORT_A_address_reg, LC1_q_b[3]_PORT_B_address_reg, LC1_q_b[3]_PORT_A_write_enable_reg, LC1_q_b[3]_PORT_B_read_enable_reg, LC1_q_b[3]_PORT_A_byte_mask_reg, , LC1_q_b[3]_clock_0, LC1_q_b[3]_clock_1, LC1_q_b[3]_clock_enable_0, LC1_q_b[3]_clock_enable_1, , );
LC1_q_b[3]_PORT_B_data_out_reg = DFFE(LC1_q_b[3]_PORT_B_data_out, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3] = LC1_q_b[3]_PORT_B_data_out_reg[0];


--LC1_q_b[3] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[3]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[3];
LC1_q_b[3]_PORT_A_data_in_reg = DFFE(LC1_q_b[3]_PORT_A_data_in, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[3]_PORT_A_address_reg = DFFE(LC1_q_b[3]_PORT_A_address, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[3]_PORT_B_address_reg = DFFE(LC1_q_b[3]_PORT_B_address, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[3]_PORT_A_write_enable_reg = DFFE(LC1_q_b[3]_PORT_A_write_enable, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_B_read_enable = VCC;
LC1_q_b[3]_PORT_B_read_enable_reg = DFFE(LC1_q_b[3]_PORT_B_read_enable, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3]_PORT_A_byte_mask = A1L0;
LC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[3]_PORT_A_byte_mask, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_clock_0 = !CLK_25MHz2;
LC1_q_b[3]_clock_1 = !CLK_25MHz2;
LC1_q_b[3]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[3]_clock_enable_1 = inst182;
LC1_q_b[3]_PORT_B_data_out = MEMORY(LC1_q_b[3]_PORT_A_data_in_reg, , LC1_q_b[3]_PORT_A_address_reg, LC1_q_b[3]_PORT_B_address_reg, LC1_q_b[3]_PORT_A_write_enable_reg, LC1_q_b[3]_PORT_B_read_enable_reg, LC1_q_b[3]_PORT_A_byte_mask_reg, , LC1_q_b[3]_clock_0, LC1_q_b[3]_clock_1, LC1_q_b[3]_clock_enable_0, LC1_q_b[3]_clock_enable_1, , );
LC1_q_b[3]_PORT_B_data_out_reg = DFFE(LC1_q_b[3]_PORT_B_data_out, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3] = LC1_q_b[3]_PORT_B_data_out_reg[0];


--LC1_q_b[3] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[3]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[3];
LC1_q_b[3]_PORT_A_data_in_reg = DFFE(LC1_q_b[3]_PORT_A_data_in, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[3]_PORT_A_address_reg = DFFE(LC1_q_b[3]_PORT_A_address, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[3]_PORT_B_address_reg = DFFE(LC1_q_b[3]_PORT_B_address, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[3]_PORT_A_write_enable_reg = DFFE(LC1_q_b[3]_PORT_A_write_enable, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_PORT_B_read_enable = VCC;
LC1_q_b[3]_PORT_B_read_enable_reg = DFFE(LC1_q_b[3]_PORT_B_read_enable, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3]_PORT_A_byte_mask = A1L0;
LC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[3]_PORT_A_byte_mask, LC1_q_b[3]_clock_0, , , LC1_q_b[3]_clock_enable_0);
LC1_q_b[3]_clock_0 = !CLK_25MHz2;
LC1_q_b[3]_clock_1 = !CLK_25MHz2;
LC1_q_b[3]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[3]_clock_enable_1 = inst154;
LC1_q_b[3]_PORT_B_data_out = MEMORY(LC1_q_b[3]_PORT_A_data_in_reg, , LC1_q_b[3]_PORT_A_address_reg, LC1_q_b[3]_PORT_B_address_reg, LC1_q_b[3]_PORT_A_write_enable_reg, LC1_q_b[3]_PORT_B_read_enable_reg, LC1_q_b[3]_PORT_A_byte_mask_reg, , LC1_q_b[3]_clock_0, LC1_q_b[3]_clock_1, LC1_q_b[3]_clock_enable_0, LC1_q_b[3]_clock_enable_1, , );
LC1_q_b[3]_PORT_B_data_out_reg = DFFE(LC1_q_b[3]_PORT_B_data_out, LC1_q_b[3]_clock_1, , , LC1_q_b[3]_clock_enable_1);
LC1_q_b[3] = LC1_q_b[3]_PORT_B_data_out_reg[0];


--GC1_q_b[3] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[3]_PORT_A_data_in = ZB1_o_RamData[3];
GC1_q_b[3]_PORT_A_data_in_reg = DFFE(GC1_q_b[3]_PORT_A_data_in, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[3]_PORT_A_address_reg = DFFE(GC1_q_b[3]_PORT_A_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[3]_PORT_B_address_reg = DFFE(GC1_q_b[3]_PORT_B_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[3]_PORT_A_write_enable_reg = DFFE(GC1_q_b[3]_PORT_A_write_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_read_enable = B1L0;
GC1_q_b[3]_PORT_B_read_enable_reg = DFFE(GC1_q_b[3]_PORT_B_read_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[3]_PORT_A_byte_mask, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_clock_0 = !CLK_25MHz2;
GC1_q_b[3]_clock_1 = !CLK_25MHz2;
GC1_q_b[3]_PORT_B_data_out = MEMORY(GC1_q_b[3]_PORT_A_data_in_reg, , GC1_q_b[3]_PORT_A_address_reg, GC1_q_b[3]_PORT_B_address_reg, GC1_q_b[3]_PORT_A_write_enable_reg, GC1_q_b[3]_PORT_B_read_enable_reg, GC1_q_b[3]_PORT_A_byte_mask_reg, , GC1_q_b[3]_clock_0, GC1_q_b[3]_clock_1, , , , );
GC1_q_b[3]_PORT_B_data_out_reg = DFFE(GC1_q_b[3]_PORT_B_data_out, GC1_q_b[3]_clock_1, , , );
GC1_q_b[3] = GC1_q_b[3]_PORT_B_data_out_reg[0];


--GC1_q_b[3] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[3]_PORT_A_data_in = ZB1_o_RamData[3];
GC1_q_b[3]_PORT_A_data_in_reg = DFFE(GC1_q_b[3]_PORT_A_data_in, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[3]_PORT_A_address_reg = DFFE(GC1_q_b[3]_PORT_A_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[3]_PORT_B_address_reg = DFFE(GC1_q_b[3]_PORT_B_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[3]_PORT_A_write_enable_reg = DFFE(GC1_q_b[3]_PORT_A_write_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_read_enable = B1L0;
GC1_q_b[3]_PORT_B_read_enable_reg = DFFE(GC1_q_b[3]_PORT_B_read_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[3]_PORT_A_byte_mask, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_clock_0 = !CLK_25MHz2;
GC1_q_b[3]_clock_1 = !CLK_25MHz2;
GC1_q_b[3]_PORT_B_data_out = MEMORY(GC1_q_b[3]_PORT_A_data_in_reg, , GC1_q_b[3]_PORT_A_address_reg, GC1_q_b[3]_PORT_B_address_reg, GC1_q_b[3]_PORT_A_write_enable_reg, GC1_q_b[3]_PORT_B_read_enable_reg, GC1_q_b[3]_PORT_A_byte_mask_reg, , GC1_q_b[3]_clock_0, GC1_q_b[3]_clock_1, , , , );
GC1_q_b[3]_PORT_B_data_out_reg = DFFE(GC1_q_b[3]_PORT_B_data_out, GC1_q_b[3]_clock_1, , , );
GC1_q_b[3] = GC1_q_b[3]_PORT_B_data_out_reg[0];


--GC1_q_b[3] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[3]_PORT_A_data_in = ZB1_o_RamData[3];
GC1_q_b[3]_PORT_A_data_in_reg = DFFE(GC1_q_b[3]_PORT_A_data_in, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[3]_PORT_A_address_reg = DFFE(GC1_q_b[3]_PORT_A_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[3]_PORT_B_address_reg = DFFE(GC1_q_b[3]_PORT_B_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[3]_PORT_A_write_enable_reg = DFFE(GC1_q_b[3]_PORT_A_write_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_read_enable = B1L0;
GC1_q_b[3]_PORT_B_read_enable_reg = DFFE(GC1_q_b[3]_PORT_B_read_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[3]_PORT_A_byte_mask, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_clock_0 = !CLK_25MHz2;
GC1_q_b[3]_clock_1 = !CLK_25MHz2;
GC1_q_b[3]_PORT_B_data_out = MEMORY(GC1_q_b[3]_PORT_A_data_in_reg, , GC1_q_b[3]_PORT_A_address_reg, GC1_q_b[3]_PORT_B_address_reg, GC1_q_b[3]_PORT_A_write_enable_reg, GC1_q_b[3]_PORT_B_read_enable_reg, GC1_q_b[3]_PORT_A_byte_mask_reg, , GC1_q_b[3]_clock_0, GC1_q_b[3]_clock_1, , , , );
GC1_q_b[3]_PORT_B_data_out_reg = DFFE(GC1_q_b[3]_PORT_B_data_out, GC1_q_b[3]_clock_1, , , );
GC1_q_b[3] = GC1_q_b[3]_PORT_B_data_out_reg[0];


--GC1_q_b[3] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[3]_PORT_A_data_in = ZB1_o_RamData[3];
GC1_q_b[3]_PORT_A_data_in_reg = DFFE(GC1_q_b[3]_PORT_A_data_in, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[3]_PORT_A_address_reg = DFFE(GC1_q_b[3]_PORT_A_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[3]_PORT_B_address_reg = DFFE(GC1_q_b[3]_PORT_B_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[3]_PORT_A_write_enable_reg = DFFE(GC1_q_b[3]_PORT_A_write_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_read_enable = B1L0;
GC1_q_b[3]_PORT_B_read_enable_reg = DFFE(GC1_q_b[3]_PORT_B_read_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[3]_PORT_A_byte_mask, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_clock_0 = !CLK_25MHz2;
GC1_q_b[3]_clock_1 = !CLK_25MHz2;
GC1_q_b[3]_PORT_B_data_out = MEMORY(GC1_q_b[3]_PORT_A_data_in_reg, , GC1_q_b[3]_PORT_A_address_reg, GC1_q_b[3]_PORT_B_address_reg, GC1_q_b[3]_PORT_A_write_enable_reg, GC1_q_b[3]_PORT_B_read_enable_reg, GC1_q_b[3]_PORT_A_byte_mask_reg, , GC1_q_b[3]_clock_0, GC1_q_b[3]_clock_1, , , , );
GC1_q_b[3]_PORT_B_data_out_reg = DFFE(GC1_q_b[3]_PORT_B_data_out, GC1_q_b[3]_clock_1, , , );
GC1_q_b[3] = GC1_q_b[3]_PORT_B_data_out_reg[0];


--GC1_q_b[3] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[3]_PORT_A_data_in = ZB1_o_RamData[3];
GC1_q_b[3]_PORT_A_data_in_reg = DFFE(GC1_q_b[3]_PORT_A_data_in, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[3]_PORT_A_address_reg = DFFE(GC1_q_b[3]_PORT_A_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[3]_PORT_B_address_reg = DFFE(GC1_q_b[3]_PORT_B_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[3]_PORT_A_write_enable_reg = DFFE(GC1_q_b[3]_PORT_A_write_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_read_enable = B1L0;
GC1_q_b[3]_PORT_B_read_enable_reg = DFFE(GC1_q_b[3]_PORT_B_read_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[3]_PORT_A_byte_mask, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_clock_0 = !CLK_25MHz2;
GC1_q_b[3]_clock_1 = !CLK_25MHz2;
GC1_q_b[3]_PORT_B_data_out = MEMORY(GC1_q_b[3]_PORT_A_data_in_reg, , GC1_q_b[3]_PORT_A_address_reg, GC1_q_b[3]_PORT_B_address_reg, GC1_q_b[3]_PORT_A_write_enable_reg, GC1_q_b[3]_PORT_B_read_enable_reg, GC1_q_b[3]_PORT_A_byte_mask_reg, , GC1_q_b[3]_clock_0, GC1_q_b[3]_clock_1, , , , );
GC1_q_b[3]_PORT_B_data_out_reg = DFFE(GC1_q_b[3]_PORT_B_data_out, GC1_q_b[3]_clock_1, , , );
GC1_q_b[3] = GC1_q_b[3]_PORT_B_data_out_reg[0];


--XB1_r_TxTail[3] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[3]
XB1_r_TxTail[3] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[3] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[3]
XB1_r_TxTail[3] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[3] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[3]
XB1_r_TxTail[3] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[3] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[3]
ZB1_r_RxHead[3] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[3] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[3]
ZB1_r_RxHead[3] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[3] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[3]
ZB1_r_RxHead[3] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[3] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[3]
ZB1_r_RxHead[3] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[3] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[3]
XB1_r_TxTail[3] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[3] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[3]
XB1_r_TxTail[3] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[3] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[3]
ZB1_r_RxHead[3] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--LC1_q_b[4] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[4]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[4];
LC1_q_b[4]_PORT_A_data_in_reg = DFFE(LC1_q_b[4]_PORT_A_data_in, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[4]_PORT_A_address_reg = DFFE(LC1_q_b[4]_PORT_A_address, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[4]_PORT_B_address_reg = DFFE(LC1_q_b[4]_PORT_B_address, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[4]_PORT_A_write_enable_reg = DFFE(LC1_q_b[4]_PORT_A_write_enable, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_B_read_enable = VCC;
LC1_q_b[4]_PORT_B_read_enable_reg = DFFE(LC1_q_b[4]_PORT_B_read_enable, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4]_PORT_A_byte_mask = A1L0;
LC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[4]_PORT_A_byte_mask, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_clock_0 = !CLK_25MHz2;
LC1_q_b[4]_clock_1 = !CLK_25MHz2;
LC1_q_b[4]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[4]_clock_enable_1 = inst146;
LC1_q_b[4]_PORT_B_data_out = MEMORY(LC1_q_b[4]_PORT_A_data_in_reg, , LC1_q_b[4]_PORT_A_address_reg, LC1_q_b[4]_PORT_B_address_reg, LC1_q_b[4]_PORT_A_write_enable_reg, LC1_q_b[4]_PORT_B_read_enable_reg, LC1_q_b[4]_PORT_A_byte_mask_reg, , LC1_q_b[4]_clock_0, LC1_q_b[4]_clock_1, LC1_q_b[4]_clock_enable_0, LC1_q_b[4]_clock_enable_1, , );
LC1_q_b[4]_PORT_B_data_out_reg = DFFE(LC1_q_b[4]_PORT_B_data_out, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4] = LC1_q_b[4]_PORT_B_data_out_reg[0];


--LC1_q_b[4] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[4]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[4];
LC1_q_b[4]_PORT_A_data_in_reg = DFFE(LC1_q_b[4]_PORT_A_data_in, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[4]_PORT_A_address_reg = DFFE(LC1_q_b[4]_PORT_A_address, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[4]_PORT_B_address_reg = DFFE(LC1_q_b[4]_PORT_B_address, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[4]_PORT_A_write_enable_reg = DFFE(LC1_q_b[4]_PORT_A_write_enable, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_B_read_enable = VCC;
LC1_q_b[4]_PORT_B_read_enable_reg = DFFE(LC1_q_b[4]_PORT_B_read_enable, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4]_PORT_A_byte_mask = A1L0;
LC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[4]_PORT_A_byte_mask, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_clock_0 = !CLK_25MHz2;
LC1_q_b[4]_clock_1 = !CLK_25MHz2;
LC1_q_b[4]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[4]_clock_enable_1 = inst80;
LC1_q_b[4]_PORT_B_data_out = MEMORY(LC1_q_b[4]_PORT_A_data_in_reg, , LC1_q_b[4]_PORT_A_address_reg, LC1_q_b[4]_PORT_B_address_reg, LC1_q_b[4]_PORT_A_write_enable_reg, LC1_q_b[4]_PORT_B_read_enable_reg, LC1_q_b[4]_PORT_A_byte_mask_reg, , LC1_q_b[4]_clock_0, LC1_q_b[4]_clock_1, LC1_q_b[4]_clock_enable_0, LC1_q_b[4]_clock_enable_1, , );
LC1_q_b[4]_PORT_B_data_out_reg = DFFE(LC1_q_b[4]_PORT_B_data_out, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4] = LC1_q_b[4]_PORT_B_data_out_reg[0];


--LC1_q_b[4] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[4]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[4];
LC1_q_b[4]_PORT_A_data_in_reg = DFFE(LC1_q_b[4]_PORT_A_data_in, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[4]_PORT_A_address_reg = DFFE(LC1_q_b[4]_PORT_A_address, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[4]_PORT_B_address_reg = DFFE(LC1_q_b[4]_PORT_B_address, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[4]_PORT_A_write_enable_reg = DFFE(LC1_q_b[4]_PORT_A_write_enable, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_B_read_enable = VCC;
LC1_q_b[4]_PORT_B_read_enable_reg = DFFE(LC1_q_b[4]_PORT_B_read_enable, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4]_PORT_A_byte_mask = A1L0;
LC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[4]_PORT_A_byte_mask, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_clock_0 = !CLK_25MHz2;
LC1_q_b[4]_clock_1 = !CLK_25MHz2;
LC1_q_b[4]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[4]_clock_enable_1 = inst182;
LC1_q_b[4]_PORT_B_data_out = MEMORY(LC1_q_b[4]_PORT_A_data_in_reg, , LC1_q_b[4]_PORT_A_address_reg, LC1_q_b[4]_PORT_B_address_reg, LC1_q_b[4]_PORT_A_write_enable_reg, LC1_q_b[4]_PORT_B_read_enable_reg, LC1_q_b[4]_PORT_A_byte_mask_reg, , LC1_q_b[4]_clock_0, LC1_q_b[4]_clock_1, LC1_q_b[4]_clock_enable_0, LC1_q_b[4]_clock_enable_1, , );
LC1_q_b[4]_PORT_B_data_out_reg = DFFE(LC1_q_b[4]_PORT_B_data_out, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4] = LC1_q_b[4]_PORT_B_data_out_reg[0];


--LC1_q_b[4] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[4]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[4];
LC1_q_b[4]_PORT_A_data_in_reg = DFFE(LC1_q_b[4]_PORT_A_data_in, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[4]_PORT_A_address_reg = DFFE(LC1_q_b[4]_PORT_A_address, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[4]_PORT_B_address_reg = DFFE(LC1_q_b[4]_PORT_B_address, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[4]_PORT_A_write_enable_reg = DFFE(LC1_q_b[4]_PORT_A_write_enable, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_PORT_B_read_enable = VCC;
LC1_q_b[4]_PORT_B_read_enable_reg = DFFE(LC1_q_b[4]_PORT_B_read_enable, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4]_PORT_A_byte_mask = A1L0;
LC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[4]_PORT_A_byte_mask, LC1_q_b[4]_clock_0, , , LC1_q_b[4]_clock_enable_0);
LC1_q_b[4]_clock_0 = !CLK_25MHz2;
LC1_q_b[4]_clock_1 = !CLK_25MHz2;
LC1_q_b[4]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[4]_clock_enable_1 = inst154;
LC1_q_b[4]_PORT_B_data_out = MEMORY(LC1_q_b[4]_PORT_A_data_in_reg, , LC1_q_b[4]_PORT_A_address_reg, LC1_q_b[4]_PORT_B_address_reg, LC1_q_b[4]_PORT_A_write_enable_reg, LC1_q_b[4]_PORT_B_read_enable_reg, LC1_q_b[4]_PORT_A_byte_mask_reg, , LC1_q_b[4]_clock_0, LC1_q_b[4]_clock_1, LC1_q_b[4]_clock_enable_0, LC1_q_b[4]_clock_enable_1, , );
LC1_q_b[4]_PORT_B_data_out_reg = DFFE(LC1_q_b[4]_PORT_B_data_out, LC1_q_b[4]_clock_1, , , LC1_q_b[4]_clock_enable_1);
LC1_q_b[4] = LC1_q_b[4]_PORT_B_data_out_reg[0];


--GC1_q_b[4] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[4]_PORT_A_data_in = ZB1_o_RamData[4];
GC1_q_b[4]_PORT_A_data_in_reg = DFFE(GC1_q_b[4]_PORT_A_data_in, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[4]_PORT_A_address_reg = DFFE(GC1_q_b[4]_PORT_A_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[4]_PORT_B_address_reg = DFFE(GC1_q_b[4]_PORT_B_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[4]_PORT_A_write_enable_reg = DFFE(GC1_q_b[4]_PORT_A_write_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_read_enable = B1L0;
GC1_q_b[4]_PORT_B_read_enable_reg = DFFE(GC1_q_b[4]_PORT_B_read_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[4]_PORT_A_byte_mask, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_clock_0 = !CLK_25MHz2;
GC1_q_b[4]_clock_1 = !CLK_25MHz2;
GC1_q_b[4]_PORT_B_data_out = MEMORY(GC1_q_b[4]_PORT_A_data_in_reg, , GC1_q_b[4]_PORT_A_address_reg, GC1_q_b[4]_PORT_B_address_reg, GC1_q_b[4]_PORT_A_write_enable_reg, GC1_q_b[4]_PORT_B_read_enable_reg, GC1_q_b[4]_PORT_A_byte_mask_reg, , GC1_q_b[4]_clock_0, GC1_q_b[4]_clock_1, , , , );
GC1_q_b[4]_PORT_B_data_out_reg = DFFE(GC1_q_b[4]_PORT_B_data_out, GC1_q_b[4]_clock_1, , , );
GC1_q_b[4] = GC1_q_b[4]_PORT_B_data_out_reg[0];


--GC1_q_b[4] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[4]_PORT_A_data_in = ZB1_o_RamData[4];
GC1_q_b[4]_PORT_A_data_in_reg = DFFE(GC1_q_b[4]_PORT_A_data_in, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[4]_PORT_A_address_reg = DFFE(GC1_q_b[4]_PORT_A_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[4]_PORT_B_address_reg = DFFE(GC1_q_b[4]_PORT_B_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[4]_PORT_A_write_enable_reg = DFFE(GC1_q_b[4]_PORT_A_write_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_read_enable = B1L0;
GC1_q_b[4]_PORT_B_read_enable_reg = DFFE(GC1_q_b[4]_PORT_B_read_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[4]_PORT_A_byte_mask, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_clock_0 = !CLK_25MHz2;
GC1_q_b[4]_clock_1 = !CLK_25MHz2;
GC1_q_b[4]_PORT_B_data_out = MEMORY(GC1_q_b[4]_PORT_A_data_in_reg, , GC1_q_b[4]_PORT_A_address_reg, GC1_q_b[4]_PORT_B_address_reg, GC1_q_b[4]_PORT_A_write_enable_reg, GC1_q_b[4]_PORT_B_read_enable_reg, GC1_q_b[4]_PORT_A_byte_mask_reg, , GC1_q_b[4]_clock_0, GC1_q_b[4]_clock_1, , , , );
GC1_q_b[4]_PORT_B_data_out_reg = DFFE(GC1_q_b[4]_PORT_B_data_out, GC1_q_b[4]_clock_1, , , );
GC1_q_b[4] = GC1_q_b[4]_PORT_B_data_out_reg[0];


--GC1_q_b[4] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[4]_PORT_A_data_in = ZB1_o_RamData[4];
GC1_q_b[4]_PORT_A_data_in_reg = DFFE(GC1_q_b[4]_PORT_A_data_in, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[4]_PORT_A_address_reg = DFFE(GC1_q_b[4]_PORT_A_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[4]_PORT_B_address_reg = DFFE(GC1_q_b[4]_PORT_B_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[4]_PORT_A_write_enable_reg = DFFE(GC1_q_b[4]_PORT_A_write_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_read_enable = B1L0;
GC1_q_b[4]_PORT_B_read_enable_reg = DFFE(GC1_q_b[4]_PORT_B_read_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[4]_PORT_A_byte_mask, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_clock_0 = !CLK_25MHz2;
GC1_q_b[4]_clock_1 = !CLK_25MHz2;
GC1_q_b[4]_PORT_B_data_out = MEMORY(GC1_q_b[4]_PORT_A_data_in_reg, , GC1_q_b[4]_PORT_A_address_reg, GC1_q_b[4]_PORT_B_address_reg, GC1_q_b[4]_PORT_A_write_enable_reg, GC1_q_b[4]_PORT_B_read_enable_reg, GC1_q_b[4]_PORT_A_byte_mask_reg, , GC1_q_b[4]_clock_0, GC1_q_b[4]_clock_1, , , , );
GC1_q_b[4]_PORT_B_data_out_reg = DFFE(GC1_q_b[4]_PORT_B_data_out, GC1_q_b[4]_clock_1, , , );
GC1_q_b[4] = GC1_q_b[4]_PORT_B_data_out_reg[0];


--GC1_q_b[4] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[4]_PORT_A_data_in = ZB1_o_RamData[4];
GC1_q_b[4]_PORT_A_data_in_reg = DFFE(GC1_q_b[4]_PORT_A_data_in, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[4]_PORT_A_address_reg = DFFE(GC1_q_b[4]_PORT_A_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[4]_PORT_B_address_reg = DFFE(GC1_q_b[4]_PORT_B_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[4]_PORT_A_write_enable_reg = DFFE(GC1_q_b[4]_PORT_A_write_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_read_enable = B1L0;
GC1_q_b[4]_PORT_B_read_enable_reg = DFFE(GC1_q_b[4]_PORT_B_read_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[4]_PORT_A_byte_mask, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_clock_0 = !CLK_25MHz2;
GC1_q_b[4]_clock_1 = !CLK_25MHz2;
GC1_q_b[4]_PORT_B_data_out = MEMORY(GC1_q_b[4]_PORT_A_data_in_reg, , GC1_q_b[4]_PORT_A_address_reg, GC1_q_b[4]_PORT_B_address_reg, GC1_q_b[4]_PORT_A_write_enable_reg, GC1_q_b[4]_PORT_B_read_enable_reg, GC1_q_b[4]_PORT_A_byte_mask_reg, , GC1_q_b[4]_clock_0, GC1_q_b[4]_clock_1, , , , );
GC1_q_b[4]_PORT_B_data_out_reg = DFFE(GC1_q_b[4]_PORT_B_data_out, GC1_q_b[4]_clock_1, , , );
GC1_q_b[4] = GC1_q_b[4]_PORT_B_data_out_reg[0];


--GC1_q_b[4] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[4]_PORT_A_data_in = ZB1_o_RamData[4];
GC1_q_b[4]_PORT_A_data_in_reg = DFFE(GC1_q_b[4]_PORT_A_data_in, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[4]_PORT_A_address_reg = DFFE(GC1_q_b[4]_PORT_A_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[4]_PORT_B_address_reg = DFFE(GC1_q_b[4]_PORT_B_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[4]_PORT_A_write_enable_reg = DFFE(GC1_q_b[4]_PORT_A_write_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_read_enable = B1L0;
GC1_q_b[4]_PORT_B_read_enable_reg = DFFE(GC1_q_b[4]_PORT_B_read_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[4]_PORT_A_byte_mask, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_clock_0 = !CLK_25MHz2;
GC1_q_b[4]_clock_1 = !CLK_25MHz2;
GC1_q_b[4]_PORT_B_data_out = MEMORY(GC1_q_b[4]_PORT_A_data_in_reg, , GC1_q_b[4]_PORT_A_address_reg, GC1_q_b[4]_PORT_B_address_reg, GC1_q_b[4]_PORT_A_write_enable_reg, GC1_q_b[4]_PORT_B_read_enable_reg, GC1_q_b[4]_PORT_A_byte_mask_reg, , GC1_q_b[4]_clock_0, GC1_q_b[4]_clock_1, , , , );
GC1_q_b[4]_PORT_B_data_out_reg = DFFE(GC1_q_b[4]_PORT_B_data_out, GC1_q_b[4]_clock_1, , , );
GC1_q_b[4] = GC1_q_b[4]_PORT_B_data_out_reg[0];


--XB1_r_TxTail[4] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[4]
XB1_r_TxTail[4] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[4] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[4]
XB1_r_TxTail[4] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[4] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[4]
XB1_r_TxTail[4] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[4] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[4]
ZB1_r_RxHead[4] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[4] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[4]
ZB1_r_RxHead[4] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[4] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[4]
ZB1_r_RxHead[4] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[4] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[4]
ZB1_r_RxHead[4] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[4] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[4]
XB1_r_TxTail[4] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[4] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[4]
XB1_r_TxTail[4] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[4] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[4]
ZB1_r_RxHead[4] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--LC1_q_b[5] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[5]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[5];
LC1_q_b[5]_PORT_A_data_in_reg = DFFE(LC1_q_b[5]_PORT_A_data_in, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[5]_PORT_A_address_reg = DFFE(LC1_q_b[5]_PORT_A_address, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[5]_PORT_B_address_reg = DFFE(LC1_q_b[5]_PORT_B_address, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[5]_PORT_A_write_enable_reg = DFFE(LC1_q_b[5]_PORT_A_write_enable, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_B_read_enable = VCC;
LC1_q_b[5]_PORT_B_read_enable_reg = DFFE(LC1_q_b[5]_PORT_B_read_enable, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5]_PORT_A_byte_mask = A1L0;
LC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[5]_PORT_A_byte_mask, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_clock_0 = !CLK_25MHz2;
LC1_q_b[5]_clock_1 = !CLK_25MHz2;
LC1_q_b[5]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[5]_clock_enable_1 = inst146;
LC1_q_b[5]_PORT_B_data_out = MEMORY(LC1_q_b[5]_PORT_A_data_in_reg, , LC1_q_b[5]_PORT_A_address_reg, LC1_q_b[5]_PORT_B_address_reg, LC1_q_b[5]_PORT_A_write_enable_reg, LC1_q_b[5]_PORT_B_read_enable_reg, LC1_q_b[5]_PORT_A_byte_mask_reg, , LC1_q_b[5]_clock_0, LC1_q_b[5]_clock_1, LC1_q_b[5]_clock_enable_0, LC1_q_b[5]_clock_enable_1, , );
LC1_q_b[5]_PORT_B_data_out_reg = DFFE(LC1_q_b[5]_PORT_B_data_out, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5] = LC1_q_b[5]_PORT_B_data_out_reg[0];


--LC1_q_b[5] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[5]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[5];
LC1_q_b[5]_PORT_A_data_in_reg = DFFE(LC1_q_b[5]_PORT_A_data_in, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[5]_PORT_A_address_reg = DFFE(LC1_q_b[5]_PORT_A_address, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[5]_PORT_B_address_reg = DFFE(LC1_q_b[5]_PORT_B_address, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[5]_PORT_A_write_enable_reg = DFFE(LC1_q_b[5]_PORT_A_write_enable, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_B_read_enable = VCC;
LC1_q_b[5]_PORT_B_read_enable_reg = DFFE(LC1_q_b[5]_PORT_B_read_enable, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5]_PORT_A_byte_mask = A1L0;
LC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[5]_PORT_A_byte_mask, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_clock_0 = !CLK_25MHz2;
LC1_q_b[5]_clock_1 = !CLK_25MHz2;
LC1_q_b[5]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[5]_clock_enable_1 = inst80;
LC1_q_b[5]_PORT_B_data_out = MEMORY(LC1_q_b[5]_PORT_A_data_in_reg, , LC1_q_b[5]_PORT_A_address_reg, LC1_q_b[5]_PORT_B_address_reg, LC1_q_b[5]_PORT_A_write_enable_reg, LC1_q_b[5]_PORT_B_read_enable_reg, LC1_q_b[5]_PORT_A_byte_mask_reg, , LC1_q_b[5]_clock_0, LC1_q_b[5]_clock_1, LC1_q_b[5]_clock_enable_0, LC1_q_b[5]_clock_enable_1, , );
LC1_q_b[5]_PORT_B_data_out_reg = DFFE(LC1_q_b[5]_PORT_B_data_out, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5] = LC1_q_b[5]_PORT_B_data_out_reg[0];


--LC1_q_b[5] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[5]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[5];
LC1_q_b[5]_PORT_A_data_in_reg = DFFE(LC1_q_b[5]_PORT_A_data_in, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[5]_PORT_A_address_reg = DFFE(LC1_q_b[5]_PORT_A_address, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[5]_PORT_B_address_reg = DFFE(LC1_q_b[5]_PORT_B_address, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[5]_PORT_A_write_enable_reg = DFFE(LC1_q_b[5]_PORT_A_write_enable, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_B_read_enable = VCC;
LC1_q_b[5]_PORT_B_read_enable_reg = DFFE(LC1_q_b[5]_PORT_B_read_enable, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5]_PORT_A_byte_mask = A1L0;
LC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[5]_PORT_A_byte_mask, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_clock_0 = !CLK_25MHz2;
LC1_q_b[5]_clock_1 = !CLK_25MHz2;
LC1_q_b[5]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[5]_clock_enable_1 = inst182;
LC1_q_b[5]_PORT_B_data_out = MEMORY(LC1_q_b[5]_PORT_A_data_in_reg, , LC1_q_b[5]_PORT_A_address_reg, LC1_q_b[5]_PORT_B_address_reg, LC1_q_b[5]_PORT_A_write_enable_reg, LC1_q_b[5]_PORT_B_read_enable_reg, LC1_q_b[5]_PORT_A_byte_mask_reg, , LC1_q_b[5]_clock_0, LC1_q_b[5]_clock_1, LC1_q_b[5]_clock_enable_0, LC1_q_b[5]_clock_enable_1, , );
LC1_q_b[5]_PORT_B_data_out_reg = DFFE(LC1_q_b[5]_PORT_B_data_out, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5] = LC1_q_b[5]_PORT_B_data_out_reg[0];


--LC1_q_b[5] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[5]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[5];
LC1_q_b[5]_PORT_A_data_in_reg = DFFE(LC1_q_b[5]_PORT_A_data_in, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[5]_PORT_A_address_reg = DFFE(LC1_q_b[5]_PORT_A_address, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[5]_PORT_B_address_reg = DFFE(LC1_q_b[5]_PORT_B_address, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[5]_PORT_A_write_enable_reg = DFFE(LC1_q_b[5]_PORT_A_write_enable, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_PORT_B_read_enable = VCC;
LC1_q_b[5]_PORT_B_read_enable_reg = DFFE(LC1_q_b[5]_PORT_B_read_enable, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5]_PORT_A_byte_mask = A1L0;
LC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[5]_PORT_A_byte_mask, LC1_q_b[5]_clock_0, , , LC1_q_b[5]_clock_enable_0);
LC1_q_b[5]_clock_0 = !CLK_25MHz2;
LC1_q_b[5]_clock_1 = !CLK_25MHz2;
LC1_q_b[5]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[5]_clock_enable_1 = inst154;
LC1_q_b[5]_PORT_B_data_out = MEMORY(LC1_q_b[5]_PORT_A_data_in_reg, , LC1_q_b[5]_PORT_A_address_reg, LC1_q_b[5]_PORT_B_address_reg, LC1_q_b[5]_PORT_A_write_enable_reg, LC1_q_b[5]_PORT_B_read_enable_reg, LC1_q_b[5]_PORT_A_byte_mask_reg, , LC1_q_b[5]_clock_0, LC1_q_b[5]_clock_1, LC1_q_b[5]_clock_enable_0, LC1_q_b[5]_clock_enable_1, , );
LC1_q_b[5]_PORT_B_data_out_reg = DFFE(LC1_q_b[5]_PORT_B_data_out, LC1_q_b[5]_clock_1, , , LC1_q_b[5]_clock_enable_1);
LC1_q_b[5] = LC1_q_b[5]_PORT_B_data_out_reg[0];


--GC1_q_b[5] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[5]_PORT_A_data_in = ZB1_o_RamData[5];
GC1_q_b[5]_PORT_A_data_in_reg = DFFE(GC1_q_b[5]_PORT_A_data_in, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[5]_PORT_A_address_reg = DFFE(GC1_q_b[5]_PORT_A_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[5]_PORT_B_address_reg = DFFE(GC1_q_b[5]_PORT_B_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[5]_PORT_A_write_enable_reg = DFFE(GC1_q_b[5]_PORT_A_write_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_read_enable = B1L0;
GC1_q_b[5]_PORT_B_read_enable_reg = DFFE(GC1_q_b[5]_PORT_B_read_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[5]_PORT_A_byte_mask, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_clock_0 = !CLK_25MHz2;
GC1_q_b[5]_clock_1 = !CLK_25MHz2;
GC1_q_b[5]_PORT_B_data_out = MEMORY(GC1_q_b[5]_PORT_A_data_in_reg, , GC1_q_b[5]_PORT_A_address_reg, GC1_q_b[5]_PORT_B_address_reg, GC1_q_b[5]_PORT_A_write_enable_reg, GC1_q_b[5]_PORT_B_read_enable_reg, GC1_q_b[5]_PORT_A_byte_mask_reg, , GC1_q_b[5]_clock_0, GC1_q_b[5]_clock_1, , , , );
GC1_q_b[5]_PORT_B_data_out_reg = DFFE(GC1_q_b[5]_PORT_B_data_out, GC1_q_b[5]_clock_1, , , );
GC1_q_b[5] = GC1_q_b[5]_PORT_B_data_out_reg[0];


--GC1_q_b[5] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[5]_PORT_A_data_in = ZB1_o_RamData[5];
GC1_q_b[5]_PORT_A_data_in_reg = DFFE(GC1_q_b[5]_PORT_A_data_in, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[5]_PORT_A_address_reg = DFFE(GC1_q_b[5]_PORT_A_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[5]_PORT_B_address_reg = DFFE(GC1_q_b[5]_PORT_B_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[5]_PORT_A_write_enable_reg = DFFE(GC1_q_b[5]_PORT_A_write_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_read_enable = B1L0;
GC1_q_b[5]_PORT_B_read_enable_reg = DFFE(GC1_q_b[5]_PORT_B_read_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[5]_PORT_A_byte_mask, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_clock_0 = !CLK_25MHz2;
GC1_q_b[5]_clock_1 = !CLK_25MHz2;
GC1_q_b[5]_PORT_B_data_out = MEMORY(GC1_q_b[5]_PORT_A_data_in_reg, , GC1_q_b[5]_PORT_A_address_reg, GC1_q_b[5]_PORT_B_address_reg, GC1_q_b[5]_PORT_A_write_enable_reg, GC1_q_b[5]_PORT_B_read_enable_reg, GC1_q_b[5]_PORT_A_byte_mask_reg, , GC1_q_b[5]_clock_0, GC1_q_b[5]_clock_1, , , , );
GC1_q_b[5]_PORT_B_data_out_reg = DFFE(GC1_q_b[5]_PORT_B_data_out, GC1_q_b[5]_clock_1, , , );
GC1_q_b[5] = GC1_q_b[5]_PORT_B_data_out_reg[0];


--GC1_q_b[5] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[5]_PORT_A_data_in = ZB1_o_RamData[5];
GC1_q_b[5]_PORT_A_data_in_reg = DFFE(GC1_q_b[5]_PORT_A_data_in, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[5]_PORT_A_address_reg = DFFE(GC1_q_b[5]_PORT_A_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[5]_PORT_B_address_reg = DFFE(GC1_q_b[5]_PORT_B_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[5]_PORT_A_write_enable_reg = DFFE(GC1_q_b[5]_PORT_A_write_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_read_enable = B1L0;
GC1_q_b[5]_PORT_B_read_enable_reg = DFFE(GC1_q_b[5]_PORT_B_read_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[5]_PORT_A_byte_mask, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_clock_0 = !CLK_25MHz2;
GC1_q_b[5]_clock_1 = !CLK_25MHz2;
GC1_q_b[5]_PORT_B_data_out = MEMORY(GC1_q_b[5]_PORT_A_data_in_reg, , GC1_q_b[5]_PORT_A_address_reg, GC1_q_b[5]_PORT_B_address_reg, GC1_q_b[5]_PORT_A_write_enable_reg, GC1_q_b[5]_PORT_B_read_enable_reg, GC1_q_b[5]_PORT_A_byte_mask_reg, , GC1_q_b[5]_clock_0, GC1_q_b[5]_clock_1, , , , );
GC1_q_b[5]_PORT_B_data_out_reg = DFFE(GC1_q_b[5]_PORT_B_data_out, GC1_q_b[5]_clock_1, , , );
GC1_q_b[5] = GC1_q_b[5]_PORT_B_data_out_reg[0];


--GC1_q_b[5] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[5]_PORT_A_data_in = ZB1_o_RamData[5];
GC1_q_b[5]_PORT_A_data_in_reg = DFFE(GC1_q_b[5]_PORT_A_data_in, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[5]_PORT_A_address_reg = DFFE(GC1_q_b[5]_PORT_A_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[5]_PORT_B_address_reg = DFFE(GC1_q_b[5]_PORT_B_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[5]_PORT_A_write_enable_reg = DFFE(GC1_q_b[5]_PORT_A_write_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_read_enable = B1L0;
GC1_q_b[5]_PORT_B_read_enable_reg = DFFE(GC1_q_b[5]_PORT_B_read_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[5]_PORT_A_byte_mask, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_clock_0 = !CLK_25MHz2;
GC1_q_b[5]_clock_1 = !CLK_25MHz2;
GC1_q_b[5]_PORT_B_data_out = MEMORY(GC1_q_b[5]_PORT_A_data_in_reg, , GC1_q_b[5]_PORT_A_address_reg, GC1_q_b[5]_PORT_B_address_reg, GC1_q_b[5]_PORT_A_write_enable_reg, GC1_q_b[5]_PORT_B_read_enable_reg, GC1_q_b[5]_PORT_A_byte_mask_reg, , GC1_q_b[5]_clock_0, GC1_q_b[5]_clock_1, , , , );
GC1_q_b[5]_PORT_B_data_out_reg = DFFE(GC1_q_b[5]_PORT_B_data_out, GC1_q_b[5]_clock_1, , , );
GC1_q_b[5] = GC1_q_b[5]_PORT_B_data_out_reg[0];


--GC1_q_b[5] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[5]_PORT_A_data_in = ZB1_o_RamData[5];
GC1_q_b[5]_PORT_A_data_in_reg = DFFE(GC1_q_b[5]_PORT_A_data_in, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[5]_PORT_A_address_reg = DFFE(GC1_q_b[5]_PORT_A_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[5]_PORT_B_address_reg = DFFE(GC1_q_b[5]_PORT_B_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[5]_PORT_A_write_enable_reg = DFFE(GC1_q_b[5]_PORT_A_write_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_read_enable = B1L0;
GC1_q_b[5]_PORT_B_read_enable_reg = DFFE(GC1_q_b[5]_PORT_B_read_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[5]_PORT_A_byte_mask, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_clock_0 = !CLK_25MHz2;
GC1_q_b[5]_clock_1 = !CLK_25MHz2;
GC1_q_b[5]_PORT_B_data_out = MEMORY(GC1_q_b[5]_PORT_A_data_in_reg, , GC1_q_b[5]_PORT_A_address_reg, GC1_q_b[5]_PORT_B_address_reg, GC1_q_b[5]_PORT_A_write_enable_reg, GC1_q_b[5]_PORT_B_read_enable_reg, GC1_q_b[5]_PORT_A_byte_mask_reg, , GC1_q_b[5]_clock_0, GC1_q_b[5]_clock_1, , , , );
GC1_q_b[5]_PORT_B_data_out_reg = DFFE(GC1_q_b[5]_PORT_B_data_out, GC1_q_b[5]_clock_1, , , );
GC1_q_b[5] = GC1_q_b[5]_PORT_B_data_out_reg[0];


--XB1_r_TxTail[5] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[5]
XB1_r_TxTail[5] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[5] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[5]
XB1_r_TxTail[5] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[5] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[5]
XB1_r_TxTail[5] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[5] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[5]
ZB1_r_RxHead[5] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[5] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[5]
ZB1_r_RxHead[5] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[5] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[5]
ZB1_r_RxHead[5] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[5] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[5]
ZB1_r_RxHead[5] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[5] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[5]
XB1_r_TxTail[5] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[5] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[5]
XB1_r_TxTail[5] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[5] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[5]
ZB1_r_RxHead[5] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--LC1_q_b[6] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[6]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[6];
LC1_q_b[6]_PORT_A_data_in_reg = DFFE(LC1_q_b[6]_PORT_A_data_in, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[6]_PORT_A_address_reg = DFFE(LC1_q_b[6]_PORT_A_address, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[6]_PORT_B_address_reg = DFFE(LC1_q_b[6]_PORT_B_address, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[6]_PORT_A_write_enable_reg = DFFE(LC1_q_b[6]_PORT_A_write_enable, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_B_read_enable = VCC;
LC1_q_b[6]_PORT_B_read_enable_reg = DFFE(LC1_q_b[6]_PORT_B_read_enable, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6]_PORT_A_byte_mask = A1L0;
LC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[6]_PORT_A_byte_mask, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_clock_0 = !CLK_25MHz2;
LC1_q_b[6]_clock_1 = !CLK_25MHz2;
LC1_q_b[6]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[6]_clock_enable_1 = inst146;
LC1_q_b[6]_PORT_B_data_out = MEMORY(LC1_q_b[6]_PORT_A_data_in_reg, , LC1_q_b[6]_PORT_A_address_reg, LC1_q_b[6]_PORT_B_address_reg, LC1_q_b[6]_PORT_A_write_enable_reg, LC1_q_b[6]_PORT_B_read_enable_reg, LC1_q_b[6]_PORT_A_byte_mask_reg, , LC1_q_b[6]_clock_0, LC1_q_b[6]_clock_1, LC1_q_b[6]_clock_enable_0, LC1_q_b[6]_clock_enable_1, , );
LC1_q_b[6]_PORT_B_data_out_reg = DFFE(LC1_q_b[6]_PORT_B_data_out, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6] = LC1_q_b[6]_PORT_B_data_out_reg[0];


--LC1_q_b[6] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[6]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[6];
LC1_q_b[6]_PORT_A_data_in_reg = DFFE(LC1_q_b[6]_PORT_A_data_in, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[6]_PORT_A_address_reg = DFFE(LC1_q_b[6]_PORT_A_address, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[6]_PORT_B_address_reg = DFFE(LC1_q_b[6]_PORT_B_address, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[6]_PORT_A_write_enable_reg = DFFE(LC1_q_b[6]_PORT_A_write_enable, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_B_read_enable = VCC;
LC1_q_b[6]_PORT_B_read_enable_reg = DFFE(LC1_q_b[6]_PORT_B_read_enable, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6]_PORT_A_byte_mask = A1L0;
LC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[6]_PORT_A_byte_mask, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_clock_0 = !CLK_25MHz2;
LC1_q_b[6]_clock_1 = !CLK_25MHz2;
LC1_q_b[6]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[6]_clock_enable_1 = inst80;
LC1_q_b[6]_PORT_B_data_out = MEMORY(LC1_q_b[6]_PORT_A_data_in_reg, , LC1_q_b[6]_PORT_A_address_reg, LC1_q_b[6]_PORT_B_address_reg, LC1_q_b[6]_PORT_A_write_enable_reg, LC1_q_b[6]_PORT_B_read_enable_reg, LC1_q_b[6]_PORT_A_byte_mask_reg, , LC1_q_b[6]_clock_0, LC1_q_b[6]_clock_1, LC1_q_b[6]_clock_enable_0, LC1_q_b[6]_clock_enable_1, , );
LC1_q_b[6]_PORT_B_data_out_reg = DFFE(LC1_q_b[6]_PORT_B_data_out, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6] = LC1_q_b[6]_PORT_B_data_out_reg[0];


--LC1_q_b[6] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[6]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[6];
LC1_q_b[6]_PORT_A_data_in_reg = DFFE(LC1_q_b[6]_PORT_A_data_in, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[6]_PORT_A_address_reg = DFFE(LC1_q_b[6]_PORT_A_address, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[6]_PORT_B_address_reg = DFFE(LC1_q_b[6]_PORT_B_address, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[6]_PORT_A_write_enable_reg = DFFE(LC1_q_b[6]_PORT_A_write_enable, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_B_read_enable = VCC;
LC1_q_b[6]_PORT_B_read_enable_reg = DFFE(LC1_q_b[6]_PORT_B_read_enable, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6]_PORT_A_byte_mask = A1L0;
LC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[6]_PORT_A_byte_mask, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_clock_0 = !CLK_25MHz2;
LC1_q_b[6]_clock_1 = !CLK_25MHz2;
LC1_q_b[6]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[6]_clock_enable_1 = inst182;
LC1_q_b[6]_PORT_B_data_out = MEMORY(LC1_q_b[6]_PORT_A_data_in_reg, , LC1_q_b[6]_PORT_A_address_reg, LC1_q_b[6]_PORT_B_address_reg, LC1_q_b[6]_PORT_A_write_enable_reg, LC1_q_b[6]_PORT_B_read_enable_reg, LC1_q_b[6]_PORT_A_byte_mask_reg, , LC1_q_b[6]_clock_0, LC1_q_b[6]_clock_1, LC1_q_b[6]_clock_enable_0, LC1_q_b[6]_clock_enable_1, , );
LC1_q_b[6]_PORT_B_data_out_reg = DFFE(LC1_q_b[6]_PORT_B_data_out, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6] = LC1_q_b[6]_PORT_B_data_out_reg[0];


--LC1_q_b[6] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[6]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[6];
LC1_q_b[6]_PORT_A_data_in_reg = DFFE(LC1_q_b[6]_PORT_A_data_in, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[6]_PORT_A_address_reg = DFFE(LC1_q_b[6]_PORT_A_address, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[6]_PORT_B_address_reg = DFFE(LC1_q_b[6]_PORT_B_address, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[6]_PORT_A_write_enable_reg = DFFE(LC1_q_b[6]_PORT_A_write_enable, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_PORT_B_read_enable = VCC;
LC1_q_b[6]_PORT_B_read_enable_reg = DFFE(LC1_q_b[6]_PORT_B_read_enable, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6]_PORT_A_byte_mask = A1L0;
LC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[6]_PORT_A_byte_mask, LC1_q_b[6]_clock_0, , , LC1_q_b[6]_clock_enable_0);
LC1_q_b[6]_clock_0 = !CLK_25MHz2;
LC1_q_b[6]_clock_1 = !CLK_25MHz2;
LC1_q_b[6]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[6]_clock_enable_1 = inst154;
LC1_q_b[6]_PORT_B_data_out = MEMORY(LC1_q_b[6]_PORT_A_data_in_reg, , LC1_q_b[6]_PORT_A_address_reg, LC1_q_b[6]_PORT_B_address_reg, LC1_q_b[6]_PORT_A_write_enable_reg, LC1_q_b[6]_PORT_B_read_enable_reg, LC1_q_b[6]_PORT_A_byte_mask_reg, , LC1_q_b[6]_clock_0, LC1_q_b[6]_clock_1, LC1_q_b[6]_clock_enable_0, LC1_q_b[6]_clock_enable_1, , );
LC1_q_b[6]_PORT_B_data_out_reg = DFFE(LC1_q_b[6]_PORT_B_data_out, LC1_q_b[6]_clock_1, , , LC1_q_b[6]_clock_enable_1);
LC1_q_b[6] = LC1_q_b[6]_PORT_B_data_out_reg[0];


--GC1_q_b[6] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[6]_PORT_A_data_in = ZB1_o_RamData[6];
GC1_q_b[6]_PORT_A_data_in_reg = DFFE(GC1_q_b[6]_PORT_A_data_in, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[6]_PORT_A_address_reg = DFFE(GC1_q_b[6]_PORT_A_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[6]_PORT_B_address_reg = DFFE(GC1_q_b[6]_PORT_B_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[6]_PORT_A_write_enable_reg = DFFE(GC1_q_b[6]_PORT_A_write_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_read_enable = B1L0;
GC1_q_b[6]_PORT_B_read_enable_reg = DFFE(GC1_q_b[6]_PORT_B_read_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[6]_PORT_A_byte_mask, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_clock_0 = !CLK_25MHz2;
GC1_q_b[6]_clock_1 = !CLK_25MHz2;
GC1_q_b[6]_PORT_B_data_out = MEMORY(GC1_q_b[6]_PORT_A_data_in_reg, , GC1_q_b[6]_PORT_A_address_reg, GC1_q_b[6]_PORT_B_address_reg, GC1_q_b[6]_PORT_A_write_enable_reg, GC1_q_b[6]_PORT_B_read_enable_reg, GC1_q_b[6]_PORT_A_byte_mask_reg, , GC1_q_b[6]_clock_0, GC1_q_b[6]_clock_1, , , , );
GC1_q_b[6]_PORT_B_data_out_reg = DFFE(GC1_q_b[6]_PORT_B_data_out, GC1_q_b[6]_clock_1, , , );
GC1_q_b[6] = GC1_q_b[6]_PORT_B_data_out_reg[0];


--GC1_q_b[6] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[6]_PORT_A_data_in = ZB1_o_RamData[6];
GC1_q_b[6]_PORT_A_data_in_reg = DFFE(GC1_q_b[6]_PORT_A_data_in, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[6]_PORT_A_address_reg = DFFE(GC1_q_b[6]_PORT_A_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[6]_PORT_B_address_reg = DFFE(GC1_q_b[6]_PORT_B_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[6]_PORT_A_write_enable_reg = DFFE(GC1_q_b[6]_PORT_A_write_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_read_enable = B1L0;
GC1_q_b[6]_PORT_B_read_enable_reg = DFFE(GC1_q_b[6]_PORT_B_read_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[6]_PORT_A_byte_mask, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_clock_0 = !CLK_25MHz2;
GC1_q_b[6]_clock_1 = !CLK_25MHz2;
GC1_q_b[6]_PORT_B_data_out = MEMORY(GC1_q_b[6]_PORT_A_data_in_reg, , GC1_q_b[6]_PORT_A_address_reg, GC1_q_b[6]_PORT_B_address_reg, GC1_q_b[6]_PORT_A_write_enable_reg, GC1_q_b[6]_PORT_B_read_enable_reg, GC1_q_b[6]_PORT_A_byte_mask_reg, , GC1_q_b[6]_clock_0, GC1_q_b[6]_clock_1, , , , );
GC1_q_b[6]_PORT_B_data_out_reg = DFFE(GC1_q_b[6]_PORT_B_data_out, GC1_q_b[6]_clock_1, , , );
GC1_q_b[6] = GC1_q_b[6]_PORT_B_data_out_reg[0];


--GC1_q_b[6] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[6]_PORT_A_data_in = ZB1_o_RamData[6];
GC1_q_b[6]_PORT_A_data_in_reg = DFFE(GC1_q_b[6]_PORT_A_data_in, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[6]_PORT_A_address_reg = DFFE(GC1_q_b[6]_PORT_A_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[6]_PORT_B_address_reg = DFFE(GC1_q_b[6]_PORT_B_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[6]_PORT_A_write_enable_reg = DFFE(GC1_q_b[6]_PORT_A_write_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_read_enable = B1L0;
GC1_q_b[6]_PORT_B_read_enable_reg = DFFE(GC1_q_b[6]_PORT_B_read_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[6]_PORT_A_byte_mask, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_clock_0 = !CLK_25MHz2;
GC1_q_b[6]_clock_1 = !CLK_25MHz2;
GC1_q_b[6]_PORT_B_data_out = MEMORY(GC1_q_b[6]_PORT_A_data_in_reg, , GC1_q_b[6]_PORT_A_address_reg, GC1_q_b[6]_PORT_B_address_reg, GC1_q_b[6]_PORT_A_write_enable_reg, GC1_q_b[6]_PORT_B_read_enable_reg, GC1_q_b[6]_PORT_A_byte_mask_reg, , GC1_q_b[6]_clock_0, GC1_q_b[6]_clock_1, , , , );
GC1_q_b[6]_PORT_B_data_out_reg = DFFE(GC1_q_b[6]_PORT_B_data_out, GC1_q_b[6]_clock_1, , , );
GC1_q_b[6] = GC1_q_b[6]_PORT_B_data_out_reg[0];


--GC1_q_b[6] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[6]_PORT_A_data_in = ZB1_o_RamData[6];
GC1_q_b[6]_PORT_A_data_in_reg = DFFE(GC1_q_b[6]_PORT_A_data_in, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[6]_PORT_A_address_reg = DFFE(GC1_q_b[6]_PORT_A_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[6]_PORT_B_address_reg = DFFE(GC1_q_b[6]_PORT_B_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[6]_PORT_A_write_enable_reg = DFFE(GC1_q_b[6]_PORT_A_write_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_read_enable = B1L0;
GC1_q_b[6]_PORT_B_read_enable_reg = DFFE(GC1_q_b[6]_PORT_B_read_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[6]_PORT_A_byte_mask, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_clock_0 = !CLK_25MHz2;
GC1_q_b[6]_clock_1 = !CLK_25MHz2;
GC1_q_b[6]_PORT_B_data_out = MEMORY(GC1_q_b[6]_PORT_A_data_in_reg, , GC1_q_b[6]_PORT_A_address_reg, GC1_q_b[6]_PORT_B_address_reg, GC1_q_b[6]_PORT_A_write_enable_reg, GC1_q_b[6]_PORT_B_read_enable_reg, GC1_q_b[6]_PORT_A_byte_mask_reg, , GC1_q_b[6]_clock_0, GC1_q_b[6]_clock_1, , , , );
GC1_q_b[6]_PORT_B_data_out_reg = DFFE(GC1_q_b[6]_PORT_B_data_out, GC1_q_b[6]_clock_1, , , );
GC1_q_b[6] = GC1_q_b[6]_PORT_B_data_out_reg[0];


--GC1_q_b[6] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[6]_PORT_A_data_in = ZB1_o_RamData[6];
GC1_q_b[6]_PORT_A_data_in_reg = DFFE(GC1_q_b[6]_PORT_A_data_in, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[6]_PORT_A_address_reg = DFFE(GC1_q_b[6]_PORT_A_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[6]_PORT_B_address_reg = DFFE(GC1_q_b[6]_PORT_B_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[6]_PORT_A_write_enable_reg = DFFE(GC1_q_b[6]_PORT_A_write_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_read_enable = B1L0;
GC1_q_b[6]_PORT_B_read_enable_reg = DFFE(GC1_q_b[6]_PORT_B_read_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[6]_PORT_A_byte_mask, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_clock_0 = !CLK_25MHz2;
GC1_q_b[6]_clock_1 = !CLK_25MHz2;
GC1_q_b[6]_PORT_B_data_out = MEMORY(GC1_q_b[6]_PORT_A_data_in_reg, , GC1_q_b[6]_PORT_A_address_reg, GC1_q_b[6]_PORT_B_address_reg, GC1_q_b[6]_PORT_A_write_enable_reg, GC1_q_b[6]_PORT_B_read_enable_reg, GC1_q_b[6]_PORT_A_byte_mask_reg, , GC1_q_b[6]_clock_0, GC1_q_b[6]_clock_1, , , , );
GC1_q_b[6]_PORT_B_data_out_reg = DFFE(GC1_q_b[6]_PORT_B_data_out, GC1_q_b[6]_clock_1, , , );
GC1_q_b[6] = GC1_q_b[6]_PORT_B_data_out_reg[0];


--XB1_r_TxTail[6] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[6]
XB1_r_TxTail[6] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[6] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[6]
XB1_r_TxTail[6] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[6] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[6]
XB1_r_TxTail[6] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[6] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[6]
ZB1_r_RxHead[6] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[6] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[6]
ZB1_r_RxHead[6] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[6] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[6]
ZB1_r_RxHead[6] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[6] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[6]
ZB1_r_RxHead[6] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[6] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[6]
XB1_r_TxTail[6] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[6] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[6]
XB1_r_TxTail[6] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[6] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[6]
ZB1_r_RxHead[6] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--LC1_q_b[7] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[7]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[7];
LC1_q_b[7]_PORT_A_data_in_reg = DFFE(LC1_q_b[7]_PORT_A_data_in, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[7]_PORT_A_address_reg = DFFE(LC1_q_b[7]_PORT_A_address, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[7]_PORT_B_address_reg = DFFE(LC1_q_b[7]_PORT_B_address, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[7]_PORT_A_write_enable_reg = DFFE(LC1_q_b[7]_PORT_A_write_enable, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_B_read_enable = VCC;
LC1_q_b[7]_PORT_B_read_enable_reg = DFFE(LC1_q_b[7]_PORT_B_read_enable, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7]_PORT_A_byte_mask = A1L0;
LC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[7]_PORT_A_byte_mask, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_clock_0 = !CLK_25MHz2;
LC1_q_b[7]_clock_1 = !CLK_25MHz2;
LC1_q_b[7]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[7]_clock_enable_1 = inst146;
LC1_q_b[7]_PORT_B_data_out = MEMORY(LC1_q_b[7]_PORT_A_data_in_reg, , LC1_q_b[7]_PORT_A_address_reg, LC1_q_b[7]_PORT_B_address_reg, LC1_q_b[7]_PORT_A_write_enable_reg, LC1_q_b[7]_PORT_B_read_enable_reg, LC1_q_b[7]_PORT_A_byte_mask_reg, , LC1_q_b[7]_clock_0, LC1_q_b[7]_clock_1, LC1_q_b[7]_clock_enable_0, LC1_q_b[7]_clock_enable_1, , );
LC1_q_b[7]_PORT_B_data_out_reg = DFFE(LC1_q_b[7]_PORT_B_data_out, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7] = LC1_q_b[7]_PORT_B_data_out_reg[0];


--LC1_q_b[7] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[7]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[7];
LC1_q_b[7]_PORT_A_data_in_reg = DFFE(LC1_q_b[7]_PORT_A_data_in, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[7]_PORT_A_address_reg = DFFE(LC1_q_b[7]_PORT_A_address, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[7]_PORT_B_address_reg = DFFE(LC1_q_b[7]_PORT_B_address, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[7]_PORT_A_write_enable_reg = DFFE(LC1_q_b[7]_PORT_A_write_enable, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_B_read_enable = VCC;
LC1_q_b[7]_PORT_B_read_enable_reg = DFFE(LC1_q_b[7]_PORT_B_read_enable, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7]_PORT_A_byte_mask = A1L0;
LC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[7]_PORT_A_byte_mask, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_clock_0 = !CLK_25MHz2;
LC1_q_b[7]_clock_1 = !CLK_25MHz2;
LC1_q_b[7]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[7]_clock_enable_1 = inst80;
LC1_q_b[7]_PORT_B_data_out = MEMORY(LC1_q_b[7]_PORT_A_data_in_reg, , LC1_q_b[7]_PORT_A_address_reg, LC1_q_b[7]_PORT_B_address_reg, LC1_q_b[7]_PORT_A_write_enable_reg, LC1_q_b[7]_PORT_B_read_enable_reg, LC1_q_b[7]_PORT_A_byte_mask_reg, , LC1_q_b[7]_clock_0, LC1_q_b[7]_clock_1, LC1_q_b[7]_clock_enable_0, LC1_q_b[7]_clock_enable_1, , );
LC1_q_b[7]_PORT_B_data_out_reg = DFFE(LC1_q_b[7]_PORT_B_data_out, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7] = LC1_q_b[7]_PORT_B_data_out_reg[0];


--LC1_q_b[7] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[7]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[7];
LC1_q_b[7]_PORT_A_data_in_reg = DFFE(LC1_q_b[7]_PORT_A_data_in, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[7]_PORT_A_address_reg = DFFE(LC1_q_b[7]_PORT_A_address, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[7]_PORT_B_address_reg = DFFE(LC1_q_b[7]_PORT_B_address, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[7]_PORT_A_write_enable_reg = DFFE(LC1_q_b[7]_PORT_A_write_enable, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_B_read_enable = VCC;
LC1_q_b[7]_PORT_B_read_enable_reg = DFFE(LC1_q_b[7]_PORT_B_read_enable, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7]_PORT_A_byte_mask = A1L0;
LC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[7]_PORT_A_byte_mask, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_clock_0 = !CLK_25MHz2;
LC1_q_b[7]_clock_1 = !CLK_25MHz2;
LC1_q_b[7]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[7]_clock_enable_1 = inst182;
LC1_q_b[7]_PORT_B_data_out = MEMORY(LC1_q_b[7]_PORT_A_data_in_reg, , LC1_q_b[7]_PORT_A_address_reg, LC1_q_b[7]_PORT_B_address_reg, LC1_q_b[7]_PORT_A_write_enable_reg, LC1_q_b[7]_PORT_B_read_enable_reg, LC1_q_b[7]_PORT_A_byte_mask_reg, , LC1_q_b[7]_clock_0, LC1_q_b[7]_clock_1, LC1_q_b[7]_clock_enable_0, LC1_q_b[7]_clock_enable_1, , );
LC1_q_b[7]_PORT_B_data_out_reg = DFFE(LC1_q_b[7]_PORT_B_data_out, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7] = LC1_q_b[7]_PORT_B_data_out_reg[0];


--LC1_q_b[7] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[7]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[7];
LC1_q_b[7]_PORT_A_data_in_reg = DFFE(LC1_q_b[7]_PORT_A_data_in, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[7]_PORT_A_address_reg = DFFE(LC1_q_b[7]_PORT_A_address, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[7]_PORT_B_address_reg = DFFE(LC1_q_b[7]_PORT_B_address, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[7]_PORT_A_write_enable_reg = DFFE(LC1_q_b[7]_PORT_A_write_enable, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_PORT_B_read_enable = VCC;
LC1_q_b[7]_PORT_B_read_enable_reg = DFFE(LC1_q_b[7]_PORT_B_read_enable, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7]_PORT_A_byte_mask = A1L0;
LC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[7]_PORT_A_byte_mask, LC1_q_b[7]_clock_0, , , LC1_q_b[7]_clock_enable_0);
LC1_q_b[7]_clock_0 = !CLK_25MHz2;
LC1_q_b[7]_clock_1 = !CLK_25MHz2;
LC1_q_b[7]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[7]_clock_enable_1 = inst154;
LC1_q_b[7]_PORT_B_data_out = MEMORY(LC1_q_b[7]_PORT_A_data_in_reg, , LC1_q_b[7]_PORT_A_address_reg, LC1_q_b[7]_PORT_B_address_reg, LC1_q_b[7]_PORT_A_write_enable_reg, LC1_q_b[7]_PORT_B_read_enable_reg, LC1_q_b[7]_PORT_A_byte_mask_reg, , LC1_q_b[7]_clock_0, LC1_q_b[7]_clock_1, LC1_q_b[7]_clock_enable_0, LC1_q_b[7]_clock_enable_1, , );
LC1_q_b[7]_PORT_B_data_out_reg = DFFE(LC1_q_b[7]_PORT_B_data_out, LC1_q_b[7]_clock_1, , , LC1_q_b[7]_clock_enable_1);
LC1_q_b[7] = LC1_q_b[7]_PORT_B_data_out_reg[0];


--GC1_q_b[7] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[7]_PORT_A_data_in = ZB1_o_RamData[7];
GC1_q_b[7]_PORT_A_data_in_reg = DFFE(GC1_q_b[7]_PORT_A_data_in, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[7]_PORT_A_address_reg = DFFE(GC1_q_b[7]_PORT_A_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[7]_PORT_B_address_reg = DFFE(GC1_q_b[7]_PORT_B_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[7]_PORT_A_write_enable_reg = DFFE(GC1_q_b[7]_PORT_A_write_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_read_enable = B1L0;
GC1_q_b[7]_PORT_B_read_enable_reg = DFFE(GC1_q_b[7]_PORT_B_read_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[7]_PORT_A_byte_mask, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_clock_0 = !CLK_25MHz2;
GC1_q_b[7]_clock_1 = !CLK_25MHz2;
GC1_q_b[7]_PORT_B_data_out = MEMORY(GC1_q_b[7]_PORT_A_data_in_reg, , GC1_q_b[7]_PORT_A_address_reg, GC1_q_b[7]_PORT_B_address_reg, GC1_q_b[7]_PORT_A_write_enable_reg, GC1_q_b[7]_PORT_B_read_enable_reg, GC1_q_b[7]_PORT_A_byte_mask_reg, , GC1_q_b[7]_clock_0, GC1_q_b[7]_clock_1, , , , );
GC1_q_b[7]_PORT_B_data_out_reg = DFFE(GC1_q_b[7]_PORT_B_data_out, GC1_q_b[7]_clock_1, , , );
GC1_q_b[7] = GC1_q_b[7]_PORT_B_data_out_reg[0];


--GC1_q_b[7] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[7]_PORT_A_data_in = ZB1_o_RamData[7];
GC1_q_b[7]_PORT_A_data_in_reg = DFFE(GC1_q_b[7]_PORT_A_data_in, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[7]_PORT_A_address_reg = DFFE(GC1_q_b[7]_PORT_A_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[7]_PORT_B_address_reg = DFFE(GC1_q_b[7]_PORT_B_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[7]_PORT_A_write_enable_reg = DFFE(GC1_q_b[7]_PORT_A_write_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_read_enable = B1L0;
GC1_q_b[7]_PORT_B_read_enable_reg = DFFE(GC1_q_b[7]_PORT_B_read_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[7]_PORT_A_byte_mask, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_clock_0 = !CLK_25MHz2;
GC1_q_b[7]_clock_1 = !CLK_25MHz2;
GC1_q_b[7]_PORT_B_data_out = MEMORY(GC1_q_b[7]_PORT_A_data_in_reg, , GC1_q_b[7]_PORT_A_address_reg, GC1_q_b[7]_PORT_B_address_reg, GC1_q_b[7]_PORT_A_write_enable_reg, GC1_q_b[7]_PORT_B_read_enable_reg, GC1_q_b[7]_PORT_A_byte_mask_reg, , GC1_q_b[7]_clock_0, GC1_q_b[7]_clock_1, , , , );
GC1_q_b[7]_PORT_B_data_out_reg = DFFE(GC1_q_b[7]_PORT_B_data_out, GC1_q_b[7]_clock_1, , , );
GC1_q_b[7] = GC1_q_b[7]_PORT_B_data_out_reg[0];


--GC1_q_b[7] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[7]_PORT_A_data_in = ZB1_o_RamData[7];
GC1_q_b[7]_PORT_A_data_in_reg = DFFE(GC1_q_b[7]_PORT_A_data_in, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[7]_PORT_A_address_reg = DFFE(GC1_q_b[7]_PORT_A_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[7]_PORT_B_address_reg = DFFE(GC1_q_b[7]_PORT_B_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[7]_PORT_A_write_enable_reg = DFFE(GC1_q_b[7]_PORT_A_write_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_read_enable = B1L0;
GC1_q_b[7]_PORT_B_read_enable_reg = DFFE(GC1_q_b[7]_PORT_B_read_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[7]_PORT_A_byte_mask, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_clock_0 = !CLK_25MHz2;
GC1_q_b[7]_clock_1 = !CLK_25MHz2;
GC1_q_b[7]_PORT_B_data_out = MEMORY(GC1_q_b[7]_PORT_A_data_in_reg, , GC1_q_b[7]_PORT_A_address_reg, GC1_q_b[7]_PORT_B_address_reg, GC1_q_b[7]_PORT_A_write_enable_reg, GC1_q_b[7]_PORT_B_read_enable_reg, GC1_q_b[7]_PORT_A_byte_mask_reg, , GC1_q_b[7]_clock_0, GC1_q_b[7]_clock_1, , , , );
GC1_q_b[7]_PORT_B_data_out_reg = DFFE(GC1_q_b[7]_PORT_B_data_out, GC1_q_b[7]_clock_1, , , );
GC1_q_b[7] = GC1_q_b[7]_PORT_B_data_out_reg[0];


--GC1_q_b[7] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[7]_PORT_A_data_in = ZB1_o_RamData[7];
GC1_q_b[7]_PORT_A_data_in_reg = DFFE(GC1_q_b[7]_PORT_A_data_in, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[7]_PORT_A_address_reg = DFFE(GC1_q_b[7]_PORT_A_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[7]_PORT_B_address_reg = DFFE(GC1_q_b[7]_PORT_B_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[7]_PORT_A_write_enable_reg = DFFE(GC1_q_b[7]_PORT_A_write_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_read_enable = B1L0;
GC1_q_b[7]_PORT_B_read_enable_reg = DFFE(GC1_q_b[7]_PORT_B_read_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[7]_PORT_A_byte_mask, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_clock_0 = !CLK_25MHz2;
GC1_q_b[7]_clock_1 = !CLK_25MHz2;
GC1_q_b[7]_PORT_B_data_out = MEMORY(GC1_q_b[7]_PORT_A_data_in_reg, , GC1_q_b[7]_PORT_A_address_reg, GC1_q_b[7]_PORT_B_address_reg, GC1_q_b[7]_PORT_A_write_enable_reg, GC1_q_b[7]_PORT_B_read_enable_reg, GC1_q_b[7]_PORT_A_byte_mask_reg, , GC1_q_b[7]_clock_0, GC1_q_b[7]_clock_1, , , , );
GC1_q_b[7]_PORT_B_data_out_reg = DFFE(GC1_q_b[7]_PORT_B_data_out, GC1_q_b[7]_clock_1, , , );
GC1_q_b[7] = GC1_q_b[7]_PORT_B_data_out_reg[0];


--GC1_q_b[7] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[7]_PORT_A_data_in = ZB1_o_RamData[7];
GC1_q_b[7]_PORT_A_data_in_reg = DFFE(GC1_q_b[7]_PORT_A_data_in, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[7]_PORT_A_address_reg = DFFE(GC1_q_b[7]_PORT_A_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[7]_PORT_B_address_reg = DFFE(GC1_q_b[7]_PORT_B_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[7]_PORT_A_write_enable_reg = DFFE(GC1_q_b[7]_PORT_A_write_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_read_enable = B1L0;
GC1_q_b[7]_PORT_B_read_enable_reg = DFFE(GC1_q_b[7]_PORT_B_read_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_byte_mask = ZB1_o_ByteSel[0];
GC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[7]_PORT_A_byte_mask, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_clock_0 = !CLK_25MHz2;
GC1_q_b[7]_clock_1 = !CLK_25MHz2;
GC1_q_b[7]_PORT_B_data_out = MEMORY(GC1_q_b[7]_PORT_A_data_in_reg, , GC1_q_b[7]_PORT_A_address_reg, GC1_q_b[7]_PORT_B_address_reg, GC1_q_b[7]_PORT_A_write_enable_reg, GC1_q_b[7]_PORT_B_read_enable_reg, GC1_q_b[7]_PORT_A_byte_mask_reg, , GC1_q_b[7]_clock_0, GC1_q_b[7]_clock_1, , , , );
GC1_q_b[7]_PORT_B_data_out_reg = DFFE(GC1_q_b[7]_PORT_B_data_out, GC1_q_b[7]_clock_1, , , );
GC1_q_b[7] = GC1_q_b[7]_PORT_B_data_out_reg[0];


--XB1_r_TxTail[7] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[7]
XB1_r_TxTail[7] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[7] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[7]
XB1_r_TxTail[7] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[7] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[7]
XB1_r_TxTail[7] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[7] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[7]
ZB1_r_RxHead[7] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[7] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[7]
ZB1_r_RxHead[7] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[7] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[7]
ZB1_r_RxHead[7] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[7] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[7]
ZB1_r_RxHead[7] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[7] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[7]
XB1_r_TxTail[7] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[7] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[7]
XB1_r_TxTail[7] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[7] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[7]
ZB1_r_RxHead[7] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[8] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[8]
XB1_r_TxTail[8] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[8] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[8]
XB1_r_TxTail[8] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[8] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[8]
XB1_r_TxTail[8] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[8] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[8]
ZB1_r_RxHead[8] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[8] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[8]
ZB1_r_RxHead[8] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[8] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[8]
ZB1_r_RxHead[8] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[8] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[8]
ZB1_r_RxHead[8] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[8] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[8]
XB1_r_TxTail[8] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[8] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[8]
XB1_r_TxTail[8] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[8] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[8]
ZB1_r_RxHead[8] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--LC1_q_b[8] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[8]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[8];
LC1_q_b[8]_PORT_A_data_in_reg = DFFE(LC1_q_b[8]_PORT_A_data_in, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[8]_PORT_A_address_reg = DFFE(LC1_q_b[8]_PORT_A_address, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[8]_PORT_B_address_reg = DFFE(LC1_q_b[8]_PORT_B_address, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[8]_PORT_A_write_enable_reg = DFFE(LC1_q_b[8]_PORT_A_write_enable, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_B_read_enable = VCC;
LC1_q_b[8]_PORT_B_read_enable_reg = DFFE(LC1_q_b[8]_PORT_B_read_enable, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8]_PORT_A_byte_mask = A1L0;
LC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[8]_PORT_A_byte_mask, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_clock_0 = !CLK_25MHz2;
LC1_q_b[8]_clock_1 = !CLK_25MHz2;
LC1_q_b[8]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[8]_clock_enable_1 = inst146;
LC1_q_b[8]_PORT_B_data_out = MEMORY(LC1_q_b[8]_PORT_A_data_in_reg, , LC1_q_b[8]_PORT_A_address_reg, LC1_q_b[8]_PORT_B_address_reg, LC1_q_b[8]_PORT_A_write_enable_reg, LC1_q_b[8]_PORT_B_read_enable_reg, LC1_q_b[8]_PORT_A_byte_mask_reg, , LC1_q_b[8]_clock_0, LC1_q_b[8]_clock_1, LC1_q_b[8]_clock_enable_0, LC1_q_b[8]_clock_enable_1, , );
LC1_q_b[8]_PORT_B_data_out_reg = DFFE(LC1_q_b[8]_PORT_B_data_out, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8] = LC1_q_b[8]_PORT_B_data_out_reg[0];


--LC1_q_b[8] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[8]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[8];
LC1_q_b[8]_PORT_A_data_in_reg = DFFE(LC1_q_b[8]_PORT_A_data_in, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[8]_PORT_A_address_reg = DFFE(LC1_q_b[8]_PORT_A_address, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[8]_PORT_B_address_reg = DFFE(LC1_q_b[8]_PORT_B_address, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[8]_PORT_A_write_enable_reg = DFFE(LC1_q_b[8]_PORT_A_write_enable, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_B_read_enable = VCC;
LC1_q_b[8]_PORT_B_read_enable_reg = DFFE(LC1_q_b[8]_PORT_B_read_enable, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8]_PORT_A_byte_mask = A1L0;
LC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[8]_PORT_A_byte_mask, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_clock_0 = !CLK_25MHz2;
LC1_q_b[8]_clock_1 = !CLK_25MHz2;
LC1_q_b[8]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[8]_clock_enable_1 = inst80;
LC1_q_b[8]_PORT_B_data_out = MEMORY(LC1_q_b[8]_PORT_A_data_in_reg, , LC1_q_b[8]_PORT_A_address_reg, LC1_q_b[8]_PORT_B_address_reg, LC1_q_b[8]_PORT_A_write_enable_reg, LC1_q_b[8]_PORT_B_read_enable_reg, LC1_q_b[8]_PORT_A_byte_mask_reg, , LC1_q_b[8]_clock_0, LC1_q_b[8]_clock_1, LC1_q_b[8]_clock_enable_0, LC1_q_b[8]_clock_enable_1, , );
LC1_q_b[8]_PORT_B_data_out_reg = DFFE(LC1_q_b[8]_PORT_B_data_out, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8] = LC1_q_b[8]_PORT_B_data_out_reg[0];


--LC1_q_b[8] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[8]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[8];
LC1_q_b[8]_PORT_A_data_in_reg = DFFE(LC1_q_b[8]_PORT_A_data_in, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[8]_PORT_A_address_reg = DFFE(LC1_q_b[8]_PORT_A_address, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[8]_PORT_B_address_reg = DFFE(LC1_q_b[8]_PORT_B_address, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[8]_PORT_A_write_enable_reg = DFFE(LC1_q_b[8]_PORT_A_write_enable, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_B_read_enable = VCC;
LC1_q_b[8]_PORT_B_read_enable_reg = DFFE(LC1_q_b[8]_PORT_B_read_enable, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8]_PORT_A_byte_mask = A1L0;
LC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[8]_PORT_A_byte_mask, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_clock_0 = !CLK_25MHz2;
LC1_q_b[8]_clock_1 = !CLK_25MHz2;
LC1_q_b[8]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[8]_clock_enable_1 = inst182;
LC1_q_b[8]_PORT_B_data_out = MEMORY(LC1_q_b[8]_PORT_A_data_in_reg, , LC1_q_b[8]_PORT_A_address_reg, LC1_q_b[8]_PORT_B_address_reg, LC1_q_b[8]_PORT_A_write_enable_reg, LC1_q_b[8]_PORT_B_read_enable_reg, LC1_q_b[8]_PORT_A_byte_mask_reg, , LC1_q_b[8]_clock_0, LC1_q_b[8]_clock_1, LC1_q_b[8]_clock_enable_0, LC1_q_b[8]_clock_enable_1, , );
LC1_q_b[8]_PORT_B_data_out_reg = DFFE(LC1_q_b[8]_PORT_B_data_out, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8] = LC1_q_b[8]_PORT_B_data_out_reg[0];


--LC1_q_b[8] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[8]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[8];
LC1_q_b[8]_PORT_A_data_in_reg = DFFE(LC1_q_b[8]_PORT_A_data_in, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[8]_PORT_A_address_reg = DFFE(LC1_q_b[8]_PORT_A_address, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[8]_PORT_B_address_reg = DFFE(LC1_q_b[8]_PORT_B_address, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[8]_PORT_A_write_enable_reg = DFFE(LC1_q_b[8]_PORT_A_write_enable, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_PORT_B_read_enable = VCC;
LC1_q_b[8]_PORT_B_read_enable_reg = DFFE(LC1_q_b[8]_PORT_B_read_enable, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8]_PORT_A_byte_mask = A1L0;
LC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[8]_PORT_A_byte_mask, LC1_q_b[8]_clock_0, , , LC1_q_b[8]_clock_enable_0);
LC1_q_b[8]_clock_0 = !CLK_25MHz2;
LC1_q_b[8]_clock_1 = !CLK_25MHz2;
LC1_q_b[8]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[8]_clock_enable_1 = inst154;
LC1_q_b[8]_PORT_B_data_out = MEMORY(LC1_q_b[8]_PORT_A_data_in_reg, , LC1_q_b[8]_PORT_A_address_reg, LC1_q_b[8]_PORT_B_address_reg, LC1_q_b[8]_PORT_A_write_enable_reg, LC1_q_b[8]_PORT_B_read_enable_reg, LC1_q_b[8]_PORT_A_byte_mask_reg, , LC1_q_b[8]_clock_0, LC1_q_b[8]_clock_1, LC1_q_b[8]_clock_enable_0, LC1_q_b[8]_clock_enable_1, , );
LC1_q_b[8]_PORT_B_data_out_reg = DFFE(LC1_q_b[8]_PORT_B_data_out, LC1_q_b[8]_clock_1, , , LC1_q_b[8]_clock_enable_1);
LC1_q_b[8] = LC1_q_b[8]_PORT_B_data_out_reg[0];


--GC1_q_b[8] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[8]_PORT_A_data_in = ZB1_o_RamData[8];
GC1_q_b[8]_PORT_A_data_in_reg = DFFE(GC1_q_b[8]_PORT_A_data_in, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[8]_PORT_A_address_reg = DFFE(GC1_q_b[8]_PORT_A_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[8]_PORT_B_address_reg = DFFE(GC1_q_b[8]_PORT_B_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[8]_PORT_A_write_enable_reg = DFFE(GC1_q_b[8]_PORT_A_write_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_read_enable = B1L0;
GC1_q_b[8]_PORT_B_read_enable_reg = DFFE(GC1_q_b[8]_PORT_B_read_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[8]_PORT_A_byte_mask, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_clock_0 = !CLK_25MHz2;
GC1_q_b[8]_clock_1 = !CLK_25MHz2;
GC1_q_b[8]_PORT_B_data_out = MEMORY(GC1_q_b[8]_PORT_A_data_in_reg, , GC1_q_b[8]_PORT_A_address_reg, GC1_q_b[8]_PORT_B_address_reg, GC1_q_b[8]_PORT_A_write_enable_reg, GC1_q_b[8]_PORT_B_read_enable_reg, GC1_q_b[8]_PORT_A_byte_mask_reg, , GC1_q_b[8]_clock_0, GC1_q_b[8]_clock_1, , , , );
GC1_q_b[8]_PORT_B_data_out_reg = DFFE(GC1_q_b[8]_PORT_B_data_out, GC1_q_b[8]_clock_1, , , );
GC1_q_b[8] = GC1_q_b[8]_PORT_B_data_out_reg[0];


--GC1_q_b[8] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[8]_PORT_A_data_in = ZB1_o_RamData[8];
GC1_q_b[8]_PORT_A_data_in_reg = DFFE(GC1_q_b[8]_PORT_A_data_in, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[8]_PORT_A_address_reg = DFFE(GC1_q_b[8]_PORT_A_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[8]_PORT_B_address_reg = DFFE(GC1_q_b[8]_PORT_B_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[8]_PORT_A_write_enable_reg = DFFE(GC1_q_b[8]_PORT_A_write_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_read_enable = B1L0;
GC1_q_b[8]_PORT_B_read_enable_reg = DFFE(GC1_q_b[8]_PORT_B_read_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[8]_PORT_A_byte_mask, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_clock_0 = !CLK_25MHz2;
GC1_q_b[8]_clock_1 = !CLK_25MHz2;
GC1_q_b[8]_PORT_B_data_out = MEMORY(GC1_q_b[8]_PORT_A_data_in_reg, , GC1_q_b[8]_PORT_A_address_reg, GC1_q_b[8]_PORT_B_address_reg, GC1_q_b[8]_PORT_A_write_enable_reg, GC1_q_b[8]_PORT_B_read_enable_reg, GC1_q_b[8]_PORT_A_byte_mask_reg, , GC1_q_b[8]_clock_0, GC1_q_b[8]_clock_1, , , , );
GC1_q_b[8]_PORT_B_data_out_reg = DFFE(GC1_q_b[8]_PORT_B_data_out, GC1_q_b[8]_clock_1, , , );
GC1_q_b[8] = GC1_q_b[8]_PORT_B_data_out_reg[0];


--GC1_q_b[8] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[8]_PORT_A_data_in = ZB1_o_RamData[8];
GC1_q_b[8]_PORT_A_data_in_reg = DFFE(GC1_q_b[8]_PORT_A_data_in, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[8]_PORT_A_address_reg = DFFE(GC1_q_b[8]_PORT_A_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[8]_PORT_B_address_reg = DFFE(GC1_q_b[8]_PORT_B_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[8]_PORT_A_write_enable_reg = DFFE(GC1_q_b[8]_PORT_A_write_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_read_enable = B1L0;
GC1_q_b[8]_PORT_B_read_enable_reg = DFFE(GC1_q_b[8]_PORT_B_read_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[8]_PORT_A_byte_mask, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_clock_0 = !CLK_25MHz2;
GC1_q_b[8]_clock_1 = !CLK_25MHz2;
GC1_q_b[8]_PORT_B_data_out = MEMORY(GC1_q_b[8]_PORT_A_data_in_reg, , GC1_q_b[8]_PORT_A_address_reg, GC1_q_b[8]_PORT_B_address_reg, GC1_q_b[8]_PORT_A_write_enable_reg, GC1_q_b[8]_PORT_B_read_enable_reg, GC1_q_b[8]_PORT_A_byte_mask_reg, , GC1_q_b[8]_clock_0, GC1_q_b[8]_clock_1, , , , );
GC1_q_b[8]_PORT_B_data_out_reg = DFFE(GC1_q_b[8]_PORT_B_data_out, GC1_q_b[8]_clock_1, , , );
GC1_q_b[8] = GC1_q_b[8]_PORT_B_data_out_reg[0];


--GC1_q_b[8] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[8]_PORT_A_data_in = ZB1_o_RamData[8];
GC1_q_b[8]_PORT_A_data_in_reg = DFFE(GC1_q_b[8]_PORT_A_data_in, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[8]_PORT_A_address_reg = DFFE(GC1_q_b[8]_PORT_A_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[8]_PORT_B_address_reg = DFFE(GC1_q_b[8]_PORT_B_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[8]_PORT_A_write_enable_reg = DFFE(GC1_q_b[8]_PORT_A_write_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_read_enable = B1L0;
GC1_q_b[8]_PORT_B_read_enable_reg = DFFE(GC1_q_b[8]_PORT_B_read_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[8]_PORT_A_byte_mask, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_clock_0 = !CLK_25MHz2;
GC1_q_b[8]_clock_1 = !CLK_25MHz2;
GC1_q_b[8]_PORT_B_data_out = MEMORY(GC1_q_b[8]_PORT_A_data_in_reg, , GC1_q_b[8]_PORT_A_address_reg, GC1_q_b[8]_PORT_B_address_reg, GC1_q_b[8]_PORT_A_write_enable_reg, GC1_q_b[8]_PORT_B_read_enable_reg, GC1_q_b[8]_PORT_A_byte_mask_reg, , GC1_q_b[8]_clock_0, GC1_q_b[8]_clock_1, , , , );
GC1_q_b[8]_PORT_B_data_out_reg = DFFE(GC1_q_b[8]_PORT_B_data_out, GC1_q_b[8]_clock_1, , , );
GC1_q_b[8] = GC1_q_b[8]_PORT_B_data_out_reg[0];


--GC1_q_b[8] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[8]_PORT_A_data_in = ZB1_o_RamData[8];
GC1_q_b[8]_PORT_A_data_in_reg = DFFE(GC1_q_b[8]_PORT_A_data_in, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[8]_PORT_A_address_reg = DFFE(GC1_q_b[8]_PORT_A_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[8]_PORT_B_address_reg = DFFE(GC1_q_b[8]_PORT_B_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[8]_PORT_A_write_enable_reg = DFFE(GC1_q_b[8]_PORT_A_write_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_read_enable = B1L0;
GC1_q_b[8]_PORT_B_read_enable_reg = DFFE(GC1_q_b[8]_PORT_B_read_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[8]_PORT_A_byte_mask, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_clock_0 = !CLK_25MHz2;
GC1_q_b[8]_clock_1 = !CLK_25MHz2;
GC1_q_b[8]_PORT_B_data_out = MEMORY(GC1_q_b[8]_PORT_A_data_in_reg, , GC1_q_b[8]_PORT_A_address_reg, GC1_q_b[8]_PORT_B_address_reg, GC1_q_b[8]_PORT_A_write_enable_reg, GC1_q_b[8]_PORT_B_read_enable_reg, GC1_q_b[8]_PORT_A_byte_mask_reg, , GC1_q_b[8]_clock_0, GC1_q_b[8]_clock_1, , , , );
GC1_q_b[8]_PORT_B_data_out_reg = DFFE(GC1_q_b[8]_PORT_B_data_out, GC1_q_b[8]_clock_1, , , );
GC1_q_b[8] = GC1_q_b[8]_PORT_B_data_out_reg[0];


--LC1_q_b[9] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[9]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[9];
LC1_q_b[9]_PORT_A_data_in_reg = DFFE(LC1_q_b[9]_PORT_A_data_in, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[9]_PORT_A_address_reg = DFFE(LC1_q_b[9]_PORT_A_address, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[9]_PORT_B_address_reg = DFFE(LC1_q_b[9]_PORT_B_address, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[9]_PORT_A_write_enable_reg = DFFE(LC1_q_b[9]_PORT_A_write_enable, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_B_read_enable = VCC;
LC1_q_b[9]_PORT_B_read_enable_reg = DFFE(LC1_q_b[9]_PORT_B_read_enable, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9]_PORT_A_byte_mask = A1L0;
LC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[9]_PORT_A_byte_mask, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_clock_0 = !CLK_25MHz2;
LC1_q_b[9]_clock_1 = !CLK_25MHz2;
LC1_q_b[9]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[9]_clock_enable_1 = inst146;
LC1_q_b[9]_PORT_B_data_out = MEMORY(LC1_q_b[9]_PORT_A_data_in_reg, , LC1_q_b[9]_PORT_A_address_reg, LC1_q_b[9]_PORT_B_address_reg, LC1_q_b[9]_PORT_A_write_enable_reg, LC1_q_b[9]_PORT_B_read_enable_reg, LC1_q_b[9]_PORT_A_byte_mask_reg, , LC1_q_b[9]_clock_0, LC1_q_b[9]_clock_1, LC1_q_b[9]_clock_enable_0, LC1_q_b[9]_clock_enable_1, , );
LC1_q_b[9]_PORT_B_data_out_reg = DFFE(LC1_q_b[9]_PORT_B_data_out, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9] = LC1_q_b[9]_PORT_B_data_out_reg[0];


--LC1_q_b[9] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[9]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[9];
LC1_q_b[9]_PORT_A_data_in_reg = DFFE(LC1_q_b[9]_PORT_A_data_in, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[9]_PORT_A_address_reg = DFFE(LC1_q_b[9]_PORT_A_address, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[9]_PORT_B_address_reg = DFFE(LC1_q_b[9]_PORT_B_address, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[9]_PORT_A_write_enable_reg = DFFE(LC1_q_b[9]_PORT_A_write_enable, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_B_read_enable = VCC;
LC1_q_b[9]_PORT_B_read_enable_reg = DFFE(LC1_q_b[9]_PORT_B_read_enable, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9]_PORT_A_byte_mask = A1L0;
LC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[9]_PORT_A_byte_mask, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_clock_0 = !CLK_25MHz2;
LC1_q_b[9]_clock_1 = !CLK_25MHz2;
LC1_q_b[9]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[9]_clock_enable_1 = inst80;
LC1_q_b[9]_PORT_B_data_out = MEMORY(LC1_q_b[9]_PORT_A_data_in_reg, , LC1_q_b[9]_PORT_A_address_reg, LC1_q_b[9]_PORT_B_address_reg, LC1_q_b[9]_PORT_A_write_enable_reg, LC1_q_b[9]_PORT_B_read_enable_reg, LC1_q_b[9]_PORT_A_byte_mask_reg, , LC1_q_b[9]_clock_0, LC1_q_b[9]_clock_1, LC1_q_b[9]_clock_enable_0, LC1_q_b[9]_clock_enable_1, , );
LC1_q_b[9]_PORT_B_data_out_reg = DFFE(LC1_q_b[9]_PORT_B_data_out, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9] = LC1_q_b[9]_PORT_B_data_out_reg[0];


--LC1_q_b[9] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[9]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[9];
LC1_q_b[9]_PORT_A_data_in_reg = DFFE(LC1_q_b[9]_PORT_A_data_in, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[9]_PORT_A_address_reg = DFFE(LC1_q_b[9]_PORT_A_address, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[9]_PORT_B_address_reg = DFFE(LC1_q_b[9]_PORT_B_address, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[9]_PORT_A_write_enable_reg = DFFE(LC1_q_b[9]_PORT_A_write_enable, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_B_read_enable = VCC;
LC1_q_b[9]_PORT_B_read_enable_reg = DFFE(LC1_q_b[9]_PORT_B_read_enable, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9]_PORT_A_byte_mask = A1L0;
LC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[9]_PORT_A_byte_mask, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_clock_0 = !CLK_25MHz2;
LC1_q_b[9]_clock_1 = !CLK_25MHz2;
LC1_q_b[9]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[9]_clock_enable_1 = inst182;
LC1_q_b[9]_PORT_B_data_out = MEMORY(LC1_q_b[9]_PORT_A_data_in_reg, , LC1_q_b[9]_PORT_A_address_reg, LC1_q_b[9]_PORT_B_address_reg, LC1_q_b[9]_PORT_A_write_enable_reg, LC1_q_b[9]_PORT_B_read_enable_reg, LC1_q_b[9]_PORT_A_byte_mask_reg, , LC1_q_b[9]_clock_0, LC1_q_b[9]_clock_1, LC1_q_b[9]_clock_enable_0, LC1_q_b[9]_clock_enable_1, , );
LC1_q_b[9]_PORT_B_data_out_reg = DFFE(LC1_q_b[9]_PORT_B_data_out, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9] = LC1_q_b[9]_PORT_B_data_out_reg[0];


--LC1_q_b[9] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[9]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[9];
LC1_q_b[9]_PORT_A_data_in_reg = DFFE(LC1_q_b[9]_PORT_A_data_in, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[9]_PORT_A_address_reg = DFFE(LC1_q_b[9]_PORT_A_address, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[9]_PORT_B_address_reg = DFFE(LC1_q_b[9]_PORT_B_address, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[9]_PORT_A_write_enable_reg = DFFE(LC1_q_b[9]_PORT_A_write_enable, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_PORT_B_read_enable = VCC;
LC1_q_b[9]_PORT_B_read_enable_reg = DFFE(LC1_q_b[9]_PORT_B_read_enable, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9]_PORT_A_byte_mask = A1L0;
LC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[9]_PORT_A_byte_mask, LC1_q_b[9]_clock_0, , , LC1_q_b[9]_clock_enable_0);
LC1_q_b[9]_clock_0 = !CLK_25MHz2;
LC1_q_b[9]_clock_1 = !CLK_25MHz2;
LC1_q_b[9]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[9]_clock_enable_1 = inst154;
LC1_q_b[9]_PORT_B_data_out = MEMORY(LC1_q_b[9]_PORT_A_data_in_reg, , LC1_q_b[9]_PORT_A_address_reg, LC1_q_b[9]_PORT_B_address_reg, LC1_q_b[9]_PORT_A_write_enable_reg, LC1_q_b[9]_PORT_B_read_enable_reg, LC1_q_b[9]_PORT_A_byte_mask_reg, , LC1_q_b[9]_clock_0, LC1_q_b[9]_clock_1, LC1_q_b[9]_clock_enable_0, LC1_q_b[9]_clock_enable_1, , );
LC1_q_b[9]_PORT_B_data_out_reg = DFFE(LC1_q_b[9]_PORT_B_data_out, LC1_q_b[9]_clock_1, , , LC1_q_b[9]_clock_enable_1);
LC1_q_b[9] = LC1_q_b[9]_PORT_B_data_out_reg[0];


--GC1_q_b[9] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[9]_PORT_A_data_in = ZB1_o_RamData[9];
GC1_q_b[9]_PORT_A_data_in_reg = DFFE(GC1_q_b[9]_PORT_A_data_in, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[9]_PORT_A_address_reg = DFFE(GC1_q_b[9]_PORT_A_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[9]_PORT_B_address_reg = DFFE(GC1_q_b[9]_PORT_B_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[9]_PORT_A_write_enable_reg = DFFE(GC1_q_b[9]_PORT_A_write_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_read_enable = B1L0;
GC1_q_b[9]_PORT_B_read_enable_reg = DFFE(GC1_q_b[9]_PORT_B_read_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[9]_PORT_A_byte_mask, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_clock_0 = !CLK_25MHz2;
GC1_q_b[9]_clock_1 = !CLK_25MHz2;
GC1_q_b[9]_PORT_B_data_out = MEMORY(GC1_q_b[9]_PORT_A_data_in_reg, , GC1_q_b[9]_PORT_A_address_reg, GC1_q_b[9]_PORT_B_address_reg, GC1_q_b[9]_PORT_A_write_enable_reg, GC1_q_b[9]_PORT_B_read_enable_reg, GC1_q_b[9]_PORT_A_byte_mask_reg, , GC1_q_b[9]_clock_0, GC1_q_b[9]_clock_1, , , , );
GC1_q_b[9]_PORT_B_data_out_reg = DFFE(GC1_q_b[9]_PORT_B_data_out, GC1_q_b[9]_clock_1, , , );
GC1_q_b[9] = GC1_q_b[9]_PORT_B_data_out_reg[0];


--GC1_q_b[9] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[9]_PORT_A_data_in = ZB1_o_RamData[9];
GC1_q_b[9]_PORT_A_data_in_reg = DFFE(GC1_q_b[9]_PORT_A_data_in, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[9]_PORT_A_address_reg = DFFE(GC1_q_b[9]_PORT_A_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[9]_PORT_B_address_reg = DFFE(GC1_q_b[9]_PORT_B_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[9]_PORT_A_write_enable_reg = DFFE(GC1_q_b[9]_PORT_A_write_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_read_enable = B1L0;
GC1_q_b[9]_PORT_B_read_enable_reg = DFFE(GC1_q_b[9]_PORT_B_read_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[9]_PORT_A_byte_mask, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_clock_0 = !CLK_25MHz2;
GC1_q_b[9]_clock_1 = !CLK_25MHz2;
GC1_q_b[9]_PORT_B_data_out = MEMORY(GC1_q_b[9]_PORT_A_data_in_reg, , GC1_q_b[9]_PORT_A_address_reg, GC1_q_b[9]_PORT_B_address_reg, GC1_q_b[9]_PORT_A_write_enable_reg, GC1_q_b[9]_PORT_B_read_enable_reg, GC1_q_b[9]_PORT_A_byte_mask_reg, , GC1_q_b[9]_clock_0, GC1_q_b[9]_clock_1, , , , );
GC1_q_b[9]_PORT_B_data_out_reg = DFFE(GC1_q_b[9]_PORT_B_data_out, GC1_q_b[9]_clock_1, , , );
GC1_q_b[9] = GC1_q_b[9]_PORT_B_data_out_reg[0];


--GC1_q_b[9] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[9]_PORT_A_data_in = ZB1_o_RamData[9];
GC1_q_b[9]_PORT_A_data_in_reg = DFFE(GC1_q_b[9]_PORT_A_data_in, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[9]_PORT_A_address_reg = DFFE(GC1_q_b[9]_PORT_A_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[9]_PORT_B_address_reg = DFFE(GC1_q_b[9]_PORT_B_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[9]_PORT_A_write_enable_reg = DFFE(GC1_q_b[9]_PORT_A_write_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_read_enable = B1L0;
GC1_q_b[9]_PORT_B_read_enable_reg = DFFE(GC1_q_b[9]_PORT_B_read_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[9]_PORT_A_byte_mask, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_clock_0 = !CLK_25MHz2;
GC1_q_b[9]_clock_1 = !CLK_25MHz2;
GC1_q_b[9]_PORT_B_data_out = MEMORY(GC1_q_b[9]_PORT_A_data_in_reg, , GC1_q_b[9]_PORT_A_address_reg, GC1_q_b[9]_PORT_B_address_reg, GC1_q_b[9]_PORT_A_write_enable_reg, GC1_q_b[9]_PORT_B_read_enable_reg, GC1_q_b[9]_PORT_A_byte_mask_reg, , GC1_q_b[9]_clock_0, GC1_q_b[9]_clock_1, , , , );
GC1_q_b[9]_PORT_B_data_out_reg = DFFE(GC1_q_b[9]_PORT_B_data_out, GC1_q_b[9]_clock_1, , , );
GC1_q_b[9] = GC1_q_b[9]_PORT_B_data_out_reg[0];


--GC1_q_b[9] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[9]_PORT_A_data_in = ZB1_o_RamData[9];
GC1_q_b[9]_PORT_A_data_in_reg = DFFE(GC1_q_b[9]_PORT_A_data_in, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[9]_PORT_A_address_reg = DFFE(GC1_q_b[9]_PORT_A_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[9]_PORT_B_address_reg = DFFE(GC1_q_b[9]_PORT_B_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[9]_PORT_A_write_enable_reg = DFFE(GC1_q_b[9]_PORT_A_write_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_read_enable = B1L0;
GC1_q_b[9]_PORT_B_read_enable_reg = DFFE(GC1_q_b[9]_PORT_B_read_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[9]_PORT_A_byte_mask, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_clock_0 = !CLK_25MHz2;
GC1_q_b[9]_clock_1 = !CLK_25MHz2;
GC1_q_b[9]_PORT_B_data_out = MEMORY(GC1_q_b[9]_PORT_A_data_in_reg, , GC1_q_b[9]_PORT_A_address_reg, GC1_q_b[9]_PORT_B_address_reg, GC1_q_b[9]_PORT_A_write_enable_reg, GC1_q_b[9]_PORT_B_read_enable_reg, GC1_q_b[9]_PORT_A_byte_mask_reg, , GC1_q_b[9]_clock_0, GC1_q_b[9]_clock_1, , , , );
GC1_q_b[9]_PORT_B_data_out_reg = DFFE(GC1_q_b[9]_PORT_B_data_out, GC1_q_b[9]_clock_1, , , );
GC1_q_b[9] = GC1_q_b[9]_PORT_B_data_out_reg[0];


--XB1_r_TxTail[9] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[9]
XB1_r_TxTail[9] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[9] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[9]
XB1_r_TxTail[9] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[9] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[9]
XB1_r_TxTail[9] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[9] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[9]
ZB1_r_RxHead[9] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[9] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[9]
ZB1_r_RxHead[9] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[9] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[9]
ZB1_r_RxHead[9] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--GC1_q_b[9] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[9]_PORT_A_data_in = ZB1_o_RamData[9];
GC1_q_b[9]_PORT_A_data_in_reg = DFFE(GC1_q_b[9]_PORT_A_data_in, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[9]_PORT_A_address_reg = DFFE(GC1_q_b[9]_PORT_A_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[9]_PORT_B_address_reg = DFFE(GC1_q_b[9]_PORT_B_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[9]_PORT_A_write_enable_reg = DFFE(GC1_q_b[9]_PORT_A_write_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_read_enable = B1L0;
GC1_q_b[9]_PORT_B_read_enable_reg = DFFE(GC1_q_b[9]_PORT_B_read_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[9]_PORT_A_byte_mask, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_clock_0 = !CLK_25MHz2;
GC1_q_b[9]_clock_1 = !CLK_25MHz2;
GC1_q_b[9]_PORT_B_data_out = MEMORY(GC1_q_b[9]_PORT_A_data_in_reg, , GC1_q_b[9]_PORT_A_address_reg, GC1_q_b[9]_PORT_B_address_reg, GC1_q_b[9]_PORT_A_write_enable_reg, GC1_q_b[9]_PORT_B_read_enable_reg, GC1_q_b[9]_PORT_A_byte_mask_reg, , GC1_q_b[9]_clock_0, GC1_q_b[9]_clock_1, , , , );
GC1_q_b[9]_PORT_B_data_out_reg = DFFE(GC1_q_b[9]_PORT_B_data_out, GC1_q_b[9]_clock_1, , , );
GC1_q_b[9] = GC1_q_b[9]_PORT_B_data_out_reg[0];


--ZB1_r_RxHead[9] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[9]
ZB1_r_RxHead[9] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[9] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[9]
XB1_r_TxTail[9] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[9] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[9]
XB1_r_TxTail[9] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[9] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[9]
ZB1_r_RxHead[9] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[10] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[10]
XB1_r_TxTail[10] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[10] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[10]
XB1_r_TxTail[10] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--XB1_r_TxTail[10] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[10]
XB1_r_TxTail[10] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[10] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[10]
ZB1_r_RxHead[10] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[10] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[10]
ZB1_r_RxHead[10] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[10] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[10]
ZB1_r_RxHead[10] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--ZB1_r_RxHead[10] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[10]
ZB1_r_RxHead[10] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[10] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[10]
XB1_r_TxTail[10] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--ZB1_r_RxHead[10] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[10]
ZB1_r_RxHead[10] = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  , ZB1L0,  ,  , !ZB1_r_State);


--XB1_r_TxTail[10] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[10]
XB1_r_TxTail[10] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1L0, C1L0,  ,  , !XB1_r_State.s_Wait);


--LC1_q_b[10] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[10]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[10];
LC1_q_b[10]_PORT_A_data_in_reg = DFFE(LC1_q_b[10]_PORT_A_data_in, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[10]_PORT_A_address_reg = DFFE(LC1_q_b[10]_PORT_A_address, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[10]_PORT_B_address_reg = DFFE(LC1_q_b[10]_PORT_B_address, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[10]_PORT_A_write_enable_reg = DFFE(LC1_q_b[10]_PORT_A_write_enable, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_B_read_enable = VCC;
LC1_q_b[10]_PORT_B_read_enable_reg = DFFE(LC1_q_b[10]_PORT_B_read_enable, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10]_PORT_A_byte_mask = A1L0;
LC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[10]_PORT_A_byte_mask, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_clock_0 = !CLK_25MHz2;
LC1_q_b[10]_clock_1 = !CLK_25MHz2;
LC1_q_b[10]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[10]_clock_enable_1 = inst146;
LC1_q_b[10]_PORT_B_data_out = MEMORY(LC1_q_b[10]_PORT_A_data_in_reg, , LC1_q_b[10]_PORT_A_address_reg, LC1_q_b[10]_PORT_B_address_reg, LC1_q_b[10]_PORT_A_write_enable_reg, LC1_q_b[10]_PORT_B_read_enable_reg, LC1_q_b[10]_PORT_A_byte_mask_reg, , LC1_q_b[10]_clock_0, LC1_q_b[10]_clock_1, LC1_q_b[10]_clock_enable_0, LC1_q_b[10]_clock_enable_1, , );
LC1_q_b[10]_PORT_B_data_out_reg = DFFE(LC1_q_b[10]_PORT_B_data_out, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10] = LC1_q_b[10]_PORT_B_data_out_reg[0];


--LC1_q_b[10] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[10]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[10];
LC1_q_b[10]_PORT_A_data_in_reg = DFFE(LC1_q_b[10]_PORT_A_data_in, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[10]_PORT_A_address_reg = DFFE(LC1_q_b[10]_PORT_A_address, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[10]_PORT_B_address_reg = DFFE(LC1_q_b[10]_PORT_B_address, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[10]_PORT_A_write_enable_reg = DFFE(LC1_q_b[10]_PORT_A_write_enable, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_B_read_enable = VCC;
LC1_q_b[10]_PORT_B_read_enable_reg = DFFE(LC1_q_b[10]_PORT_B_read_enable, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10]_PORT_A_byte_mask = A1L0;
LC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[10]_PORT_A_byte_mask, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_clock_0 = !CLK_25MHz2;
LC1_q_b[10]_clock_1 = !CLK_25MHz2;
LC1_q_b[10]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[10]_clock_enable_1 = inst80;
LC1_q_b[10]_PORT_B_data_out = MEMORY(LC1_q_b[10]_PORT_A_data_in_reg, , LC1_q_b[10]_PORT_A_address_reg, LC1_q_b[10]_PORT_B_address_reg, LC1_q_b[10]_PORT_A_write_enable_reg, LC1_q_b[10]_PORT_B_read_enable_reg, LC1_q_b[10]_PORT_A_byte_mask_reg, , LC1_q_b[10]_clock_0, LC1_q_b[10]_clock_1, LC1_q_b[10]_clock_enable_0, LC1_q_b[10]_clock_enable_1, , );
LC1_q_b[10]_PORT_B_data_out_reg = DFFE(LC1_q_b[10]_PORT_B_data_out, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10] = LC1_q_b[10]_PORT_B_data_out_reg[0];


--LC1_q_b[10] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[10]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[10];
LC1_q_b[10]_PORT_A_data_in_reg = DFFE(LC1_q_b[10]_PORT_A_data_in, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[10]_PORT_A_address_reg = DFFE(LC1_q_b[10]_PORT_A_address, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[10]_PORT_B_address_reg = DFFE(LC1_q_b[10]_PORT_B_address, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[10]_PORT_A_write_enable_reg = DFFE(LC1_q_b[10]_PORT_A_write_enable, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_B_read_enable = VCC;
LC1_q_b[10]_PORT_B_read_enable_reg = DFFE(LC1_q_b[10]_PORT_B_read_enable, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10]_PORT_A_byte_mask = A1L0;
LC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[10]_PORT_A_byte_mask, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_clock_0 = !CLK_25MHz2;
LC1_q_b[10]_clock_1 = !CLK_25MHz2;
LC1_q_b[10]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[10]_clock_enable_1 = inst182;
LC1_q_b[10]_PORT_B_data_out = MEMORY(LC1_q_b[10]_PORT_A_data_in_reg, , LC1_q_b[10]_PORT_A_address_reg, LC1_q_b[10]_PORT_B_address_reg, LC1_q_b[10]_PORT_A_write_enable_reg, LC1_q_b[10]_PORT_B_read_enable_reg, LC1_q_b[10]_PORT_A_byte_mask_reg, , LC1_q_b[10]_clock_0, LC1_q_b[10]_clock_1, LC1_q_b[10]_clock_enable_0, LC1_q_b[10]_clock_enable_1, , );
LC1_q_b[10]_PORT_B_data_out_reg = DFFE(LC1_q_b[10]_PORT_B_data_out, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10] = LC1_q_b[10]_PORT_B_data_out_reg[0];


--LC1_q_b[10] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[10]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[10];
LC1_q_b[10]_PORT_A_data_in_reg = DFFE(LC1_q_b[10]_PORT_A_data_in, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[10]_PORT_A_address_reg = DFFE(LC1_q_b[10]_PORT_A_address, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[10]_PORT_B_address_reg = DFFE(LC1_q_b[10]_PORT_B_address, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[10]_PORT_A_write_enable_reg = DFFE(LC1_q_b[10]_PORT_A_write_enable, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_PORT_B_read_enable = VCC;
LC1_q_b[10]_PORT_B_read_enable_reg = DFFE(LC1_q_b[10]_PORT_B_read_enable, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10]_PORT_A_byte_mask = A1L0;
LC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[10]_PORT_A_byte_mask, LC1_q_b[10]_clock_0, , , LC1_q_b[10]_clock_enable_0);
LC1_q_b[10]_clock_0 = !CLK_25MHz2;
LC1_q_b[10]_clock_1 = !CLK_25MHz2;
LC1_q_b[10]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[10]_clock_enable_1 = inst154;
LC1_q_b[10]_PORT_B_data_out = MEMORY(LC1_q_b[10]_PORT_A_data_in_reg, , LC1_q_b[10]_PORT_A_address_reg, LC1_q_b[10]_PORT_B_address_reg, LC1_q_b[10]_PORT_A_write_enable_reg, LC1_q_b[10]_PORT_B_read_enable_reg, LC1_q_b[10]_PORT_A_byte_mask_reg, , LC1_q_b[10]_clock_0, LC1_q_b[10]_clock_1, LC1_q_b[10]_clock_enable_0, LC1_q_b[10]_clock_enable_1, , );
LC1_q_b[10]_PORT_B_data_out_reg = DFFE(LC1_q_b[10]_PORT_B_data_out, LC1_q_b[10]_clock_1, , , LC1_q_b[10]_clock_enable_1);
LC1_q_b[10] = LC1_q_b[10]_PORT_B_data_out_reg[0];


--GC1_q_b[10] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[10]_PORT_A_data_in = ZB1_o_RamData[10];
GC1_q_b[10]_PORT_A_data_in_reg = DFFE(GC1_q_b[10]_PORT_A_data_in, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[10]_PORT_A_address_reg = DFFE(GC1_q_b[10]_PORT_A_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[10]_PORT_B_address_reg = DFFE(GC1_q_b[10]_PORT_B_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[10]_PORT_A_write_enable_reg = DFFE(GC1_q_b[10]_PORT_A_write_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_read_enable = B1L0;
GC1_q_b[10]_PORT_B_read_enable_reg = DFFE(GC1_q_b[10]_PORT_B_read_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[10]_PORT_A_byte_mask, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_clock_0 = !CLK_25MHz2;
GC1_q_b[10]_clock_1 = !CLK_25MHz2;
GC1_q_b[10]_PORT_B_data_out = MEMORY(GC1_q_b[10]_PORT_A_data_in_reg, , GC1_q_b[10]_PORT_A_address_reg, GC1_q_b[10]_PORT_B_address_reg, GC1_q_b[10]_PORT_A_write_enable_reg, GC1_q_b[10]_PORT_B_read_enable_reg, GC1_q_b[10]_PORT_A_byte_mask_reg, , GC1_q_b[10]_clock_0, GC1_q_b[10]_clock_1, , , , );
GC1_q_b[10]_PORT_B_data_out_reg = DFFE(GC1_q_b[10]_PORT_B_data_out, GC1_q_b[10]_clock_1, , , );
GC1_q_b[10] = GC1_q_b[10]_PORT_B_data_out_reg[0];


--GC1_q_b[10] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[10]_PORT_A_data_in = ZB1_o_RamData[10];
GC1_q_b[10]_PORT_A_data_in_reg = DFFE(GC1_q_b[10]_PORT_A_data_in, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[10]_PORT_A_address_reg = DFFE(GC1_q_b[10]_PORT_A_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[10]_PORT_B_address_reg = DFFE(GC1_q_b[10]_PORT_B_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[10]_PORT_A_write_enable_reg = DFFE(GC1_q_b[10]_PORT_A_write_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_read_enable = B1L0;
GC1_q_b[10]_PORT_B_read_enable_reg = DFFE(GC1_q_b[10]_PORT_B_read_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[10]_PORT_A_byte_mask, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_clock_0 = !CLK_25MHz2;
GC1_q_b[10]_clock_1 = !CLK_25MHz2;
GC1_q_b[10]_PORT_B_data_out = MEMORY(GC1_q_b[10]_PORT_A_data_in_reg, , GC1_q_b[10]_PORT_A_address_reg, GC1_q_b[10]_PORT_B_address_reg, GC1_q_b[10]_PORT_A_write_enable_reg, GC1_q_b[10]_PORT_B_read_enable_reg, GC1_q_b[10]_PORT_A_byte_mask_reg, , GC1_q_b[10]_clock_0, GC1_q_b[10]_clock_1, , , , );
GC1_q_b[10]_PORT_B_data_out_reg = DFFE(GC1_q_b[10]_PORT_B_data_out, GC1_q_b[10]_clock_1, , , );
GC1_q_b[10] = GC1_q_b[10]_PORT_B_data_out_reg[0];


--GC1_q_b[10] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[10]_PORT_A_data_in = ZB1_o_RamData[10];
GC1_q_b[10]_PORT_A_data_in_reg = DFFE(GC1_q_b[10]_PORT_A_data_in, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[10]_PORT_A_address_reg = DFFE(GC1_q_b[10]_PORT_A_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[10]_PORT_B_address_reg = DFFE(GC1_q_b[10]_PORT_B_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[10]_PORT_A_write_enable_reg = DFFE(GC1_q_b[10]_PORT_A_write_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_read_enable = B1L0;
GC1_q_b[10]_PORT_B_read_enable_reg = DFFE(GC1_q_b[10]_PORT_B_read_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[10]_PORT_A_byte_mask, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_clock_0 = !CLK_25MHz2;
GC1_q_b[10]_clock_1 = !CLK_25MHz2;
GC1_q_b[10]_PORT_B_data_out = MEMORY(GC1_q_b[10]_PORT_A_data_in_reg, , GC1_q_b[10]_PORT_A_address_reg, GC1_q_b[10]_PORT_B_address_reg, GC1_q_b[10]_PORT_A_write_enable_reg, GC1_q_b[10]_PORT_B_read_enable_reg, GC1_q_b[10]_PORT_A_byte_mask_reg, , GC1_q_b[10]_clock_0, GC1_q_b[10]_clock_1, , , , );
GC1_q_b[10]_PORT_B_data_out_reg = DFFE(GC1_q_b[10]_PORT_B_data_out, GC1_q_b[10]_clock_1, , , );
GC1_q_b[10] = GC1_q_b[10]_PORT_B_data_out_reg[0];


--GC1_q_b[10] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[10]_PORT_A_data_in = ZB1_o_RamData[10];
GC1_q_b[10]_PORT_A_data_in_reg = DFFE(GC1_q_b[10]_PORT_A_data_in, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[10]_PORT_A_address_reg = DFFE(GC1_q_b[10]_PORT_A_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[10]_PORT_B_address_reg = DFFE(GC1_q_b[10]_PORT_B_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[10]_PORT_A_write_enable_reg = DFFE(GC1_q_b[10]_PORT_A_write_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_read_enable = B1L0;
GC1_q_b[10]_PORT_B_read_enable_reg = DFFE(GC1_q_b[10]_PORT_B_read_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[10]_PORT_A_byte_mask, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_clock_0 = !CLK_25MHz2;
GC1_q_b[10]_clock_1 = !CLK_25MHz2;
GC1_q_b[10]_PORT_B_data_out = MEMORY(GC1_q_b[10]_PORT_A_data_in_reg, , GC1_q_b[10]_PORT_A_address_reg, GC1_q_b[10]_PORT_B_address_reg, GC1_q_b[10]_PORT_A_write_enable_reg, GC1_q_b[10]_PORT_B_read_enable_reg, GC1_q_b[10]_PORT_A_byte_mask_reg, , GC1_q_b[10]_clock_0, GC1_q_b[10]_clock_1, , , , );
GC1_q_b[10]_PORT_B_data_out_reg = DFFE(GC1_q_b[10]_PORT_B_data_out, GC1_q_b[10]_clock_1, , , );
GC1_q_b[10] = GC1_q_b[10]_PORT_B_data_out_reg[0];


--GC1_q_b[10] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[10]_PORT_A_data_in = ZB1_o_RamData[10];
GC1_q_b[10]_PORT_A_data_in_reg = DFFE(GC1_q_b[10]_PORT_A_data_in, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[10]_PORT_A_address_reg = DFFE(GC1_q_b[10]_PORT_A_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[10]_PORT_B_address_reg = DFFE(GC1_q_b[10]_PORT_B_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[10]_PORT_A_write_enable_reg = DFFE(GC1_q_b[10]_PORT_A_write_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_read_enable = B1L0;
GC1_q_b[10]_PORT_B_read_enable_reg = DFFE(GC1_q_b[10]_PORT_B_read_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[10]_PORT_A_byte_mask, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_clock_0 = !CLK_25MHz2;
GC1_q_b[10]_clock_1 = !CLK_25MHz2;
GC1_q_b[10]_PORT_B_data_out = MEMORY(GC1_q_b[10]_PORT_A_data_in_reg, , GC1_q_b[10]_PORT_A_address_reg, GC1_q_b[10]_PORT_B_address_reg, GC1_q_b[10]_PORT_A_write_enable_reg, GC1_q_b[10]_PORT_B_read_enable_reg, GC1_q_b[10]_PORT_A_byte_mask_reg, , GC1_q_b[10]_clock_0, GC1_q_b[10]_clock_1, , , , );
GC1_q_b[10]_PORT_B_data_out_reg = DFFE(GC1_q_b[10]_PORT_B_data_out, GC1_q_b[10]_clock_1, , , );
GC1_q_b[10] = GC1_q_b[10]_PORT_B_data_out_reg[0];


--LC1_q_b[11] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[11]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[11];
LC1_q_b[11]_PORT_A_data_in_reg = DFFE(LC1_q_b[11]_PORT_A_data_in, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[11]_PORT_A_address_reg = DFFE(LC1_q_b[11]_PORT_A_address, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[11]_PORT_B_address_reg = DFFE(LC1_q_b[11]_PORT_B_address, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[11]_PORT_A_write_enable_reg = DFFE(LC1_q_b[11]_PORT_A_write_enable, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_B_read_enable = VCC;
LC1_q_b[11]_PORT_B_read_enable_reg = DFFE(LC1_q_b[11]_PORT_B_read_enable, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11]_PORT_A_byte_mask = A1L0;
LC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[11]_PORT_A_byte_mask, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_clock_0 = !CLK_25MHz2;
LC1_q_b[11]_clock_1 = !CLK_25MHz2;
LC1_q_b[11]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[11]_clock_enable_1 = inst182;
LC1_q_b[11]_PORT_B_data_out = MEMORY(LC1_q_b[11]_PORT_A_data_in_reg, , LC1_q_b[11]_PORT_A_address_reg, LC1_q_b[11]_PORT_B_address_reg, LC1_q_b[11]_PORT_A_write_enable_reg, LC1_q_b[11]_PORT_B_read_enable_reg, LC1_q_b[11]_PORT_A_byte_mask_reg, , LC1_q_b[11]_clock_0, LC1_q_b[11]_clock_1, LC1_q_b[11]_clock_enable_0, LC1_q_b[11]_clock_enable_1, , );
LC1_q_b[11]_PORT_B_data_out_reg = DFFE(LC1_q_b[11]_PORT_B_data_out, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11] = LC1_q_b[11]_PORT_B_data_out_reg[0];


--LC1_q_b[11] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[11]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[11];
LC1_q_b[11]_PORT_A_data_in_reg = DFFE(LC1_q_b[11]_PORT_A_data_in, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[11]_PORT_A_address_reg = DFFE(LC1_q_b[11]_PORT_A_address, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[11]_PORT_B_address_reg = DFFE(LC1_q_b[11]_PORT_B_address, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[11]_PORT_A_write_enable_reg = DFFE(LC1_q_b[11]_PORT_A_write_enable, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_B_read_enable = VCC;
LC1_q_b[11]_PORT_B_read_enable_reg = DFFE(LC1_q_b[11]_PORT_B_read_enable, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11]_PORT_A_byte_mask = A1L0;
LC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[11]_PORT_A_byte_mask, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_clock_0 = !CLK_25MHz2;
LC1_q_b[11]_clock_1 = !CLK_25MHz2;
LC1_q_b[11]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[11]_clock_enable_1 = inst154;
LC1_q_b[11]_PORT_B_data_out = MEMORY(LC1_q_b[11]_PORT_A_data_in_reg, , LC1_q_b[11]_PORT_A_address_reg, LC1_q_b[11]_PORT_B_address_reg, LC1_q_b[11]_PORT_A_write_enable_reg, LC1_q_b[11]_PORT_B_read_enable_reg, LC1_q_b[11]_PORT_A_byte_mask_reg, , LC1_q_b[11]_clock_0, LC1_q_b[11]_clock_1, LC1_q_b[11]_clock_enable_0, LC1_q_b[11]_clock_enable_1, , );
LC1_q_b[11]_PORT_B_data_out_reg = DFFE(LC1_q_b[11]_PORT_B_data_out, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11] = LC1_q_b[11]_PORT_B_data_out_reg[0];


--GC1_q_b[11] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[11]_PORT_A_data_in = ZB1_o_RamData[11];
GC1_q_b[11]_PORT_A_data_in_reg = DFFE(GC1_q_b[11]_PORT_A_data_in, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[11]_PORT_A_address_reg = DFFE(GC1_q_b[11]_PORT_A_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[11]_PORT_B_address_reg = DFFE(GC1_q_b[11]_PORT_B_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[11]_PORT_A_write_enable_reg = DFFE(GC1_q_b[11]_PORT_A_write_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_read_enable = B1L0;
GC1_q_b[11]_PORT_B_read_enable_reg = DFFE(GC1_q_b[11]_PORT_B_read_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[11]_PORT_A_byte_mask, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_clock_0 = !CLK_25MHz2;
GC1_q_b[11]_clock_1 = !CLK_25MHz2;
GC1_q_b[11]_PORT_B_data_out = MEMORY(GC1_q_b[11]_PORT_A_data_in_reg, , GC1_q_b[11]_PORT_A_address_reg, GC1_q_b[11]_PORT_B_address_reg, GC1_q_b[11]_PORT_A_write_enable_reg, GC1_q_b[11]_PORT_B_read_enable_reg, GC1_q_b[11]_PORT_A_byte_mask_reg, , GC1_q_b[11]_clock_0, GC1_q_b[11]_clock_1, , , , );
GC1_q_b[11]_PORT_B_data_out_reg = DFFE(GC1_q_b[11]_PORT_B_data_out, GC1_q_b[11]_clock_1, , , );
GC1_q_b[11] = GC1_q_b[11]_PORT_B_data_out_reg[0];


--GC1_q_b[11] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[11]_PORT_A_data_in = ZB1_o_RamData[11];
GC1_q_b[11]_PORT_A_data_in_reg = DFFE(GC1_q_b[11]_PORT_A_data_in, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[11]_PORT_A_address_reg = DFFE(GC1_q_b[11]_PORT_A_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[11]_PORT_B_address_reg = DFFE(GC1_q_b[11]_PORT_B_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[11]_PORT_A_write_enable_reg = DFFE(GC1_q_b[11]_PORT_A_write_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_read_enable = B1L0;
GC1_q_b[11]_PORT_B_read_enable_reg = DFFE(GC1_q_b[11]_PORT_B_read_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[11]_PORT_A_byte_mask, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_clock_0 = !CLK_25MHz2;
GC1_q_b[11]_clock_1 = !CLK_25MHz2;
GC1_q_b[11]_PORT_B_data_out = MEMORY(GC1_q_b[11]_PORT_A_data_in_reg, , GC1_q_b[11]_PORT_A_address_reg, GC1_q_b[11]_PORT_B_address_reg, GC1_q_b[11]_PORT_A_write_enable_reg, GC1_q_b[11]_PORT_B_read_enable_reg, GC1_q_b[11]_PORT_A_byte_mask_reg, , GC1_q_b[11]_clock_0, GC1_q_b[11]_clock_1, , , , );
GC1_q_b[11]_PORT_B_data_out_reg = DFFE(GC1_q_b[11]_PORT_B_data_out, GC1_q_b[11]_clock_1, , , );
GC1_q_b[11] = GC1_q_b[11]_PORT_B_data_out_reg[0];


--GC1_q_b[11] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[11]_PORT_A_data_in = ZB1_o_RamData[11];
GC1_q_b[11]_PORT_A_data_in_reg = DFFE(GC1_q_b[11]_PORT_A_data_in, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[11]_PORT_A_address_reg = DFFE(GC1_q_b[11]_PORT_A_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[11]_PORT_B_address_reg = DFFE(GC1_q_b[11]_PORT_B_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[11]_PORT_A_write_enable_reg = DFFE(GC1_q_b[11]_PORT_A_write_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_read_enable = B1L0;
GC1_q_b[11]_PORT_B_read_enable_reg = DFFE(GC1_q_b[11]_PORT_B_read_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[11]_PORT_A_byte_mask, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_clock_0 = !CLK_25MHz2;
GC1_q_b[11]_clock_1 = !CLK_25MHz2;
GC1_q_b[11]_PORT_B_data_out = MEMORY(GC1_q_b[11]_PORT_A_data_in_reg, , GC1_q_b[11]_PORT_A_address_reg, GC1_q_b[11]_PORT_B_address_reg, GC1_q_b[11]_PORT_A_write_enable_reg, GC1_q_b[11]_PORT_B_read_enable_reg, GC1_q_b[11]_PORT_A_byte_mask_reg, , GC1_q_b[11]_clock_0, GC1_q_b[11]_clock_1, , , , );
GC1_q_b[11]_PORT_B_data_out_reg = DFFE(GC1_q_b[11]_PORT_B_data_out, GC1_q_b[11]_clock_1, , , );
GC1_q_b[11] = GC1_q_b[11]_PORT_B_data_out_reg[0];


--GC1_q_b[11] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[11]_PORT_A_data_in = ZB1_o_RamData[11];
GC1_q_b[11]_PORT_A_data_in_reg = DFFE(GC1_q_b[11]_PORT_A_data_in, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[11]_PORT_A_address_reg = DFFE(GC1_q_b[11]_PORT_A_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[11]_PORT_B_address_reg = DFFE(GC1_q_b[11]_PORT_B_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[11]_PORT_A_write_enable_reg = DFFE(GC1_q_b[11]_PORT_A_write_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_read_enable = B1L0;
GC1_q_b[11]_PORT_B_read_enable_reg = DFFE(GC1_q_b[11]_PORT_B_read_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[11]_PORT_A_byte_mask, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_clock_0 = !CLK_25MHz2;
GC1_q_b[11]_clock_1 = !CLK_25MHz2;
GC1_q_b[11]_PORT_B_data_out = MEMORY(GC1_q_b[11]_PORT_A_data_in_reg, , GC1_q_b[11]_PORT_A_address_reg, GC1_q_b[11]_PORT_B_address_reg, GC1_q_b[11]_PORT_A_write_enable_reg, GC1_q_b[11]_PORT_B_read_enable_reg, GC1_q_b[11]_PORT_A_byte_mask_reg, , GC1_q_b[11]_clock_0, GC1_q_b[11]_clock_1, , , , );
GC1_q_b[11]_PORT_B_data_out_reg = DFFE(GC1_q_b[11]_PORT_B_data_out, GC1_q_b[11]_clock_1, , , );
GC1_q_b[11] = GC1_q_b[11]_PORT_B_data_out_reg[0];


--GC1_q_b[11] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[11]_PORT_A_data_in = ZB1_o_RamData[11];
GC1_q_b[11]_PORT_A_data_in_reg = DFFE(GC1_q_b[11]_PORT_A_data_in, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[11]_PORT_A_address_reg = DFFE(GC1_q_b[11]_PORT_A_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[11]_PORT_B_address_reg = DFFE(GC1_q_b[11]_PORT_B_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[11]_PORT_A_write_enable_reg = DFFE(GC1_q_b[11]_PORT_A_write_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_read_enable = B1L0;
GC1_q_b[11]_PORT_B_read_enable_reg = DFFE(GC1_q_b[11]_PORT_B_read_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[11]_PORT_A_byte_mask, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_clock_0 = !CLK_25MHz2;
GC1_q_b[11]_clock_1 = !CLK_25MHz2;
GC1_q_b[11]_PORT_B_data_out = MEMORY(GC1_q_b[11]_PORT_A_data_in_reg, , GC1_q_b[11]_PORT_A_address_reg, GC1_q_b[11]_PORT_B_address_reg, GC1_q_b[11]_PORT_A_write_enable_reg, GC1_q_b[11]_PORT_B_read_enable_reg, GC1_q_b[11]_PORT_A_byte_mask_reg, , GC1_q_b[11]_clock_0, GC1_q_b[11]_clock_1, , , , );
GC1_q_b[11]_PORT_B_data_out_reg = DFFE(GC1_q_b[11]_PORT_B_data_out, GC1_q_b[11]_clock_1, , , );
GC1_q_b[11] = GC1_q_b[11]_PORT_B_data_out_reg[0];


--LC1_q_b[11] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[11]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[11];
LC1_q_b[11]_PORT_A_data_in_reg = DFFE(LC1_q_b[11]_PORT_A_data_in, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[11]_PORT_A_address_reg = DFFE(LC1_q_b[11]_PORT_A_address, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[11]_PORT_B_address_reg = DFFE(LC1_q_b[11]_PORT_B_address, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[11]_PORT_A_write_enable_reg = DFFE(LC1_q_b[11]_PORT_A_write_enable, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_B_read_enable = VCC;
LC1_q_b[11]_PORT_B_read_enable_reg = DFFE(LC1_q_b[11]_PORT_B_read_enable, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11]_PORT_A_byte_mask = A1L0;
LC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[11]_PORT_A_byte_mask, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_clock_0 = !CLK_25MHz2;
LC1_q_b[11]_clock_1 = !CLK_25MHz2;
LC1_q_b[11]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[11]_clock_enable_1 = inst146;
LC1_q_b[11]_PORT_B_data_out = MEMORY(LC1_q_b[11]_PORT_A_data_in_reg, , LC1_q_b[11]_PORT_A_address_reg, LC1_q_b[11]_PORT_B_address_reg, LC1_q_b[11]_PORT_A_write_enable_reg, LC1_q_b[11]_PORT_B_read_enable_reg, LC1_q_b[11]_PORT_A_byte_mask_reg, , LC1_q_b[11]_clock_0, LC1_q_b[11]_clock_1, LC1_q_b[11]_clock_enable_0, LC1_q_b[11]_clock_enable_1, , );
LC1_q_b[11]_PORT_B_data_out_reg = DFFE(LC1_q_b[11]_PORT_B_data_out, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11] = LC1_q_b[11]_PORT_B_data_out_reg[0];


--LC1_q_b[11] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[11]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[11];
LC1_q_b[11]_PORT_A_data_in_reg = DFFE(LC1_q_b[11]_PORT_A_data_in, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[11]_PORT_A_address_reg = DFFE(LC1_q_b[11]_PORT_A_address, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[11]_PORT_B_address_reg = DFFE(LC1_q_b[11]_PORT_B_address, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[11]_PORT_A_write_enable_reg = DFFE(LC1_q_b[11]_PORT_A_write_enable, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_PORT_B_read_enable = VCC;
LC1_q_b[11]_PORT_B_read_enable_reg = DFFE(LC1_q_b[11]_PORT_B_read_enable, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11]_PORT_A_byte_mask = A1L0;
LC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[11]_PORT_A_byte_mask, LC1_q_b[11]_clock_0, , , LC1_q_b[11]_clock_enable_0);
LC1_q_b[11]_clock_0 = !CLK_25MHz2;
LC1_q_b[11]_clock_1 = !CLK_25MHz2;
LC1_q_b[11]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[11]_clock_enable_1 = inst80;
LC1_q_b[11]_PORT_B_data_out = MEMORY(LC1_q_b[11]_PORT_A_data_in_reg, , LC1_q_b[11]_PORT_A_address_reg, LC1_q_b[11]_PORT_B_address_reg, LC1_q_b[11]_PORT_A_write_enable_reg, LC1_q_b[11]_PORT_B_read_enable_reg, LC1_q_b[11]_PORT_A_byte_mask_reg, , LC1_q_b[11]_clock_0, LC1_q_b[11]_clock_1, LC1_q_b[11]_clock_enable_0, LC1_q_b[11]_clock_enable_1, , );
LC1_q_b[11]_PORT_B_data_out_reg = DFFE(LC1_q_b[11]_PORT_B_data_out, LC1_q_b[11]_clock_1, , , LC1_q_b[11]_clock_enable_1);
LC1_q_b[11] = LC1_q_b[11]_PORT_B_data_out_reg[0];


--LC1_q_b[12] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[12]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[12];
LC1_q_b[12]_PORT_A_data_in_reg = DFFE(LC1_q_b[12]_PORT_A_data_in, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[12]_PORT_A_address_reg = DFFE(LC1_q_b[12]_PORT_A_address, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[12]_PORT_B_address_reg = DFFE(LC1_q_b[12]_PORT_B_address, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[12]_PORT_A_write_enable_reg = DFFE(LC1_q_b[12]_PORT_A_write_enable, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_B_read_enable = VCC;
LC1_q_b[12]_PORT_B_read_enable_reg = DFFE(LC1_q_b[12]_PORT_B_read_enable, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12]_PORT_A_byte_mask = A1L0;
LC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[12]_PORT_A_byte_mask, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_clock_0 = !CLK_25MHz2;
LC1_q_b[12]_clock_1 = !CLK_25MHz2;
LC1_q_b[12]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[12]_clock_enable_1 = inst146;
LC1_q_b[12]_PORT_B_data_out = MEMORY(LC1_q_b[12]_PORT_A_data_in_reg, , LC1_q_b[12]_PORT_A_address_reg, LC1_q_b[12]_PORT_B_address_reg, LC1_q_b[12]_PORT_A_write_enable_reg, LC1_q_b[12]_PORT_B_read_enable_reg, LC1_q_b[12]_PORT_A_byte_mask_reg, , LC1_q_b[12]_clock_0, LC1_q_b[12]_clock_1, LC1_q_b[12]_clock_enable_0, LC1_q_b[12]_clock_enable_1, , );
LC1_q_b[12]_PORT_B_data_out_reg = DFFE(LC1_q_b[12]_PORT_B_data_out, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12] = LC1_q_b[12]_PORT_B_data_out_reg[0];


--LC1_q_b[12] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[12]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[12];
LC1_q_b[12]_PORT_A_data_in_reg = DFFE(LC1_q_b[12]_PORT_A_data_in, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[12]_PORT_A_address_reg = DFFE(LC1_q_b[12]_PORT_A_address, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[12]_PORT_B_address_reg = DFFE(LC1_q_b[12]_PORT_B_address, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[12]_PORT_A_write_enable_reg = DFFE(LC1_q_b[12]_PORT_A_write_enable, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_B_read_enable = VCC;
LC1_q_b[12]_PORT_B_read_enable_reg = DFFE(LC1_q_b[12]_PORT_B_read_enable, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12]_PORT_A_byte_mask = A1L0;
LC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[12]_PORT_A_byte_mask, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_clock_0 = !CLK_25MHz2;
LC1_q_b[12]_clock_1 = !CLK_25MHz2;
LC1_q_b[12]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[12]_clock_enable_1 = inst80;
LC1_q_b[12]_PORT_B_data_out = MEMORY(LC1_q_b[12]_PORT_A_data_in_reg, , LC1_q_b[12]_PORT_A_address_reg, LC1_q_b[12]_PORT_B_address_reg, LC1_q_b[12]_PORT_A_write_enable_reg, LC1_q_b[12]_PORT_B_read_enable_reg, LC1_q_b[12]_PORT_A_byte_mask_reg, , LC1_q_b[12]_clock_0, LC1_q_b[12]_clock_1, LC1_q_b[12]_clock_enable_0, LC1_q_b[12]_clock_enable_1, , );
LC1_q_b[12]_PORT_B_data_out_reg = DFFE(LC1_q_b[12]_PORT_B_data_out, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12] = LC1_q_b[12]_PORT_B_data_out_reg[0];


--LC1_q_b[12] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[12]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[12];
LC1_q_b[12]_PORT_A_data_in_reg = DFFE(LC1_q_b[12]_PORT_A_data_in, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[12]_PORT_A_address_reg = DFFE(LC1_q_b[12]_PORT_A_address, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[12]_PORT_B_address_reg = DFFE(LC1_q_b[12]_PORT_B_address, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[12]_PORT_A_write_enable_reg = DFFE(LC1_q_b[12]_PORT_A_write_enable, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_B_read_enable = VCC;
LC1_q_b[12]_PORT_B_read_enable_reg = DFFE(LC1_q_b[12]_PORT_B_read_enable, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12]_PORT_A_byte_mask = A1L0;
LC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[12]_PORT_A_byte_mask, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_clock_0 = !CLK_25MHz2;
LC1_q_b[12]_clock_1 = !CLK_25MHz2;
LC1_q_b[12]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[12]_clock_enable_1 = inst182;
LC1_q_b[12]_PORT_B_data_out = MEMORY(LC1_q_b[12]_PORT_A_data_in_reg, , LC1_q_b[12]_PORT_A_address_reg, LC1_q_b[12]_PORT_B_address_reg, LC1_q_b[12]_PORT_A_write_enable_reg, LC1_q_b[12]_PORT_B_read_enable_reg, LC1_q_b[12]_PORT_A_byte_mask_reg, , LC1_q_b[12]_clock_0, LC1_q_b[12]_clock_1, LC1_q_b[12]_clock_enable_0, LC1_q_b[12]_clock_enable_1, , );
LC1_q_b[12]_PORT_B_data_out_reg = DFFE(LC1_q_b[12]_PORT_B_data_out, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12] = LC1_q_b[12]_PORT_B_data_out_reg[0];


--LC1_q_b[12] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[12]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[12];
LC1_q_b[12]_PORT_A_data_in_reg = DFFE(LC1_q_b[12]_PORT_A_data_in, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[12]_PORT_A_address_reg = DFFE(LC1_q_b[12]_PORT_A_address, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[12]_PORT_B_address_reg = DFFE(LC1_q_b[12]_PORT_B_address, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[12]_PORT_A_write_enable_reg = DFFE(LC1_q_b[12]_PORT_A_write_enable, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_PORT_B_read_enable = VCC;
LC1_q_b[12]_PORT_B_read_enable_reg = DFFE(LC1_q_b[12]_PORT_B_read_enable, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12]_PORT_A_byte_mask = A1L0;
LC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[12]_PORT_A_byte_mask, LC1_q_b[12]_clock_0, , , LC1_q_b[12]_clock_enable_0);
LC1_q_b[12]_clock_0 = !CLK_25MHz2;
LC1_q_b[12]_clock_1 = !CLK_25MHz2;
LC1_q_b[12]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[12]_clock_enable_1 = inst154;
LC1_q_b[12]_PORT_B_data_out = MEMORY(LC1_q_b[12]_PORT_A_data_in_reg, , LC1_q_b[12]_PORT_A_address_reg, LC1_q_b[12]_PORT_B_address_reg, LC1_q_b[12]_PORT_A_write_enable_reg, LC1_q_b[12]_PORT_B_read_enable_reg, LC1_q_b[12]_PORT_A_byte_mask_reg, , LC1_q_b[12]_clock_0, LC1_q_b[12]_clock_1, LC1_q_b[12]_clock_enable_0, LC1_q_b[12]_clock_enable_1, , );
LC1_q_b[12]_PORT_B_data_out_reg = DFFE(LC1_q_b[12]_PORT_B_data_out, LC1_q_b[12]_clock_1, , , LC1_q_b[12]_clock_enable_1);
LC1_q_b[12] = LC1_q_b[12]_PORT_B_data_out_reg[0];


--GC1_q_b[12] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[12]_PORT_A_data_in = ZB1_o_RamData[12];
GC1_q_b[12]_PORT_A_data_in_reg = DFFE(GC1_q_b[12]_PORT_A_data_in, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[12]_PORT_A_address_reg = DFFE(GC1_q_b[12]_PORT_A_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[12]_PORT_B_address_reg = DFFE(GC1_q_b[12]_PORT_B_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[12]_PORT_A_write_enable_reg = DFFE(GC1_q_b[12]_PORT_A_write_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_read_enable = B1L0;
GC1_q_b[12]_PORT_B_read_enable_reg = DFFE(GC1_q_b[12]_PORT_B_read_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[12]_PORT_A_byte_mask, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_clock_0 = !CLK_25MHz2;
GC1_q_b[12]_clock_1 = !CLK_25MHz2;
GC1_q_b[12]_PORT_B_data_out = MEMORY(GC1_q_b[12]_PORT_A_data_in_reg, , GC1_q_b[12]_PORT_A_address_reg, GC1_q_b[12]_PORT_B_address_reg, GC1_q_b[12]_PORT_A_write_enable_reg, GC1_q_b[12]_PORT_B_read_enable_reg, GC1_q_b[12]_PORT_A_byte_mask_reg, , GC1_q_b[12]_clock_0, GC1_q_b[12]_clock_1, , , , );
GC1_q_b[12]_PORT_B_data_out_reg = DFFE(GC1_q_b[12]_PORT_B_data_out, GC1_q_b[12]_clock_1, , , );
GC1_q_b[12] = GC1_q_b[12]_PORT_B_data_out_reg[0];


--GC1_q_b[12] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[12]_PORT_A_data_in = ZB1_o_RamData[12];
GC1_q_b[12]_PORT_A_data_in_reg = DFFE(GC1_q_b[12]_PORT_A_data_in, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[12]_PORT_A_address_reg = DFFE(GC1_q_b[12]_PORT_A_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[12]_PORT_B_address_reg = DFFE(GC1_q_b[12]_PORT_B_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[12]_PORT_A_write_enable_reg = DFFE(GC1_q_b[12]_PORT_A_write_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_read_enable = B1L0;
GC1_q_b[12]_PORT_B_read_enable_reg = DFFE(GC1_q_b[12]_PORT_B_read_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[12]_PORT_A_byte_mask, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_clock_0 = !CLK_25MHz2;
GC1_q_b[12]_clock_1 = !CLK_25MHz2;
GC1_q_b[12]_PORT_B_data_out = MEMORY(GC1_q_b[12]_PORT_A_data_in_reg, , GC1_q_b[12]_PORT_A_address_reg, GC1_q_b[12]_PORT_B_address_reg, GC1_q_b[12]_PORT_A_write_enable_reg, GC1_q_b[12]_PORT_B_read_enable_reg, GC1_q_b[12]_PORT_A_byte_mask_reg, , GC1_q_b[12]_clock_0, GC1_q_b[12]_clock_1, , , , );
GC1_q_b[12]_PORT_B_data_out_reg = DFFE(GC1_q_b[12]_PORT_B_data_out, GC1_q_b[12]_clock_1, , , );
GC1_q_b[12] = GC1_q_b[12]_PORT_B_data_out_reg[0];


--GC1_q_b[12] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[12]_PORT_A_data_in = ZB1_o_RamData[12];
GC1_q_b[12]_PORT_A_data_in_reg = DFFE(GC1_q_b[12]_PORT_A_data_in, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[12]_PORT_A_address_reg = DFFE(GC1_q_b[12]_PORT_A_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[12]_PORT_B_address_reg = DFFE(GC1_q_b[12]_PORT_B_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[12]_PORT_A_write_enable_reg = DFFE(GC1_q_b[12]_PORT_A_write_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_read_enable = B1L0;
GC1_q_b[12]_PORT_B_read_enable_reg = DFFE(GC1_q_b[12]_PORT_B_read_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[12]_PORT_A_byte_mask, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_clock_0 = !CLK_25MHz2;
GC1_q_b[12]_clock_1 = !CLK_25MHz2;
GC1_q_b[12]_PORT_B_data_out = MEMORY(GC1_q_b[12]_PORT_A_data_in_reg, , GC1_q_b[12]_PORT_A_address_reg, GC1_q_b[12]_PORT_B_address_reg, GC1_q_b[12]_PORT_A_write_enable_reg, GC1_q_b[12]_PORT_B_read_enable_reg, GC1_q_b[12]_PORT_A_byte_mask_reg, , GC1_q_b[12]_clock_0, GC1_q_b[12]_clock_1, , , , );
GC1_q_b[12]_PORT_B_data_out_reg = DFFE(GC1_q_b[12]_PORT_B_data_out, GC1_q_b[12]_clock_1, , , );
GC1_q_b[12] = GC1_q_b[12]_PORT_B_data_out_reg[0];


--GC1_q_b[12] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[12]_PORT_A_data_in = ZB1_o_RamData[12];
GC1_q_b[12]_PORT_A_data_in_reg = DFFE(GC1_q_b[12]_PORT_A_data_in, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[12]_PORT_A_address_reg = DFFE(GC1_q_b[12]_PORT_A_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[12]_PORT_B_address_reg = DFFE(GC1_q_b[12]_PORT_B_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[12]_PORT_A_write_enable_reg = DFFE(GC1_q_b[12]_PORT_A_write_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_read_enable = B1L0;
GC1_q_b[12]_PORT_B_read_enable_reg = DFFE(GC1_q_b[12]_PORT_B_read_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[12]_PORT_A_byte_mask, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_clock_0 = !CLK_25MHz2;
GC1_q_b[12]_clock_1 = !CLK_25MHz2;
GC1_q_b[12]_PORT_B_data_out = MEMORY(GC1_q_b[12]_PORT_A_data_in_reg, , GC1_q_b[12]_PORT_A_address_reg, GC1_q_b[12]_PORT_B_address_reg, GC1_q_b[12]_PORT_A_write_enable_reg, GC1_q_b[12]_PORT_B_read_enable_reg, GC1_q_b[12]_PORT_A_byte_mask_reg, , GC1_q_b[12]_clock_0, GC1_q_b[12]_clock_1, , , , );
GC1_q_b[12]_PORT_B_data_out_reg = DFFE(GC1_q_b[12]_PORT_B_data_out, GC1_q_b[12]_clock_1, , , );
GC1_q_b[12] = GC1_q_b[12]_PORT_B_data_out_reg[0];


--GC1_q_b[12] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[12]_PORT_A_data_in = ZB1_o_RamData[12];
GC1_q_b[12]_PORT_A_data_in_reg = DFFE(GC1_q_b[12]_PORT_A_data_in, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[12]_PORT_A_address_reg = DFFE(GC1_q_b[12]_PORT_A_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[12]_PORT_B_address_reg = DFFE(GC1_q_b[12]_PORT_B_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[12]_PORT_A_write_enable_reg = DFFE(GC1_q_b[12]_PORT_A_write_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_read_enable = B1L0;
GC1_q_b[12]_PORT_B_read_enable_reg = DFFE(GC1_q_b[12]_PORT_B_read_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[12]_PORT_A_byte_mask, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_clock_0 = !CLK_25MHz2;
GC1_q_b[12]_clock_1 = !CLK_25MHz2;
GC1_q_b[12]_PORT_B_data_out = MEMORY(GC1_q_b[12]_PORT_A_data_in_reg, , GC1_q_b[12]_PORT_A_address_reg, GC1_q_b[12]_PORT_B_address_reg, GC1_q_b[12]_PORT_A_write_enable_reg, GC1_q_b[12]_PORT_B_read_enable_reg, GC1_q_b[12]_PORT_A_byte_mask_reg, , GC1_q_b[12]_clock_0, GC1_q_b[12]_clock_1, , , , );
GC1_q_b[12]_PORT_B_data_out_reg = DFFE(GC1_q_b[12]_PORT_B_data_out, GC1_q_b[12]_clock_1, , , );
GC1_q_b[12] = GC1_q_b[12]_PORT_B_data_out_reg[0];


--LC1_q_b[13] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[13]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[13];
LC1_q_b[13]_PORT_A_data_in_reg = DFFE(LC1_q_b[13]_PORT_A_data_in, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[13]_PORT_A_address_reg = DFFE(LC1_q_b[13]_PORT_A_address, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[13]_PORT_B_address_reg = DFFE(LC1_q_b[13]_PORT_B_address, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[13]_PORT_A_write_enable_reg = DFFE(LC1_q_b[13]_PORT_A_write_enable, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_B_read_enable = VCC;
LC1_q_b[13]_PORT_B_read_enable_reg = DFFE(LC1_q_b[13]_PORT_B_read_enable, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13]_PORT_A_byte_mask = A1L0;
LC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[13]_PORT_A_byte_mask, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_clock_0 = !CLK_25MHz2;
LC1_q_b[13]_clock_1 = !CLK_25MHz2;
LC1_q_b[13]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[13]_clock_enable_1 = inst146;
LC1_q_b[13]_PORT_B_data_out = MEMORY(LC1_q_b[13]_PORT_A_data_in_reg, , LC1_q_b[13]_PORT_A_address_reg, LC1_q_b[13]_PORT_B_address_reg, LC1_q_b[13]_PORT_A_write_enable_reg, LC1_q_b[13]_PORT_B_read_enable_reg, LC1_q_b[13]_PORT_A_byte_mask_reg, , LC1_q_b[13]_clock_0, LC1_q_b[13]_clock_1, LC1_q_b[13]_clock_enable_0, LC1_q_b[13]_clock_enable_1, , );
LC1_q_b[13]_PORT_B_data_out_reg = DFFE(LC1_q_b[13]_PORT_B_data_out, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13] = LC1_q_b[13]_PORT_B_data_out_reg[0];


--LC1_q_b[13] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[13]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[13];
LC1_q_b[13]_PORT_A_data_in_reg = DFFE(LC1_q_b[13]_PORT_A_data_in, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[13]_PORT_A_address_reg = DFFE(LC1_q_b[13]_PORT_A_address, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[13]_PORT_B_address_reg = DFFE(LC1_q_b[13]_PORT_B_address, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[13]_PORT_A_write_enable_reg = DFFE(LC1_q_b[13]_PORT_A_write_enable, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_B_read_enable = VCC;
LC1_q_b[13]_PORT_B_read_enable_reg = DFFE(LC1_q_b[13]_PORT_B_read_enable, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13]_PORT_A_byte_mask = A1L0;
LC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[13]_PORT_A_byte_mask, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_clock_0 = !CLK_25MHz2;
LC1_q_b[13]_clock_1 = !CLK_25MHz2;
LC1_q_b[13]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[13]_clock_enable_1 = inst80;
LC1_q_b[13]_PORT_B_data_out = MEMORY(LC1_q_b[13]_PORT_A_data_in_reg, , LC1_q_b[13]_PORT_A_address_reg, LC1_q_b[13]_PORT_B_address_reg, LC1_q_b[13]_PORT_A_write_enable_reg, LC1_q_b[13]_PORT_B_read_enable_reg, LC1_q_b[13]_PORT_A_byte_mask_reg, , LC1_q_b[13]_clock_0, LC1_q_b[13]_clock_1, LC1_q_b[13]_clock_enable_0, LC1_q_b[13]_clock_enable_1, , );
LC1_q_b[13]_PORT_B_data_out_reg = DFFE(LC1_q_b[13]_PORT_B_data_out, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13] = LC1_q_b[13]_PORT_B_data_out_reg[0];


--LC1_q_b[13] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[13]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[13];
LC1_q_b[13]_PORT_A_data_in_reg = DFFE(LC1_q_b[13]_PORT_A_data_in, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[13]_PORT_A_address_reg = DFFE(LC1_q_b[13]_PORT_A_address, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[13]_PORT_B_address_reg = DFFE(LC1_q_b[13]_PORT_B_address, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[13]_PORT_A_write_enable_reg = DFFE(LC1_q_b[13]_PORT_A_write_enable, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_B_read_enable = VCC;
LC1_q_b[13]_PORT_B_read_enable_reg = DFFE(LC1_q_b[13]_PORT_B_read_enable, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13]_PORT_A_byte_mask = A1L0;
LC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[13]_PORT_A_byte_mask, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_clock_0 = !CLK_25MHz2;
LC1_q_b[13]_clock_1 = !CLK_25MHz2;
LC1_q_b[13]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[13]_clock_enable_1 = inst182;
LC1_q_b[13]_PORT_B_data_out = MEMORY(LC1_q_b[13]_PORT_A_data_in_reg, , LC1_q_b[13]_PORT_A_address_reg, LC1_q_b[13]_PORT_B_address_reg, LC1_q_b[13]_PORT_A_write_enable_reg, LC1_q_b[13]_PORT_B_read_enable_reg, LC1_q_b[13]_PORT_A_byte_mask_reg, , LC1_q_b[13]_clock_0, LC1_q_b[13]_clock_1, LC1_q_b[13]_clock_enable_0, LC1_q_b[13]_clock_enable_1, , );
LC1_q_b[13]_PORT_B_data_out_reg = DFFE(LC1_q_b[13]_PORT_B_data_out, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13] = LC1_q_b[13]_PORT_B_data_out_reg[0];


--LC1_q_b[13] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[13]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[13];
LC1_q_b[13]_PORT_A_data_in_reg = DFFE(LC1_q_b[13]_PORT_A_data_in, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[13]_PORT_A_address_reg = DFFE(LC1_q_b[13]_PORT_A_address, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[13]_PORT_B_address_reg = DFFE(LC1_q_b[13]_PORT_B_address, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[13]_PORT_A_write_enable_reg = DFFE(LC1_q_b[13]_PORT_A_write_enable, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_PORT_B_read_enable = VCC;
LC1_q_b[13]_PORT_B_read_enable_reg = DFFE(LC1_q_b[13]_PORT_B_read_enable, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13]_PORT_A_byte_mask = A1L0;
LC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[13]_PORT_A_byte_mask, LC1_q_b[13]_clock_0, , , LC1_q_b[13]_clock_enable_0);
LC1_q_b[13]_clock_0 = !CLK_25MHz2;
LC1_q_b[13]_clock_1 = !CLK_25MHz2;
LC1_q_b[13]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[13]_clock_enable_1 = inst154;
LC1_q_b[13]_PORT_B_data_out = MEMORY(LC1_q_b[13]_PORT_A_data_in_reg, , LC1_q_b[13]_PORT_A_address_reg, LC1_q_b[13]_PORT_B_address_reg, LC1_q_b[13]_PORT_A_write_enable_reg, LC1_q_b[13]_PORT_B_read_enable_reg, LC1_q_b[13]_PORT_A_byte_mask_reg, , LC1_q_b[13]_clock_0, LC1_q_b[13]_clock_1, LC1_q_b[13]_clock_enable_0, LC1_q_b[13]_clock_enable_1, , );
LC1_q_b[13]_PORT_B_data_out_reg = DFFE(LC1_q_b[13]_PORT_B_data_out, LC1_q_b[13]_clock_1, , , LC1_q_b[13]_clock_enable_1);
LC1_q_b[13] = LC1_q_b[13]_PORT_B_data_out_reg[0];


--GC1_q_b[13] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[13]_PORT_A_data_in = ZB1_o_RamData[13];
GC1_q_b[13]_PORT_A_data_in_reg = DFFE(GC1_q_b[13]_PORT_A_data_in, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[13]_PORT_A_address_reg = DFFE(GC1_q_b[13]_PORT_A_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[13]_PORT_B_address_reg = DFFE(GC1_q_b[13]_PORT_B_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[13]_PORT_A_write_enable_reg = DFFE(GC1_q_b[13]_PORT_A_write_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_read_enable = B1L0;
GC1_q_b[13]_PORT_B_read_enable_reg = DFFE(GC1_q_b[13]_PORT_B_read_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[13]_PORT_A_byte_mask, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_clock_0 = !CLK_25MHz2;
GC1_q_b[13]_clock_1 = !CLK_25MHz2;
GC1_q_b[13]_PORT_B_data_out = MEMORY(GC1_q_b[13]_PORT_A_data_in_reg, , GC1_q_b[13]_PORT_A_address_reg, GC1_q_b[13]_PORT_B_address_reg, GC1_q_b[13]_PORT_A_write_enable_reg, GC1_q_b[13]_PORT_B_read_enable_reg, GC1_q_b[13]_PORT_A_byte_mask_reg, , GC1_q_b[13]_clock_0, GC1_q_b[13]_clock_1, , , , );
GC1_q_b[13]_PORT_B_data_out_reg = DFFE(GC1_q_b[13]_PORT_B_data_out, GC1_q_b[13]_clock_1, , , );
GC1_q_b[13] = GC1_q_b[13]_PORT_B_data_out_reg[0];


--GC1_q_b[13] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[13]_PORT_A_data_in = ZB1_o_RamData[13];
GC1_q_b[13]_PORT_A_data_in_reg = DFFE(GC1_q_b[13]_PORT_A_data_in, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[13]_PORT_A_address_reg = DFFE(GC1_q_b[13]_PORT_A_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[13]_PORT_B_address_reg = DFFE(GC1_q_b[13]_PORT_B_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[13]_PORT_A_write_enable_reg = DFFE(GC1_q_b[13]_PORT_A_write_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_read_enable = B1L0;
GC1_q_b[13]_PORT_B_read_enable_reg = DFFE(GC1_q_b[13]_PORT_B_read_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[13]_PORT_A_byte_mask, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_clock_0 = !CLK_25MHz2;
GC1_q_b[13]_clock_1 = !CLK_25MHz2;
GC1_q_b[13]_PORT_B_data_out = MEMORY(GC1_q_b[13]_PORT_A_data_in_reg, , GC1_q_b[13]_PORT_A_address_reg, GC1_q_b[13]_PORT_B_address_reg, GC1_q_b[13]_PORT_A_write_enable_reg, GC1_q_b[13]_PORT_B_read_enable_reg, GC1_q_b[13]_PORT_A_byte_mask_reg, , GC1_q_b[13]_clock_0, GC1_q_b[13]_clock_1, , , , );
GC1_q_b[13]_PORT_B_data_out_reg = DFFE(GC1_q_b[13]_PORT_B_data_out, GC1_q_b[13]_clock_1, , , );
GC1_q_b[13] = GC1_q_b[13]_PORT_B_data_out_reg[0];


--GC1_q_b[13] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[13]_PORT_A_data_in = ZB1_o_RamData[13];
GC1_q_b[13]_PORT_A_data_in_reg = DFFE(GC1_q_b[13]_PORT_A_data_in, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[13]_PORT_A_address_reg = DFFE(GC1_q_b[13]_PORT_A_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[13]_PORT_B_address_reg = DFFE(GC1_q_b[13]_PORT_B_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[13]_PORT_A_write_enable_reg = DFFE(GC1_q_b[13]_PORT_A_write_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_read_enable = B1L0;
GC1_q_b[13]_PORT_B_read_enable_reg = DFFE(GC1_q_b[13]_PORT_B_read_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[13]_PORT_A_byte_mask, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_clock_0 = !CLK_25MHz2;
GC1_q_b[13]_clock_1 = !CLK_25MHz2;
GC1_q_b[13]_PORT_B_data_out = MEMORY(GC1_q_b[13]_PORT_A_data_in_reg, , GC1_q_b[13]_PORT_A_address_reg, GC1_q_b[13]_PORT_B_address_reg, GC1_q_b[13]_PORT_A_write_enable_reg, GC1_q_b[13]_PORT_B_read_enable_reg, GC1_q_b[13]_PORT_A_byte_mask_reg, , GC1_q_b[13]_clock_0, GC1_q_b[13]_clock_1, , , , );
GC1_q_b[13]_PORT_B_data_out_reg = DFFE(GC1_q_b[13]_PORT_B_data_out, GC1_q_b[13]_clock_1, , , );
GC1_q_b[13] = GC1_q_b[13]_PORT_B_data_out_reg[0];


--GC1_q_b[13] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[13]_PORT_A_data_in = ZB1_o_RamData[13];
GC1_q_b[13]_PORT_A_data_in_reg = DFFE(GC1_q_b[13]_PORT_A_data_in, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[13]_PORT_A_address_reg = DFFE(GC1_q_b[13]_PORT_A_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[13]_PORT_B_address_reg = DFFE(GC1_q_b[13]_PORT_B_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[13]_PORT_A_write_enable_reg = DFFE(GC1_q_b[13]_PORT_A_write_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_read_enable = B1L0;
GC1_q_b[13]_PORT_B_read_enable_reg = DFFE(GC1_q_b[13]_PORT_B_read_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[13]_PORT_A_byte_mask, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_clock_0 = !CLK_25MHz2;
GC1_q_b[13]_clock_1 = !CLK_25MHz2;
GC1_q_b[13]_PORT_B_data_out = MEMORY(GC1_q_b[13]_PORT_A_data_in_reg, , GC1_q_b[13]_PORT_A_address_reg, GC1_q_b[13]_PORT_B_address_reg, GC1_q_b[13]_PORT_A_write_enable_reg, GC1_q_b[13]_PORT_B_read_enable_reg, GC1_q_b[13]_PORT_A_byte_mask_reg, , GC1_q_b[13]_clock_0, GC1_q_b[13]_clock_1, , , , );
GC1_q_b[13]_PORT_B_data_out_reg = DFFE(GC1_q_b[13]_PORT_B_data_out, GC1_q_b[13]_clock_1, , , );
GC1_q_b[13] = GC1_q_b[13]_PORT_B_data_out_reg[0];


--GC1_q_b[13] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[13]_PORT_A_data_in = ZB1_o_RamData[13];
GC1_q_b[13]_PORT_A_data_in_reg = DFFE(GC1_q_b[13]_PORT_A_data_in, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[13]_PORT_A_address_reg = DFFE(GC1_q_b[13]_PORT_A_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[13]_PORT_B_address_reg = DFFE(GC1_q_b[13]_PORT_B_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[13]_PORT_A_write_enable_reg = DFFE(GC1_q_b[13]_PORT_A_write_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_read_enable = B1L0;
GC1_q_b[13]_PORT_B_read_enable_reg = DFFE(GC1_q_b[13]_PORT_B_read_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[13]_PORT_A_byte_mask, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_clock_0 = !CLK_25MHz2;
GC1_q_b[13]_clock_1 = !CLK_25MHz2;
GC1_q_b[13]_PORT_B_data_out = MEMORY(GC1_q_b[13]_PORT_A_data_in_reg, , GC1_q_b[13]_PORT_A_address_reg, GC1_q_b[13]_PORT_B_address_reg, GC1_q_b[13]_PORT_A_write_enable_reg, GC1_q_b[13]_PORT_B_read_enable_reg, GC1_q_b[13]_PORT_A_byte_mask_reg, , GC1_q_b[13]_clock_0, GC1_q_b[13]_clock_1, , , , );
GC1_q_b[13]_PORT_B_data_out_reg = DFFE(GC1_q_b[13]_PORT_B_data_out, GC1_q_b[13]_clock_1, , , );
GC1_q_b[13] = GC1_q_b[13]_PORT_B_data_out_reg[0];


--LC1_q_b[14] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[14]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[14];
LC1_q_b[14]_PORT_A_data_in_reg = DFFE(LC1_q_b[14]_PORT_A_data_in, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[14]_PORT_A_address_reg = DFFE(LC1_q_b[14]_PORT_A_address, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[14]_PORT_B_address_reg = DFFE(LC1_q_b[14]_PORT_B_address, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[14]_PORT_A_write_enable_reg = DFFE(LC1_q_b[14]_PORT_A_write_enable, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_B_read_enable = VCC;
LC1_q_b[14]_PORT_B_read_enable_reg = DFFE(LC1_q_b[14]_PORT_B_read_enable, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14]_PORT_A_byte_mask = A1L0;
LC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[14]_PORT_A_byte_mask, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_clock_0 = !CLK_25MHz2;
LC1_q_b[14]_clock_1 = !CLK_25MHz2;
LC1_q_b[14]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[14]_clock_enable_1 = inst146;
LC1_q_b[14]_PORT_B_data_out = MEMORY(LC1_q_b[14]_PORT_A_data_in_reg, , LC1_q_b[14]_PORT_A_address_reg, LC1_q_b[14]_PORT_B_address_reg, LC1_q_b[14]_PORT_A_write_enable_reg, LC1_q_b[14]_PORT_B_read_enable_reg, LC1_q_b[14]_PORT_A_byte_mask_reg, , LC1_q_b[14]_clock_0, LC1_q_b[14]_clock_1, LC1_q_b[14]_clock_enable_0, LC1_q_b[14]_clock_enable_1, , );
LC1_q_b[14]_PORT_B_data_out_reg = DFFE(LC1_q_b[14]_PORT_B_data_out, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14] = LC1_q_b[14]_PORT_B_data_out_reg[0];


--LC1_q_b[14] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[14]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[14];
LC1_q_b[14]_PORT_A_data_in_reg = DFFE(LC1_q_b[14]_PORT_A_data_in, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[14]_PORT_A_address_reg = DFFE(LC1_q_b[14]_PORT_A_address, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[14]_PORT_B_address_reg = DFFE(LC1_q_b[14]_PORT_B_address, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[14]_PORT_A_write_enable_reg = DFFE(LC1_q_b[14]_PORT_A_write_enable, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_B_read_enable = VCC;
LC1_q_b[14]_PORT_B_read_enable_reg = DFFE(LC1_q_b[14]_PORT_B_read_enable, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14]_PORT_A_byte_mask = A1L0;
LC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[14]_PORT_A_byte_mask, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_clock_0 = !CLK_25MHz2;
LC1_q_b[14]_clock_1 = !CLK_25MHz2;
LC1_q_b[14]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[14]_clock_enable_1 = inst80;
LC1_q_b[14]_PORT_B_data_out = MEMORY(LC1_q_b[14]_PORT_A_data_in_reg, , LC1_q_b[14]_PORT_A_address_reg, LC1_q_b[14]_PORT_B_address_reg, LC1_q_b[14]_PORT_A_write_enable_reg, LC1_q_b[14]_PORT_B_read_enable_reg, LC1_q_b[14]_PORT_A_byte_mask_reg, , LC1_q_b[14]_clock_0, LC1_q_b[14]_clock_1, LC1_q_b[14]_clock_enable_0, LC1_q_b[14]_clock_enable_1, , );
LC1_q_b[14]_PORT_B_data_out_reg = DFFE(LC1_q_b[14]_PORT_B_data_out, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14] = LC1_q_b[14]_PORT_B_data_out_reg[0];


--LC1_q_b[14] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[14]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[14];
LC1_q_b[14]_PORT_A_data_in_reg = DFFE(LC1_q_b[14]_PORT_A_data_in, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[14]_PORT_A_address_reg = DFFE(LC1_q_b[14]_PORT_A_address, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[14]_PORT_B_address_reg = DFFE(LC1_q_b[14]_PORT_B_address, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[14]_PORT_A_write_enable_reg = DFFE(LC1_q_b[14]_PORT_A_write_enable, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_B_read_enable = VCC;
LC1_q_b[14]_PORT_B_read_enable_reg = DFFE(LC1_q_b[14]_PORT_B_read_enable, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14]_PORT_A_byte_mask = A1L0;
LC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[14]_PORT_A_byte_mask, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_clock_0 = !CLK_25MHz2;
LC1_q_b[14]_clock_1 = !CLK_25MHz2;
LC1_q_b[14]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[14]_clock_enable_1 = inst182;
LC1_q_b[14]_PORT_B_data_out = MEMORY(LC1_q_b[14]_PORT_A_data_in_reg, , LC1_q_b[14]_PORT_A_address_reg, LC1_q_b[14]_PORT_B_address_reg, LC1_q_b[14]_PORT_A_write_enable_reg, LC1_q_b[14]_PORT_B_read_enable_reg, LC1_q_b[14]_PORT_A_byte_mask_reg, , LC1_q_b[14]_clock_0, LC1_q_b[14]_clock_1, LC1_q_b[14]_clock_enable_0, LC1_q_b[14]_clock_enable_1, , );
LC1_q_b[14]_PORT_B_data_out_reg = DFFE(LC1_q_b[14]_PORT_B_data_out, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14] = LC1_q_b[14]_PORT_B_data_out_reg[0];


--LC1_q_b[14] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[14]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[14];
LC1_q_b[14]_PORT_A_data_in_reg = DFFE(LC1_q_b[14]_PORT_A_data_in, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[14]_PORT_A_address_reg = DFFE(LC1_q_b[14]_PORT_A_address, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[14]_PORT_B_address_reg = DFFE(LC1_q_b[14]_PORT_B_address, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[14]_PORT_A_write_enable_reg = DFFE(LC1_q_b[14]_PORT_A_write_enable, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_PORT_B_read_enable = VCC;
LC1_q_b[14]_PORT_B_read_enable_reg = DFFE(LC1_q_b[14]_PORT_B_read_enable, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14]_PORT_A_byte_mask = A1L0;
LC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[14]_PORT_A_byte_mask, LC1_q_b[14]_clock_0, , , LC1_q_b[14]_clock_enable_0);
LC1_q_b[14]_clock_0 = !CLK_25MHz2;
LC1_q_b[14]_clock_1 = !CLK_25MHz2;
LC1_q_b[14]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[14]_clock_enable_1 = inst154;
LC1_q_b[14]_PORT_B_data_out = MEMORY(LC1_q_b[14]_PORT_A_data_in_reg, , LC1_q_b[14]_PORT_A_address_reg, LC1_q_b[14]_PORT_B_address_reg, LC1_q_b[14]_PORT_A_write_enable_reg, LC1_q_b[14]_PORT_B_read_enable_reg, LC1_q_b[14]_PORT_A_byte_mask_reg, , LC1_q_b[14]_clock_0, LC1_q_b[14]_clock_1, LC1_q_b[14]_clock_enable_0, LC1_q_b[14]_clock_enable_1, , );
LC1_q_b[14]_PORT_B_data_out_reg = DFFE(LC1_q_b[14]_PORT_B_data_out, LC1_q_b[14]_clock_1, , , LC1_q_b[14]_clock_enable_1);
LC1_q_b[14] = LC1_q_b[14]_PORT_B_data_out_reg[0];


--GC1_q_b[14] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[14]_PORT_A_data_in = ZB1_o_RamData[14];
GC1_q_b[14]_PORT_A_data_in_reg = DFFE(GC1_q_b[14]_PORT_A_data_in, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[14]_PORT_A_address_reg = DFFE(GC1_q_b[14]_PORT_A_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[14]_PORT_B_address_reg = DFFE(GC1_q_b[14]_PORT_B_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[14]_PORT_A_write_enable_reg = DFFE(GC1_q_b[14]_PORT_A_write_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_read_enable = B1L0;
GC1_q_b[14]_PORT_B_read_enable_reg = DFFE(GC1_q_b[14]_PORT_B_read_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[14]_PORT_A_byte_mask, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_clock_0 = !CLK_25MHz2;
GC1_q_b[14]_clock_1 = !CLK_25MHz2;
GC1_q_b[14]_PORT_B_data_out = MEMORY(GC1_q_b[14]_PORT_A_data_in_reg, , GC1_q_b[14]_PORT_A_address_reg, GC1_q_b[14]_PORT_B_address_reg, GC1_q_b[14]_PORT_A_write_enable_reg, GC1_q_b[14]_PORT_B_read_enable_reg, GC1_q_b[14]_PORT_A_byte_mask_reg, , GC1_q_b[14]_clock_0, GC1_q_b[14]_clock_1, , , , );
GC1_q_b[14]_PORT_B_data_out_reg = DFFE(GC1_q_b[14]_PORT_B_data_out, GC1_q_b[14]_clock_1, , , );
GC1_q_b[14] = GC1_q_b[14]_PORT_B_data_out_reg[0];


--GC1_q_b[14] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[14]_PORT_A_data_in = ZB1_o_RamData[14];
GC1_q_b[14]_PORT_A_data_in_reg = DFFE(GC1_q_b[14]_PORT_A_data_in, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[14]_PORT_A_address_reg = DFFE(GC1_q_b[14]_PORT_A_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[14]_PORT_B_address_reg = DFFE(GC1_q_b[14]_PORT_B_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[14]_PORT_A_write_enable_reg = DFFE(GC1_q_b[14]_PORT_A_write_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_read_enable = B1L0;
GC1_q_b[14]_PORT_B_read_enable_reg = DFFE(GC1_q_b[14]_PORT_B_read_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[14]_PORT_A_byte_mask, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_clock_0 = !CLK_25MHz2;
GC1_q_b[14]_clock_1 = !CLK_25MHz2;
GC1_q_b[14]_PORT_B_data_out = MEMORY(GC1_q_b[14]_PORT_A_data_in_reg, , GC1_q_b[14]_PORT_A_address_reg, GC1_q_b[14]_PORT_B_address_reg, GC1_q_b[14]_PORT_A_write_enable_reg, GC1_q_b[14]_PORT_B_read_enable_reg, GC1_q_b[14]_PORT_A_byte_mask_reg, , GC1_q_b[14]_clock_0, GC1_q_b[14]_clock_1, , , , );
GC1_q_b[14]_PORT_B_data_out_reg = DFFE(GC1_q_b[14]_PORT_B_data_out, GC1_q_b[14]_clock_1, , , );
GC1_q_b[14] = GC1_q_b[14]_PORT_B_data_out_reg[0];


--GC1_q_b[14] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[14]_PORT_A_data_in = ZB1_o_RamData[14];
GC1_q_b[14]_PORT_A_data_in_reg = DFFE(GC1_q_b[14]_PORT_A_data_in, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[14]_PORT_A_address_reg = DFFE(GC1_q_b[14]_PORT_A_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[14]_PORT_B_address_reg = DFFE(GC1_q_b[14]_PORT_B_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[14]_PORT_A_write_enable_reg = DFFE(GC1_q_b[14]_PORT_A_write_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_read_enable = B1L0;
GC1_q_b[14]_PORT_B_read_enable_reg = DFFE(GC1_q_b[14]_PORT_B_read_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[14]_PORT_A_byte_mask, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_clock_0 = !CLK_25MHz2;
GC1_q_b[14]_clock_1 = !CLK_25MHz2;
GC1_q_b[14]_PORT_B_data_out = MEMORY(GC1_q_b[14]_PORT_A_data_in_reg, , GC1_q_b[14]_PORT_A_address_reg, GC1_q_b[14]_PORT_B_address_reg, GC1_q_b[14]_PORT_A_write_enable_reg, GC1_q_b[14]_PORT_B_read_enable_reg, GC1_q_b[14]_PORT_A_byte_mask_reg, , GC1_q_b[14]_clock_0, GC1_q_b[14]_clock_1, , , , );
GC1_q_b[14]_PORT_B_data_out_reg = DFFE(GC1_q_b[14]_PORT_B_data_out, GC1_q_b[14]_clock_1, , , );
GC1_q_b[14] = GC1_q_b[14]_PORT_B_data_out_reg[0];


--GC1_q_b[14] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[14]_PORT_A_data_in = ZB1_o_RamData[14];
GC1_q_b[14]_PORT_A_data_in_reg = DFFE(GC1_q_b[14]_PORT_A_data_in, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[14]_PORT_A_address_reg = DFFE(GC1_q_b[14]_PORT_A_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[14]_PORT_B_address_reg = DFFE(GC1_q_b[14]_PORT_B_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[14]_PORT_A_write_enable_reg = DFFE(GC1_q_b[14]_PORT_A_write_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_read_enable = B1L0;
GC1_q_b[14]_PORT_B_read_enable_reg = DFFE(GC1_q_b[14]_PORT_B_read_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[14]_PORT_A_byte_mask, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_clock_0 = !CLK_25MHz2;
GC1_q_b[14]_clock_1 = !CLK_25MHz2;
GC1_q_b[14]_PORT_B_data_out = MEMORY(GC1_q_b[14]_PORT_A_data_in_reg, , GC1_q_b[14]_PORT_A_address_reg, GC1_q_b[14]_PORT_B_address_reg, GC1_q_b[14]_PORT_A_write_enable_reg, GC1_q_b[14]_PORT_B_read_enable_reg, GC1_q_b[14]_PORT_A_byte_mask_reg, , GC1_q_b[14]_clock_0, GC1_q_b[14]_clock_1, , , , );
GC1_q_b[14]_PORT_B_data_out_reg = DFFE(GC1_q_b[14]_PORT_B_data_out, GC1_q_b[14]_clock_1, , , );
GC1_q_b[14] = GC1_q_b[14]_PORT_B_data_out_reg[0];


--GC1_q_b[14] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[14]_PORT_A_data_in = ZB1_o_RamData[14];
GC1_q_b[14]_PORT_A_data_in_reg = DFFE(GC1_q_b[14]_PORT_A_data_in, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[14]_PORT_A_address_reg = DFFE(GC1_q_b[14]_PORT_A_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[14]_PORT_B_address_reg = DFFE(GC1_q_b[14]_PORT_B_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[14]_PORT_A_write_enable_reg = DFFE(GC1_q_b[14]_PORT_A_write_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_read_enable = B1L0;
GC1_q_b[14]_PORT_B_read_enable_reg = DFFE(GC1_q_b[14]_PORT_B_read_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[14]_PORT_A_byte_mask, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_clock_0 = !CLK_25MHz2;
GC1_q_b[14]_clock_1 = !CLK_25MHz2;
GC1_q_b[14]_PORT_B_data_out = MEMORY(GC1_q_b[14]_PORT_A_data_in_reg, , GC1_q_b[14]_PORT_A_address_reg, GC1_q_b[14]_PORT_B_address_reg, GC1_q_b[14]_PORT_A_write_enable_reg, GC1_q_b[14]_PORT_B_read_enable_reg, GC1_q_b[14]_PORT_A_byte_mask_reg, , GC1_q_b[14]_clock_0, GC1_q_b[14]_clock_1, , , , );
GC1_q_b[14]_PORT_B_data_out_reg = DFFE(GC1_q_b[14]_PORT_B_data_out, GC1_q_b[14]_clock_1, , , );
GC1_q_b[14] = GC1_q_b[14]_PORT_B_data_out_reg[0];


--LC1_q_b[15] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[15]_PORT_A_data_in = W1_o_LINE2_TEMP_DATA[15];
LC1_q_b[15]_PORT_A_data_in_reg = DFFE(LC1_q_b[15]_PORT_A_data_in, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[15]_PORT_A_address_reg = DFFE(LC1_q_b[15]_PORT_A_address, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[15]_PORT_B_address_reg = DFFE(LC1_q_b[15]_PORT_B_address, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[15]_PORT_A_write_enable_reg = DFFE(LC1_q_b[15]_PORT_A_write_enable, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_B_read_enable = VCC;
LC1_q_b[15]_PORT_B_read_enable_reg = DFFE(LC1_q_b[15]_PORT_B_read_enable, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15]_PORT_A_byte_mask = A1L0;
LC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[15]_PORT_A_byte_mask, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_clock_0 = !CLK_25MHz2;
LC1_q_b[15]_clock_1 = !CLK_25MHz2;
LC1_q_b[15]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[15]_clock_enable_1 = inst146;
LC1_q_b[15]_PORT_B_data_out = MEMORY(LC1_q_b[15]_PORT_A_data_in_reg, , LC1_q_b[15]_PORT_A_address_reg, LC1_q_b[15]_PORT_B_address_reg, LC1_q_b[15]_PORT_A_write_enable_reg, LC1_q_b[15]_PORT_B_read_enable_reg, LC1_q_b[15]_PORT_A_byte_mask_reg, , LC1_q_b[15]_clock_0, LC1_q_b[15]_clock_1, LC1_q_b[15]_clock_enable_0, LC1_q_b[15]_clock_enable_1, , );
LC1_q_b[15]_PORT_B_data_out_reg = DFFE(LC1_q_b[15]_PORT_B_data_out, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15] = LC1_q_b[15]_PORT_B_data_out_reg[0];


--LC1_q_b[15] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[15]_PORT_A_data_in = W1_o_LINE1_TEMP_DATA[15];
LC1_q_b[15]_PORT_A_data_in_reg = DFFE(LC1_q_b[15]_PORT_A_data_in, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[15]_PORT_A_address_reg = DFFE(LC1_q_b[15]_PORT_A_address, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[15]_PORT_B_address_reg = DFFE(LC1_q_b[15]_PORT_B_address, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[15]_PORT_A_write_enable_reg = DFFE(LC1_q_b[15]_PORT_A_write_enable, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_B_read_enable = VCC;
LC1_q_b[15]_PORT_B_read_enable_reg = DFFE(LC1_q_b[15]_PORT_B_read_enable, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15]_PORT_A_byte_mask = A1L0;
LC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[15]_PORT_A_byte_mask, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_clock_0 = !CLK_25MHz2;
LC1_q_b[15]_clock_1 = !CLK_25MHz2;
LC1_q_b[15]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[15]_clock_enable_1 = inst80;
LC1_q_b[15]_PORT_B_data_out = MEMORY(LC1_q_b[15]_PORT_A_data_in_reg, , LC1_q_b[15]_PORT_A_address_reg, LC1_q_b[15]_PORT_B_address_reg, LC1_q_b[15]_PORT_A_write_enable_reg, LC1_q_b[15]_PORT_B_read_enable_reg, LC1_q_b[15]_PORT_A_byte_mask_reg, , LC1_q_b[15]_clock_0, LC1_q_b[15]_clock_1, LC1_q_b[15]_clock_enable_0, LC1_q_b[15]_clock_enable_1, , );
LC1_q_b[15]_PORT_B_data_out_reg = DFFE(LC1_q_b[15]_PORT_B_data_out, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15] = LC1_q_b[15]_PORT_B_data_out_reg[0];


--LC1_q_b[15] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[15]_PORT_A_data_in = W1_o_LINE4_TEMP_DATA[15];
LC1_q_b[15]_PORT_A_data_in_reg = DFFE(LC1_q_b[15]_PORT_A_data_in, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[15]_PORT_A_address_reg = DFFE(LC1_q_b[15]_PORT_A_address, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[15]_PORT_B_address_reg = DFFE(LC1_q_b[15]_PORT_B_address, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[15]_PORT_A_write_enable_reg = DFFE(LC1_q_b[15]_PORT_A_write_enable, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_B_read_enable = VCC;
LC1_q_b[15]_PORT_B_read_enable_reg = DFFE(LC1_q_b[15]_PORT_B_read_enable, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15]_PORT_A_byte_mask = A1L0;
LC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[15]_PORT_A_byte_mask, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_clock_0 = !CLK_25MHz2;
LC1_q_b[15]_clock_1 = !CLK_25MHz2;
LC1_q_b[15]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[15]_clock_enable_1 = inst182;
LC1_q_b[15]_PORT_B_data_out = MEMORY(LC1_q_b[15]_PORT_A_data_in_reg, , LC1_q_b[15]_PORT_A_address_reg, LC1_q_b[15]_PORT_B_address_reg, LC1_q_b[15]_PORT_A_write_enable_reg, LC1_q_b[15]_PORT_B_read_enable_reg, LC1_q_b[15]_PORT_A_byte_mask_reg, , LC1_q_b[15]_clock_0, LC1_q_b[15]_clock_1, LC1_q_b[15]_clock_enable_0, LC1_q_b[15]_clock_enable_1, , );
LC1_q_b[15]_PORT_B_data_out_reg = DFFE(LC1_q_b[15]_PORT_B_data_out, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15] = LC1_q_b[15]_PORT_B_data_out_reg[0];


--LC1_q_b[15] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[15]_PORT_A_data_in = W1_o_LINE3_TEMP_DATA[15];
LC1_q_b[15]_PORT_A_data_in_reg = DFFE(LC1_q_b[15]_PORT_A_data_in, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[15]_PORT_A_address_reg = DFFE(LC1_q_b[15]_PORT_A_address, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[15]_PORT_B_address_reg = DFFE(LC1_q_b[15]_PORT_B_address, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[15]_PORT_A_write_enable_reg = DFFE(LC1_q_b[15]_PORT_A_write_enable, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_PORT_B_read_enable = VCC;
LC1_q_b[15]_PORT_B_read_enable_reg = DFFE(LC1_q_b[15]_PORT_B_read_enable, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15]_PORT_A_byte_mask = A1L0;
LC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[15]_PORT_A_byte_mask, LC1_q_b[15]_clock_0, , , LC1_q_b[15]_clock_enable_0);
LC1_q_b[15]_clock_0 = !CLK_25MHz2;
LC1_q_b[15]_clock_1 = !CLK_25MHz2;
LC1_q_b[15]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[15]_clock_enable_1 = inst154;
LC1_q_b[15]_PORT_B_data_out = MEMORY(LC1_q_b[15]_PORT_A_data_in_reg, , LC1_q_b[15]_PORT_A_address_reg, LC1_q_b[15]_PORT_B_address_reg, LC1_q_b[15]_PORT_A_write_enable_reg, LC1_q_b[15]_PORT_B_read_enable_reg, LC1_q_b[15]_PORT_A_byte_mask_reg, , LC1_q_b[15]_clock_0, LC1_q_b[15]_clock_1, LC1_q_b[15]_clock_enable_0, LC1_q_b[15]_clock_enable_1, , );
LC1_q_b[15]_PORT_B_data_out_reg = DFFE(LC1_q_b[15]_PORT_B_data_out, LC1_q_b[15]_clock_1, , , LC1_q_b[15]_clock_enable_1);
LC1_q_b[15] = LC1_q_b[15]_PORT_B_data_out_reg[0];


--GC1_q_b[15] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[15]_PORT_A_data_in = ZB1_o_RamData[15];
GC1_q_b[15]_PORT_A_data_in_reg = DFFE(GC1_q_b[15]_PORT_A_data_in, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[15]_PORT_A_address_reg = DFFE(GC1_q_b[15]_PORT_A_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[15]_PORT_B_address_reg = DFFE(GC1_q_b[15]_PORT_B_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[15]_PORT_A_write_enable_reg = DFFE(GC1_q_b[15]_PORT_A_write_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_read_enable = B1L0;
GC1_q_b[15]_PORT_B_read_enable_reg = DFFE(GC1_q_b[15]_PORT_B_read_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[15]_PORT_A_byte_mask, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_clock_0 = !CLK_25MHz2;
GC1_q_b[15]_clock_1 = !CLK_25MHz2;
GC1_q_b[15]_PORT_B_data_out = MEMORY(GC1_q_b[15]_PORT_A_data_in_reg, , GC1_q_b[15]_PORT_A_address_reg, GC1_q_b[15]_PORT_B_address_reg, GC1_q_b[15]_PORT_A_write_enable_reg, GC1_q_b[15]_PORT_B_read_enable_reg, GC1_q_b[15]_PORT_A_byte_mask_reg, , GC1_q_b[15]_clock_0, GC1_q_b[15]_clock_1, , , , );
GC1_q_b[15]_PORT_B_data_out_reg = DFFE(GC1_q_b[15]_PORT_B_data_out, GC1_q_b[15]_clock_1, , , );
GC1_q_b[15] = GC1_q_b[15]_PORT_B_data_out_reg[0];


--GC1_q_b[15] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[15]_PORT_A_data_in = ZB1_o_RamData[15];
GC1_q_b[15]_PORT_A_data_in_reg = DFFE(GC1_q_b[15]_PORT_A_data_in, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[15]_PORT_A_address_reg = DFFE(GC1_q_b[15]_PORT_A_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[15]_PORT_B_address_reg = DFFE(GC1_q_b[15]_PORT_B_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[15]_PORT_A_write_enable_reg = DFFE(GC1_q_b[15]_PORT_A_write_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_read_enable = B1L0;
GC1_q_b[15]_PORT_B_read_enable_reg = DFFE(GC1_q_b[15]_PORT_B_read_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[15]_PORT_A_byte_mask, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_clock_0 = !CLK_25MHz2;
GC1_q_b[15]_clock_1 = !CLK_25MHz2;
GC1_q_b[15]_PORT_B_data_out = MEMORY(GC1_q_b[15]_PORT_A_data_in_reg, , GC1_q_b[15]_PORT_A_address_reg, GC1_q_b[15]_PORT_B_address_reg, GC1_q_b[15]_PORT_A_write_enable_reg, GC1_q_b[15]_PORT_B_read_enable_reg, GC1_q_b[15]_PORT_A_byte_mask_reg, , GC1_q_b[15]_clock_0, GC1_q_b[15]_clock_1, , , , );
GC1_q_b[15]_PORT_B_data_out_reg = DFFE(GC1_q_b[15]_PORT_B_data_out, GC1_q_b[15]_clock_1, , , );
GC1_q_b[15] = GC1_q_b[15]_PORT_B_data_out_reg[0];


--GC1_q_b[15] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[15]_PORT_A_data_in = ZB1_o_RamData[15];
GC1_q_b[15]_PORT_A_data_in_reg = DFFE(GC1_q_b[15]_PORT_A_data_in, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[15]_PORT_A_address_reg = DFFE(GC1_q_b[15]_PORT_A_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[15]_PORT_B_address_reg = DFFE(GC1_q_b[15]_PORT_B_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[15]_PORT_A_write_enable_reg = DFFE(GC1_q_b[15]_PORT_A_write_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_read_enable = B1L0;
GC1_q_b[15]_PORT_B_read_enable_reg = DFFE(GC1_q_b[15]_PORT_B_read_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[15]_PORT_A_byte_mask, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_clock_0 = !CLK_25MHz2;
GC1_q_b[15]_clock_1 = !CLK_25MHz2;
GC1_q_b[15]_PORT_B_data_out = MEMORY(GC1_q_b[15]_PORT_A_data_in_reg, , GC1_q_b[15]_PORT_A_address_reg, GC1_q_b[15]_PORT_B_address_reg, GC1_q_b[15]_PORT_A_write_enable_reg, GC1_q_b[15]_PORT_B_read_enable_reg, GC1_q_b[15]_PORT_A_byte_mask_reg, , GC1_q_b[15]_clock_0, GC1_q_b[15]_clock_1, , , , );
GC1_q_b[15]_PORT_B_data_out_reg = DFFE(GC1_q_b[15]_PORT_B_data_out, GC1_q_b[15]_clock_1, , , );
GC1_q_b[15] = GC1_q_b[15]_PORT_B_data_out_reg[0];


--GC1_q_b[15] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[15]_PORT_A_data_in = ZB1_o_RamData[15];
GC1_q_b[15]_PORT_A_data_in_reg = DFFE(GC1_q_b[15]_PORT_A_data_in, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[15]_PORT_A_address_reg = DFFE(GC1_q_b[15]_PORT_A_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[15]_PORT_B_address_reg = DFFE(GC1_q_b[15]_PORT_B_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[15]_PORT_A_write_enable_reg = DFFE(GC1_q_b[15]_PORT_A_write_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_read_enable = B1L0;
GC1_q_b[15]_PORT_B_read_enable_reg = DFFE(GC1_q_b[15]_PORT_B_read_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[15]_PORT_A_byte_mask, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_clock_0 = !CLK_25MHz2;
GC1_q_b[15]_clock_1 = !CLK_25MHz2;
GC1_q_b[15]_PORT_B_data_out = MEMORY(GC1_q_b[15]_PORT_A_data_in_reg, , GC1_q_b[15]_PORT_A_address_reg, GC1_q_b[15]_PORT_B_address_reg, GC1_q_b[15]_PORT_A_write_enable_reg, GC1_q_b[15]_PORT_B_read_enable_reg, GC1_q_b[15]_PORT_A_byte_mask_reg, , GC1_q_b[15]_clock_0, GC1_q_b[15]_clock_1, , , , );
GC1_q_b[15]_PORT_B_data_out_reg = DFFE(GC1_q_b[15]_PORT_B_data_out, GC1_q_b[15]_clock_1, , , );
GC1_q_b[15] = GC1_q_b[15]_PORT_B_data_out_reg[0];


--GC1_q_b[15] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[15]_PORT_A_data_in = ZB1_o_RamData[15];
GC1_q_b[15]_PORT_A_data_in_reg = DFFE(GC1_q_b[15]_PORT_A_data_in, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[15]_PORT_A_address_reg = DFFE(GC1_q_b[15]_PORT_A_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[15]_PORT_B_address_reg = DFFE(GC1_q_b[15]_PORT_B_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[15]_PORT_A_write_enable_reg = DFFE(GC1_q_b[15]_PORT_A_write_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_read_enable = B1L0;
GC1_q_b[15]_PORT_B_read_enable_reg = DFFE(GC1_q_b[15]_PORT_B_read_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_byte_mask = ZB1_o_ByteSel[1];
GC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[15]_PORT_A_byte_mask, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_clock_0 = !CLK_25MHz2;
GC1_q_b[15]_clock_1 = !CLK_25MHz2;
GC1_q_b[15]_PORT_B_data_out = MEMORY(GC1_q_b[15]_PORT_A_data_in_reg, , GC1_q_b[15]_PORT_A_address_reg, GC1_q_b[15]_PORT_B_address_reg, GC1_q_b[15]_PORT_A_write_enable_reg, GC1_q_b[15]_PORT_B_read_enable_reg, GC1_q_b[15]_PORT_A_byte_mask_reg, , GC1_q_b[15]_clock_0, GC1_q_b[15]_clock_1, , , , );
GC1_q_b[15]_PORT_B_data_out_reg = DFFE(GC1_q_b[15]_PORT_B_data_out, GC1_q_b[15]_clock_1, , , );
GC1_q_b[15] = GC1_q_b[15]_PORT_B_data_out_reg[0];


--LC1_q_b[16] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[16]_PORT_A_data_in = A1L0;
LC1_q_b[16]_PORT_A_data_in_reg = DFFE(LC1_q_b[16]_PORT_A_data_in, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[16]_PORT_A_address_reg = DFFE(LC1_q_b[16]_PORT_A_address, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[16]_PORT_B_address_reg = DFFE(LC1_q_b[16]_PORT_B_address, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[16]_PORT_A_write_enable_reg = DFFE(LC1_q_b[16]_PORT_A_write_enable, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_B_read_enable = VCC;
LC1_q_b[16]_PORT_B_read_enable_reg = DFFE(LC1_q_b[16]_PORT_B_read_enable, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16]_PORT_A_byte_mask = A1L0;
LC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[16]_PORT_A_byte_mask, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_clock_0 = !CLK_25MHz2;
LC1_q_b[16]_clock_1 = !CLK_25MHz2;
LC1_q_b[16]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[16]_clock_enable_1 = inst146;
LC1_q_b[16]_PORT_B_data_out = MEMORY(LC1_q_b[16]_PORT_A_data_in_reg, , LC1_q_b[16]_PORT_A_address_reg, LC1_q_b[16]_PORT_B_address_reg, LC1_q_b[16]_PORT_A_write_enable_reg, LC1_q_b[16]_PORT_B_read_enable_reg, LC1_q_b[16]_PORT_A_byte_mask_reg, , LC1_q_b[16]_clock_0, LC1_q_b[16]_clock_1, LC1_q_b[16]_clock_enable_0, LC1_q_b[16]_clock_enable_1, , );
LC1_q_b[16]_PORT_B_data_out_reg = DFFE(LC1_q_b[16]_PORT_B_data_out, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16] = LC1_q_b[16]_PORT_B_data_out_reg[0];


--LC1_q_b[16] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[16]_PORT_A_data_in = A1L0;
LC1_q_b[16]_PORT_A_data_in_reg = DFFE(LC1_q_b[16]_PORT_A_data_in, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[16]_PORT_A_address_reg = DFFE(LC1_q_b[16]_PORT_A_address, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[16]_PORT_B_address_reg = DFFE(LC1_q_b[16]_PORT_B_address, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[16]_PORT_A_write_enable_reg = DFFE(LC1_q_b[16]_PORT_A_write_enable, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_B_read_enable = VCC;
LC1_q_b[16]_PORT_B_read_enable_reg = DFFE(LC1_q_b[16]_PORT_B_read_enable, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16]_PORT_A_byte_mask = A1L0;
LC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[16]_PORT_A_byte_mask, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_clock_0 = !CLK_25MHz2;
LC1_q_b[16]_clock_1 = !CLK_25MHz2;
LC1_q_b[16]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[16]_clock_enable_1 = inst80;
LC1_q_b[16]_PORT_B_data_out = MEMORY(LC1_q_b[16]_PORT_A_data_in_reg, , LC1_q_b[16]_PORT_A_address_reg, LC1_q_b[16]_PORT_B_address_reg, LC1_q_b[16]_PORT_A_write_enable_reg, LC1_q_b[16]_PORT_B_read_enable_reg, LC1_q_b[16]_PORT_A_byte_mask_reg, , LC1_q_b[16]_clock_0, LC1_q_b[16]_clock_1, LC1_q_b[16]_clock_enable_0, LC1_q_b[16]_clock_enable_1, , );
LC1_q_b[16]_PORT_B_data_out_reg = DFFE(LC1_q_b[16]_PORT_B_data_out, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16] = LC1_q_b[16]_PORT_B_data_out_reg[0];


--LC1_q_b[16] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[16]_PORT_A_data_in = A1L0;
LC1_q_b[16]_PORT_A_data_in_reg = DFFE(LC1_q_b[16]_PORT_A_data_in, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[16]_PORT_A_address_reg = DFFE(LC1_q_b[16]_PORT_A_address, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[16]_PORT_B_address_reg = DFFE(LC1_q_b[16]_PORT_B_address, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[16]_PORT_A_write_enable_reg = DFFE(LC1_q_b[16]_PORT_A_write_enable, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_B_read_enable = VCC;
LC1_q_b[16]_PORT_B_read_enable_reg = DFFE(LC1_q_b[16]_PORT_B_read_enable, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16]_PORT_A_byte_mask = A1L0;
LC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[16]_PORT_A_byte_mask, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_clock_0 = !CLK_25MHz2;
LC1_q_b[16]_clock_1 = !CLK_25MHz2;
LC1_q_b[16]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[16]_clock_enable_1 = inst182;
LC1_q_b[16]_PORT_B_data_out = MEMORY(LC1_q_b[16]_PORT_A_data_in_reg, , LC1_q_b[16]_PORT_A_address_reg, LC1_q_b[16]_PORT_B_address_reg, LC1_q_b[16]_PORT_A_write_enable_reg, LC1_q_b[16]_PORT_B_read_enable_reg, LC1_q_b[16]_PORT_A_byte_mask_reg, , LC1_q_b[16]_clock_0, LC1_q_b[16]_clock_1, LC1_q_b[16]_clock_enable_0, LC1_q_b[16]_clock_enable_1, , );
LC1_q_b[16]_PORT_B_data_out_reg = DFFE(LC1_q_b[16]_PORT_B_data_out, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16] = LC1_q_b[16]_PORT_B_data_out_reg[0];


--LC1_q_b[16] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[16]_PORT_A_data_in = A1L0;
LC1_q_b[16]_PORT_A_data_in_reg = DFFE(LC1_q_b[16]_PORT_A_data_in, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[16]_PORT_A_address_reg = DFFE(LC1_q_b[16]_PORT_A_address, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[16]_PORT_B_address_reg = DFFE(LC1_q_b[16]_PORT_B_address, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[16]_PORT_A_write_enable_reg = DFFE(LC1_q_b[16]_PORT_A_write_enable, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_PORT_B_read_enable = VCC;
LC1_q_b[16]_PORT_B_read_enable_reg = DFFE(LC1_q_b[16]_PORT_B_read_enable, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16]_PORT_A_byte_mask = A1L0;
LC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[16]_PORT_A_byte_mask, LC1_q_b[16]_clock_0, , , LC1_q_b[16]_clock_enable_0);
LC1_q_b[16]_clock_0 = !CLK_25MHz2;
LC1_q_b[16]_clock_1 = !CLK_25MHz2;
LC1_q_b[16]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[16]_clock_enable_1 = inst154;
LC1_q_b[16]_PORT_B_data_out = MEMORY(LC1_q_b[16]_PORT_A_data_in_reg, , LC1_q_b[16]_PORT_A_address_reg, LC1_q_b[16]_PORT_B_address_reg, LC1_q_b[16]_PORT_A_write_enable_reg, LC1_q_b[16]_PORT_B_read_enable_reg, LC1_q_b[16]_PORT_A_byte_mask_reg, , LC1_q_b[16]_clock_0, LC1_q_b[16]_clock_1, LC1_q_b[16]_clock_enable_0, LC1_q_b[16]_clock_enable_1, , );
LC1_q_b[16]_PORT_B_data_out_reg = DFFE(LC1_q_b[16]_PORT_B_data_out, LC1_q_b[16]_clock_1, , , LC1_q_b[16]_clock_enable_1);
LC1_q_b[16] = LC1_q_b[16]_PORT_B_data_out_reg[0];


--GC1_q_b[16] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[16]_PORT_A_data_in = ZB1_o_RamData[16];
GC1_q_b[16]_PORT_A_data_in_reg = DFFE(GC1_q_b[16]_PORT_A_data_in, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[16]_PORT_A_address_reg = DFFE(GC1_q_b[16]_PORT_A_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[16]_PORT_B_address_reg = DFFE(GC1_q_b[16]_PORT_B_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[16]_PORT_A_write_enable_reg = DFFE(GC1_q_b[16]_PORT_A_write_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_read_enable = B1L0;
GC1_q_b[16]_PORT_B_read_enable_reg = DFFE(GC1_q_b[16]_PORT_B_read_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[16]_PORT_A_byte_mask, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_clock_0 = !CLK_25MHz2;
GC1_q_b[16]_clock_1 = !CLK_25MHz2;
GC1_q_b[16]_PORT_B_data_out = MEMORY(GC1_q_b[16]_PORT_A_data_in_reg, , GC1_q_b[16]_PORT_A_address_reg, GC1_q_b[16]_PORT_B_address_reg, GC1_q_b[16]_PORT_A_write_enable_reg, GC1_q_b[16]_PORT_B_read_enable_reg, GC1_q_b[16]_PORT_A_byte_mask_reg, , GC1_q_b[16]_clock_0, GC1_q_b[16]_clock_1, , , , );
GC1_q_b[16]_PORT_B_data_out_reg = DFFE(GC1_q_b[16]_PORT_B_data_out, GC1_q_b[16]_clock_1, , , );
GC1_q_b[16] = GC1_q_b[16]_PORT_B_data_out_reg[0];


--GC1_q_b[16] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[16]_PORT_A_data_in = ZB1_o_RamData[16];
GC1_q_b[16]_PORT_A_data_in_reg = DFFE(GC1_q_b[16]_PORT_A_data_in, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[16]_PORT_A_address_reg = DFFE(GC1_q_b[16]_PORT_A_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[16]_PORT_B_address_reg = DFFE(GC1_q_b[16]_PORT_B_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[16]_PORT_A_write_enable_reg = DFFE(GC1_q_b[16]_PORT_A_write_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_read_enable = B1L0;
GC1_q_b[16]_PORT_B_read_enable_reg = DFFE(GC1_q_b[16]_PORT_B_read_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[16]_PORT_A_byte_mask, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_clock_0 = !CLK_25MHz2;
GC1_q_b[16]_clock_1 = !CLK_25MHz2;
GC1_q_b[16]_PORT_B_data_out = MEMORY(GC1_q_b[16]_PORT_A_data_in_reg, , GC1_q_b[16]_PORT_A_address_reg, GC1_q_b[16]_PORT_B_address_reg, GC1_q_b[16]_PORT_A_write_enable_reg, GC1_q_b[16]_PORT_B_read_enable_reg, GC1_q_b[16]_PORT_A_byte_mask_reg, , GC1_q_b[16]_clock_0, GC1_q_b[16]_clock_1, , , , );
GC1_q_b[16]_PORT_B_data_out_reg = DFFE(GC1_q_b[16]_PORT_B_data_out, GC1_q_b[16]_clock_1, , , );
GC1_q_b[16] = GC1_q_b[16]_PORT_B_data_out_reg[0];


--GC1_q_b[16] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[16]_PORT_A_data_in = ZB1_o_RamData[16];
GC1_q_b[16]_PORT_A_data_in_reg = DFFE(GC1_q_b[16]_PORT_A_data_in, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[16]_PORT_A_address_reg = DFFE(GC1_q_b[16]_PORT_A_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[16]_PORT_B_address_reg = DFFE(GC1_q_b[16]_PORT_B_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[16]_PORT_A_write_enable_reg = DFFE(GC1_q_b[16]_PORT_A_write_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_read_enable = B1L0;
GC1_q_b[16]_PORT_B_read_enable_reg = DFFE(GC1_q_b[16]_PORT_B_read_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[16]_PORT_A_byte_mask, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_clock_0 = !CLK_25MHz2;
GC1_q_b[16]_clock_1 = !CLK_25MHz2;
GC1_q_b[16]_PORT_B_data_out = MEMORY(GC1_q_b[16]_PORT_A_data_in_reg, , GC1_q_b[16]_PORT_A_address_reg, GC1_q_b[16]_PORT_B_address_reg, GC1_q_b[16]_PORT_A_write_enable_reg, GC1_q_b[16]_PORT_B_read_enable_reg, GC1_q_b[16]_PORT_A_byte_mask_reg, , GC1_q_b[16]_clock_0, GC1_q_b[16]_clock_1, , , , );
GC1_q_b[16]_PORT_B_data_out_reg = DFFE(GC1_q_b[16]_PORT_B_data_out, GC1_q_b[16]_clock_1, , , );
GC1_q_b[16] = GC1_q_b[16]_PORT_B_data_out_reg[0];


--GC1_q_b[16] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[16]_PORT_A_data_in = ZB1_o_RamData[16];
GC1_q_b[16]_PORT_A_data_in_reg = DFFE(GC1_q_b[16]_PORT_A_data_in, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[16]_PORT_A_address_reg = DFFE(GC1_q_b[16]_PORT_A_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[16]_PORT_B_address_reg = DFFE(GC1_q_b[16]_PORT_B_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[16]_PORT_A_write_enable_reg = DFFE(GC1_q_b[16]_PORT_A_write_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_read_enable = B1L0;
GC1_q_b[16]_PORT_B_read_enable_reg = DFFE(GC1_q_b[16]_PORT_B_read_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[16]_PORT_A_byte_mask, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_clock_0 = !CLK_25MHz2;
GC1_q_b[16]_clock_1 = !CLK_25MHz2;
GC1_q_b[16]_PORT_B_data_out = MEMORY(GC1_q_b[16]_PORT_A_data_in_reg, , GC1_q_b[16]_PORT_A_address_reg, GC1_q_b[16]_PORT_B_address_reg, GC1_q_b[16]_PORT_A_write_enable_reg, GC1_q_b[16]_PORT_B_read_enable_reg, GC1_q_b[16]_PORT_A_byte_mask_reg, , GC1_q_b[16]_clock_0, GC1_q_b[16]_clock_1, , , , );
GC1_q_b[16]_PORT_B_data_out_reg = DFFE(GC1_q_b[16]_PORT_B_data_out, GC1_q_b[16]_clock_1, , , );
GC1_q_b[16] = GC1_q_b[16]_PORT_B_data_out_reg[0];


--GC1_q_b[16] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[16]_PORT_A_data_in = ZB1_o_RamData[16];
GC1_q_b[16]_PORT_A_data_in_reg = DFFE(GC1_q_b[16]_PORT_A_data_in, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[16]_PORT_A_address_reg = DFFE(GC1_q_b[16]_PORT_A_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[16]_PORT_B_address_reg = DFFE(GC1_q_b[16]_PORT_B_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[16]_PORT_A_write_enable_reg = DFFE(GC1_q_b[16]_PORT_A_write_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_read_enable = B1L0;
GC1_q_b[16]_PORT_B_read_enable_reg = DFFE(GC1_q_b[16]_PORT_B_read_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[16]_PORT_A_byte_mask, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_clock_0 = !CLK_25MHz2;
GC1_q_b[16]_clock_1 = !CLK_25MHz2;
GC1_q_b[16]_PORT_B_data_out = MEMORY(GC1_q_b[16]_PORT_A_data_in_reg, , GC1_q_b[16]_PORT_A_address_reg, GC1_q_b[16]_PORT_B_address_reg, GC1_q_b[16]_PORT_A_write_enable_reg, GC1_q_b[16]_PORT_B_read_enable_reg, GC1_q_b[16]_PORT_A_byte_mask_reg, , GC1_q_b[16]_clock_0, GC1_q_b[16]_clock_1, , , , );
GC1_q_b[16]_PORT_B_data_out_reg = DFFE(GC1_q_b[16]_PORT_B_data_out, GC1_q_b[16]_clock_1, , , );
GC1_q_b[16] = GC1_q_b[16]_PORT_B_data_out_reg[0];


--LC1_q_b[17] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[17]_PORT_A_data_in = A1L0;
LC1_q_b[17]_PORT_A_data_in_reg = DFFE(LC1_q_b[17]_PORT_A_data_in, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[17]_PORT_A_address_reg = DFFE(LC1_q_b[17]_PORT_A_address, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[17]_PORT_B_address_reg = DFFE(LC1_q_b[17]_PORT_B_address, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[17]_PORT_A_write_enable_reg = DFFE(LC1_q_b[17]_PORT_A_write_enable, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_B_read_enable = VCC;
LC1_q_b[17]_PORT_B_read_enable_reg = DFFE(LC1_q_b[17]_PORT_B_read_enable, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17]_PORT_A_byte_mask = A1L0;
LC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[17]_PORT_A_byte_mask, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_clock_0 = !CLK_25MHz2;
LC1_q_b[17]_clock_1 = !CLK_25MHz2;
LC1_q_b[17]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[17]_clock_enable_1 = inst146;
LC1_q_b[17]_PORT_B_data_out = MEMORY(LC1_q_b[17]_PORT_A_data_in_reg, , LC1_q_b[17]_PORT_A_address_reg, LC1_q_b[17]_PORT_B_address_reg, LC1_q_b[17]_PORT_A_write_enable_reg, LC1_q_b[17]_PORT_B_read_enable_reg, LC1_q_b[17]_PORT_A_byte_mask_reg, , LC1_q_b[17]_clock_0, LC1_q_b[17]_clock_1, LC1_q_b[17]_clock_enable_0, LC1_q_b[17]_clock_enable_1, , );
LC1_q_b[17]_PORT_B_data_out_reg = DFFE(LC1_q_b[17]_PORT_B_data_out, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17] = LC1_q_b[17]_PORT_B_data_out_reg[0];


--LC1_q_b[17] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[17]_PORT_A_data_in = A1L0;
LC1_q_b[17]_PORT_A_data_in_reg = DFFE(LC1_q_b[17]_PORT_A_data_in, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[17]_PORT_A_address_reg = DFFE(LC1_q_b[17]_PORT_A_address, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[17]_PORT_B_address_reg = DFFE(LC1_q_b[17]_PORT_B_address, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[17]_PORT_A_write_enable_reg = DFFE(LC1_q_b[17]_PORT_A_write_enable, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_B_read_enable = VCC;
LC1_q_b[17]_PORT_B_read_enable_reg = DFFE(LC1_q_b[17]_PORT_B_read_enable, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17]_PORT_A_byte_mask = A1L0;
LC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[17]_PORT_A_byte_mask, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_clock_0 = !CLK_25MHz2;
LC1_q_b[17]_clock_1 = !CLK_25MHz2;
LC1_q_b[17]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[17]_clock_enable_1 = inst80;
LC1_q_b[17]_PORT_B_data_out = MEMORY(LC1_q_b[17]_PORT_A_data_in_reg, , LC1_q_b[17]_PORT_A_address_reg, LC1_q_b[17]_PORT_B_address_reg, LC1_q_b[17]_PORT_A_write_enable_reg, LC1_q_b[17]_PORT_B_read_enable_reg, LC1_q_b[17]_PORT_A_byte_mask_reg, , LC1_q_b[17]_clock_0, LC1_q_b[17]_clock_1, LC1_q_b[17]_clock_enable_0, LC1_q_b[17]_clock_enable_1, , );
LC1_q_b[17]_PORT_B_data_out_reg = DFFE(LC1_q_b[17]_PORT_B_data_out, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17] = LC1_q_b[17]_PORT_B_data_out_reg[0];


--LC1_q_b[17] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[17]_PORT_A_data_in = A1L0;
LC1_q_b[17]_PORT_A_data_in_reg = DFFE(LC1_q_b[17]_PORT_A_data_in, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[17]_PORT_A_address_reg = DFFE(LC1_q_b[17]_PORT_A_address, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[17]_PORT_B_address_reg = DFFE(LC1_q_b[17]_PORT_B_address, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[17]_PORT_A_write_enable_reg = DFFE(LC1_q_b[17]_PORT_A_write_enable, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_B_read_enable = VCC;
LC1_q_b[17]_PORT_B_read_enable_reg = DFFE(LC1_q_b[17]_PORT_B_read_enable, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17]_PORT_A_byte_mask = A1L0;
LC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[17]_PORT_A_byte_mask, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_clock_0 = !CLK_25MHz2;
LC1_q_b[17]_clock_1 = !CLK_25MHz2;
LC1_q_b[17]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[17]_clock_enable_1 = inst182;
LC1_q_b[17]_PORT_B_data_out = MEMORY(LC1_q_b[17]_PORT_A_data_in_reg, , LC1_q_b[17]_PORT_A_address_reg, LC1_q_b[17]_PORT_B_address_reg, LC1_q_b[17]_PORT_A_write_enable_reg, LC1_q_b[17]_PORT_B_read_enable_reg, LC1_q_b[17]_PORT_A_byte_mask_reg, , LC1_q_b[17]_clock_0, LC1_q_b[17]_clock_1, LC1_q_b[17]_clock_enable_0, LC1_q_b[17]_clock_enable_1, , );
LC1_q_b[17]_PORT_B_data_out_reg = DFFE(LC1_q_b[17]_PORT_B_data_out, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17] = LC1_q_b[17]_PORT_B_data_out_reg[0];


--LC1_q_b[17] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[17]_PORT_A_data_in = A1L0;
LC1_q_b[17]_PORT_A_data_in_reg = DFFE(LC1_q_b[17]_PORT_A_data_in, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[17]_PORT_A_address_reg = DFFE(LC1_q_b[17]_PORT_A_address, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[17]_PORT_B_address_reg = DFFE(LC1_q_b[17]_PORT_B_address, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[17]_PORT_A_write_enable_reg = DFFE(LC1_q_b[17]_PORT_A_write_enable, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_PORT_B_read_enable = VCC;
LC1_q_b[17]_PORT_B_read_enable_reg = DFFE(LC1_q_b[17]_PORT_B_read_enable, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17]_PORT_A_byte_mask = A1L0;
LC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[17]_PORT_A_byte_mask, LC1_q_b[17]_clock_0, , , LC1_q_b[17]_clock_enable_0);
LC1_q_b[17]_clock_0 = !CLK_25MHz2;
LC1_q_b[17]_clock_1 = !CLK_25MHz2;
LC1_q_b[17]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[17]_clock_enable_1 = inst154;
LC1_q_b[17]_PORT_B_data_out = MEMORY(LC1_q_b[17]_PORT_A_data_in_reg, , LC1_q_b[17]_PORT_A_address_reg, LC1_q_b[17]_PORT_B_address_reg, LC1_q_b[17]_PORT_A_write_enable_reg, LC1_q_b[17]_PORT_B_read_enable_reg, LC1_q_b[17]_PORT_A_byte_mask_reg, , LC1_q_b[17]_clock_0, LC1_q_b[17]_clock_1, LC1_q_b[17]_clock_enable_0, LC1_q_b[17]_clock_enable_1, , );
LC1_q_b[17]_PORT_B_data_out_reg = DFFE(LC1_q_b[17]_PORT_B_data_out, LC1_q_b[17]_clock_1, , , LC1_q_b[17]_clock_enable_1);
LC1_q_b[17] = LC1_q_b[17]_PORT_B_data_out_reg[0];


--GC1_q_b[17] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[17]_PORT_A_data_in = ZB1_o_RamData[17];
GC1_q_b[17]_PORT_A_data_in_reg = DFFE(GC1_q_b[17]_PORT_A_data_in, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[17]_PORT_A_address_reg = DFFE(GC1_q_b[17]_PORT_A_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[17]_PORT_B_address_reg = DFFE(GC1_q_b[17]_PORT_B_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[17]_PORT_A_write_enable_reg = DFFE(GC1_q_b[17]_PORT_A_write_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_read_enable = B1L0;
GC1_q_b[17]_PORT_B_read_enable_reg = DFFE(GC1_q_b[17]_PORT_B_read_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[17]_PORT_A_byte_mask, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_clock_0 = !CLK_25MHz2;
GC1_q_b[17]_clock_1 = !CLK_25MHz2;
GC1_q_b[17]_PORT_B_data_out = MEMORY(GC1_q_b[17]_PORT_A_data_in_reg, , GC1_q_b[17]_PORT_A_address_reg, GC1_q_b[17]_PORT_B_address_reg, GC1_q_b[17]_PORT_A_write_enable_reg, GC1_q_b[17]_PORT_B_read_enable_reg, GC1_q_b[17]_PORT_A_byte_mask_reg, , GC1_q_b[17]_clock_0, GC1_q_b[17]_clock_1, , , , );
GC1_q_b[17]_PORT_B_data_out_reg = DFFE(GC1_q_b[17]_PORT_B_data_out, GC1_q_b[17]_clock_1, , , );
GC1_q_b[17] = GC1_q_b[17]_PORT_B_data_out_reg[0];


--GC1_q_b[17] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[17]_PORT_A_data_in = ZB1_o_RamData[17];
GC1_q_b[17]_PORT_A_data_in_reg = DFFE(GC1_q_b[17]_PORT_A_data_in, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[17]_PORT_A_address_reg = DFFE(GC1_q_b[17]_PORT_A_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[17]_PORT_B_address_reg = DFFE(GC1_q_b[17]_PORT_B_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[17]_PORT_A_write_enable_reg = DFFE(GC1_q_b[17]_PORT_A_write_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_read_enable = B1L0;
GC1_q_b[17]_PORT_B_read_enable_reg = DFFE(GC1_q_b[17]_PORT_B_read_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[17]_PORT_A_byte_mask, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_clock_0 = !CLK_25MHz2;
GC1_q_b[17]_clock_1 = !CLK_25MHz2;
GC1_q_b[17]_PORT_B_data_out = MEMORY(GC1_q_b[17]_PORT_A_data_in_reg, , GC1_q_b[17]_PORT_A_address_reg, GC1_q_b[17]_PORT_B_address_reg, GC1_q_b[17]_PORT_A_write_enable_reg, GC1_q_b[17]_PORT_B_read_enable_reg, GC1_q_b[17]_PORT_A_byte_mask_reg, , GC1_q_b[17]_clock_0, GC1_q_b[17]_clock_1, , , , );
GC1_q_b[17]_PORT_B_data_out_reg = DFFE(GC1_q_b[17]_PORT_B_data_out, GC1_q_b[17]_clock_1, , , );
GC1_q_b[17] = GC1_q_b[17]_PORT_B_data_out_reg[0];


--GC1_q_b[17] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[17]_PORT_A_data_in = ZB1_o_RamData[17];
GC1_q_b[17]_PORT_A_data_in_reg = DFFE(GC1_q_b[17]_PORT_A_data_in, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[17]_PORT_A_address_reg = DFFE(GC1_q_b[17]_PORT_A_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[17]_PORT_B_address_reg = DFFE(GC1_q_b[17]_PORT_B_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[17]_PORT_A_write_enable_reg = DFFE(GC1_q_b[17]_PORT_A_write_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_read_enable = B1L0;
GC1_q_b[17]_PORT_B_read_enable_reg = DFFE(GC1_q_b[17]_PORT_B_read_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[17]_PORT_A_byte_mask, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_clock_0 = !CLK_25MHz2;
GC1_q_b[17]_clock_1 = !CLK_25MHz2;
GC1_q_b[17]_PORT_B_data_out = MEMORY(GC1_q_b[17]_PORT_A_data_in_reg, , GC1_q_b[17]_PORT_A_address_reg, GC1_q_b[17]_PORT_B_address_reg, GC1_q_b[17]_PORT_A_write_enable_reg, GC1_q_b[17]_PORT_B_read_enable_reg, GC1_q_b[17]_PORT_A_byte_mask_reg, , GC1_q_b[17]_clock_0, GC1_q_b[17]_clock_1, , , , );
GC1_q_b[17]_PORT_B_data_out_reg = DFFE(GC1_q_b[17]_PORT_B_data_out, GC1_q_b[17]_clock_1, , , );
GC1_q_b[17] = GC1_q_b[17]_PORT_B_data_out_reg[0];


--GC1_q_b[17] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[17]_PORT_A_data_in = ZB1_o_RamData[17];
GC1_q_b[17]_PORT_A_data_in_reg = DFFE(GC1_q_b[17]_PORT_A_data_in, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[17]_PORT_A_address_reg = DFFE(GC1_q_b[17]_PORT_A_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[17]_PORT_B_address_reg = DFFE(GC1_q_b[17]_PORT_B_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[17]_PORT_A_write_enable_reg = DFFE(GC1_q_b[17]_PORT_A_write_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_read_enable = B1L0;
GC1_q_b[17]_PORT_B_read_enable_reg = DFFE(GC1_q_b[17]_PORT_B_read_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[17]_PORT_A_byte_mask, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_clock_0 = !CLK_25MHz2;
GC1_q_b[17]_clock_1 = !CLK_25MHz2;
GC1_q_b[17]_PORT_B_data_out = MEMORY(GC1_q_b[17]_PORT_A_data_in_reg, , GC1_q_b[17]_PORT_A_address_reg, GC1_q_b[17]_PORT_B_address_reg, GC1_q_b[17]_PORT_A_write_enable_reg, GC1_q_b[17]_PORT_B_read_enable_reg, GC1_q_b[17]_PORT_A_byte_mask_reg, , GC1_q_b[17]_clock_0, GC1_q_b[17]_clock_1, , , , );
GC1_q_b[17]_PORT_B_data_out_reg = DFFE(GC1_q_b[17]_PORT_B_data_out, GC1_q_b[17]_clock_1, , , );
GC1_q_b[17] = GC1_q_b[17]_PORT_B_data_out_reg[0];


--GC1_q_b[17] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[17]_PORT_A_data_in = ZB1_o_RamData[17];
GC1_q_b[17]_PORT_A_data_in_reg = DFFE(GC1_q_b[17]_PORT_A_data_in, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[17]_PORT_A_address_reg = DFFE(GC1_q_b[17]_PORT_A_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[17]_PORT_B_address_reg = DFFE(GC1_q_b[17]_PORT_B_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[17]_PORT_A_write_enable_reg = DFFE(GC1_q_b[17]_PORT_A_write_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_read_enable = B1L0;
GC1_q_b[17]_PORT_B_read_enable_reg = DFFE(GC1_q_b[17]_PORT_B_read_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[17]_PORT_A_byte_mask, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_clock_0 = !CLK_25MHz2;
GC1_q_b[17]_clock_1 = !CLK_25MHz2;
GC1_q_b[17]_PORT_B_data_out = MEMORY(GC1_q_b[17]_PORT_A_data_in_reg, , GC1_q_b[17]_PORT_A_address_reg, GC1_q_b[17]_PORT_B_address_reg, GC1_q_b[17]_PORT_A_write_enable_reg, GC1_q_b[17]_PORT_B_read_enable_reg, GC1_q_b[17]_PORT_A_byte_mask_reg, , GC1_q_b[17]_clock_0, GC1_q_b[17]_clock_1, , , , );
GC1_q_b[17]_PORT_B_data_out_reg = DFFE(GC1_q_b[17]_PORT_B_data_out, GC1_q_b[17]_clock_1, , , );
GC1_q_b[17] = GC1_q_b[17]_PORT_B_data_out_reg[0];


--LC1_q_b[18] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[18]_PORT_A_data_in = A1L0;
LC1_q_b[18]_PORT_A_data_in_reg = DFFE(LC1_q_b[18]_PORT_A_data_in, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[18]_PORT_A_address_reg = DFFE(LC1_q_b[18]_PORT_A_address, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[18]_PORT_B_address_reg = DFFE(LC1_q_b[18]_PORT_B_address, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[18]_PORT_A_write_enable_reg = DFFE(LC1_q_b[18]_PORT_A_write_enable, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_B_read_enable = VCC;
LC1_q_b[18]_PORT_B_read_enable_reg = DFFE(LC1_q_b[18]_PORT_B_read_enable, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18]_PORT_A_byte_mask = A1L0;
LC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[18]_PORT_A_byte_mask, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_clock_0 = !CLK_25MHz2;
LC1_q_b[18]_clock_1 = !CLK_25MHz2;
LC1_q_b[18]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[18]_clock_enable_1 = inst146;
LC1_q_b[18]_PORT_B_data_out = MEMORY(LC1_q_b[18]_PORT_A_data_in_reg, , LC1_q_b[18]_PORT_A_address_reg, LC1_q_b[18]_PORT_B_address_reg, LC1_q_b[18]_PORT_A_write_enable_reg, LC1_q_b[18]_PORT_B_read_enable_reg, LC1_q_b[18]_PORT_A_byte_mask_reg, , LC1_q_b[18]_clock_0, LC1_q_b[18]_clock_1, LC1_q_b[18]_clock_enable_0, LC1_q_b[18]_clock_enable_1, , );
LC1_q_b[18]_PORT_B_data_out_reg = DFFE(LC1_q_b[18]_PORT_B_data_out, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18] = LC1_q_b[18]_PORT_B_data_out_reg[0];


--LC1_q_b[18] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[18]_PORT_A_data_in = A1L0;
LC1_q_b[18]_PORT_A_data_in_reg = DFFE(LC1_q_b[18]_PORT_A_data_in, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[18]_PORT_A_address_reg = DFFE(LC1_q_b[18]_PORT_A_address, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[18]_PORT_B_address_reg = DFFE(LC1_q_b[18]_PORT_B_address, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[18]_PORT_A_write_enable_reg = DFFE(LC1_q_b[18]_PORT_A_write_enable, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_B_read_enable = VCC;
LC1_q_b[18]_PORT_B_read_enable_reg = DFFE(LC1_q_b[18]_PORT_B_read_enable, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18]_PORT_A_byte_mask = A1L0;
LC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[18]_PORT_A_byte_mask, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_clock_0 = !CLK_25MHz2;
LC1_q_b[18]_clock_1 = !CLK_25MHz2;
LC1_q_b[18]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[18]_clock_enable_1 = inst80;
LC1_q_b[18]_PORT_B_data_out = MEMORY(LC1_q_b[18]_PORT_A_data_in_reg, , LC1_q_b[18]_PORT_A_address_reg, LC1_q_b[18]_PORT_B_address_reg, LC1_q_b[18]_PORT_A_write_enable_reg, LC1_q_b[18]_PORT_B_read_enable_reg, LC1_q_b[18]_PORT_A_byte_mask_reg, , LC1_q_b[18]_clock_0, LC1_q_b[18]_clock_1, LC1_q_b[18]_clock_enable_0, LC1_q_b[18]_clock_enable_1, , );
LC1_q_b[18]_PORT_B_data_out_reg = DFFE(LC1_q_b[18]_PORT_B_data_out, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18] = LC1_q_b[18]_PORT_B_data_out_reg[0];


--LC1_q_b[18] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[18]_PORT_A_data_in = A1L0;
LC1_q_b[18]_PORT_A_data_in_reg = DFFE(LC1_q_b[18]_PORT_A_data_in, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[18]_PORT_A_address_reg = DFFE(LC1_q_b[18]_PORT_A_address, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[18]_PORT_B_address_reg = DFFE(LC1_q_b[18]_PORT_B_address, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[18]_PORT_A_write_enable_reg = DFFE(LC1_q_b[18]_PORT_A_write_enable, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_B_read_enable = VCC;
LC1_q_b[18]_PORT_B_read_enable_reg = DFFE(LC1_q_b[18]_PORT_B_read_enable, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18]_PORT_A_byte_mask = A1L0;
LC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[18]_PORT_A_byte_mask, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_clock_0 = !CLK_25MHz2;
LC1_q_b[18]_clock_1 = !CLK_25MHz2;
LC1_q_b[18]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[18]_clock_enable_1 = inst182;
LC1_q_b[18]_PORT_B_data_out = MEMORY(LC1_q_b[18]_PORT_A_data_in_reg, , LC1_q_b[18]_PORT_A_address_reg, LC1_q_b[18]_PORT_B_address_reg, LC1_q_b[18]_PORT_A_write_enable_reg, LC1_q_b[18]_PORT_B_read_enable_reg, LC1_q_b[18]_PORT_A_byte_mask_reg, , LC1_q_b[18]_clock_0, LC1_q_b[18]_clock_1, LC1_q_b[18]_clock_enable_0, LC1_q_b[18]_clock_enable_1, , );
LC1_q_b[18]_PORT_B_data_out_reg = DFFE(LC1_q_b[18]_PORT_B_data_out, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18] = LC1_q_b[18]_PORT_B_data_out_reg[0];


--LC1_q_b[18] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[18]_PORT_A_data_in = A1L0;
LC1_q_b[18]_PORT_A_data_in_reg = DFFE(LC1_q_b[18]_PORT_A_data_in, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[18]_PORT_A_address_reg = DFFE(LC1_q_b[18]_PORT_A_address, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[18]_PORT_B_address_reg = DFFE(LC1_q_b[18]_PORT_B_address, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[18]_PORT_A_write_enable_reg = DFFE(LC1_q_b[18]_PORT_A_write_enable, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_PORT_B_read_enable = VCC;
LC1_q_b[18]_PORT_B_read_enable_reg = DFFE(LC1_q_b[18]_PORT_B_read_enable, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18]_PORT_A_byte_mask = A1L0;
LC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[18]_PORT_A_byte_mask, LC1_q_b[18]_clock_0, , , LC1_q_b[18]_clock_enable_0);
LC1_q_b[18]_clock_0 = !CLK_25MHz2;
LC1_q_b[18]_clock_1 = !CLK_25MHz2;
LC1_q_b[18]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[18]_clock_enable_1 = inst154;
LC1_q_b[18]_PORT_B_data_out = MEMORY(LC1_q_b[18]_PORT_A_data_in_reg, , LC1_q_b[18]_PORT_A_address_reg, LC1_q_b[18]_PORT_B_address_reg, LC1_q_b[18]_PORT_A_write_enable_reg, LC1_q_b[18]_PORT_B_read_enable_reg, LC1_q_b[18]_PORT_A_byte_mask_reg, , LC1_q_b[18]_clock_0, LC1_q_b[18]_clock_1, LC1_q_b[18]_clock_enable_0, LC1_q_b[18]_clock_enable_1, , );
LC1_q_b[18]_PORT_B_data_out_reg = DFFE(LC1_q_b[18]_PORT_B_data_out, LC1_q_b[18]_clock_1, , , LC1_q_b[18]_clock_enable_1);
LC1_q_b[18] = LC1_q_b[18]_PORT_B_data_out_reg[0];


--GC1_q_b[18] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[18]_PORT_A_data_in = ZB1_o_RamData[18];
GC1_q_b[18]_PORT_A_data_in_reg = DFFE(GC1_q_b[18]_PORT_A_data_in, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[18]_PORT_A_address_reg = DFFE(GC1_q_b[18]_PORT_A_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[18]_PORT_B_address_reg = DFFE(GC1_q_b[18]_PORT_B_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[18]_PORT_A_write_enable_reg = DFFE(GC1_q_b[18]_PORT_A_write_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_read_enable = B1L0;
GC1_q_b[18]_PORT_B_read_enable_reg = DFFE(GC1_q_b[18]_PORT_B_read_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[18]_PORT_A_byte_mask, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_clock_0 = !CLK_25MHz2;
GC1_q_b[18]_clock_1 = !CLK_25MHz2;
GC1_q_b[18]_PORT_B_data_out = MEMORY(GC1_q_b[18]_PORT_A_data_in_reg, , GC1_q_b[18]_PORT_A_address_reg, GC1_q_b[18]_PORT_B_address_reg, GC1_q_b[18]_PORT_A_write_enable_reg, GC1_q_b[18]_PORT_B_read_enable_reg, GC1_q_b[18]_PORT_A_byte_mask_reg, , GC1_q_b[18]_clock_0, GC1_q_b[18]_clock_1, , , , );
GC1_q_b[18]_PORT_B_data_out_reg = DFFE(GC1_q_b[18]_PORT_B_data_out, GC1_q_b[18]_clock_1, , , );
GC1_q_b[18] = GC1_q_b[18]_PORT_B_data_out_reg[0];


--GC1_q_b[18] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[18]_PORT_A_data_in = ZB1_o_RamData[18];
GC1_q_b[18]_PORT_A_data_in_reg = DFFE(GC1_q_b[18]_PORT_A_data_in, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[18]_PORT_A_address_reg = DFFE(GC1_q_b[18]_PORT_A_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[18]_PORT_B_address_reg = DFFE(GC1_q_b[18]_PORT_B_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[18]_PORT_A_write_enable_reg = DFFE(GC1_q_b[18]_PORT_A_write_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_read_enable = B1L0;
GC1_q_b[18]_PORT_B_read_enable_reg = DFFE(GC1_q_b[18]_PORT_B_read_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[18]_PORT_A_byte_mask, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_clock_0 = !CLK_25MHz2;
GC1_q_b[18]_clock_1 = !CLK_25MHz2;
GC1_q_b[18]_PORT_B_data_out = MEMORY(GC1_q_b[18]_PORT_A_data_in_reg, , GC1_q_b[18]_PORT_A_address_reg, GC1_q_b[18]_PORT_B_address_reg, GC1_q_b[18]_PORT_A_write_enable_reg, GC1_q_b[18]_PORT_B_read_enable_reg, GC1_q_b[18]_PORT_A_byte_mask_reg, , GC1_q_b[18]_clock_0, GC1_q_b[18]_clock_1, , , , );
GC1_q_b[18]_PORT_B_data_out_reg = DFFE(GC1_q_b[18]_PORT_B_data_out, GC1_q_b[18]_clock_1, , , );
GC1_q_b[18] = GC1_q_b[18]_PORT_B_data_out_reg[0];


--GC1_q_b[18] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[18]_PORT_A_data_in = ZB1_o_RamData[18];
GC1_q_b[18]_PORT_A_data_in_reg = DFFE(GC1_q_b[18]_PORT_A_data_in, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[18]_PORT_A_address_reg = DFFE(GC1_q_b[18]_PORT_A_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[18]_PORT_B_address_reg = DFFE(GC1_q_b[18]_PORT_B_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[18]_PORT_A_write_enable_reg = DFFE(GC1_q_b[18]_PORT_A_write_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_read_enable = B1L0;
GC1_q_b[18]_PORT_B_read_enable_reg = DFFE(GC1_q_b[18]_PORT_B_read_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[18]_PORT_A_byte_mask, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_clock_0 = !CLK_25MHz2;
GC1_q_b[18]_clock_1 = !CLK_25MHz2;
GC1_q_b[18]_PORT_B_data_out = MEMORY(GC1_q_b[18]_PORT_A_data_in_reg, , GC1_q_b[18]_PORT_A_address_reg, GC1_q_b[18]_PORT_B_address_reg, GC1_q_b[18]_PORT_A_write_enable_reg, GC1_q_b[18]_PORT_B_read_enable_reg, GC1_q_b[18]_PORT_A_byte_mask_reg, , GC1_q_b[18]_clock_0, GC1_q_b[18]_clock_1, , , , );
GC1_q_b[18]_PORT_B_data_out_reg = DFFE(GC1_q_b[18]_PORT_B_data_out, GC1_q_b[18]_clock_1, , , );
GC1_q_b[18] = GC1_q_b[18]_PORT_B_data_out_reg[0];


--GC1_q_b[18] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[18]_PORT_A_data_in = ZB1_o_RamData[18];
GC1_q_b[18]_PORT_A_data_in_reg = DFFE(GC1_q_b[18]_PORT_A_data_in, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[18]_PORT_A_address_reg = DFFE(GC1_q_b[18]_PORT_A_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[18]_PORT_B_address_reg = DFFE(GC1_q_b[18]_PORT_B_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[18]_PORT_A_write_enable_reg = DFFE(GC1_q_b[18]_PORT_A_write_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_read_enable = B1L0;
GC1_q_b[18]_PORT_B_read_enable_reg = DFFE(GC1_q_b[18]_PORT_B_read_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[18]_PORT_A_byte_mask, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_clock_0 = !CLK_25MHz2;
GC1_q_b[18]_clock_1 = !CLK_25MHz2;
GC1_q_b[18]_PORT_B_data_out = MEMORY(GC1_q_b[18]_PORT_A_data_in_reg, , GC1_q_b[18]_PORT_A_address_reg, GC1_q_b[18]_PORT_B_address_reg, GC1_q_b[18]_PORT_A_write_enable_reg, GC1_q_b[18]_PORT_B_read_enable_reg, GC1_q_b[18]_PORT_A_byte_mask_reg, , GC1_q_b[18]_clock_0, GC1_q_b[18]_clock_1, , , , );
GC1_q_b[18]_PORT_B_data_out_reg = DFFE(GC1_q_b[18]_PORT_B_data_out, GC1_q_b[18]_clock_1, , , );
GC1_q_b[18] = GC1_q_b[18]_PORT_B_data_out_reg[0];


--GC1_q_b[18] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[18]_PORT_A_data_in = ZB1_o_RamData[18];
GC1_q_b[18]_PORT_A_data_in_reg = DFFE(GC1_q_b[18]_PORT_A_data_in, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[18]_PORT_A_address_reg = DFFE(GC1_q_b[18]_PORT_A_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[18]_PORT_B_address_reg = DFFE(GC1_q_b[18]_PORT_B_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[18]_PORT_A_write_enable_reg = DFFE(GC1_q_b[18]_PORT_A_write_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_read_enable = B1L0;
GC1_q_b[18]_PORT_B_read_enable_reg = DFFE(GC1_q_b[18]_PORT_B_read_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[18]_PORT_A_byte_mask, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_clock_0 = !CLK_25MHz2;
GC1_q_b[18]_clock_1 = !CLK_25MHz2;
GC1_q_b[18]_PORT_B_data_out = MEMORY(GC1_q_b[18]_PORT_A_data_in_reg, , GC1_q_b[18]_PORT_A_address_reg, GC1_q_b[18]_PORT_B_address_reg, GC1_q_b[18]_PORT_A_write_enable_reg, GC1_q_b[18]_PORT_B_read_enable_reg, GC1_q_b[18]_PORT_A_byte_mask_reg, , GC1_q_b[18]_clock_0, GC1_q_b[18]_clock_1, , , , );
GC1_q_b[18]_PORT_B_data_out_reg = DFFE(GC1_q_b[18]_PORT_B_data_out, GC1_q_b[18]_clock_1, , , );
GC1_q_b[18] = GC1_q_b[18]_PORT_B_data_out_reg[0];


--LC1_q_b[19] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[19]_PORT_A_data_in = A1L0;
LC1_q_b[19]_PORT_A_data_in_reg = DFFE(LC1_q_b[19]_PORT_A_data_in, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[19]_PORT_A_address_reg = DFFE(LC1_q_b[19]_PORT_A_address, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[19]_PORT_B_address_reg = DFFE(LC1_q_b[19]_PORT_B_address, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[19]_PORT_A_write_enable_reg = DFFE(LC1_q_b[19]_PORT_A_write_enable, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_B_read_enable = VCC;
LC1_q_b[19]_PORT_B_read_enable_reg = DFFE(LC1_q_b[19]_PORT_B_read_enable, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19]_PORT_A_byte_mask = A1L0;
LC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[19]_PORT_A_byte_mask, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_clock_0 = !CLK_25MHz2;
LC1_q_b[19]_clock_1 = !CLK_25MHz2;
LC1_q_b[19]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[19]_clock_enable_1 = inst146;
LC1_q_b[19]_PORT_B_data_out = MEMORY(LC1_q_b[19]_PORT_A_data_in_reg, , LC1_q_b[19]_PORT_A_address_reg, LC1_q_b[19]_PORT_B_address_reg, LC1_q_b[19]_PORT_A_write_enable_reg, LC1_q_b[19]_PORT_B_read_enable_reg, LC1_q_b[19]_PORT_A_byte_mask_reg, , LC1_q_b[19]_clock_0, LC1_q_b[19]_clock_1, LC1_q_b[19]_clock_enable_0, LC1_q_b[19]_clock_enable_1, , );
LC1_q_b[19]_PORT_B_data_out_reg = DFFE(LC1_q_b[19]_PORT_B_data_out, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19] = LC1_q_b[19]_PORT_B_data_out_reg[0];


--LC1_q_b[19] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[19]_PORT_A_data_in = A1L0;
LC1_q_b[19]_PORT_A_data_in_reg = DFFE(LC1_q_b[19]_PORT_A_data_in, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[19]_PORT_A_address_reg = DFFE(LC1_q_b[19]_PORT_A_address, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[19]_PORT_B_address_reg = DFFE(LC1_q_b[19]_PORT_B_address, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[19]_PORT_A_write_enable_reg = DFFE(LC1_q_b[19]_PORT_A_write_enable, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_B_read_enable = VCC;
LC1_q_b[19]_PORT_B_read_enable_reg = DFFE(LC1_q_b[19]_PORT_B_read_enable, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19]_PORT_A_byte_mask = A1L0;
LC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[19]_PORT_A_byte_mask, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_clock_0 = !CLK_25MHz2;
LC1_q_b[19]_clock_1 = !CLK_25MHz2;
LC1_q_b[19]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[19]_clock_enable_1 = inst80;
LC1_q_b[19]_PORT_B_data_out = MEMORY(LC1_q_b[19]_PORT_A_data_in_reg, , LC1_q_b[19]_PORT_A_address_reg, LC1_q_b[19]_PORT_B_address_reg, LC1_q_b[19]_PORT_A_write_enable_reg, LC1_q_b[19]_PORT_B_read_enable_reg, LC1_q_b[19]_PORT_A_byte_mask_reg, , LC1_q_b[19]_clock_0, LC1_q_b[19]_clock_1, LC1_q_b[19]_clock_enable_0, LC1_q_b[19]_clock_enable_1, , );
LC1_q_b[19]_PORT_B_data_out_reg = DFFE(LC1_q_b[19]_PORT_B_data_out, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19] = LC1_q_b[19]_PORT_B_data_out_reg[0];


--LC1_q_b[19] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[19]_PORT_A_data_in = A1L0;
LC1_q_b[19]_PORT_A_data_in_reg = DFFE(LC1_q_b[19]_PORT_A_data_in, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[19]_PORT_A_address_reg = DFFE(LC1_q_b[19]_PORT_A_address, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[19]_PORT_B_address_reg = DFFE(LC1_q_b[19]_PORT_B_address, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[19]_PORT_A_write_enable_reg = DFFE(LC1_q_b[19]_PORT_A_write_enable, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_B_read_enable = VCC;
LC1_q_b[19]_PORT_B_read_enable_reg = DFFE(LC1_q_b[19]_PORT_B_read_enable, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19]_PORT_A_byte_mask = A1L0;
LC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[19]_PORT_A_byte_mask, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_clock_0 = !CLK_25MHz2;
LC1_q_b[19]_clock_1 = !CLK_25MHz2;
LC1_q_b[19]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[19]_clock_enable_1 = inst182;
LC1_q_b[19]_PORT_B_data_out = MEMORY(LC1_q_b[19]_PORT_A_data_in_reg, , LC1_q_b[19]_PORT_A_address_reg, LC1_q_b[19]_PORT_B_address_reg, LC1_q_b[19]_PORT_A_write_enable_reg, LC1_q_b[19]_PORT_B_read_enable_reg, LC1_q_b[19]_PORT_A_byte_mask_reg, , LC1_q_b[19]_clock_0, LC1_q_b[19]_clock_1, LC1_q_b[19]_clock_enable_0, LC1_q_b[19]_clock_enable_1, , );
LC1_q_b[19]_PORT_B_data_out_reg = DFFE(LC1_q_b[19]_PORT_B_data_out, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19] = LC1_q_b[19]_PORT_B_data_out_reg[0];


--LC1_q_b[19] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[19]_PORT_A_data_in = A1L0;
LC1_q_b[19]_PORT_A_data_in_reg = DFFE(LC1_q_b[19]_PORT_A_data_in, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[19]_PORT_A_address_reg = DFFE(LC1_q_b[19]_PORT_A_address, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[19]_PORT_B_address_reg = DFFE(LC1_q_b[19]_PORT_B_address, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[19]_PORT_A_write_enable_reg = DFFE(LC1_q_b[19]_PORT_A_write_enable, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_PORT_B_read_enable = VCC;
LC1_q_b[19]_PORT_B_read_enable_reg = DFFE(LC1_q_b[19]_PORT_B_read_enable, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19]_PORT_A_byte_mask = A1L0;
LC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[19]_PORT_A_byte_mask, LC1_q_b[19]_clock_0, , , LC1_q_b[19]_clock_enable_0);
LC1_q_b[19]_clock_0 = !CLK_25MHz2;
LC1_q_b[19]_clock_1 = !CLK_25MHz2;
LC1_q_b[19]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[19]_clock_enable_1 = inst154;
LC1_q_b[19]_PORT_B_data_out = MEMORY(LC1_q_b[19]_PORT_A_data_in_reg, , LC1_q_b[19]_PORT_A_address_reg, LC1_q_b[19]_PORT_B_address_reg, LC1_q_b[19]_PORT_A_write_enable_reg, LC1_q_b[19]_PORT_B_read_enable_reg, LC1_q_b[19]_PORT_A_byte_mask_reg, , LC1_q_b[19]_clock_0, LC1_q_b[19]_clock_1, LC1_q_b[19]_clock_enable_0, LC1_q_b[19]_clock_enable_1, , );
LC1_q_b[19]_PORT_B_data_out_reg = DFFE(LC1_q_b[19]_PORT_B_data_out, LC1_q_b[19]_clock_1, , , LC1_q_b[19]_clock_enable_1);
LC1_q_b[19] = LC1_q_b[19]_PORT_B_data_out_reg[0];


--GC1_q_b[19] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[19]_PORT_A_data_in = ZB1_o_RamData[19];
GC1_q_b[19]_PORT_A_data_in_reg = DFFE(GC1_q_b[19]_PORT_A_data_in, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[19]_PORT_A_address_reg = DFFE(GC1_q_b[19]_PORT_A_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[19]_PORT_B_address_reg = DFFE(GC1_q_b[19]_PORT_B_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[19]_PORT_A_write_enable_reg = DFFE(GC1_q_b[19]_PORT_A_write_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_read_enable = B1L0;
GC1_q_b[19]_PORT_B_read_enable_reg = DFFE(GC1_q_b[19]_PORT_B_read_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[19]_PORT_A_byte_mask, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_clock_0 = !CLK_25MHz2;
GC1_q_b[19]_clock_1 = !CLK_25MHz2;
GC1_q_b[19]_PORT_B_data_out = MEMORY(GC1_q_b[19]_PORT_A_data_in_reg, , GC1_q_b[19]_PORT_A_address_reg, GC1_q_b[19]_PORT_B_address_reg, GC1_q_b[19]_PORT_A_write_enable_reg, GC1_q_b[19]_PORT_B_read_enable_reg, GC1_q_b[19]_PORT_A_byte_mask_reg, , GC1_q_b[19]_clock_0, GC1_q_b[19]_clock_1, , , , );
GC1_q_b[19]_PORT_B_data_out_reg = DFFE(GC1_q_b[19]_PORT_B_data_out, GC1_q_b[19]_clock_1, , , );
GC1_q_b[19] = GC1_q_b[19]_PORT_B_data_out_reg[0];


--GC1_q_b[19] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[19]_PORT_A_data_in = ZB1_o_RamData[19];
GC1_q_b[19]_PORT_A_data_in_reg = DFFE(GC1_q_b[19]_PORT_A_data_in, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[19]_PORT_A_address_reg = DFFE(GC1_q_b[19]_PORT_A_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[19]_PORT_B_address_reg = DFFE(GC1_q_b[19]_PORT_B_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[19]_PORT_A_write_enable_reg = DFFE(GC1_q_b[19]_PORT_A_write_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_read_enable = B1L0;
GC1_q_b[19]_PORT_B_read_enable_reg = DFFE(GC1_q_b[19]_PORT_B_read_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[19]_PORT_A_byte_mask, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_clock_0 = !CLK_25MHz2;
GC1_q_b[19]_clock_1 = !CLK_25MHz2;
GC1_q_b[19]_PORT_B_data_out = MEMORY(GC1_q_b[19]_PORT_A_data_in_reg, , GC1_q_b[19]_PORT_A_address_reg, GC1_q_b[19]_PORT_B_address_reg, GC1_q_b[19]_PORT_A_write_enable_reg, GC1_q_b[19]_PORT_B_read_enable_reg, GC1_q_b[19]_PORT_A_byte_mask_reg, , GC1_q_b[19]_clock_0, GC1_q_b[19]_clock_1, , , , );
GC1_q_b[19]_PORT_B_data_out_reg = DFFE(GC1_q_b[19]_PORT_B_data_out, GC1_q_b[19]_clock_1, , , );
GC1_q_b[19] = GC1_q_b[19]_PORT_B_data_out_reg[0];


--GC1_q_b[19] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[19]_PORT_A_data_in = ZB1_o_RamData[19];
GC1_q_b[19]_PORT_A_data_in_reg = DFFE(GC1_q_b[19]_PORT_A_data_in, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[19]_PORT_A_address_reg = DFFE(GC1_q_b[19]_PORT_A_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[19]_PORT_B_address_reg = DFFE(GC1_q_b[19]_PORT_B_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[19]_PORT_A_write_enable_reg = DFFE(GC1_q_b[19]_PORT_A_write_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_read_enable = B1L0;
GC1_q_b[19]_PORT_B_read_enable_reg = DFFE(GC1_q_b[19]_PORT_B_read_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[19]_PORT_A_byte_mask, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_clock_0 = !CLK_25MHz2;
GC1_q_b[19]_clock_1 = !CLK_25MHz2;
GC1_q_b[19]_PORT_B_data_out = MEMORY(GC1_q_b[19]_PORT_A_data_in_reg, , GC1_q_b[19]_PORT_A_address_reg, GC1_q_b[19]_PORT_B_address_reg, GC1_q_b[19]_PORT_A_write_enable_reg, GC1_q_b[19]_PORT_B_read_enable_reg, GC1_q_b[19]_PORT_A_byte_mask_reg, , GC1_q_b[19]_clock_0, GC1_q_b[19]_clock_1, , , , );
GC1_q_b[19]_PORT_B_data_out_reg = DFFE(GC1_q_b[19]_PORT_B_data_out, GC1_q_b[19]_clock_1, , , );
GC1_q_b[19] = GC1_q_b[19]_PORT_B_data_out_reg[0];


--GC1_q_b[19] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[19]_PORT_A_data_in = ZB1_o_RamData[19];
GC1_q_b[19]_PORT_A_data_in_reg = DFFE(GC1_q_b[19]_PORT_A_data_in, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[19]_PORT_A_address_reg = DFFE(GC1_q_b[19]_PORT_A_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[19]_PORT_B_address_reg = DFFE(GC1_q_b[19]_PORT_B_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[19]_PORT_A_write_enable_reg = DFFE(GC1_q_b[19]_PORT_A_write_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_read_enable = B1L0;
GC1_q_b[19]_PORT_B_read_enable_reg = DFFE(GC1_q_b[19]_PORT_B_read_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[19]_PORT_A_byte_mask, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_clock_0 = !CLK_25MHz2;
GC1_q_b[19]_clock_1 = !CLK_25MHz2;
GC1_q_b[19]_PORT_B_data_out = MEMORY(GC1_q_b[19]_PORT_A_data_in_reg, , GC1_q_b[19]_PORT_A_address_reg, GC1_q_b[19]_PORT_B_address_reg, GC1_q_b[19]_PORT_A_write_enable_reg, GC1_q_b[19]_PORT_B_read_enable_reg, GC1_q_b[19]_PORT_A_byte_mask_reg, , GC1_q_b[19]_clock_0, GC1_q_b[19]_clock_1, , , , );
GC1_q_b[19]_PORT_B_data_out_reg = DFFE(GC1_q_b[19]_PORT_B_data_out, GC1_q_b[19]_clock_1, , , );
GC1_q_b[19] = GC1_q_b[19]_PORT_B_data_out_reg[0];


--GC1_q_b[19] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[19]_PORT_A_data_in = ZB1_o_RamData[19];
GC1_q_b[19]_PORT_A_data_in_reg = DFFE(GC1_q_b[19]_PORT_A_data_in, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[19]_PORT_A_address_reg = DFFE(GC1_q_b[19]_PORT_A_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[19]_PORT_B_address_reg = DFFE(GC1_q_b[19]_PORT_B_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[19]_PORT_A_write_enable_reg = DFFE(GC1_q_b[19]_PORT_A_write_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_read_enable = B1L0;
GC1_q_b[19]_PORT_B_read_enable_reg = DFFE(GC1_q_b[19]_PORT_B_read_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[19]_PORT_A_byte_mask, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_clock_0 = !CLK_25MHz2;
GC1_q_b[19]_clock_1 = !CLK_25MHz2;
GC1_q_b[19]_PORT_B_data_out = MEMORY(GC1_q_b[19]_PORT_A_data_in_reg, , GC1_q_b[19]_PORT_A_address_reg, GC1_q_b[19]_PORT_B_address_reg, GC1_q_b[19]_PORT_A_write_enable_reg, GC1_q_b[19]_PORT_B_read_enable_reg, GC1_q_b[19]_PORT_A_byte_mask_reg, , GC1_q_b[19]_clock_0, GC1_q_b[19]_clock_1, , , , );
GC1_q_b[19]_PORT_B_data_out_reg = DFFE(GC1_q_b[19]_PORT_B_data_out, GC1_q_b[19]_clock_1, , , );
GC1_q_b[19] = GC1_q_b[19]_PORT_B_data_out_reg[0];


--LC1_q_b[20] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[20]_PORT_A_data_in = A1L0;
LC1_q_b[20]_PORT_A_data_in_reg = DFFE(LC1_q_b[20]_PORT_A_data_in, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[20]_PORT_A_address_reg = DFFE(LC1_q_b[20]_PORT_A_address, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[20]_PORT_B_address_reg = DFFE(LC1_q_b[20]_PORT_B_address, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[20]_PORT_A_write_enable_reg = DFFE(LC1_q_b[20]_PORT_A_write_enable, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_B_read_enable = VCC;
LC1_q_b[20]_PORT_B_read_enable_reg = DFFE(LC1_q_b[20]_PORT_B_read_enable, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20]_PORT_A_byte_mask = A1L0;
LC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[20]_PORT_A_byte_mask, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_clock_0 = !CLK_25MHz2;
LC1_q_b[20]_clock_1 = !CLK_25MHz2;
LC1_q_b[20]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[20]_clock_enable_1 = inst146;
LC1_q_b[20]_PORT_B_data_out = MEMORY(LC1_q_b[20]_PORT_A_data_in_reg, , LC1_q_b[20]_PORT_A_address_reg, LC1_q_b[20]_PORT_B_address_reg, LC1_q_b[20]_PORT_A_write_enable_reg, LC1_q_b[20]_PORT_B_read_enable_reg, LC1_q_b[20]_PORT_A_byte_mask_reg, , LC1_q_b[20]_clock_0, LC1_q_b[20]_clock_1, LC1_q_b[20]_clock_enable_0, LC1_q_b[20]_clock_enable_1, , );
LC1_q_b[20]_PORT_B_data_out_reg = DFFE(LC1_q_b[20]_PORT_B_data_out, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20] = LC1_q_b[20]_PORT_B_data_out_reg[0];


--LC1_q_b[20] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[20]_PORT_A_data_in = A1L0;
LC1_q_b[20]_PORT_A_data_in_reg = DFFE(LC1_q_b[20]_PORT_A_data_in, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[20]_PORT_A_address_reg = DFFE(LC1_q_b[20]_PORT_A_address, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[20]_PORT_B_address_reg = DFFE(LC1_q_b[20]_PORT_B_address, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[20]_PORT_A_write_enable_reg = DFFE(LC1_q_b[20]_PORT_A_write_enable, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_B_read_enable = VCC;
LC1_q_b[20]_PORT_B_read_enable_reg = DFFE(LC1_q_b[20]_PORT_B_read_enable, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20]_PORT_A_byte_mask = A1L0;
LC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[20]_PORT_A_byte_mask, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_clock_0 = !CLK_25MHz2;
LC1_q_b[20]_clock_1 = !CLK_25MHz2;
LC1_q_b[20]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[20]_clock_enable_1 = inst80;
LC1_q_b[20]_PORT_B_data_out = MEMORY(LC1_q_b[20]_PORT_A_data_in_reg, , LC1_q_b[20]_PORT_A_address_reg, LC1_q_b[20]_PORT_B_address_reg, LC1_q_b[20]_PORT_A_write_enable_reg, LC1_q_b[20]_PORT_B_read_enable_reg, LC1_q_b[20]_PORT_A_byte_mask_reg, , LC1_q_b[20]_clock_0, LC1_q_b[20]_clock_1, LC1_q_b[20]_clock_enable_0, LC1_q_b[20]_clock_enable_1, , );
LC1_q_b[20]_PORT_B_data_out_reg = DFFE(LC1_q_b[20]_PORT_B_data_out, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20] = LC1_q_b[20]_PORT_B_data_out_reg[0];


--LC1_q_b[20] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[20]_PORT_A_data_in = A1L0;
LC1_q_b[20]_PORT_A_data_in_reg = DFFE(LC1_q_b[20]_PORT_A_data_in, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[20]_PORT_A_address_reg = DFFE(LC1_q_b[20]_PORT_A_address, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[20]_PORT_B_address_reg = DFFE(LC1_q_b[20]_PORT_B_address, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[20]_PORT_A_write_enable_reg = DFFE(LC1_q_b[20]_PORT_A_write_enable, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_B_read_enable = VCC;
LC1_q_b[20]_PORT_B_read_enable_reg = DFFE(LC1_q_b[20]_PORT_B_read_enable, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20]_PORT_A_byte_mask = A1L0;
LC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[20]_PORT_A_byte_mask, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_clock_0 = !CLK_25MHz2;
LC1_q_b[20]_clock_1 = !CLK_25MHz2;
LC1_q_b[20]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[20]_clock_enable_1 = inst182;
LC1_q_b[20]_PORT_B_data_out = MEMORY(LC1_q_b[20]_PORT_A_data_in_reg, , LC1_q_b[20]_PORT_A_address_reg, LC1_q_b[20]_PORT_B_address_reg, LC1_q_b[20]_PORT_A_write_enable_reg, LC1_q_b[20]_PORT_B_read_enable_reg, LC1_q_b[20]_PORT_A_byte_mask_reg, , LC1_q_b[20]_clock_0, LC1_q_b[20]_clock_1, LC1_q_b[20]_clock_enable_0, LC1_q_b[20]_clock_enable_1, , );
LC1_q_b[20]_PORT_B_data_out_reg = DFFE(LC1_q_b[20]_PORT_B_data_out, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20] = LC1_q_b[20]_PORT_B_data_out_reg[0];


--LC1_q_b[20] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[20]_PORT_A_data_in = A1L0;
LC1_q_b[20]_PORT_A_data_in_reg = DFFE(LC1_q_b[20]_PORT_A_data_in, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[20]_PORT_A_address_reg = DFFE(LC1_q_b[20]_PORT_A_address, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[20]_PORT_B_address_reg = DFFE(LC1_q_b[20]_PORT_B_address, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[20]_PORT_A_write_enable_reg = DFFE(LC1_q_b[20]_PORT_A_write_enable, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_PORT_B_read_enable = VCC;
LC1_q_b[20]_PORT_B_read_enable_reg = DFFE(LC1_q_b[20]_PORT_B_read_enable, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20]_PORT_A_byte_mask = A1L0;
LC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[20]_PORT_A_byte_mask, LC1_q_b[20]_clock_0, , , LC1_q_b[20]_clock_enable_0);
LC1_q_b[20]_clock_0 = !CLK_25MHz2;
LC1_q_b[20]_clock_1 = !CLK_25MHz2;
LC1_q_b[20]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[20]_clock_enable_1 = inst154;
LC1_q_b[20]_PORT_B_data_out = MEMORY(LC1_q_b[20]_PORT_A_data_in_reg, , LC1_q_b[20]_PORT_A_address_reg, LC1_q_b[20]_PORT_B_address_reg, LC1_q_b[20]_PORT_A_write_enable_reg, LC1_q_b[20]_PORT_B_read_enable_reg, LC1_q_b[20]_PORT_A_byte_mask_reg, , LC1_q_b[20]_clock_0, LC1_q_b[20]_clock_1, LC1_q_b[20]_clock_enable_0, LC1_q_b[20]_clock_enable_1, , );
LC1_q_b[20]_PORT_B_data_out_reg = DFFE(LC1_q_b[20]_PORT_B_data_out, LC1_q_b[20]_clock_1, , , LC1_q_b[20]_clock_enable_1);
LC1_q_b[20] = LC1_q_b[20]_PORT_B_data_out_reg[0];


--GC1_q_b[20] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[20]_PORT_A_data_in = ZB1_o_RamData[20];
GC1_q_b[20]_PORT_A_data_in_reg = DFFE(GC1_q_b[20]_PORT_A_data_in, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[20]_PORT_A_address_reg = DFFE(GC1_q_b[20]_PORT_A_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[20]_PORT_B_address_reg = DFFE(GC1_q_b[20]_PORT_B_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[20]_PORT_A_write_enable_reg = DFFE(GC1_q_b[20]_PORT_A_write_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_read_enable = B1L0;
GC1_q_b[20]_PORT_B_read_enable_reg = DFFE(GC1_q_b[20]_PORT_B_read_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[20]_PORT_A_byte_mask, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_clock_0 = !CLK_25MHz2;
GC1_q_b[20]_clock_1 = !CLK_25MHz2;
GC1_q_b[20]_PORT_B_data_out = MEMORY(GC1_q_b[20]_PORT_A_data_in_reg, , GC1_q_b[20]_PORT_A_address_reg, GC1_q_b[20]_PORT_B_address_reg, GC1_q_b[20]_PORT_A_write_enable_reg, GC1_q_b[20]_PORT_B_read_enable_reg, GC1_q_b[20]_PORT_A_byte_mask_reg, , GC1_q_b[20]_clock_0, GC1_q_b[20]_clock_1, , , , );
GC1_q_b[20]_PORT_B_data_out_reg = DFFE(GC1_q_b[20]_PORT_B_data_out, GC1_q_b[20]_clock_1, , , );
GC1_q_b[20] = GC1_q_b[20]_PORT_B_data_out_reg[0];


--GC1_q_b[20] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[20]_PORT_A_data_in = ZB1_o_RamData[20];
GC1_q_b[20]_PORT_A_data_in_reg = DFFE(GC1_q_b[20]_PORT_A_data_in, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[20]_PORT_A_address_reg = DFFE(GC1_q_b[20]_PORT_A_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[20]_PORT_B_address_reg = DFFE(GC1_q_b[20]_PORT_B_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[20]_PORT_A_write_enable_reg = DFFE(GC1_q_b[20]_PORT_A_write_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_read_enable = B1L0;
GC1_q_b[20]_PORT_B_read_enable_reg = DFFE(GC1_q_b[20]_PORT_B_read_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[20]_PORT_A_byte_mask, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_clock_0 = !CLK_25MHz2;
GC1_q_b[20]_clock_1 = !CLK_25MHz2;
GC1_q_b[20]_PORT_B_data_out = MEMORY(GC1_q_b[20]_PORT_A_data_in_reg, , GC1_q_b[20]_PORT_A_address_reg, GC1_q_b[20]_PORT_B_address_reg, GC1_q_b[20]_PORT_A_write_enable_reg, GC1_q_b[20]_PORT_B_read_enable_reg, GC1_q_b[20]_PORT_A_byte_mask_reg, , GC1_q_b[20]_clock_0, GC1_q_b[20]_clock_1, , , , );
GC1_q_b[20]_PORT_B_data_out_reg = DFFE(GC1_q_b[20]_PORT_B_data_out, GC1_q_b[20]_clock_1, , , );
GC1_q_b[20] = GC1_q_b[20]_PORT_B_data_out_reg[0];


--GC1_q_b[20] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[20]_PORT_A_data_in = ZB1_o_RamData[20];
GC1_q_b[20]_PORT_A_data_in_reg = DFFE(GC1_q_b[20]_PORT_A_data_in, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[20]_PORT_A_address_reg = DFFE(GC1_q_b[20]_PORT_A_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[20]_PORT_B_address_reg = DFFE(GC1_q_b[20]_PORT_B_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[20]_PORT_A_write_enable_reg = DFFE(GC1_q_b[20]_PORT_A_write_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_read_enable = B1L0;
GC1_q_b[20]_PORT_B_read_enable_reg = DFFE(GC1_q_b[20]_PORT_B_read_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[20]_PORT_A_byte_mask, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_clock_0 = !CLK_25MHz2;
GC1_q_b[20]_clock_1 = !CLK_25MHz2;
GC1_q_b[20]_PORT_B_data_out = MEMORY(GC1_q_b[20]_PORT_A_data_in_reg, , GC1_q_b[20]_PORT_A_address_reg, GC1_q_b[20]_PORT_B_address_reg, GC1_q_b[20]_PORT_A_write_enable_reg, GC1_q_b[20]_PORT_B_read_enable_reg, GC1_q_b[20]_PORT_A_byte_mask_reg, , GC1_q_b[20]_clock_0, GC1_q_b[20]_clock_1, , , , );
GC1_q_b[20]_PORT_B_data_out_reg = DFFE(GC1_q_b[20]_PORT_B_data_out, GC1_q_b[20]_clock_1, , , );
GC1_q_b[20] = GC1_q_b[20]_PORT_B_data_out_reg[0];


--GC1_q_b[20] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[20]_PORT_A_data_in = ZB1_o_RamData[20];
GC1_q_b[20]_PORT_A_data_in_reg = DFFE(GC1_q_b[20]_PORT_A_data_in, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[20]_PORT_A_address_reg = DFFE(GC1_q_b[20]_PORT_A_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[20]_PORT_B_address_reg = DFFE(GC1_q_b[20]_PORT_B_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[20]_PORT_A_write_enable_reg = DFFE(GC1_q_b[20]_PORT_A_write_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_read_enable = B1L0;
GC1_q_b[20]_PORT_B_read_enable_reg = DFFE(GC1_q_b[20]_PORT_B_read_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[20]_PORT_A_byte_mask, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_clock_0 = !CLK_25MHz2;
GC1_q_b[20]_clock_1 = !CLK_25MHz2;
GC1_q_b[20]_PORT_B_data_out = MEMORY(GC1_q_b[20]_PORT_A_data_in_reg, , GC1_q_b[20]_PORT_A_address_reg, GC1_q_b[20]_PORT_B_address_reg, GC1_q_b[20]_PORT_A_write_enable_reg, GC1_q_b[20]_PORT_B_read_enable_reg, GC1_q_b[20]_PORT_A_byte_mask_reg, , GC1_q_b[20]_clock_0, GC1_q_b[20]_clock_1, , , , );
GC1_q_b[20]_PORT_B_data_out_reg = DFFE(GC1_q_b[20]_PORT_B_data_out, GC1_q_b[20]_clock_1, , , );
GC1_q_b[20] = GC1_q_b[20]_PORT_B_data_out_reg[0];


--GC1_q_b[20] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[20]_PORT_A_data_in = ZB1_o_RamData[20];
GC1_q_b[20]_PORT_A_data_in_reg = DFFE(GC1_q_b[20]_PORT_A_data_in, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[20]_PORT_A_address_reg = DFFE(GC1_q_b[20]_PORT_A_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[20]_PORT_B_address_reg = DFFE(GC1_q_b[20]_PORT_B_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[20]_PORT_A_write_enable_reg = DFFE(GC1_q_b[20]_PORT_A_write_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_read_enable = B1L0;
GC1_q_b[20]_PORT_B_read_enable_reg = DFFE(GC1_q_b[20]_PORT_B_read_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[20]_PORT_A_byte_mask, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_clock_0 = !CLK_25MHz2;
GC1_q_b[20]_clock_1 = !CLK_25MHz2;
GC1_q_b[20]_PORT_B_data_out = MEMORY(GC1_q_b[20]_PORT_A_data_in_reg, , GC1_q_b[20]_PORT_A_address_reg, GC1_q_b[20]_PORT_B_address_reg, GC1_q_b[20]_PORT_A_write_enable_reg, GC1_q_b[20]_PORT_B_read_enable_reg, GC1_q_b[20]_PORT_A_byte_mask_reg, , GC1_q_b[20]_clock_0, GC1_q_b[20]_clock_1, , , , );
GC1_q_b[20]_PORT_B_data_out_reg = DFFE(GC1_q_b[20]_PORT_B_data_out, GC1_q_b[20]_clock_1, , , );
GC1_q_b[20] = GC1_q_b[20]_PORT_B_data_out_reg[0];


--LC1_q_b[21] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[21]_PORT_A_data_in = A1L0;
LC1_q_b[21]_PORT_A_data_in_reg = DFFE(LC1_q_b[21]_PORT_A_data_in, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[21]_PORT_A_address_reg = DFFE(LC1_q_b[21]_PORT_A_address, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[21]_PORT_B_address_reg = DFFE(LC1_q_b[21]_PORT_B_address, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[21]_PORT_A_write_enable_reg = DFFE(LC1_q_b[21]_PORT_A_write_enable, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_B_read_enable = VCC;
LC1_q_b[21]_PORT_B_read_enable_reg = DFFE(LC1_q_b[21]_PORT_B_read_enable, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21]_PORT_A_byte_mask = A1L0;
LC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[21]_PORT_A_byte_mask, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_clock_0 = !CLK_25MHz2;
LC1_q_b[21]_clock_1 = !CLK_25MHz2;
LC1_q_b[21]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[21]_clock_enable_1 = inst146;
LC1_q_b[21]_PORT_B_data_out = MEMORY(LC1_q_b[21]_PORT_A_data_in_reg, , LC1_q_b[21]_PORT_A_address_reg, LC1_q_b[21]_PORT_B_address_reg, LC1_q_b[21]_PORT_A_write_enable_reg, LC1_q_b[21]_PORT_B_read_enable_reg, LC1_q_b[21]_PORT_A_byte_mask_reg, , LC1_q_b[21]_clock_0, LC1_q_b[21]_clock_1, LC1_q_b[21]_clock_enable_0, LC1_q_b[21]_clock_enable_1, , );
LC1_q_b[21]_PORT_B_data_out_reg = DFFE(LC1_q_b[21]_PORT_B_data_out, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21] = LC1_q_b[21]_PORT_B_data_out_reg[0];


--LC1_q_b[21] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[21]_PORT_A_data_in = A1L0;
LC1_q_b[21]_PORT_A_data_in_reg = DFFE(LC1_q_b[21]_PORT_A_data_in, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[21]_PORT_A_address_reg = DFFE(LC1_q_b[21]_PORT_A_address, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[21]_PORT_B_address_reg = DFFE(LC1_q_b[21]_PORT_B_address, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[21]_PORT_A_write_enable_reg = DFFE(LC1_q_b[21]_PORT_A_write_enable, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_B_read_enable = VCC;
LC1_q_b[21]_PORT_B_read_enable_reg = DFFE(LC1_q_b[21]_PORT_B_read_enable, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21]_PORT_A_byte_mask = A1L0;
LC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[21]_PORT_A_byte_mask, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_clock_0 = !CLK_25MHz2;
LC1_q_b[21]_clock_1 = !CLK_25MHz2;
LC1_q_b[21]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[21]_clock_enable_1 = inst80;
LC1_q_b[21]_PORT_B_data_out = MEMORY(LC1_q_b[21]_PORT_A_data_in_reg, , LC1_q_b[21]_PORT_A_address_reg, LC1_q_b[21]_PORT_B_address_reg, LC1_q_b[21]_PORT_A_write_enable_reg, LC1_q_b[21]_PORT_B_read_enable_reg, LC1_q_b[21]_PORT_A_byte_mask_reg, , LC1_q_b[21]_clock_0, LC1_q_b[21]_clock_1, LC1_q_b[21]_clock_enable_0, LC1_q_b[21]_clock_enable_1, , );
LC1_q_b[21]_PORT_B_data_out_reg = DFFE(LC1_q_b[21]_PORT_B_data_out, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21] = LC1_q_b[21]_PORT_B_data_out_reg[0];


--LC1_q_b[21] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[21]_PORT_A_data_in = A1L0;
LC1_q_b[21]_PORT_A_data_in_reg = DFFE(LC1_q_b[21]_PORT_A_data_in, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[21]_PORT_A_address_reg = DFFE(LC1_q_b[21]_PORT_A_address, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[21]_PORT_B_address_reg = DFFE(LC1_q_b[21]_PORT_B_address, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[21]_PORT_A_write_enable_reg = DFFE(LC1_q_b[21]_PORT_A_write_enable, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_B_read_enable = VCC;
LC1_q_b[21]_PORT_B_read_enable_reg = DFFE(LC1_q_b[21]_PORT_B_read_enable, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21]_PORT_A_byte_mask = A1L0;
LC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[21]_PORT_A_byte_mask, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_clock_0 = !CLK_25MHz2;
LC1_q_b[21]_clock_1 = !CLK_25MHz2;
LC1_q_b[21]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[21]_clock_enable_1 = inst182;
LC1_q_b[21]_PORT_B_data_out = MEMORY(LC1_q_b[21]_PORT_A_data_in_reg, , LC1_q_b[21]_PORT_A_address_reg, LC1_q_b[21]_PORT_B_address_reg, LC1_q_b[21]_PORT_A_write_enable_reg, LC1_q_b[21]_PORT_B_read_enable_reg, LC1_q_b[21]_PORT_A_byte_mask_reg, , LC1_q_b[21]_clock_0, LC1_q_b[21]_clock_1, LC1_q_b[21]_clock_enable_0, LC1_q_b[21]_clock_enable_1, , );
LC1_q_b[21]_PORT_B_data_out_reg = DFFE(LC1_q_b[21]_PORT_B_data_out, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21] = LC1_q_b[21]_PORT_B_data_out_reg[0];


--LC1_q_b[21] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[21]_PORT_A_data_in = A1L0;
LC1_q_b[21]_PORT_A_data_in_reg = DFFE(LC1_q_b[21]_PORT_A_data_in, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[21]_PORT_A_address_reg = DFFE(LC1_q_b[21]_PORT_A_address, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[21]_PORT_B_address_reg = DFFE(LC1_q_b[21]_PORT_B_address, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[21]_PORT_A_write_enable_reg = DFFE(LC1_q_b[21]_PORT_A_write_enable, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_PORT_B_read_enable = VCC;
LC1_q_b[21]_PORT_B_read_enable_reg = DFFE(LC1_q_b[21]_PORT_B_read_enable, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21]_PORT_A_byte_mask = A1L0;
LC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[21]_PORT_A_byte_mask, LC1_q_b[21]_clock_0, , , LC1_q_b[21]_clock_enable_0);
LC1_q_b[21]_clock_0 = !CLK_25MHz2;
LC1_q_b[21]_clock_1 = !CLK_25MHz2;
LC1_q_b[21]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[21]_clock_enable_1 = inst154;
LC1_q_b[21]_PORT_B_data_out = MEMORY(LC1_q_b[21]_PORT_A_data_in_reg, , LC1_q_b[21]_PORT_A_address_reg, LC1_q_b[21]_PORT_B_address_reg, LC1_q_b[21]_PORT_A_write_enable_reg, LC1_q_b[21]_PORT_B_read_enable_reg, LC1_q_b[21]_PORT_A_byte_mask_reg, , LC1_q_b[21]_clock_0, LC1_q_b[21]_clock_1, LC1_q_b[21]_clock_enable_0, LC1_q_b[21]_clock_enable_1, , );
LC1_q_b[21]_PORT_B_data_out_reg = DFFE(LC1_q_b[21]_PORT_B_data_out, LC1_q_b[21]_clock_1, , , LC1_q_b[21]_clock_enable_1);
LC1_q_b[21] = LC1_q_b[21]_PORT_B_data_out_reg[0];


--GC1_q_b[21] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[21]_PORT_A_data_in = ZB1_o_RamData[21];
GC1_q_b[21]_PORT_A_data_in_reg = DFFE(GC1_q_b[21]_PORT_A_data_in, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[21]_PORT_A_address_reg = DFFE(GC1_q_b[21]_PORT_A_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[21]_PORT_B_address_reg = DFFE(GC1_q_b[21]_PORT_B_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[21]_PORT_A_write_enable_reg = DFFE(GC1_q_b[21]_PORT_A_write_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_read_enable = B1L0;
GC1_q_b[21]_PORT_B_read_enable_reg = DFFE(GC1_q_b[21]_PORT_B_read_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[21]_PORT_A_byte_mask, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_clock_0 = !CLK_25MHz2;
GC1_q_b[21]_clock_1 = !CLK_25MHz2;
GC1_q_b[21]_PORT_B_data_out = MEMORY(GC1_q_b[21]_PORT_A_data_in_reg, , GC1_q_b[21]_PORT_A_address_reg, GC1_q_b[21]_PORT_B_address_reg, GC1_q_b[21]_PORT_A_write_enable_reg, GC1_q_b[21]_PORT_B_read_enable_reg, GC1_q_b[21]_PORT_A_byte_mask_reg, , GC1_q_b[21]_clock_0, GC1_q_b[21]_clock_1, , , , );
GC1_q_b[21]_PORT_B_data_out_reg = DFFE(GC1_q_b[21]_PORT_B_data_out, GC1_q_b[21]_clock_1, , , );
GC1_q_b[21] = GC1_q_b[21]_PORT_B_data_out_reg[0];


--GC1_q_b[21] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[21]_PORT_A_data_in = ZB1_o_RamData[21];
GC1_q_b[21]_PORT_A_data_in_reg = DFFE(GC1_q_b[21]_PORT_A_data_in, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[21]_PORT_A_address_reg = DFFE(GC1_q_b[21]_PORT_A_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[21]_PORT_B_address_reg = DFFE(GC1_q_b[21]_PORT_B_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[21]_PORT_A_write_enable_reg = DFFE(GC1_q_b[21]_PORT_A_write_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_read_enable = B1L0;
GC1_q_b[21]_PORT_B_read_enable_reg = DFFE(GC1_q_b[21]_PORT_B_read_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[21]_PORT_A_byte_mask, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_clock_0 = !CLK_25MHz2;
GC1_q_b[21]_clock_1 = !CLK_25MHz2;
GC1_q_b[21]_PORT_B_data_out = MEMORY(GC1_q_b[21]_PORT_A_data_in_reg, , GC1_q_b[21]_PORT_A_address_reg, GC1_q_b[21]_PORT_B_address_reg, GC1_q_b[21]_PORT_A_write_enable_reg, GC1_q_b[21]_PORT_B_read_enable_reg, GC1_q_b[21]_PORT_A_byte_mask_reg, , GC1_q_b[21]_clock_0, GC1_q_b[21]_clock_1, , , , );
GC1_q_b[21]_PORT_B_data_out_reg = DFFE(GC1_q_b[21]_PORT_B_data_out, GC1_q_b[21]_clock_1, , , );
GC1_q_b[21] = GC1_q_b[21]_PORT_B_data_out_reg[0];


--GC1_q_b[21] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[21]_PORT_A_data_in = ZB1_o_RamData[21];
GC1_q_b[21]_PORT_A_data_in_reg = DFFE(GC1_q_b[21]_PORT_A_data_in, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[21]_PORT_A_address_reg = DFFE(GC1_q_b[21]_PORT_A_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[21]_PORT_B_address_reg = DFFE(GC1_q_b[21]_PORT_B_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[21]_PORT_A_write_enable_reg = DFFE(GC1_q_b[21]_PORT_A_write_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_read_enable = B1L0;
GC1_q_b[21]_PORT_B_read_enable_reg = DFFE(GC1_q_b[21]_PORT_B_read_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[21]_PORT_A_byte_mask, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_clock_0 = !CLK_25MHz2;
GC1_q_b[21]_clock_1 = !CLK_25MHz2;
GC1_q_b[21]_PORT_B_data_out = MEMORY(GC1_q_b[21]_PORT_A_data_in_reg, , GC1_q_b[21]_PORT_A_address_reg, GC1_q_b[21]_PORT_B_address_reg, GC1_q_b[21]_PORT_A_write_enable_reg, GC1_q_b[21]_PORT_B_read_enable_reg, GC1_q_b[21]_PORT_A_byte_mask_reg, , GC1_q_b[21]_clock_0, GC1_q_b[21]_clock_1, , , , );
GC1_q_b[21]_PORT_B_data_out_reg = DFFE(GC1_q_b[21]_PORT_B_data_out, GC1_q_b[21]_clock_1, , , );
GC1_q_b[21] = GC1_q_b[21]_PORT_B_data_out_reg[0];


--GC1_q_b[21] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[21]_PORT_A_data_in = ZB1_o_RamData[21];
GC1_q_b[21]_PORT_A_data_in_reg = DFFE(GC1_q_b[21]_PORT_A_data_in, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[21]_PORT_A_address_reg = DFFE(GC1_q_b[21]_PORT_A_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[21]_PORT_B_address_reg = DFFE(GC1_q_b[21]_PORT_B_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[21]_PORT_A_write_enable_reg = DFFE(GC1_q_b[21]_PORT_A_write_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_read_enable = B1L0;
GC1_q_b[21]_PORT_B_read_enable_reg = DFFE(GC1_q_b[21]_PORT_B_read_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[21]_PORT_A_byte_mask, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_clock_0 = !CLK_25MHz2;
GC1_q_b[21]_clock_1 = !CLK_25MHz2;
GC1_q_b[21]_PORT_B_data_out = MEMORY(GC1_q_b[21]_PORT_A_data_in_reg, , GC1_q_b[21]_PORT_A_address_reg, GC1_q_b[21]_PORT_B_address_reg, GC1_q_b[21]_PORT_A_write_enable_reg, GC1_q_b[21]_PORT_B_read_enable_reg, GC1_q_b[21]_PORT_A_byte_mask_reg, , GC1_q_b[21]_clock_0, GC1_q_b[21]_clock_1, , , , );
GC1_q_b[21]_PORT_B_data_out_reg = DFFE(GC1_q_b[21]_PORT_B_data_out, GC1_q_b[21]_clock_1, , , );
GC1_q_b[21] = GC1_q_b[21]_PORT_B_data_out_reg[0];


--GC1_q_b[21] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[21]_PORT_A_data_in = ZB1_o_RamData[21];
GC1_q_b[21]_PORT_A_data_in_reg = DFFE(GC1_q_b[21]_PORT_A_data_in, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[21]_PORT_A_address_reg = DFFE(GC1_q_b[21]_PORT_A_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[21]_PORT_B_address_reg = DFFE(GC1_q_b[21]_PORT_B_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[21]_PORT_A_write_enable_reg = DFFE(GC1_q_b[21]_PORT_A_write_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_read_enable = B1L0;
GC1_q_b[21]_PORT_B_read_enable_reg = DFFE(GC1_q_b[21]_PORT_B_read_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[21]_PORT_A_byte_mask, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_clock_0 = !CLK_25MHz2;
GC1_q_b[21]_clock_1 = !CLK_25MHz2;
GC1_q_b[21]_PORT_B_data_out = MEMORY(GC1_q_b[21]_PORT_A_data_in_reg, , GC1_q_b[21]_PORT_A_address_reg, GC1_q_b[21]_PORT_B_address_reg, GC1_q_b[21]_PORT_A_write_enable_reg, GC1_q_b[21]_PORT_B_read_enable_reg, GC1_q_b[21]_PORT_A_byte_mask_reg, , GC1_q_b[21]_clock_0, GC1_q_b[21]_clock_1, , , , );
GC1_q_b[21]_PORT_B_data_out_reg = DFFE(GC1_q_b[21]_PORT_B_data_out, GC1_q_b[21]_clock_1, , , );
GC1_q_b[21] = GC1_q_b[21]_PORT_B_data_out_reg[0];


--LC1_q_b[22] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[22]_PORT_A_data_in = A1L0;
LC1_q_b[22]_PORT_A_data_in_reg = DFFE(LC1_q_b[22]_PORT_A_data_in, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[22]_PORT_A_address_reg = DFFE(LC1_q_b[22]_PORT_A_address, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[22]_PORT_B_address_reg = DFFE(LC1_q_b[22]_PORT_B_address, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[22]_PORT_A_write_enable_reg = DFFE(LC1_q_b[22]_PORT_A_write_enable, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_B_read_enable = VCC;
LC1_q_b[22]_PORT_B_read_enable_reg = DFFE(LC1_q_b[22]_PORT_B_read_enable, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22]_PORT_A_byte_mask = A1L0;
LC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[22]_PORT_A_byte_mask, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_clock_0 = !CLK_25MHz2;
LC1_q_b[22]_clock_1 = !CLK_25MHz2;
LC1_q_b[22]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[22]_clock_enable_1 = inst146;
LC1_q_b[22]_PORT_B_data_out = MEMORY(LC1_q_b[22]_PORT_A_data_in_reg, , LC1_q_b[22]_PORT_A_address_reg, LC1_q_b[22]_PORT_B_address_reg, LC1_q_b[22]_PORT_A_write_enable_reg, LC1_q_b[22]_PORT_B_read_enable_reg, LC1_q_b[22]_PORT_A_byte_mask_reg, , LC1_q_b[22]_clock_0, LC1_q_b[22]_clock_1, LC1_q_b[22]_clock_enable_0, LC1_q_b[22]_clock_enable_1, , );
LC1_q_b[22]_PORT_B_data_out_reg = DFFE(LC1_q_b[22]_PORT_B_data_out, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22] = LC1_q_b[22]_PORT_B_data_out_reg[0];


--LC1_q_b[22] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[22]_PORT_A_data_in = A1L0;
LC1_q_b[22]_PORT_A_data_in_reg = DFFE(LC1_q_b[22]_PORT_A_data_in, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[22]_PORT_A_address_reg = DFFE(LC1_q_b[22]_PORT_A_address, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[22]_PORT_B_address_reg = DFFE(LC1_q_b[22]_PORT_B_address, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[22]_PORT_A_write_enable_reg = DFFE(LC1_q_b[22]_PORT_A_write_enable, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_B_read_enable = VCC;
LC1_q_b[22]_PORT_B_read_enable_reg = DFFE(LC1_q_b[22]_PORT_B_read_enable, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22]_PORT_A_byte_mask = A1L0;
LC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[22]_PORT_A_byte_mask, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_clock_0 = !CLK_25MHz2;
LC1_q_b[22]_clock_1 = !CLK_25MHz2;
LC1_q_b[22]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[22]_clock_enable_1 = inst80;
LC1_q_b[22]_PORT_B_data_out = MEMORY(LC1_q_b[22]_PORT_A_data_in_reg, , LC1_q_b[22]_PORT_A_address_reg, LC1_q_b[22]_PORT_B_address_reg, LC1_q_b[22]_PORT_A_write_enable_reg, LC1_q_b[22]_PORT_B_read_enable_reg, LC1_q_b[22]_PORT_A_byte_mask_reg, , LC1_q_b[22]_clock_0, LC1_q_b[22]_clock_1, LC1_q_b[22]_clock_enable_0, LC1_q_b[22]_clock_enable_1, , );
LC1_q_b[22]_PORT_B_data_out_reg = DFFE(LC1_q_b[22]_PORT_B_data_out, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22] = LC1_q_b[22]_PORT_B_data_out_reg[0];


--LC1_q_b[22] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[22]_PORT_A_data_in = A1L0;
LC1_q_b[22]_PORT_A_data_in_reg = DFFE(LC1_q_b[22]_PORT_A_data_in, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[22]_PORT_A_address_reg = DFFE(LC1_q_b[22]_PORT_A_address, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[22]_PORT_B_address_reg = DFFE(LC1_q_b[22]_PORT_B_address, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[22]_PORT_A_write_enable_reg = DFFE(LC1_q_b[22]_PORT_A_write_enable, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_B_read_enable = VCC;
LC1_q_b[22]_PORT_B_read_enable_reg = DFFE(LC1_q_b[22]_PORT_B_read_enable, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22]_PORT_A_byte_mask = A1L0;
LC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[22]_PORT_A_byte_mask, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_clock_0 = !CLK_25MHz2;
LC1_q_b[22]_clock_1 = !CLK_25MHz2;
LC1_q_b[22]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[22]_clock_enable_1 = inst182;
LC1_q_b[22]_PORT_B_data_out = MEMORY(LC1_q_b[22]_PORT_A_data_in_reg, , LC1_q_b[22]_PORT_A_address_reg, LC1_q_b[22]_PORT_B_address_reg, LC1_q_b[22]_PORT_A_write_enable_reg, LC1_q_b[22]_PORT_B_read_enable_reg, LC1_q_b[22]_PORT_A_byte_mask_reg, , LC1_q_b[22]_clock_0, LC1_q_b[22]_clock_1, LC1_q_b[22]_clock_enable_0, LC1_q_b[22]_clock_enable_1, , );
LC1_q_b[22]_PORT_B_data_out_reg = DFFE(LC1_q_b[22]_PORT_B_data_out, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22] = LC1_q_b[22]_PORT_B_data_out_reg[0];


--LC1_q_b[22] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[22]_PORT_A_data_in = A1L0;
LC1_q_b[22]_PORT_A_data_in_reg = DFFE(LC1_q_b[22]_PORT_A_data_in, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[22]_PORT_A_address_reg = DFFE(LC1_q_b[22]_PORT_A_address, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[22]_PORT_B_address_reg = DFFE(LC1_q_b[22]_PORT_B_address, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[22]_PORT_A_write_enable_reg = DFFE(LC1_q_b[22]_PORT_A_write_enable, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_PORT_B_read_enable = VCC;
LC1_q_b[22]_PORT_B_read_enable_reg = DFFE(LC1_q_b[22]_PORT_B_read_enable, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22]_PORT_A_byte_mask = A1L0;
LC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[22]_PORT_A_byte_mask, LC1_q_b[22]_clock_0, , , LC1_q_b[22]_clock_enable_0);
LC1_q_b[22]_clock_0 = !CLK_25MHz2;
LC1_q_b[22]_clock_1 = !CLK_25MHz2;
LC1_q_b[22]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[22]_clock_enable_1 = inst154;
LC1_q_b[22]_PORT_B_data_out = MEMORY(LC1_q_b[22]_PORT_A_data_in_reg, , LC1_q_b[22]_PORT_A_address_reg, LC1_q_b[22]_PORT_B_address_reg, LC1_q_b[22]_PORT_A_write_enable_reg, LC1_q_b[22]_PORT_B_read_enable_reg, LC1_q_b[22]_PORT_A_byte_mask_reg, , LC1_q_b[22]_clock_0, LC1_q_b[22]_clock_1, LC1_q_b[22]_clock_enable_0, LC1_q_b[22]_clock_enable_1, , );
LC1_q_b[22]_PORT_B_data_out_reg = DFFE(LC1_q_b[22]_PORT_B_data_out, LC1_q_b[22]_clock_1, , , LC1_q_b[22]_clock_enable_1);
LC1_q_b[22] = LC1_q_b[22]_PORT_B_data_out_reg[0];


--GC1_q_b[22] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[22]_PORT_A_data_in = ZB1_o_RamData[22];
GC1_q_b[22]_PORT_A_data_in_reg = DFFE(GC1_q_b[22]_PORT_A_data_in, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[22]_PORT_A_address_reg = DFFE(GC1_q_b[22]_PORT_A_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[22]_PORT_B_address_reg = DFFE(GC1_q_b[22]_PORT_B_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[22]_PORT_A_write_enable_reg = DFFE(GC1_q_b[22]_PORT_A_write_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_read_enable = B1L0;
GC1_q_b[22]_PORT_B_read_enable_reg = DFFE(GC1_q_b[22]_PORT_B_read_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[22]_PORT_A_byte_mask, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_clock_0 = !CLK_25MHz2;
GC1_q_b[22]_clock_1 = !CLK_25MHz2;
GC1_q_b[22]_PORT_B_data_out = MEMORY(GC1_q_b[22]_PORT_A_data_in_reg, , GC1_q_b[22]_PORT_A_address_reg, GC1_q_b[22]_PORT_B_address_reg, GC1_q_b[22]_PORT_A_write_enable_reg, GC1_q_b[22]_PORT_B_read_enable_reg, GC1_q_b[22]_PORT_A_byte_mask_reg, , GC1_q_b[22]_clock_0, GC1_q_b[22]_clock_1, , , , );
GC1_q_b[22]_PORT_B_data_out_reg = DFFE(GC1_q_b[22]_PORT_B_data_out, GC1_q_b[22]_clock_1, , , );
GC1_q_b[22] = GC1_q_b[22]_PORT_B_data_out_reg[0];


--GC1_q_b[22] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[22]_PORT_A_data_in = ZB1_o_RamData[22];
GC1_q_b[22]_PORT_A_data_in_reg = DFFE(GC1_q_b[22]_PORT_A_data_in, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[22]_PORT_A_address_reg = DFFE(GC1_q_b[22]_PORT_A_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[22]_PORT_B_address_reg = DFFE(GC1_q_b[22]_PORT_B_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[22]_PORT_A_write_enable_reg = DFFE(GC1_q_b[22]_PORT_A_write_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_read_enable = B1L0;
GC1_q_b[22]_PORT_B_read_enable_reg = DFFE(GC1_q_b[22]_PORT_B_read_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[22]_PORT_A_byte_mask, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_clock_0 = !CLK_25MHz2;
GC1_q_b[22]_clock_1 = !CLK_25MHz2;
GC1_q_b[22]_PORT_B_data_out = MEMORY(GC1_q_b[22]_PORT_A_data_in_reg, , GC1_q_b[22]_PORT_A_address_reg, GC1_q_b[22]_PORT_B_address_reg, GC1_q_b[22]_PORT_A_write_enable_reg, GC1_q_b[22]_PORT_B_read_enable_reg, GC1_q_b[22]_PORT_A_byte_mask_reg, , GC1_q_b[22]_clock_0, GC1_q_b[22]_clock_1, , , , );
GC1_q_b[22]_PORT_B_data_out_reg = DFFE(GC1_q_b[22]_PORT_B_data_out, GC1_q_b[22]_clock_1, , , );
GC1_q_b[22] = GC1_q_b[22]_PORT_B_data_out_reg[0];


--GC1_q_b[22] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[22]_PORT_A_data_in = ZB1_o_RamData[22];
GC1_q_b[22]_PORT_A_data_in_reg = DFFE(GC1_q_b[22]_PORT_A_data_in, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[22]_PORT_A_address_reg = DFFE(GC1_q_b[22]_PORT_A_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[22]_PORT_B_address_reg = DFFE(GC1_q_b[22]_PORT_B_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[22]_PORT_A_write_enable_reg = DFFE(GC1_q_b[22]_PORT_A_write_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_read_enable = B1L0;
GC1_q_b[22]_PORT_B_read_enable_reg = DFFE(GC1_q_b[22]_PORT_B_read_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[22]_PORT_A_byte_mask, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_clock_0 = !CLK_25MHz2;
GC1_q_b[22]_clock_1 = !CLK_25MHz2;
GC1_q_b[22]_PORT_B_data_out = MEMORY(GC1_q_b[22]_PORT_A_data_in_reg, , GC1_q_b[22]_PORT_A_address_reg, GC1_q_b[22]_PORT_B_address_reg, GC1_q_b[22]_PORT_A_write_enable_reg, GC1_q_b[22]_PORT_B_read_enable_reg, GC1_q_b[22]_PORT_A_byte_mask_reg, , GC1_q_b[22]_clock_0, GC1_q_b[22]_clock_1, , , , );
GC1_q_b[22]_PORT_B_data_out_reg = DFFE(GC1_q_b[22]_PORT_B_data_out, GC1_q_b[22]_clock_1, , , );
GC1_q_b[22] = GC1_q_b[22]_PORT_B_data_out_reg[0];


--GC1_q_b[22] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[22]_PORT_A_data_in = ZB1_o_RamData[22];
GC1_q_b[22]_PORT_A_data_in_reg = DFFE(GC1_q_b[22]_PORT_A_data_in, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[22]_PORT_A_address_reg = DFFE(GC1_q_b[22]_PORT_A_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[22]_PORT_B_address_reg = DFFE(GC1_q_b[22]_PORT_B_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[22]_PORT_A_write_enable_reg = DFFE(GC1_q_b[22]_PORT_A_write_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_read_enable = B1L0;
GC1_q_b[22]_PORT_B_read_enable_reg = DFFE(GC1_q_b[22]_PORT_B_read_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[22]_PORT_A_byte_mask, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_clock_0 = !CLK_25MHz2;
GC1_q_b[22]_clock_1 = !CLK_25MHz2;
GC1_q_b[22]_PORT_B_data_out = MEMORY(GC1_q_b[22]_PORT_A_data_in_reg, , GC1_q_b[22]_PORT_A_address_reg, GC1_q_b[22]_PORT_B_address_reg, GC1_q_b[22]_PORT_A_write_enable_reg, GC1_q_b[22]_PORT_B_read_enable_reg, GC1_q_b[22]_PORT_A_byte_mask_reg, , GC1_q_b[22]_clock_0, GC1_q_b[22]_clock_1, , , , );
GC1_q_b[22]_PORT_B_data_out_reg = DFFE(GC1_q_b[22]_PORT_B_data_out, GC1_q_b[22]_clock_1, , , );
GC1_q_b[22] = GC1_q_b[22]_PORT_B_data_out_reg[0];


--GC1_q_b[22] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[22]_PORT_A_data_in = ZB1_o_RamData[22];
GC1_q_b[22]_PORT_A_data_in_reg = DFFE(GC1_q_b[22]_PORT_A_data_in, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[22]_PORT_A_address_reg = DFFE(GC1_q_b[22]_PORT_A_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[22]_PORT_B_address_reg = DFFE(GC1_q_b[22]_PORT_B_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[22]_PORT_A_write_enable_reg = DFFE(GC1_q_b[22]_PORT_A_write_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_read_enable = B1L0;
GC1_q_b[22]_PORT_B_read_enable_reg = DFFE(GC1_q_b[22]_PORT_B_read_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[22]_PORT_A_byte_mask, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_clock_0 = !CLK_25MHz2;
GC1_q_b[22]_clock_1 = !CLK_25MHz2;
GC1_q_b[22]_PORT_B_data_out = MEMORY(GC1_q_b[22]_PORT_A_data_in_reg, , GC1_q_b[22]_PORT_A_address_reg, GC1_q_b[22]_PORT_B_address_reg, GC1_q_b[22]_PORT_A_write_enable_reg, GC1_q_b[22]_PORT_B_read_enable_reg, GC1_q_b[22]_PORT_A_byte_mask_reg, , GC1_q_b[22]_clock_0, GC1_q_b[22]_clock_1, , , , );
GC1_q_b[22]_PORT_B_data_out_reg = DFFE(GC1_q_b[22]_PORT_B_data_out, GC1_q_b[22]_clock_1, , , );
GC1_q_b[22] = GC1_q_b[22]_PORT_B_data_out_reg[0];


--LC1_q_b[23] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[23]_PORT_A_data_in = A1L0;
LC1_q_b[23]_PORT_A_data_in_reg = DFFE(LC1_q_b[23]_PORT_A_data_in, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[23]_PORT_A_address_reg = DFFE(LC1_q_b[23]_PORT_A_address, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[23]_PORT_B_address_reg = DFFE(LC1_q_b[23]_PORT_B_address, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[23]_PORT_A_write_enable_reg = DFFE(LC1_q_b[23]_PORT_A_write_enable, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_B_read_enable = VCC;
LC1_q_b[23]_PORT_B_read_enable_reg = DFFE(LC1_q_b[23]_PORT_B_read_enable, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23]_PORT_A_byte_mask = A1L0;
LC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[23]_PORT_A_byte_mask, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_clock_0 = !CLK_25MHz2;
LC1_q_b[23]_clock_1 = !CLK_25MHz2;
LC1_q_b[23]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[23]_clock_enable_1 = inst146;
LC1_q_b[23]_PORT_B_data_out = MEMORY(LC1_q_b[23]_PORT_A_data_in_reg, , LC1_q_b[23]_PORT_A_address_reg, LC1_q_b[23]_PORT_B_address_reg, LC1_q_b[23]_PORT_A_write_enable_reg, LC1_q_b[23]_PORT_B_read_enable_reg, LC1_q_b[23]_PORT_A_byte_mask_reg, , LC1_q_b[23]_clock_0, LC1_q_b[23]_clock_1, LC1_q_b[23]_clock_enable_0, LC1_q_b[23]_clock_enable_1, , );
LC1_q_b[23]_PORT_B_data_out_reg = DFFE(LC1_q_b[23]_PORT_B_data_out, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23] = LC1_q_b[23]_PORT_B_data_out_reg[0];


--LC1_q_b[23] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[23]_PORT_A_data_in = A1L0;
LC1_q_b[23]_PORT_A_data_in_reg = DFFE(LC1_q_b[23]_PORT_A_data_in, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[23]_PORT_A_address_reg = DFFE(LC1_q_b[23]_PORT_A_address, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[23]_PORT_B_address_reg = DFFE(LC1_q_b[23]_PORT_B_address, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[23]_PORT_A_write_enable_reg = DFFE(LC1_q_b[23]_PORT_A_write_enable, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_B_read_enable = VCC;
LC1_q_b[23]_PORT_B_read_enable_reg = DFFE(LC1_q_b[23]_PORT_B_read_enable, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23]_PORT_A_byte_mask = A1L0;
LC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[23]_PORT_A_byte_mask, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_clock_0 = !CLK_25MHz2;
LC1_q_b[23]_clock_1 = !CLK_25MHz2;
LC1_q_b[23]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[23]_clock_enable_1 = inst80;
LC1_q_b[23]_PORT_B_data_out = MEMORY(LC1_q_b[23]_PORT_A_data_in_reg, , LC1_q_b[23]_PORT_A_address_reg, LC1_q_b[23]_PORT_B_address_reg, LC1_q_b[23]_PORT_A_write_enable_reg, LC1_q_b[23]_PORT_B_read_enable_reg, LC1_q_b[23]_PORT_A_byte_mask_reg, , LC1_q_b[23]_clock_0, LC1_q_b[23]_clock_1, LC1_q_b[23]_clock_enable_0, LC1_q_b[23]_clock_enable_1, , );
LC1_q_b[23]_PORT_B_data_out_reg = DFFE(LC1_q_b[23]_PORT_B_data_out, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23] = LC1_q_b[23]_PORT_B_data_out_reg[0];


--LC1_q_b[23] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[23]_PORT_A_data_in = A1L0;
LC1_q_b[23]_PORT_A_data_in_reg = DFFE(LC1_q_b[23]_PORT_A_data_in, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[23]_PORT_A_address_reg = DFFE(LC1_q_b[23]_PORT_A_address, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[23]_PORT_B_address_reg = DFFE(LC1_q_b[23]_PORT_B_address, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[23]_PORT_A_write_enable_reg = DFFE(LC1_q_b[23]_PORT_A_write_enable, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_B_read_enable = VCC;
LC1_q_b[23]_PORT_B_read_enable_reg = DFFE(LC1_q_b[23]_PORT_B_read_enable, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23]_PORT_A_byte_mask = A1L0;
LC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[23]_PORT_A_byte_mask, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_clock_0 = !CLK_25MHz2;
LC1_q_b[23]_clock_1 = !CLK_25MHz2;
LC1_q_b[23]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[23]_clock_enable_1 = inst182;
LC1_q_b[23]_PORT_B_data_out = MEMORY(LC1_q_b[23]_PORT_A_data_in_reg, , LC1_q_b[23]_PORT_A_address_reg, LC1_q_b[23]_PORT_B_address_reg, LC1_q_b[23]_PORT_A_write_enable_reg, LC1_q_b[23]_PORT_B_read_enable_reg, LC1_q_b[23]_PORT_A_byte_mask_reg, , LC1_q_b[23]_clock_0, LC1_q_b[23]_clock_1, LC1_q_b[23]_clock_enable_0, LC1_q_b[23]_clock_enable_1, , );
LC1_q_b[23]_PORT_B_data_out_reg = DFFE(LC1_q_b[23]_PORT_B_data_out, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23] = LC1_q_b[23]_PORT_B_data_out_reg[0];


--LC1_q_b[23] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[23]_PORT_A_data_in = A1L0;
LC1_q_b[23]_PORT_A_data_in_reg = DFFE(LC1_q_b[23]_PORT_A_data_in, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[23]_PORT_A_address_reg = DFFE(LC1_q_b[23]_PORT_A_address, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[23]_PORT_B_address_reg = DFFE(LC1_q_b[23]_PORT_B_address, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[23]_PORT_A_write_enable_reg = DFFE(LC1_q_b[23]_PORT_A_write_enable, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_PORT_B_read_enable = VCC;
LC1_q_b[23]_PORT_B_read_enable_reg = DFFE(LC1_q_b[23]_PORT_B_read_enable, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23]_PORT_A_byte_mask = A1L0;
LC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[23]_PORT_A_byte_mask, LC1_q_b[23]_clock_0, , , LC1_q_b[23]_clock_enable_0);
LC1_q_b[23]_clock_0 = !CLK_25MHz2;
LC1_q_b[23]_clock_1 = !CLK_25MHz2;
LC1_q_b[23]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[23]_clock_enable_1 = inst154;
LC1_q_b[23]_PORT_B_data_out = MEMORY(LC1_q_b[23]_PORT_A_data_in_reg, , LC1_q_b[23]_PORT_A_address_reg, LC1_q_b[23]_PORT_B_address_reg, LC1_q_b[23]_PORT_A_write_enable_reg, LC1_q_b[23]_PORT_B_read_enable_reg, LC1_q_b[23]_PORT_A_byte_mask_reg, , LC1_q_b[23]_clock_0, LC1_q_b[23]_clock_1, LC1_q_b[23]_clock_enable_0, LC1_q_b[23]_clock_enable_1, , );
LC1_q_b[23]_PORT_B_data_out_reg = DFFE(LC1_q_b[23]_PORT_B_data_out, LC1_q_b[23]_clock_1, , , LC1_q_b[23]_clock_enable_1);
LC1_q_b[23] = LC1_q_b[23]_PORT_B_data_out_reg[0];


--GC1_q_b[23] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[23]_PORT_A_data_in = ZB1_o_RamData[23];
GC1_q_b[23]_PORT_A_data_in_reg = DFFE(GC1_q_b[23]_PORT_A_data_in, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[23]_PORT_A_address_reg = DFFE(GC1_q_b[23]_PORT_A_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[23]_PORT_B_address_reg = DFFE(GC1_q_b[23]_PORT_B_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[23]_PORT_A_write_enable_reg = DFFE(GC1_q_b[23]_PORT_A_write_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_read_enable = B1L0;
GC1_q_b[23]_PORT_B_read_enable_reg = DFFE(GC1_q_b[23]_PORT_B_read_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[23]_PORT_A_byte_mask, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_clock_0 = !CLK_25MHz2;
GC1_q_b[23]_clock_1 = !CLK_25MHz2;
GC1_q_b[23]_PORT_B_data_out = MEMORY(GC1_q_b[23]_PORT_A_data_in_reg, , GC1_q_b[23]_PORT_A_address_reg, GC1_q_b[23]_PORT_B_address_reg, GC1_q_b[23]_PORT_A_write_enable_reg, GC1_q_b[23]_PORT_B_read_enable_reg, GC1_q_b[23]_PORT_A_byte_mask_reg, , GC1_q_b[23]_clock_0, GC1_q_b[23]_clock_1, , , , );
GC1_q_b[23]_PORT_B_data_out_reg = DFFE(GC1_q_b[23]_PORT_B_data_out, GC1_q_b[23]_clock_1, , , );
GC1_q_b[23] = GC1_q_b[23]_PORT_B_data_out_reg[0];


--GC1_q_b[23] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[23]_PORT_A_data_in = ZB1_o_RamData[23];
GC1_q_b[23]_PORT_A_data_in_reg = DFFE(GC1_q_b[23]_PORT_A_data_in, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[23]_PORT_A_address_reg = DFFE(GC1_q_b[23]_PORT_A_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[23]_PORT_B_address_reg = DFFE(GC1_q_b[23]_PORT_B_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[23]_PORT_A_write_enable_reg = DFFE(GC1_q_b[23]_PORT_A_write_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_read_enable = B1L0;
GC1_q_b[23]_PORT_B_read_enable_reg = DFFE(GC1_q_b[23]_PORT_B_read_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[23]_PORT_A_byte_mask, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_clock_0 = !CLK_25MHz2;
GC1_q_b[23]_clock_1 = !CLK_25MHz2;
GC1_q_b[23]_PORT_B_data_out = MEMORY(GC1_q_b[23]_PORT_A_data_in_reg, , GC1_q_b[23]_PORT_A_address_reg, GC1_q_b[23]_PORT_B_address_reg, GC1_q_b[23]_PORT_A_write_enable_reg, GC1_q_b[23]_PORT_B_read_enable_reg, GC1_q_b[23]_PORT_A_byte_mask_reg, , GC1_q_b[23]_clock_0, GC1_q_b[23]_clock_1, , , , );
GC1_q_b[23]_PORT_B_data_out_reg = DFFE(GC1_q_b[23]_PORT_B_data_out, GC1_q_b[23]_clock_1, , , );
GC1_q_b[23] = GC1_q_b[23]_PORT_B_data_out_reg[0];


--GC1_q_b[23] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[23]_PORT_A_data_in = ZB1_o_RamData[23];
GC1_q_b[23]_PORT_A_data_in_reg = DFFE(GC1_q_b[23]_PORT_A_data_in, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[23]_PORT_A_address_reg = DFFE(GC1_q_b[23]_PORT_A_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[23]_PORT_B_address_reg = DFFE(GC1_q_b[23]_PORT_B_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[23]_PORT_A_write_enable_reg = DFFE(GC1_q_b[23]_PORT_A_write_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_read_enable = B1L0;
GC1_q_b[23]_PORT_B_read_enable_reg = DFFE(GC1_q_b[23]_PORT_B_read_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[23]_PORT_A_byte_mask, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_clock_0 = !CLK_25MHz2;
GC1_q_b[23]_clock_1 = !CLK_25MHz2;
GC1_q_b[23]_PORT_B_data_out = MEMORY(GC1_q_b[23]_PORT_A_data_in_reg, , GC1_q_b[23]_PORT_A_address_reg, GC1_q_b[23]_PORT_B_address_reg, GC1_q_b[23]_PORT_A_write_enable_reg, GC1_q_b[23]_PORT_B_read_enable_reg, GC1_q_b[23]_PORT_A_byte_mask_reg, , GC1_q_b[23]_clock_0, GC1_q_b[23]_clock_1, , , , );
GC1_q_b[23]_PORT_B_data_out_reg = DFFE(GC1_q_b[23]_PORT_B_data_out, GC1_q_b[23]_clock_1, , , );
GC1_q_b[23] = GC1_q_b[23]_PORT_B_data_out_reg[0];


--GC1_q_b[23] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[23]_PORT_A_data_in = ZB1_o_RamData[23];
GC1_q_b[23]_PORT_A_data_in_reg = DFFE(GC1_q_b[23]_PORT_A_data_in, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[23]_PORT_A_address_reg = DFFE(GC1_q_b[23]_PORT_A_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[23]_PORT_B_address_reg = DFFE(GC1_q_b[23]_PORT_B_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[23]_PORT_A_write_enable_reg = DFFE(GC1_q_b[23]_PORT_A_write_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_read_enable = B1L0;
GC1_q_b[23]_PORT_B_read_enable_reg = DFFE(GC1_q_b[23]_PORT_B_read_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[23]_PORT_A_byte_mask, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_clock_0 = !CLK_25MHz2;
GC1_q_b[23]_clock_1 = !CLK_25MHz2;
GC1_q_b[23]_PORT_B_data_out = MEMORY(GC1_q_b[23]_PORT_A_data_in_reg, , GC1_q_b[23]_PORT_A_address_reg, GC1_q_b[23]_PORT_B_address_reg, GC1_q_b[23]_PORT_A_write_enable_reg, GC1_q_b[23]_PORT_B_read_enable_reg, GC1_q_b[23]_PORT_A_byte_mask_reg, , GC1_q_b[23]_clock_0, GC1_q_b[23]_clock_1, , , , );
GC1_q_b[23]_PORT_B_data_out_reg = DFFE(GC1_q_b[23]_PORT_B_data_out, GC1_q_b[23]_clock_1, , , );
GC1_q_b[23] = GC1_q_b[23]_PORT_B_data_out_reg[0];


--GC1_q_b[23] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[23]_PORT_A_data_in = ZB1_o_RamData[23];
GC1_q_b[23]_PORT_A_data_in_reg = DFFE(GC1_q_b[23]_PORT_A_data_in, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[23]_PORT_A_address_reg = DFFE(GC1_q_b[23]_PORT_A_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[23]_PORT_B_address_reg = DFFE(GC1_q_b[23]_PORT_B_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[23]_PORT_A_write_enable_reg = DFFE(GC1_q_b[23]_PORT_A_write_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_read_enable = B1L0;
GC1_q_b[23]_PORT_B_read_enable_reg = DFFE(GC1_q_b[23]_PORT_B_read_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_byte_mask = ZB1_o_ByteSel[2];
GC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[23]_PORT_A_byte_mask, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_clock_0 = !CLK_25MHz2;
GC1_q_b[23]_clock_1 = !CLK_25MHz2;
GC1_q_b[23]_PORT_B_data_out = MEMORY(GC1_q_b[23]_PORT_A_data_in_reg, , GC1_q_b[23]_PORT_A_address_reg, GC1_q_b[23]_PORT_B_address_reg, GC1_q_b[23]_PORT_A_write_enable_reg, GC1_q_b[23]_PORT_B_read_enable_reg, GC1_q_b[23]_PORT_A_byte_mask_reg, , GC1_q_b[23]_clock_0, GC1_q_b[23]_clock_1, , , , );
GC1_q_b[23]_PORT_B_data_out_reg = DFFE(GC1_q_b[23]_PORT_B_data_out, GC1_q_b[23]_clock_1, , , );
GC1_q_b[23] = GC1_q_b[23]_PORT_B_data_out_reg[0];


--LC1_q_b[24] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[24]_PORT_A_data_in = A1L0;
LC1_q_b[24]_PORT_A_data_in_reg = DFFE(LC1_q_b[24]_PORT_A_data_in, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[24]_PORT_A_address_reg = DFFE(LC1_q_b[24]_PORT_A_address, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[24]_PORT_B_address_reg = DFFE(LC1_q_b[24]_PORT_B_address, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[24]_PORT_A_write_enable_reg = DFFE(LC1_q_b[24]_PORT_A_write_enable, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_B_read_enable = VCC;
LC1_q_b[24]_PORT_B_read_enable_reg = DFFE(LC1_q_b[24]_PORT_B_read_enable, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24]_PORT_A_byte_mask = A1L0;
LC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[24]_PORT_A_byte_mask, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_clock_0 = !CLK_25MHz2;
LC1_q_b[24]_clock_1 = !CLK_25MHz2;
LC1_q_b[24]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[24]_clock_enable_1 = inst146;
LC1_q_b[24]_PORT_B_data_out = MEMORY(LC1_q_b[24]_PORT_A_data_in_reg, , LC1_q_b[24]_PORT_A_address_reg, LC1_q_b[24]_PORT_B_address_reg, LC1_q_b[24]_PORT_A_write_enable_reg, LC1_q_b[24]_PORT_B_read_enable_reg, LC1_q_b[24]_PORT_A_byte_mask_reg, , LC1_q_b[24]_clock_0, LC1_q_b[24]_clock_1, LC1_q_b[24]_clock_enable_0, LC1_q_b[24]_clock_enable_1, , );
LC1_q_b[24]_PORT_B_data_out_reg = DFFE(LC1_q_b[24]_PORT_B_data_out, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24] = LC1_q_b[24]_PORT_B_data_out_reg[0];


--LC1_q_b[24] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[24]_PORT_A_data_in = A1L0;
LC1_q_b[24]_PORT_A_data_in_reg = DFFE(LC1_q_b[24]_PORT_A_data_in, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[24]_PORT_A_address_reg = DFFE(LC1_q_b[24]_PORT_A_address, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[24]_PORT_B_address_reg = DFFE(LC1_q_b[24]_PORT_B_address, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[24]_PORT_A_write_enable_reg = DFFE(LC1_q_b[24]_PORT_A_write_enable, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_B_read_enable = VCC;
LC1_q_b[24]_PORT_B_read_enable_reg = DFFE(LC1_q_b[24]_PORT_B_read_enable, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24]_PORT_A_byte_mask = A1L0;
LC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[24]_PORT_A_byte_mask, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_clock_0 = !CLK_25MHz2;
LC1_q_b[24]_clock_1 = !CLK_25MHz2;
LC1_q_b[24]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[24]_clock_enable_1 = inst80;
LC1_q_b[24]_PORT_B_data_out = MEMORY(LC1_q_b[24]_PORT_A_data_in_reg, , LC1_q_b[24]_PORT_A_address_reg, LC1_q_b[24]_PORT_B_address_reg, LC1_q_b[24]_PORT_A_write_enable_reg, LC1_q_b[24]_PORT_B_read_enable_reg, LC1_q_b[24]_PORT_A_byte_mask_reg, , LC1_q_b[24]_clock_0, LC1_q_b[24]_clock_1, LC1_q_b[24]_clock_enable_0, LC1_q_b[24]_clock_enable_1, , );
LC1_q_b[24]_PORT_B_data_out_reg = DFFE(LC1_q_b[24]_PORT_B_data_out, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24] = LC1_q_b[24]_PORT_B_data_out_reg[0];


--LC1_q_b[24] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[24]_PORT_A_data_in = A1L0;
LC1_q_b[24]_PORT_A_data_in_reg = DFFE(LC1_q_b[24]_PORT_A_data_in, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[24]_PORT_A_address_reg = DFFE(LC1_q_b[24]_PORT_A_address, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[24]_PORT_B_address_reg = DFFE(LC1_q_b[24]_PORT_B_address, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[24]_PORT_A_write_enable_reg = DFFE(LC1_q_b[24]_PORT_A_write_enable, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_B_read_enable = VCC;
LC1_q_b[24]_PORT_B_read_enable_reg = DFFE(LC1_q_b[24]_PORT_B_read_enable, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24]_PORT_A_byte_mask = A1L0;
LC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[24]_PORT_A_byte_mask, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_clock_0 = !CLK_25MHz2;
LC1_q_b[24]_clock_1 = !CLK_25MHz2;
LC1_q_b[24]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[24]_clock_enable_1 = inst182;
LC1_q_b[24]_PORT_B_data_out = MEMORY(LC1_q_b[24]_PORT_A_data_in_reg, , LC1_q_b[24]_PORT_A_address_reg, LC1_q_b[24]_PORT_B_address_reg, LC1_q_b[24]_PORT_A_write_enable_reg, LC1_q_b[24]_PORT_B_read_enable_reg, LC1_q_b[24]_PORT_A_byte_mask_reg, , LC1_q_b[24]_clock_0, LC1_q_b[24]_clock_1, LC1_q_b[24]_clock_enable_0, LC1_q_b[24]_clock_enable_1, , );
LC1_q_b[24]_PORT_B_data_out_reg = DFFE(LC1_q_b[24]_PORT_B_data_out, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24] = LC1_q_b[24]_PORT_B_data_out_reg[0];


--LC1_q_b[24] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[24]_PORT_A_data_in = A1L0;
LC1_q_b[24]_PORT_A_data_in_reg = DFFE(LC1_q_b[24]_PORT_A_data_in, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[24]_PORT_A_address_reg = DFFE(LC1_q_b[24]_PORT_A_address, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[24]_PORT_B_address_reg = DFFE(LC1_q_b[24]_PORT_B_address, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[24]_PORT_A_write_enable_reg = DFFE(LC1_q_b[24]_PORT_A_write_enable, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_PORT_B_read_enable = VCC;
LC1_q_b[24]_PORT_B_read_enable_reg = DFFE(LC1_q_b[24]_PORT_B_read_enable, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24]_PORT_A_byte_mask = A1L0;
LC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[24]_PORT_A_byte_mask, LC1_q_b[24]_clock_0, , , LC1_q_b[24]_clock_enable_0);
LC1_q_b[24]_clock_0 = !CLK_25MHz2;
LC1_q_b[24]_clock_1 = !CLK_25MHz2;
LC1_q_b[24]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[24]_clock_enable_1 = inst154;
LC1_q_b[24]_PORT_B_data_out = MEMORY(LC1_q_b[24]_PORT_A_data_in_reg, , LC1_q_b[24]_PORT_A_address_reg, LC1_q_b[24]_PORT_B_address_reg, LC1_q_b[24]_PORT_A_write_enable_reg, LC1_q_b[24]_PORT_B_read_enable_reg, LC1_q_b[24]_PORT_A_byte_mask_reg, , LC1_q_b[24]_clock_0, LC1_q_b[24]_clock_1, LC1_q_b[24]_clock_enable_0, LC1_q_b[24]_clock_enable_1, , );
LC1_q_b[24]_PORT_B_data_out_reg = DFFE(LC1_q_b[24]_PORT_B_data_out, LC1_q_b[24]_clock_1, , , LC1_q_b[24]_clock_enable_1);
LC1_q_b[24] = LC1_q_b[24]_PORT_B_data_out_reg[0];


--GC1_q_b[24] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[24]_PORT_A_data_in = ZB1_o_RamData[24];
GC1_q_b[24]_PORT_A_data_in_reg = DFFE(GC1_q_b[24]_PORT_A_data_in, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[24]_PORT_A_address_reg = DFFE(GC1_q_b[24]_PORT_A_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[24]_PORT_B_address_reg = DFFE(GC1_q_b[24]_PORT_B_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[24]_PORT_A_write_enable_reg = DFFE(GC1_q_b[24]_PORT_A_write_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_read_enable = B1L0;
GC1_q_b[24]_PORT_B_read_enable_reg = DFFE(GC1_q_b[24]_PORT_B_read_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[24]_PORT_A_byte_mask, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_clock_0 = !CLK_25MHz2;
GC1_q_b[24]_clock_1 = !CLK_25MHz2;
GC1_q_b[24]_PORT_B_data_out = MEMORY(GC1_q_b[24]_PORT_A_data_in_reg, , GC1_q_b[24]_PORT_A_address_reg, GC1_q_b[24]_PORT_B_address_reg, GC1_q_b[24]_PORT_A_write_enable_reg, GC1_q_b[24]_PORT_B_read_enable_reg, GC1_q_b[24]_PORT_A_byte_mask_reg, , GC1_q_b[24]_clock_0, GC1_q_b[24]_clock_1, , , , );
GC1_q_b[24]_PORT_B_data_out_reg = DFFE(GC1_q_b[24]_PORT_B_data_out, GC1_q_b[24]_clock_1, , , );
GC1_q_b[24] = GC1_q_b[24]_PORT_B_data_out_reg[0];


--GC1_q_b[24] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[24]_PORT_A_data_in = ZB1_o_RamData[24];
GC1_q_b[24]_PORT_A_data_in_reg = DFFE(GC1_q_b[24]_PORT_A_data_in, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[24]_PORT_A_address_reg = DFFE(GC1_q_b[24]_PORT_A_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[24]_PORT_B_address_reg = DFFE(GC1_q_b[24]_PORT_B_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[24]_PORT_A_write_enable_reg = DFFE(GC1_q_b[24]_PORT_A_write_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_read_enable = B1L0;
GC1_q_b[24]_PORT_B_read_enable_reg = DFFE(GC1_q_b[24]_PORT_B_read_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[24]_PORT_A_byte_mask, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_clock_0 = !CLK_25MHz2;
GC1_q_b[24]_clock_1 = !CLK_25MHz2;
GC1_q_b[24]_PORT_B_data_out = MEMORY(GC1_q_b[24]_PORT_A_data_in_reg, , GC1_q_b[24]_PORT_A_address_reg, GC1_q_b[24]_PORT_B_address_reg, GC1_q_b[24]_PORT_A_write_enable_reg, GC1_q_b[24]_PORT_B_read_enable_reg, GC1_q_b[24]_PORT_A_byte_mask_reg, , GC1_q_b[24]_clock_0, GC1_q_b[24]_clock_1, , , , );
GC1_q_b[24]_PORT_B_data_out_reg = DFFE(GC1_q_b[24]_PORT_B_data_out, GC1_q_b[24]_clock_1, , , );
GC1_q_b[24] = GC1_q_b[24]_PORT_B_data_out_reg[0];


--GC1_q_b[24] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[24]_PORT_A_data_in = ZB1_o_RamData[24];
GC1_q_b[24]_PORT_A_data_in_reg = DFFE(GC1_q_b[24]_PORT_A_data_in, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[24]_PORT_A_address_reg = DFFE(GC1_q_b[24]_PORT_A_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[24]_PORT_B_address_reg = DFFE(GC1_q_b[24]_PORT_B_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[24]_PORT_A_write_enable_reg = DFFE(GC1_q_b[24]_PORT_A_write_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_read_enable = B1L0;
GC1_q_b[24]_PORT_B_read_enable_reg = DFFE(GC1_q_b[24]_PORT_B_read_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[24]_PORT_A_byte_mask, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_clock_0 = !CLK_25MHz2;
GC1_q_b[24]_clock_1 = !CLK_25MHz2;
GC1_q_b[24]_PORT_B_data_out = MEMORY(GC1_q_b[24]_PORT_A_data_in_reg, , GC1_q_b[24]_PORT_A_address_reg, GC1_q_b[24]_PORT_B_address_reg, GC1_q_b[24]_PORT_A_write_enable_reg, GC1_q_b[24]_PORT_B_read_enable_reg, GC1_q_b[24]_PORT_A_byte_mask_reg, , GC1_q_b[24]_clock_0, GC1_q_b[24]_clock_1, , , , );
GC1_q_b[24]_PORT_B_data_out_reg = DFFE(GC1_q_b[24]_PORT_B_data_out, GC1_q_b[24]_clock_1, , , );
GC1_q_b[24] = GC1_q_b[24]_PORT_B_data_out_reg[0];


--GC1_q_b[24] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[24]_PORT_A_data_in = ZB1_o_RamData[24];
GC1_q_b[24]_PORT_A_data_in_reg = DFFE(GC1_q_b[24]_PORT_A_data_in, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[24]_PORT_A_address_reg = DFFE(GC1_q_b[24]_PORT_A_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[24]_PORT_B_address_reg = DFFE(GC1_q_b[24]_PORT_B_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[24]_PORT_A_write_enable_reg = DFFE(GC1_q_b[24]_PORT_A_write_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_read_enable = B1L0;
GC1_q_b[24]_PORT_B_read_enable_reg = DFFE(GC1_q_b[24]_PORT_B_read_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[24]_PORT_A_byte_mask, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_clock_0 = !CLK_25MHz2;
GC1_q_b[24]_clock_1 = !CLK_25MHz2;
GC1_q_b[24]_PORT_B_data_out = MEMORY(GC1_q_b[24]_PORT_A_data_in_reg, , GC1_q_b[24]_PORT_A_address_reg, GC1_q_b[24]_PORT_B_address_reg, GC1_q_b[24]_PORT_A_write_enable_reg, GC1_q_b[24]_PORT_B_read_enable_reg, GC1_q_b[24]_PORT_A_byte_mask_reg, , GC1_q_b[24]_clock_0, GC1_q_b[24]_clock_1, , , , );
GC1_q_b[24]_PORT_B_data_out_reg = DFFE(GC1_q_b[24]_PORT_B_data_out, GC1_q_b[24]_clock_1, , , );
GC1_q_b[24] = GC1_q_b[24]_PORT_B_data_out_reg[0];


--GC1_q_b[24] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[24]_PORT_A_data_in = ZB1_o_RamData[24];
GC1_q_b[24]_PORT_A_data_in_reg = DFFE(GC1_q_b[24]_PORT_A_data_in, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[24]_PORT_A_address_reg = DFFE(GC1_q_b[24]_PORT_A_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[24]_PORT_B_address_reg = DFFE(GC1_q_b[24]_PORT_B_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[24]_PORT_A_write_enable_reg = DFFE(GC1_q_b[24]_PORT_A_write_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_read_enable = B1L0;
GC1_q_b[24]_PORT_B_read_enable_reg = DFFE(GC1_q_b[24]_PORT_B_read_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[24]_PORT_A_byte_mask, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_clock_0 = !CLK_25MHz2;
GC1_q_b[24]_clock_1 = !CLK_25MHz2;
GC1_q_b[24]_PORT_B_data_out = MEMORY(GC1_q_b[24]_PORT_A_data_in_reg, , GC1_q_b[24]_PORT_A_address_reg, GC1_q_b[24]_PORT_B_address_reg, GC1_q_b[24]_PORT_A_write_enable_reg, GC1_q_b[24]_PORT_B_read_enable_reg, GC1_q_b[24]_PORT_A_byte_mask_reg, , GC1_q_b[24]_clock_0, GC1_q_b[24]_clock_1, , , , );
GC1_q_b[24]_PORT_B_data_out_reg = DFFE(GC1_q_b[24]_PORT_B_data_out, GC1_q_b[24]_clock_1, , , );
GC1_q_b[24] = GC1_q_b[24]_PORT_B_data_out_reg[0];


--LC1_q_b[25] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[25]_PORT_A_data_in = A1L0;
LC1_q_b[25]_PORT_A_data_in_reg = DFFE(LC1_q_b[25]_PORT_A_data_in, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[25]_PORT_A_address_reg = DFFE(LC1_q_b[25]_PORT_A_address, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[25]_PORT_B_address_reg = DFFE(LC1_q_b[25]_PORT_B_address, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[25]_PORT_A_write_enable_reg = DFFE(LC1_q_b[25]_PORT_A_write_enable, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_B_read_enable = VCC;
LC1_q_b[25]_PORT_B_read_enable_reg = DFFE(LC1_q_b[25]_PORT_B_read_enable, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25]_PORT_A_byte_mask = A1L0;
LC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[25]_PORT_A_byte_mask, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_clock_0 = !CLK_25MHz2;
LC1_q_b[25]_clock_1 = !CLK_25MHz2;
LC1_q_b[25]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[25]_clock_enable_1 = inst146;
LC1_q_b[25]_PORT_B_data_out = MEMORY(LC1_q_b[25]_PORT_A_data_in_reg, , LC1_q_b[25]_PORT_A_address_reg, LC1_q_b[25]_PORT_B_address_reg, LC1_q_b[25]_PORT_A_write_enable_reg, LC1_q_b[25]_PORT_B_read_enable_reg, LC1_q_b[25]_PORT_A_byte_mask_reg, , LC1_q_b[25]_clock_0, LC1_q_b[25]_clock_1, LC1_q_b[25]_clock_enable_0, LC1_q_b[25]_clock_enable_1, , );
LC1_q_b[25]_PORT_B_data_out_reg = DFFE(LC1_q_b[25]_PORT_B_data_out, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25] = LC1_q_b[25]_PORT_B_data_out_reg[0];


--LC1_q_b[25] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[25]_PORT_A_data_in = A1L0;
LC1_q_b[25]_PORT_A_data_in_reg = DFFE(LC1_q_b[25]_PORT_A_data_in, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[25]_PORT_A_address_reg = DFFE(LC1_q_b[25]_PORT_A_address, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[25]_PORT_B_address_reg = DFFE(LC1_q_b[25]_PORT_B_address, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[25]_PORT_A_write_enable_reg = DFFE(LC1_q_b[25]_PORT_A_write_enable, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_B_read_enable = VCC;
LC1_q_b[25]_PORT_B_read_enable_reg = DFFE(LC1_q_b[25]_PORT_B_read_enable, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25]_PORT_A_byte_mask = A1L0;
LC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[25]_PORT_A_byte_mask, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_clock_0 = !CLK_25MHz2;
LC1_q_b[25]_clock_1 = !CLK_25MHz2;
LC1_q_b[25]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[25]_clock_enable_1 = inst80;
LC1_q_b[25]_PORT_B_data_out = MEMORY(LC1_q_b[25]_PORT_A_data_in_reg, , LC1_q_b[25]_PORT_A_address_reg, LC1_q_b[25]_PORT_B_address_reg, LC1_q_b[25]_PORT_A_write_enable_reg, LC1_q_b[25]_PORT_B_read_enable_reg, LC1_q_b[25]_PORT_A_byte_mask_reg, , LC1_q_b[25]_clock_0, LC1_q_b[25]_clock_1, LC1_q_b[25]_clock_enable_0, LC1_q_b[25]_clock_enable_1, , );
LC1_q_b[25]_PORT_B_data_out_reg = DFFE(LC1_q_b[25]_PORT_B_data_out, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25] = LC1_q_b[25]_PORT_B_data_out_reg[0];


--LC1_q_b[25] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[25]_PORT_A_data_in = A1L0;
LC1_q_b[25]_PORT_A_data_in_reg = DFFE(LC1_q_b[25]_PORT_A_data_in, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[25]_PORT_A_address_reg = DFFE(LC1_q_b[25]_PORT_A_address, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[25]_PORT_B_address_reg = DFFE(LC1_q_b[25]_PORT_B_address, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[25]_PORT_A_write_enable_reg = DFFE(LC1_q_b[25]_PORT_A_write_enable, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_B_read_enable = VCC;
LC1_q_b[25]_PORT_B_read_enable_reg = DFFE(LC1_q_b[25]_PORT_B_read_enable, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25]_PORT_A_byte_mask = A1L0;
LC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[25]_PORT_A_byte_mask, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_clock_0 = !CLK_25MHz2;
LC1_q_b[25]_clock_1 = !CLK_25MHz2;
LC1_q_b[25]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[25]_clock_enable_1 = inst182;
LC1_q_b[25]_PORT_B_data_out = MEMORY(LC1_q_b[25]_PORT_A_data_in_reg, , LC1_q_b[25]_PORT_A_address_reg, LC1_q_b[25]_PORT_B_address_reg, LC1_q_b[25]_PORT_A_write_enable_reg, LC1_q_b[25]_PORT_B_read_enable_reg, LC1_q_b[25]_PORT_A_byte_mask_reg, , LC1_q_b[25]_clock_0, LC1_q_b[25]_clock_1, LC1_q_b[25]_clock_enable_0, LC1_q_b[25]_clock_enable_1, , );
LC1_q_b[25]_PORT_B_data_out_reg = DFFE(LC1_q_b[25]_PORT_B_data_out, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25] = LC1_q_b[25]_PORT_B_data_out_reg[0];


--LC1_q_b[25] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[25]_PORT_A_data_in = A1L0;
LC1_q_b[25]_PORT_A_data_in_reg = DFFE(LC1_q_b[25]_PORT_A_data_in, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[25]_PORT_A_address_reg = DFFE(LC1_q_b[25]_PORT_A_address, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[25]_PORT_B_address_reg = DFFE(LC1_q_b[25]_PORT_B_address, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[25]_PORT_A_write_enable_reg = DFFE(LC1_q_b[25]_PORT_A_write_enable, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_PORT_B_read_enable = VCC;
LC1_q_b[25]_PORT_B_read_enable_reg = DFFE(LC1_q_b[25]_PORT_B_read_enable, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25]_PORT_A_byte_mask = A1L0;
LC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[25]_PORT_A_byte_mask, LC1_q_b[25]_clock_0, , , LC1_q_b[25]_clock_enable_0);
LC1_q_b[25]_clock_0 = !CLK_25MHz2;
LC1_q_b[25]_clock_1 = !CLK_25MHz2;
LC1_q_b[25]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[25]_clock_enable_1 = inst154;
LC1_q_b[25]_PORT_B_data_out = MEMORY(LC1_q_b[25]_PORT_A_data_in_reg, , LC1_q_b[25]_PORT_A_address_reg, LC1_q_b[25]_PORT_B_address_reg, LC1_q_b[25]_PORT_A_write_enable_reg, LC1_q_b[25]_PORT_B_read_enable_reg, LC1_q_b[25]_PORT_A_byte_mask_reg, , LC1_q_b[25]_clock_0, LC1_q_b[25]_clock_1, LC1_q_b[25]_clock_enable_0, LC1_q_b[25]_clock_enable_1, , );
LC1_q_b[25]_PORT_B_data_out_reg = DFFE(LC1_q_b[25]_PORT_B_data_out, LC1_q_b[25]_clock_1, , , LC1_q_b[25]_clock_enable_1);
LC1_q_b[25] = LC1_q_b[25]_PORT_B_data_out_reg[0];


--GC1_q_b[25] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[25]_PORT_A_data_in = ZB1_o_RamData[25];
GC1_q_b[25]_PORT_A_data_in_reg = DFFE(GC1_q_b[25]_PORT_A_data_in, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[25]_PORT_A_address_reg = DFFE(GC1_q_b[25]_PORT_A_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[25]_PORT_B_address_reg = DFFE(GC1_q_b[25]_PORT_B_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[25]_PORT_A_write_enable_reg = DFFE(GC1_q_b[25]_PORT_A_write_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_read_enable = B1L0;
GC1_q_b[25]_PORT_B_read_enable_reg = DFFE(GC1_q_b[25]_PORT_B_read_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[25]_PORT_A_byte_mask, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_clock_0 = !CLK_25MHz2;
GC1_q_b[25]_clock_1 = !CLK_25MHz2;
GC1_q_b[25]_PORT_B_data_out = MEMORY(GC1_q_b[25]_PORT_A_data_in_reg, , GC1_q_b[25]_PORT_A_address_reg, GC1_q_b[25]_PORT_B_address_reg, GC1_q_b[25]_PORT_A_write_enable_reg, GC1_q_b[25]_PORT_B_read_enable_reg, GC1_q_b[25]_PORT_A_byte_mask_reg, , GC1_q_b[25]_clock_0, GC1_q_b[25]_clock_1, , , , );
GC1_q_b[25]_PORT_B_data_out_reg = DFFE(GC1_q_b[25]_PORT_B_data_out, GC1_q_b[25]_clock_1, , , );
GC1_q_b[25] = GC1_q_b[25]_PORT_B_data_out_reg[0];


--GC1_q_b[25] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[25]_PORT_A_data_in = ZB1_o_RamData[25];
GC1_q_b[25]_PORT_A_data_in_reg = DFFE(GC1_q_b[25]_PORT_A_data_in, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[25]_PORT_A_address_reg = DFFE(GC1_q_b[25]_PORT_A_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[25]_PORT_B_address_reg = DFFE(GC1_q_b[25]_PORT_B_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[25]_PORT_A_write_enable_reg = DFFE(GC1_q_b[25]_PORT_A_write_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_read_enable = B1L0;
GC1_q_b[25]_PORT_B_read_enable_reg = DFFE(GC1_q_b[25]_PORT_B_read_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[25]_PORT_A_byte_mask, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_clock_0 = !CLK_25MHz2;
GC1_q_b[25]_clock_1 = !CLK_25MHz2;
GC1_q_b[25]_PORT_B_data_out = MEMORY(GC1_q_b[25]_PORT_A_data_in_reg, , GC1_q_b[25]_PORT_A_address_reg, GC1_q_b[25]_PORT_B_address_reg, GC1_q_b[25]_PORT_A_write_enable_reg, GC1_q_b[25]_PORT_B_read_enable_reg, GC1_q_b[25]_PORT_A_byte_mask_reg, , GC1_q_b[25]_clock_0, GC1_q_b[25]_clock_1, , , , );
GC1_q_b[25]_PORT_B_data_out_reg = DFFE(GC1_q_b[25]_PORT_B_data_out, GC1_q_b[25]_clock_1, , , );
GC1_q_b[25] = GC1_q_b[25]_PORT_B_data_out_reg[0];


--GC1_q_b[25] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[25]_PORT_A_data_in = ZB1_o_RamData[25];
GC1_q_b[25]_PORT_A_data_in_reg = DFFE(GC1_q_b[25]_PORT_A_data_in, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[25]_PORT_A_address_reg = DFFE(GC1_q_b[25]_PORT_A_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[25]_PORT_B_address_reg = DFFE(GC1_q_b[25]_PORT_B_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[25]_PORT_A_write_enable_reg = DFFE(GC1_q_b[25]_PORT_A_write_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_read_enable = B1L0;
GC1_q_b[25]_PORT_B_read_enable_reg = DFFE(GC1_q_b[25]_PORT_B_read_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[25]_PORT_A_byte_mask, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_clock_0 = !CLK_25MHz2;
GC1_q_b[25]_clock_1 = !CLK_25MHz2;
GC1_q_b[25]_PORT_B_data_out = MEMORY(GC1_q_b[25]_PORT_A_data_in_reg, , GC1_q_b[25]_PORT_A_address_reg, GC1_q_b[25]_PORT_B_address_reg, GC1_q_b[25]_PORT_A_write_enable_reg, GC1_q_b[25]_PORT_B_read_enable_reg, GC1_q_b[25]_PORT_A_byte_mask_reg, , GC1_q_b[25]_clock_0, GC1_q_b[25]_clock_1, , , , );
GC1_q_b[25]_PORT_B_data_out_reg = DFFE(GC1_q_b[25]_PORT_B_data_out, GC1_q_b[25]_clock_1, , , );
GC1_q_b[25] = GC1_q_b[25]_PORT_B_data_out_reg[0];


--GC1_q_b[25] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[25]_PORT_A_data_in = ZB1_o_RamData[25];
GC1_q_b[25]_PORT_A_data_in_reg = DFFE(GC1_q_b[25]_PORT_A_data_in, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[25]_PORT_A_address_reg = DFFE(GC1_q_b[25]_PORT_A_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[25]_PORT_B_address_reg = DFFE(GC1_q_b[25]_PORT_B_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[25]_PORT_A_write_enable_reg = DFFE(GC1_q_b[25]_PORT_A_write_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_read_enable = B1L0;
GC1_q_b[25]_PORT_B_read_enable_reg = DFFE(GC1_q_b[25]_PORT_B_read_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[25]_PORT_A_byte_mask, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_clock_0 = !CLK_25MHz2;
GC1_q_b[25]_clock_1 = !CLK_25MHz2;
GC1_q_b[25]_PORT_B_data_out = MEMORY(GC1_q_b[25]_PORT_A_data_in_reg, , GC1_q_b[25]_PORT_A_address_reg, GC1_q_b[25]_PORT_B_address_reg, GC1_q_b[25]_PORT_A_write_enable_reg, GC1_q_b[25]_PORT_B_read_enable_reg, GC1_q_b[25]_PORT_A_byte_mask_reg, , GC1_q_b[25]_clock_0, GC1_q_b[25]_clock_1, , , , );
GC1_q_b[25]_PORT_B_data_out_reg = DFFE(GC1_q_b[25]_PORT_B_data_out, GC1_q_b[25]_clock_1, , , );
GC1_q_b[25] = GC1_q_b[25]_PORT_B_data_out_reg[0];


--GC1_q_b[25] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[25]_PORT_A_data_in = ZB1_o_RamData[25];
GC1_q_b[25]_PORT_A_data_in_reg = DFFE(GC1_q_b[25]_PORT_A_data_in, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[25]_PORT_A_address_reg = DFFE(GC1_q_b[25]_PORT_A_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[25]_PORT_B_address_reg = DFFE(GC1_q_b[25]_PORT_B_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[25]_PORT_A_write_enable_reg = DFFE(GC1_q_b[25]_PORT_A_write_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_read_enable = B1L0;
GC1_q_b[25]_PORT_B_read_enable_reg = DFFE(GC1_q_b[25]_PORT_B_read_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[25]_PORT_A_byte_mask, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_clock_0 = !CLK_25MHz2;
GC1_q_b[25]_clock_1 = !CLK_25MHz2;
GC1_q_b[25]_PORT_B_data_out = MEMORY(GC1_q_b[25]_PORT_A_data_in_reg, , GC1_q_b[25]_PORT_A_address_reg, GC1_q_b[25]_PORT_B_address_reg, GC1_q_b[25]_PORT_A_write_enable_reg, GC1_q_b[25]_PORT_B_read_enable_reg, GC1_q_b[25]_PORT_A_byte_mask_reg, , GC1_q_b[25]_clock_0, GC1_q_b[25]_clock_1, , , , );
GC1_q_b[25]_PORT_B_data_out_reg = DFFE(GC1_q_b[25]_PORT_B_data_out, GC1_q_b[25]_clock_1, , , );
GC1_q_b[25] = GC1_q_b[25]_PORT_B_data_out_reg[0];


--LC1_q_b[26] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[26]_PORT_A_data_in = A1L0;
LC1_q_b[26]_PORT_A_data_in_reg = DFFE(LC1_q_b[26]_PORT_A_data_in, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[26]_PORT_A_address_reg = DFFE(LC1_q_b[26]_PORT_A_address, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[26]_PORT_B_address_reg = DFFE(LC1_q_b[26]_PORT_B_address, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[26]_PORT_A_write_enable_reg = DFFE(LC1_q_b[26]_PORT_A_write_enable, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_B_read_enable = VCC;
LC1_q_b[26]_PORT_B_read_enable_reg = DFFE(LC1_q_b[26]_PORT_B_read_enable, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26]_PORT_A_byte_mask = A1L0;
LC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[26]_PORT_A_byte_mask, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_clock_0 = !CLK_25MHz2;
LC1_q_b[26]_clock_1 = !CLK_25MHz2;
LC1_q_b[26]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[26]_clock_enable_1 = inst146;
LC1_q_b[26]_PORT_B_data_out = MEMORY(LC1_q_b[26]_PORT_A_data_in_reg, , LC1_q_b[26]_PORT_A_address_reg, LC1_q_b[26]_PORT_B_address_reg, LC1_q_b[26]_PORT_A_write_enable_reg, LC1_q_b[26]_PORT_B_read_enable_reg, LC1_q_b[26]_PORT_A_byte_mask_reg, , LC1_q_b[26]_clock_0, LC1_q_b[26]_clock_1, LC1_q_b[26]_clock_enable_0, LC1_q_b[26]_clock_enable_1, , );
LC1_q_b[26]_PORT_B_data_out_reg = DFFE(LC1_q_b[26]_PORT_B_data_out, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26] = LC1_q_b[26]_PORT_B_data_out_reg[0];


--LC1_q_b[26] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[26]_PORT_A_data_in = A1L0;
LC1_q_b[26]_PORT_A_data_in_reg = DFFE(LC1_q_b[26]_PORT_A_data_in, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[26]_PORT_A_address_reg = DFFE(LC1_q_b[26]_PORT_A_address, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[26]_PORT_B_address_reg = DFFE(LC1_q_b[26]_PORT_B_address, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[26]_PORT_A_write_enable_reg = DFFE(LC1_q_b[26]_PORT_A_write_enable, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_B_read_enable = VCC;
LC1_q_b[26]_PORT_B_read_enable_reg = DFFE(LC1_q_b[26]_PORT_B_read_enable, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26]_PORT_A_byte_mask = A1L0;
LC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[26]_PORT_A_byte_mask, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_clock_0 = !CLK_25MHz2;
LC1_q_b[26]_clock_1 = !CLK_25MHz2;
LC1_q_b[26]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[26]_clock_enable_1 = inst80;
LC1_q_b[26]_PORT_B_data_out = MEMORY(LC1_q_b[26]_PORT_A_data_in_reg, , LC1_q_b[26]_PORT_A_address_reg, LC1_q_b[26]_PORT_B_address_reg, LC1_q_b[26]_PORT_A_write_enable_reg, LC1_q_b[26]_PORT_B_read_enable_reg, LC1_q_b[26]_PORT_A_byte_mask_reg, , LC1_q_b[26]_clock_0, LC1_q_b[26]_clock_1, LC1_q_b[26]_clock_enable_0, LC1_q_b[26]_clock_enable_1, , );
LC1_q_b[26]_PORT_B_data_out_reg = DFFE(LC1_q_b[26]_PORT_B_data_out, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26] = LC1_q_b[26]_PORT_B_data_out_reg[0];


--LC1_q_b[26] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[26]_PORT_A_data_in = A1L0;
LC1_q_b[26]_PORT_A_data_in_reg = DFFE(LC1_q_b[26]_PORT_A_data_in, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[26]_PORT_A_address_reg = DFFE(LC1_q_b[26]_PORT_A_address, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[26]_PORT_B_address_reg = DFFE(LC1_q_b[26]_PORT_B_address, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[26]_PORT_A_write_enable_reg = DFFE(LC1_q_b[26]_PORT_A_write_enable, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_B_read_enable = VCC;
LC1_q_b[26]_PORT_B_read_enable_reg = DFFE(LC1_q_b[26]_PORT_B_read_enable, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26]_PORT_A_byte_mask = A1L0;
LC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[26]_PORT_A_byte_mask, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_clock_0 = !CLK_25MHz2;
LC1_q_b[26]_clock_1 = !CLK_25MHz2;
LC1_q_b[26]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[26]_clock_enable_1 = inst182;
LC1_q_b[26]_PORT_B_data_out = MEMORY(LC1_q_b[26]_PORT_A_data_in_reg, , LC1_q_b[26]_PORT_A_address_reg, LC1_q_b[26]_PORT_B_address_reg, LC1_q_b[26]_PORT_A_write_enable_reg, LC1_q_b[26]_PORT_B_read_enable_reg, LC1_q_b[26]_PORT_A_byte_mask_reg, , LC1_q_b[26]_clock_0, LC1_q_b[26]_clock_1, LC1_q_b[26]_clock_enable_0, LC1_q_b[26]_clock_enable_1, , );
LC1_q_b[26]_PORT_B_data_out_reg = DFFE(LC1_q_b[26]_PORT_B_data_out, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26] = LC1_q_b[26]_PORT_B_data_out_reg[0];


--LC1_q_b[26] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[26]_PORT_A_data_in = A1L0;
LC1_q_b[26]_PORT_A_data_in_reg = DFFE(LC1_q_b[26]_PORT_A_data_in, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[26]_PORT_A_address_reg = DFFE(LC1_q_b[26]_PORT_A_address, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[26]_PORT_B_address_reg = DFFE(LC1_q_b[26]_PORT_B_address, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[26]_PORT_A_write_enable_reg = DFFE(LC1_q_b[26]_PORT_A_write_enable, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_PORT_B_read_enable = VCC;
LC1_q_b[26]_PORT_B_read_enable_reg = DFFE(LC1_q_b[26]_PORT_B_read_enable, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26]_PORT_A_byte_mask = A1L0;
LC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[26]_PORT_A_byte_mask, LC1_q_b[26]_clock_0, , , LC1_q_b[26]_clock_enable_0);
LC1_q_b[26]_clock_0 = !CLK_25MHz2;
LC1_q_b[26]_clock_1 = !CLK_25MHz2;
LC1_q_b[26]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[26]_clock_enable_1 = inst154;
LC1_q_b[26]_PORT_B_data_out = MEMORY(LC1_q_b[26]_PORT_A_data_in_reg, , LC1_q_b[26]_PORT_A_address_reg, LC1_q_b[26]_PORT_B_address_reg, LC1_q_b[26]_PORT_A_write_enable_reg, LC1_q_b[26]_PORT_B_read_enable_reg, LC1_q_b[26]_PORT_A_byte_mask_reg, , LC1_q_b[26]_clock_0, LC1_q_b[26]_clock_1, LC1_q_b[26]_clock_enable_0, LC1_q_b[26]_clock_enable_1, , );
LC1_q_b[26]_PORT_B_data_out_reg = DFFE(LC1_q_b[26]_PORT_B_data_out, LC1_q_b[26]_clock_1, , , LC1_q_b[26]_clock_enable_1);
LC1_q_b[26] = LC1_q_b[26]_PORT_B_data_out_reg[0];


--GC1_q_b[26] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[26]_PORT_A_data_in = ZB1_o_RamData[26];
GC1_q_b[26]_PORT_A_data_in_reg = DFFE(GC1_q_b[26]_PORT_A_data_in, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[26]_PORT_A_address_reg = DFFE(GC1_q_b[26]_PORT_A_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[26]_PORT_B_address_reg = DFFE(GC1_q_b[26]_PORT_B_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[26]_PORT_A_write_enable_reg = DFFE(GC1_q_b[26]_PORT_A_write_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_read_enable = B1L0;
GC1_q_b[26]_PORT_B_read_enable_reg = DFFE(GC1_q_b[26]_PORT_B_read_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[26]_PORT_A_byte_mask, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_clock_0 = !CLK_25MHz2;
GC1_q_b[26]_clock_1 = !CLK_25MHz2;
GC1_q_b[26]_PORT_B_data_out = MEMORY(GC1_q_b[26]_PORT_A_data_in_reg, , GC1_q_b[26]_PORT_A_address_reg, GC1_q_b[26]_PORT_B_address_reg, GC1_q_b[26]_PORT_A_write_enable_reg, GC1_q_b[26]_PORT_B_read_enable_reg, GC1_q_b[26]_PORT_A_byte_mask_reg, , GC1_q_b[26]_clock_0, GC1_q_b[26]_clock_1, , , , );
GC1_q_b[26]_PORT_B_data_out_reg = DFFE(GC1_q_b[26]_PORT_B_data_out, GC1_q_b[26]_clock_1, , , );
GC1_q_b[26] = GC1_q_b[26]_PORT_B_data_out_reg[0];


--GC1_q_b[26] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[26]_PORT_A_data_in = ZB1_o_RamData[26];
GC1_q_b[26]_PORT_A_data_in_reg = DFFE(GC1_q_b[26]_PORT_A_data_in, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[26]_PORT_A_address_reg = DFFE(GC1_q_b[26]_PORT_A_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[26]_PORT_B_address_reg = DFFE(GC1_q_b[26]_PORT_B_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[26]_PORT_A_write_enable_reg = DFFE(GC1_q_b[26]_PORT_A_write_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_read_enable = B1L0;
GC1_q_b[26]_PORT_B_read_enable_reg = DFFE(GC1_q_b[26]_PORT_B_read_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[26]_PORT_A_byte_mask, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_clock_0 = !CLK_25MHz2;
GC1_q_b[26]_clock_1 = !CLK_25MHz2;
GC1_q_b[26]_PORT_B_data_out = MEMORY(GC1_q_b[26]_PORT_A_data_in_reg, , GC1_q_b[26]_PORT_A_address_reg, GC1_q_b[26]_PORT_B_address_reg, GC1_q_b[26]_PORT_A_write_enable_reg, GC1_q_b[26]_PORT_B_read_enable_reg, GC1_q_b[26]_PORT_A_byte_mask_reg, , GC1_q_b[26]_clock_0, GC1_q_b[26]_clock_1, , , , );
GC1_q_b[26]_PORT_B_data_out_reg = DFFE(GC1_q_b[26]_PORT_B_data_out, GC1_q_b[26]_clock_1, , , );
GC1_q_b[26] = GC1_q_b[26]_PORT_B_data_out_reg[0];


--GC1_q_b[26] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[26]_PORT_A_data_in = ZB1_o_RamData[26];
GC1_q_b[26]_PORT_A_data_in_reg = DFFE(GC1_q_b[26]_PORT_A_data_in, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[26]_PORT_A_address_reg = DFFE(GC1_q_b[26]_PORT_A_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[26]_PORT_B_address_reg = DFFE(GC1_q_b[26]_PORT_B_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[26]_PORT_A_write_enable_reg = DFFE(GC1_q_b[26]_PORT_A_write_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_read_enable = B1L0;
GC1_q_b[26]_PORT_B_read_enable_reg = DFFE(GC1_q_b[26]_PORT_B_read_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[26]_PORT_A_byte_mask, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_clock_0 = !CLK_25MHz2;
GC1_q_b[26]_clock_1 = !CLK_25MHz2;
GC1_q_b[26]_PORT_B_data_out = MEMORY(GC1_q_b[26]_PORT_A_data_in_reg, , GC1_q_b[26]_PORT_A_address_reg, GC1_q_b[26]_PORT_B_address_reg, GC1_q_b[26]_PORT_A_write_enable_reg, GC1_q_b[26]_PORT_B_read_enable_reg, GC1_q_b[26]_PORT_A_byte_mask_reg, , GC1_q_b[26]_clock_0, GC1_q_b[26]_clock_1, , , , );
GC1_q_b[26]_PORT_B_data_out_reg = DFFE(GC1_q_b[26]_PORT_B_data_out, GC1_q_b[26]_clock_1, , , );
GC1_q_b[26] = GC1_q_b[26]_PORT_B_data_out_reg[0];


--GC1_q_b[26] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[26]_PORT_A_data_in = ZB1_o_RamData[26];
GC1_q_b[26]_PORT_A_data_in_reg = DFFE(GC1_q_b[26]_PORT_A_data_in, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[26]_PORT_A_address_reg = DFFE(GC1_q_b[26]_PORT_A_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[26]_PORT_B_address_reg = DFFE(GC1_q_b[26]_PORT_B_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[26]_PORT_A_write_enable_reg = DFFE(GC1_q_b[26]_PORT_A_write_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_read_enable = B1L0;
GC1_q_b[26]_PORT_B_read_enable_reg = DFFE(GC1_q_b[26]_PORT_B_read_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[26]_PORT_A_byte_mask, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_clock_0 = !CLK_25MHz2;
GC1_q_b[26]_clock_1 = !CLK_25MHz2;
GC1_q_b[26]_PORT_B_data_out = MEMORY(GC1_q_b[26]_PORT_A_data_in_reg, , GC1_q_b[26]_PORT_A_address_reg, GC1_q_b[26]_PORT_B_address_reg, GC1_q_b[26]_PORT_A_write_enable_reg, GC1_q_b[26]_PORT_B_read_enable_reg, GC1_q_b[26]_PORT_A_byte_mask_reg, , GC1_q_b[26]_clock_0, GC1_q_b[26]_clock_1, , , , );
GC1_q_b[26]_PORT_B_data_out_reg = DFFE(GC1_q_b[26]_PORT_B_data_out, GC1_q_b[26]_clock_1, , , );
GC1_q_b[26] = GC1_q_b[26]_PORT_B_data_out_reg[0];


--GC1_q_b[26] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[26]_PORT_A_data_in = ZB1_o_RamData[26];
GC1_q_b[26]_PORT_A_data_in_reg = DFFE(GC1_q_b[26]_PORT_A_data_in, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[26]_PORT_A_address_reg = DFFE(GC1_q_b[26]_PORT_A_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[26]_PORT_B_address_reg = DFFE(GC1_q_b[26]_PORT_B_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[26]_PORT_A_write_enable_reg = DFFE(GC1_q_b[26]_PORT_A_write_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_read_enable = B1L0;
GC1_q_b[26]_PORT_B_read_enable_reg = DFFE(GC1_q_b[26]_PORT_B_read_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[26]_PORT_A_byte_mask, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_clock_0 = !CLK_25MHz2;
GC1_q_b[26]_clock_1 = !CLK_25MHz2;
GC1_q_b[26]_PORT_B_data_out = MEMORY(GC1_q_b[26]_PORT_A_data_in_reg, , GC1_q_b[26]_PORT_A_address_reg, GC1_q_b[26]_PORT_B_address_reg, GC1_q_b[26]_PORT_A_write_enable_reg, GC1_q_b[26]_PORT_B_read_enable_reg, GC1_q_b[26]_PORT_A_byte_mask_reg, , GC1_q_b[26]_clock_0, GC1_q_b[26]_clock_1, , , , );
GC1_q_b[26]_PORT_B_data_out_reg = DFFE(GC1_q_b[26]_PORT_B_data_out, GC1_q_b[26]_clock_1, , , );
GC1_q_b[26] = GC1_q_b[26]_PORT_B_data_out_reg[0];


--LC1_q_b[27] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[27]_PORT_A_data_in = A1L0;
LC1_q_b[27]_PORT_A_data_in_reg = DFFE(LC1_q_b[27]_PORT_A_data_in, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[27]_PORT_A_address_reg = DFFE(LC1_q_b[27]_PORT_A_address, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[27]_PORT_B_address_reg = DFFE(LC1_q_b[27]_PORT_B_address, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[27]_PORT_A_write_enable_reg = DFFE(LC1_q_b[27]_PORT_A_write_enable, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_B_read_enable = VCC;
LC1_q_b[27]_PORT_B_read_enable_reg = DFFE(LC1_q_b[27]_PORT_B_read_enable, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27]_PORT_A_byte_mask = A1L0;
LC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[27]_PORT_A_byte_mask, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_clock_0 = !CLK_25MHz2;
LC1_q_b[27]_clock_1 = !CLK_25MHz2;
LC1_q_b[27]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[27]_clock_enable_1 = inst146;
LC1_q_b[27]_PORT_B_data_out = MEMORY(LC1_q_b[27]_PORT_A_data_in_reg, , LC1_q_b[27]_PORT_A_address_reg, LC1_q_b[27]_PORT_B_address_reg, LC1_q_b[27]_PORT_A_write_enable_reg, LC1_q_b[27]_PORT_B_read_enable_reg, LC1_q_b[27]_PORT_A_byte_mask_reg, , LC1_q_b[27]_clock_0, LC1_q_b[27]_clock_1, LC1_q_b[27]_clock_enable_0, LC1_q_b[27]_clock_enable_1, , );
LC1_q_b[27]_PORT_B_data_out_reg = DFFE(LC1_q_b[27]_PORT_B_data_out, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27] = LC1_q_b[27]_PORT_B_data_out_reg[0];


--LC1_q_b[27] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[27]_PORT_A_data_in = A1L0;
LC1_q_b[27]_PORT_A_data_in_reg = DFFE(LC1_q_b[27]_PORT_A_data_in, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[27]_PORT_A_address_reg = DFFE(LC1_q_b[27]_PORT_A_address, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[27]_PORT_B_address_reg = DFFE(LC1_q_b[27]_PORT_B_address, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[27]_PORT_A_write_enable_reg = DFFE(LC1_q_b[27]_PORT_A_write_enable, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_B_read_enable = VCC;
LC1_q_b[27]_PORT_B_read_enable_reg = DFFE(LC1_q_b[27]_PORT_B_read_enable, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27]_PORT_A_byte_mask = A1L0;
LC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[27]_PORT_A_byte_mask, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_clock_0 = !CLK_25MHz2;
LC1_q_b[27]_clock_1 = !CLK_25MHz2;
LC1_q_b[27]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[27]_clock_enable_1 = inst80;
LC1_q_b[27]_PORT_B_data_out = MEMORY(LC1_q_b[27]_PORT_A_data_in_reg, , LC1_q_b[27]_PORT_A_address_reg, LC1_q_b[27]_PORT_B_address_reg, LC1_q_b[27]_PORT_A_write_enable_reg, LC1_q_b[27]_PORT_B_read_enable_reg, LC1_q_b[27]_PORT_A_byte_mask_reg, , LC1_q_b[27]_clock_0, LC1_q_b[27]_clock_1, LC1_q_b[27]_clock_enable_0, LC1_q_b[27]_clock_enable_1, , );
LC1_q_b[27]_PORT_B_data_out_reg = DFFE(LC1_q_b[27]_PORT_B_data_out, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27] = LC1_q_b[27]_PORT_B_data_out_reg[0];


--LC1_q_b[27] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[27]_PORT_A_data_in = A1L0;
LC1_q_b[27]_PORT_A_data_in_reg = DFFE(LC1_q_b[27]_PORT_A_data_in, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[27]_PORT_A_address_reg = DFFE(LC1_q_b[27]_PORT_A_address, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[27]_PORT_B_address_reg = DFFE(LC1_q_b[27]_PORT_B_address, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[27]_PORT_A_write_enable_reg = DFFE(LC1_q_b[27]_PORT_A_write_enable, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_B_read_enable = VCC;
LC1_q_b[27]_PORT_B_read_enable_reg = DFFE(LC1_q_b[27]_PORT_B_read_enable, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27]_PORT_A_byte_mask = A1L0;
LC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[27]_PORT_A_byte_mask, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_clock_0 = !CLK_25MHz2;
LC1_q_b[27]_clock_1 = !CLK_25MHz2;
LC1_q_b[27]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[27]_clock_enable_1 = inst182;
LC1_q_b[27]_PORT_B_data_out = MEMORY(LC1_q_b[27]_PORT_A_data_in_reg, , LC1_q_b[27]_PORT_A_address_reg, LC1_q_b[27]_PORT_B_address_reg, LC1_q_b[27]_PORT_A_write_enable_reg, LC1_q_b[27]_PORT_B_read_enable_reg, LC1_q_b[27]_PORT_A_byte_mask_reg, , LC1_q_b[27]_clock_0, LC1_q_b[27]_clock_1, LC1_q_b[27]_clock_enable_0, LC1_q_b[27]_clock_enable_1, , );
LC1_q_b[27]_PORT_B_data_out_reg = DFFE(LC1_q_b[27]_PORT_B_data_out, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27] = LC1_q_b[27]_PORT_B_data_out_reg[0];


--LC1_q_b[27] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[27]_PORT_A_data_in = A1L0;
LC1_q_b[27]_PORT_A_data_in_reg = DFFE(LC1_q_b[27]_PORT_A_data_in, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[27]_PORT_A_address_reg = DFFE(LC1_q_b[27]_PORT_A_address, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[27]_PORT_B_address_reg = DFFE(LC1_q_b[27]_PORT_B_address, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[27]_PORT_A_write_enable_reg = DFFE(LC1_q_b[27]_PORT_A_write_enable, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_PORT_B_read_enable = VCC;
LC1_q_b[27]_PORT_B_read_enable_reg = DFFE(LC1_q_b[27]_PORT_B_read_enable, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27]_PORT_A_byte_mask = A1L0;
LC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[27]_PORT_A_byte_mask, LC1_q_b[27]_clock_0, , , LC1_q_b[27]_clock_enable_0);
LC1_q_b[27]_clock_0 = !CLK_25MHz2;
LC1_q_b[27]_clock_1 = !CLK_25MHz2;
LC1_q_b[27]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[27]_clock_enable_1 = inst154;
LC1_q_b[27]_PORT_B_data_out = MEMORY(LC1_q_b[27]_PORT_A_data_in_reg, , LC1_q_b[27]_PORT_A_address_reg, LC1_q_b[27]_PORT_B_address_reg, LC1_q_b[27]_PORT_A_write_enable_reg, LC1_q_b[27]_PORT_B_read_enable_reg, LC1_q_b[27]_PORT_A_byte_mask_reg, , LC1_q_b[27]_clock_0, LC1_q_b[27]_clock_1, LC1_q_b[27]_clock_enable_0, LC1_q_b[27]_clock_enable_1, , );
LC1_q_b[27]_PORT_B_data_out_reg = DFFE(LC1_q_b[27]_PORT_B_data_out, LC1_q_b[27]_clock_1, , , LC1_q_b[27]_clock_enable_1);
LC1_q_b[27] = LC1_q_b[27]_PORT_B_data_out_reg[0];


--GC1_q_b[27] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[27]_PORT_A_data_in = ZB1_o_RamData[27];
GC1_q_b[27]_PORT_A_data_in_reg = DFFE(GC1_q_b[27]_PORT_A_data_in, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[27]_PORT_A_address_reg = DFFE(GC1_q_b[27]_PORT_A_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[27]_PORT_B_address_reg = DFFE(GC1_q_b[27]_PORT_B_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[27]_PORT_A_write_enable_reg = DFFE(GC1_q_b[27]_PORT_A_write_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_read_enable = B1L0;
GC1_q_b[27]_PORT_B_read_enable_reg = DFFE(GC1_q_b[27]_PORT_B_read_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[27]_PORT_A_byte_mask, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_clock_0 = !CLK_25MHz2;
GC1_q_b[27]_clock_1 = !CLK_25MHz2;
GC1_q_b[27]_PORT_B_data_out = MEMORY(GC1_q_b[27]_PORT_A_data_in_reg, , GC1_q_b[27]_PORT_A_address_reg, GC1_q_b[27]_PORT_B_address_reg, GC1_q_b[27]_PORT_A_write_enable_reg, GC1_q_b[27]_PORT_B_read_enable_reg, GC1_q_b[27]_PORT_A_byte_mask_reg, , GC1_q_b[27]_clock_0, GC1_q_b[27]_clock_1, , , , );
GC1_q_b[27]_PORT_B_data_out_reg = DFFE(GC1_q_b[27]_PORT_B_data_out, GC1_q_b[27]_clock_1, , , );
GC1_q_b[27] = GC1_q_b[27]_PORT_B_data_out_reg[0];


--GC1_q_b[27] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[27]_PORT_A_data_in = ZB1_o_RamData[27];
GC1_q_b[27]_PORT_A_data_in_reg = DFFE(GC1_q_b[27]_PORT_A_data_in, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[27]_PORT_A_address_reg = DFFE(GC1_q_b[27]_PORT_A_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[27]_PORT_B_address_reg = DFFE(GC1_q_b[27]_PORT_B_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[27]_PORT_A_write_enable_reg = DFFE(GC1_q_b[27]_PORT_A_write_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_read_enable = B1L0;
GC1_q_b[27]_PORT_B_read_enable_reg = DFFE(GC1_q_b[27]_PORT_B_read_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[27]_PORT_A_byte_mask, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_clock_0 = !CLK_25MHz2;
GC1_q_b[27]_clock_1 = !CLK_25MHz2;
GC1_q_b[27]_PORT_B_data_out = MEMORY(GC1_q_b[27]_PORT_A_data_in_reg, , GC1_q_b[27]_PORT_A_address_reg, GC1_q_b[27]_PORT_B_address_reg, GC1_q_b[27]_PORT_A_write_enable_reg, GC1_q_b[27]_PORT_B_read_enable_reg, GC1_q_b[27]_PORT_A_byte_mask_reg, , GC1_q_b[27]_clock_0, GC1_q_b[27]_clock_1, , , , );
GC1_q_b[27]_PORT_B_data_out_reg = DFFE(GC1_q_b[27]_PORT_B_data_out, GC1_q_b[27]_clock_1, , , );
GC1_q_b[27] = GC1_q_b[27]_PORT_B_data_out_reg[0];


--GC1_q_b[27] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[27]_PORT_A_data_in = ZB1_o_RamData[27];
GC1_q_b[27]_PORT_A_data_in_reg = DFFE(GC1_q_b[27]_PORT_A_data_in, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[27]_PORT_A_address_reg = DFFE(GC1_q_b[27]_PORT_A_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[27]_PORT_B_address_reg = DFFE(GC1_q_b[27]_PORT_B_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[27]_PORT_A_write_enable_reg = DFFE(GC1_q_b[27]_PORT_A_write_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_read_enable = B1L0;
GC1_q_b[27]_PORT_B_read_enable_reg = DFFE(GC1_q_b[27]_PORT_B_read_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[27]_PORT_A_byte_mask, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_clock_0 = !CLK_25MHz2;
GC1_q_b[27]_clock_1 = !CLK_25MHz2;
GC1_q_b[27]_PORT_B_data_out = MEMORY(GC1_q_b[27]_PORT_A_data_in_reg, , GC1_q_b[27]_PORT_A_address_reg, GC1_q_b[27]_PORT_B_address_reg, GC1_q_b[27]_PORT_A_write_enable_reg, GC1_q_b[27]_PORT_B_read_enable_reg, GC1_q_b[27]_PORT_A_byte_mask_reg, , GC1_q_b[27]_clock_0, GC1_q_b[27]_clock_1, , , , );
GC1_q_b[27]_PORT_B_data_out_reg = DFFE(GC1_q_b[27]_PORT_B_data_out, GC1_q_b[27]_clock_1, , , );
GC1_q_b[27] = GC1_q_b[27]_PORT_B_data_out_reg[0];


--GC1_q_b[27] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[27]_PORT_A_data_in = ZB1_o_RamData[27];
GC1_q_b[27]_PORT_A_data_in_reg = DFFE(GC1_q_b[27]_PORT_A_data_in, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[27]_PORT_A_address_reg = DFFE(GC1_q_b[27]_PORT_A_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[27]_PORT_B_address_reg = DFFE(GC1_q_b[27]_PORT_B_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[27]_PORT_A_write_enable_reg = DFFE(GC1_q_b[27]_PORT_A_write_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_read_enable = B1L0;
GC1_q_b[27]_PORT_B_read_enable_reg = DFFE(GC1_q_b[27]_PORT_B_read_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[27]_PORT_A_byte_mask, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_clock_0 = !CLK_25MHz2;
GC1_q_b[27]_clock_1 = !CLK_25MHz2;
GC1_q_b[27]_PORT_B_data_out = MEMORY(GC1_q_b[27]_PORT_A_data_in_reg, , GC1_q_b[27]_PORT_A_address_reg, GC1_q_b[27]_PORT_B_address_reg, GC1_q_b[27]_PORT_A_write_enable_reg, GC1_q_b[27]_PORT_B_read_enable_reg, GC1_q_b[27]_PORT_A_byte_mask_reg, , GC1_q_b[27]_clock_0, GC1_q_b[27]_clock_1, , , , );
GC1_q_b[27]_PORT_B_data_out_reg = DFFE(GC1_q_b[27]_PORT_B_data_out, GC1_q_b[27]_clock_1, , , );
GC1_q_b[27] = GC1_q_b[27]_PORT_B_data_out_reg[0];


--GC1_q_b[27] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[27]_PORT_A_data_in = ZB1_o_RamData[27];
GC1_q_b[27]_PORT_A_data_in_reg = DFFE(GC1_q_b[27]_PORT_A_data_in, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[27]_PORT_A_address_reg = DFFE(GC1_q_b[27]_PORT_A_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[27]_PORT_B_address_reg = DFFE(GC1_q_b[27]_PORT_B_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[27]_PORT_A_write_enable_reg = DFFE(GC1_q_b[27]_PORT_A_write_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_read_enable = B1L0;
GC1_q_b[27]_PORT_B_read_enable_reg = DFFE(GC1_q_b[27]_PORT_B_read_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[27]_PORT_A_byte_mask, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_clock_0 = !CLK_25MHz2;
GC1_q_b[27]_clock_1 = !CLK_25MHz2;
GC1_q_b[27]_PORT_B_data_out = MEMORY(GC1_q_b[27]_PORT_A_data_in_reg, , GC1_q_b[27]_PORT_A_address_reg, GC1_q_b[27]_PORT_B_address_reg, GC1_q_b[27]_PORT_A_write_enable_reg, GC1_q_b[27]_PORT_B_read_enable_reg, GC1_q_b[27]_PORT_A_byte_mask_reg, , GC1_q_b[27]_clock_0, GC1_q_b[27]_clock_1, , , , );
GC1_q_b[27]_PORT_B_data_out_reg = DFFE(GC1_q_b[27]_PORT_B_data_out, GC1_q_b[27]_clock_1, , , );
GC1_q_b[27] = GC1_q_b[27]_PORT_B_data_out_reg[0];


--LC1_q_b[28] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[28]_PORT_A_data_in = A1L0;
LC1_q_b[28]_PORT_A_data_in_reg = DFFE(LC1_q_b[28]_PORT_A_data_in, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[28]_PORT_A_address_reg = DFFE(LC1_q_b[28]_PORT_A_address, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[28]_PORT_B_address_reg = DFFE(LC1_q_b[28]_PORT_B_address, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[28]_PORT_A_write_enable_reg = DFFE(LC1_q_b[28]_PORT_A_write_enable, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_B_read_enable = VCC;
LC1_q_b[28]_PORT_B_read_enable_reg = DFFE(LC1_q_b[28]_PORT_B_read_enable, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28]_PORT_A_byte_mask = A1L0;
LC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[28]_PORT_A_byte_mask, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_clock_0 = !CLK_25MHz2;
LC1_q_b[28]_clock_1 = !CLK_25MHz2;
LC1_q_b[28]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[28]_clock_enable_1 = inst146;
LC1_q_b[28]_PORT_B_data_out = MEMORY(LC1_q_b[28]_PORT_A_data_in_reg, , LC1_q_b[28]_PORT_A_address_reg, LC1_q_b[28]_PORT_B_address_reg, LC1_q_b[28]_PORT_A_write_enable_reg, LC1_q_b[28]_PORT_B_read_enable_reg, LC1_q_b[28]_PORT_A_byte_mask_reg, , LC1_q_b[28]_clock_0, LC1_q_b[28]_clock_1, LC1_q_b[28]_clock_enable_0, LC1_q_b[28]_clock_enable_1, , );
LC1_q_b[28]_PORT_B_data_out_reg = DFFE(LC1_q_b[28]_PORT_B_data_out, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28] = LC1_q_b[28]_PORT_B_data_out_reg[0];


--LC1_q_b[28] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[28]_PORT_A_data_in = A1L0;
LC1_q_b[28]_PORT_A_data_in_reg = DFFE(LC1_q_b[28]_PORT_A_data_in, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[28]_PORT_A_address_reg = DFFE(LC1_q_b[28]_PORT_A_address, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[28]_PORT_B_address_reg = DFFE(LC1_q_b[28]_PORT_B_address, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[28]_PORT_A_write_enable_reg = DFFE(LC1_q_b[28]_PORT_A_write_enable, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_B_read_enable = VCC;
LC1_q_b[28]_PORT_B_read_enable_reg = DFFE(LC1_q_b[28]_PORT_B_read_enable, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28]_PORT_A_byte_mask = A1L0;
LC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[28]_PORT_A_byte_mask, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_clock_0 = !CLK_25MHz2;
LC1_q_b[28]_clock_1 = !CLK_25MHz2;
LC1_q_b[28]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[28]_clock_enable_1 = inst80;
LC1_q_b[28]_PORT_B_data_out = MEMORY(LC1_q_b[28]_PORT_A_data_in_reg, , LC1_q_b[28]_PORT_A_address_reg, LC1_q_b[28]_PORT_B_address_reg, LC1_q_b[28]_PORT_A_write_enable_reg, LC1_q_b[28]_PORT_B_read_enable_reg, LC1_q_b[28]_PORT_A_byte_mask_reg, , LC1_q_b[28]_clock_0, LC1_q_b[28]_clock_1, LC1_q_b[28]_clock_enable_0, LC1_q_b[28]_clock_enable_1, , );
LC1_q_b[28]_PORT_B_data_out_reg = DFFE(LC1_q_b[28]_PORT_B_data_out, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28] = LC1_q_b[28]_PORT_B_data_out_reg[0];


--LC1_q_b[28] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[28]_PORT_A_data_in = A1L0;
LC1_q_b[28]_PORT_A_data_in_reg = DFFE(LC1_q_b[28]_PORT_A_data_in, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[28]_PORT_A_address_reg = DFFE(LC1_q_b[28]_PORT_A_address, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[28]_PORT_B_address_reg = DFFE(LC1_q_b[28]_PORT_B_address, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[28]_PORT_A_write_enable_reg = DFFE(LC1_q_b[28]_PORT_A_write_enable, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_B_read_enable = VCC;
LC1_q_b[28]_PORT_B_read_enable_reg = DFFE(LC1_q_b[28]_PORT_B_read_enable, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28]_PORT_A_byte_mask = A1L0;
LC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[28]_PORT_A_byte_mask, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_clock_0 = !CLK_25MHz2;
LC1_q_b[28]_clock_1 = !CLK_25MHz2;
LC1_q_b[28]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[28]_clock_enable_1 = inst182;
LC1_q_b[28]_PORT_B_data_out = MEMORY(LC1_q_b[28]_PORT_A_data_in_reg, , LC1_q_b[28]_PORT_A_address_reg, LC1_q_b[28]_PORT_B_address_reg, LC1_q_b[28]_PORT_A_write_enable_reg, LC1_q_b[28]_PORT_B_read_enable_reg, LC1_q_b[28]_PORT_A_byte_mask_reg, , LC1_q_b[28]_clock_0, LC1_q_b[28]_clock_1, LC1_q_b[28]_clock_enable_0, LC1_q_b[28]_clock_enable_1, , );
LC1_q_b[28]_PORT_B_data_out_reg = DFFE(LC1_q_b[28]_PORT_B_data_out, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28] = LC1_q_b[28]_PORT_B_data_out_reg[0];


--LC1_q_b[28] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[28]_PORT_A_data_in = A1L0;
LC1_q_b[28]_PORT_A_data_in_reg = DFFE(LC1_q_b[28]_PORT_A_data_in, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[28]_PORT_A_address_reg = DFFE(LC1_q_b[28]_PORT_A_address, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[28]_PORT_B_address_reg = DFFE(LC1_q_b[28]_PORT_B_address, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[28]_PORT_A_write_enable_reg = DFFE(LC1_q_b[28]_PORT_A_write_enable, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_PORT_B_read_enable = VCC;
LC1_q_b[28]_PORT_B_read_enable_reg = DFFE(LC1_q_b[28]_PORT_B_read_enable, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28]_PORT_A_byte_mask = A1L0;
LC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[28]_PORT_A_byte_mask, LC1_q_b[28]_clock_0, , , LC1_q_b[28]_clock_enable_0);
LC1_q_b[28]_clock_0 = !CLK_25MHz2;
LC1_q_b[28]_clock_1 = !CLK_25MHz2;
LC1_q_b[28]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[28]_clock_enable_1 = inst154;
LC1_q_b[28]_PORT_B_data_out = MEMORY(LC1_q_b[28]_PORT_A_data_in_reg, , LC1_q_b[28]_PORT_A_address_reg, LC1_q_b[28]_PORT_B_address_reg, LC1_q_b[28]_PORT_A_write_enable_reg, LC1_q_b[28]_PORT_B_read_enable_reg, LC1_q_b[28]_PORT_A_byte_mask_reg, , LC1_q_b[28]_clock_0, LC1_q_b[28]_clock_1, LC1_q_b[28]_clock_enable_0, LC1_q_b[28]_clock_enable_1, , );
LC1_q_b[28]_PORT_B_data_out_reg = DFFE(LC1_q_b[28]_PORT_B_data_out, LC1_q_b[28]_clock_1, , , LC1_q_b[28]_clock_enable_1);
LC1_q_b[28] = LC1_q_b[28]_PORT_B_data_out_reg[0];


--GC1_q_b[28] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[28]_PORT_A_data_in = ZB1_o_RamData[28];
GC1_q_b[28]_PORT_A_data_in_reg = DFFE(GC1_q_b[28]_PORT_A_data_in, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[28]_PORT_A_address_reg = DFFE(GC1_q_b[28]_PORT_A_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[28]_PORT_B_address_reg = DFFE(GC1_q_b[28]_PORT_B_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[28]_PORT_A_write_enable_reg = DFFE(GC1_q_b[28]_PORT_A_write_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_read_enable = B1L0;
GC1_q_b[28]_PORT_B_read_enable_reg = DFFE(GC1_q_b[28]_PORT_B_read_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[28]_PORT_A_byte_mask, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_clock_0 = !CLK_25MHz2;
GC1_q_b[28]_clock_1 = !CLK_25MHz2;
GC1_q_b[28]_PORT_B_data_out = MEMORY(GC1_q_b[28]_PORT_A_data_in_reg, , GC1_q_b[28]_PORT_A_address_reg, GC1_q_b[28]_PORT_B_address_reg, GC1_q_b[28]_PORT_A_write_enable_reg, GC1_q_b[28]_PORT_B_read_enable_reg, GC1_q_b[28]_PORT_A_byte_mask_reg, , GC1_q_b[28]_clock_0, GC1_q_b[28]_clock_1, , , , );
GC1_q_b[28]_PORT_B_data_out_reg = DFFE(GC1_q_b[28]_PORT_B_data_out, GC1_q_b[28]_clock_1, , , );
GC1_q_b[28] = GC1_q_b[28]_PORT_B_data_out_reg[0];


--GC1_q_b[28] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[28]_PORT_A_data_in = ZB1_o_RamData[28];
GC1_q_b[28]_PORT_A_data_in_reg = DFFE(GC1_q_b[28]_PORT_A_data_in, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[28]_PORT_A_address_reg = DFFE(GC1_q_b[28]_PORT_A_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[28]_PORT_B_address_reg = DFFE(GC1_q_b[28]_PORT_B_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[28]_PORT_A_write_enable_reg = DFFE(GC1_q_b[28]_PORT_A_write_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_read_enable = B1L0;
GC1_q_b[28]_PORT_B_read_enable_reg = DFFE(GC1_q_b[28]_PORT_B_read_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[28]_PORT_A_byte_mask, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_clock_0 = !CLK_25MHz2;
GC1_q_b[28]_clock_1 = !CLK_25MHz2;
GC1_q_b[28]_PORT_B_data_out = MEMORY(GC1_q_b[28]_PORT_A_data_in_reg, , GC1_q_b[28]_PORT_A_address_reg, GC1_q_b[28]_PORT_B_address_reg, GC1_q_b[28]_PORT_A_write_enable_reg, GC1_q_b[28]_PORT_B_read_enable_reg, GC1_q_b[28]_PORT_A_byte_mask_reg, , GC1_q_b[28]_clock_0, GC1_q_b[28]_clock_1, , , , );
GC1_q_b[28]_PORT_B_data_out_reg = DFFE(GC1_q_b[28]_PORT_B_data_out, GC1_q_b[28]_clock_1, , , );
GC1_q_b[28] = GC1_q_b[28]_PORT_B_data_out_reg[0];


--GC1_q_b[28] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[28]_PORT_A_data_in = ZB1_o_RamData[28];
GC1_q_b[28]_PORT_A_data_in_reg = DFFE(GC1_q_b[28]_PORT_A_data_in, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[28]_PORT_A_address_reg = DFFE(GC1_q_b[28]_PORT_A_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[28]_PORT_B_address_reg = DFFE(GC1_q_b[28]_PORT_B_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[28]_PORT_A_write_enable_reg = DFFE(GC1_q_b[28]_PORT_A_write_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_read_enable = B1L0;
GC1_q_b[28]_PORT_B_read_enable_reg = DFFE(GC1_q_b[28]_PORT_B_read_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[28]_PORT_A_byte_mask, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_clock_0 = !CLK_25MHz2;
GC1_q_b[28]_clock_1 = !CLK_25MHz2;
GC1_q_b[28]_PORT_B_data_out = MEMORY(GC1_q_b[28]_PORT_A_data_in_reg, , GC1_q_b[28]_PORT_A_address_reg, GC1_q_b[28]_PORT_B_address_reg, GC1_q_b[28]_PORT_A_write_enable_reg, GC1_q_b[28]_PORT_B_read_enable_reg, GC1_q_b[28]_PORT_A_byte_mask_reg, , GC1_q_b[28]_clock_0, GC1_q_b[28]_clock_1, , , , );
GC1_q_b[28]_PORT_B_data_out_reg = DFFE(GC1_q_b[28]_PORT_B_data_out, GC1_q_b[28]_clock_1, , , );
GC1_q_b[28] = GC1_q_b[28]_PORT_B_data_out_reg[0];


--GC1_q_b[28] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[28]_PORT_A_data_in = ZB1_o_RamData[28];
GC1_q_b[28]_PORT_A_data_in_reg = DFFE(GC1_q_b[28]_PORT_A_data_in, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[28]_PORT_A_address_reg = DFFE(GC1_q_b[28]_PORT_A_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[28]_PORT_B_address_reg = DFFE(GC1_q_b[28]_PORT_B_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[28]_PORT_A_write_enable_reg = DFFE(GC1_q_b[28]_PORT_A_write_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_read_enable = B1L0;
GC1_q_b[28]_PORT_B_read_enable_reg = DFFE(GC1_q_b[28]_PORT_B_read_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[28]_PORT_A_byte_mask, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_clock_0 = !CLK_25MHz2;
GC1_q_b[28]_clock_1 = !CLK_25MHz2;
GC1_q_b[28]_PORT_B_data_out = MEMORY(GC1_q_b[28]_PORT_A_data_in_reg, , GC1_q_b[28]_PORT_A_address_reg, GC1_q_b[28]_PORT_B_address_reg, GC1_q_b[28]_PORT_A_write_enable_reg, GC1_q_b[28]_PORT_B_read_enable_reg, GC1_q_b[28]_PORT_A_byte_mask_reg, , GC1_q_b[28]_clock_0, GC1_q_b[28]_clock_1, , , , );
GC1_q_b[28]_PORT_B_data_out_reg = DFFE(GC1_q_b[28]_PORT_B_data_out, GC1_q_b[28]_clock_1, , , );
GC1_q_b[28] = GC1_q_b[28]_PORT_B_data_out_reg[0];


--GC1_q_b[28] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[28]_PORT_A_data_in = ZB1_o_RamData[28];
GC1_q_b[28]_PORT_A_data_in_reg = DFFE(GC1_q_b[28]_PORT_A_data_in, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[28]_PORT_A_address_reg = DFFE(GC1_q_b[28]_PORT_A_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[28]_PORT_B_address_reg = DFFE(GC1_q_b[28]_PORT_B_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[28]_PORT_A_write_enable_reg = DFFE(GC1_q_b[28]_PORT_A_write_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_read_enable = B1L0;
GC1_q_b[28]_PORT_B_read_enable_reg = DFFE(GC1_q_b[28]_PORT_B_read_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[28]_PORT_A_byte_mask, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_clock_0 = !CLK_25MHz2;
GC1_q_b[28]_clock_1 = !CLK_25MHz2;
GC1_q_b[28]_PORT_B_data_out = MEMORY(GC1_q_b[28]_PORT_A_data_in_reg, , GC1_q_b[28]_PORT_A_address_reg, GC1_q_b[28]_PORT_B_address_reg, GC1_q_b[28]_PORT_A_write_enable_reg, GC1_q_b[28]_PORT_B_read_enable_reg, GC1_q_b[28]_PORT_A_byte_mask_reg, , GC1_q_b[28]_clock_0, GC1_q_b[28]_clock_1, , , , );
GC1_q_b[28]_PORT_B_data_out_reg = DFFE(GC1_q_b[28]_PORT_B_data_out, GC1_q_b[28]_clock_1, , , );
GC1_q_b[28] = GC1_q_b[28]_PORT_B_data_out_reg[0];


--LC1_q_b[29] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[29]_PORT_A_data_in = A1L0;
LC1_q_b[29]_PORT_A_data_in_reg = DFFE(LC1_q_b[29]_PORT_A_data_in, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[29]_PORT_A_address_reg = DFFE(LC1_q_b[29]_PORT_A_address, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[29]_PORT_B_address_reg = DFFE(LC1_q_b[29]_PORT_B_address, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[29]_PORT_A_write_enable_reg = DFFE(LC1_q_b[29]_PORT_A_write_enable, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_B_read_enable = VCC;
LC1_q_b[29]_PORT_B_read_enable_reg = DFFE(LC1_q_b[29]_PORT_B_read_enable, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29]_PORT_A_byte_mask = A1L0;
LC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[29]_PORT_A_byte_mask, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_clock_0 = !CLK_25MHz2;
LC1_q_b[29]_clock_1 = !CLK_25MHz2;
LC1_q_b[29]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[29]_clock_enable_1 = inst146;
LC1_q_b[29]_PORT_B_data_out = MEMORY(LC1_q_b[29]_PORT_A_data_in_reg, , LC1_q_b[29]_PORT_A_address_reg, LC1_q_b[29]_PORT_B_address_reg, LC1_q_b[29]_PORT_A_write_enable_reg, LC1_q_b[29]_PORT_B_read_enable_reg, LC1_q_b[29]_PORT_A_byte_mask_reg, , LC1_q_b[29]_clock_0, LC1_q_b[29]_clock_1, LC1_q_b[29]_clock_enable_0, LC1_q_b[29]_clock_enable_1, , );
LC1_q_b[29]_PORT_B_data_out_reg = DFFE(LC1_q_b[29]_PORT_B_data_out, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29] = LC1_q_b[29]_PORT_B_data_out_reg[0];


--LC1_q_b[29] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[29]_PORT_A_data_in = A1L0;
LC1_q_b[29]_PORT_A_data_in_reg = DFFE(LC1_q_b[29]_PORT_A_data_in, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[29]_PORT_A_address_reg = DFFE(LC1_q_b[29]_PORT_A_address, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[29]_PORT_B_address_reg = DFFE(LC1_q_b[29]_PORT_B_address, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[29]_PORT_A_write_enable_reg = DFFE(LC1_q_b[29]_PORT_A_write_enable, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_B_read_enable = VCC;
LC1_q_b[29]_PORT_B_read_enable_reg = DFFE(LC1_q_b[29]_PORT_B_read_enable, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29]_PORT_A_byte_mask = A1L0;
LC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[29]_PORT_A_byte_mask, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_clock_0 = !CLK_25MHz2;
LC1_q_b[29]_clock_1 = !CLK_25MHz2;
LC1_q_b[29]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[29]_clock_enable_1 = inst80;
LC1_q_b[29]_PORT_B_data_out = MEMORY(LC1_q_b[29]_PORT_A_data_in_reg, , LC1_q_b[29]_PORT_A_address_reg, LC1_q_b[29]_PORT_B_address_reg, LC1_q_b[29]_PORT_A_write_enable_reg, LC1_q_b[29]_PORT_B_read_enable_reg, LC1_q_b[29]_PORT_A_byte_mask_reg, , LC1_q_b[29]_clock_0, LC1_q_b[29]_clock_1, LC1_q_b[29]_clock_enable_0, LC1_q_b[29]_clock_enable_1, , );
LC1_q_b[29]_PORT_B_data_out_reg = DFFE(LC1_q_b[29]_PORT_B_data_out, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29] = LC1_q_b[29]_PORT_B_data_out_reg[0];


--LC1_q_b[29] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[29]_PORT_A_data_in = A1L0;
LC1_q_b[29]_PORT_A_data_in_reg = DFFE(LC1_q_b[29]_PORT_A_data_in, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[29]_PORT_A_address_reg = DFFE(LC1_q_b[29]_PORT_A_address, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[29]_PORT_B_address_reg = DFFE(LC1_q_b[29]_PORT_B_address, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[29]_PORT_A_write_enable_reg = DFFE(LC1_q_b[29]_PORT_A_write_enable, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_B_read_enable = VCC;
LC1_q_b[29]_PORT_B_read_enable_reg = DFFE(LC1_q_b[29]_PORT_B_read_enable, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29]_PORT_A_byte_mask = A1L0;
LC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[29]_PORT_A_byte_mask, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_clock_0 = !CLK_25MHz2;
LC1_q_b[29]_clock_1 = !CLK_25MHz2;
LC1_q_b[29]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[29]_clock_enable_1 = inst182;
LC1_q_b[29]_PORT_B_data_out = MEMORY(LC1_q_b[29]_PORT_A_data_in_reg, , LC1_q_b[29]_PORT_A_address_reg, LC1_q_b[29]_PORT_B_address_reg, LC1_q_b[29]_PORT_A_write_enable_reg, LC1_q_b[29]_PORT_B_read_enable_reg, LC1_q_b[29]_PORT_A_byte_mask_reg, , LC1_q_b[29]_clock_0, LC1_q_b[29]_clock_1, LC1_q_b[29]_clock_enable_0, LC1_q_b[29]_clock_enable_1, , );
LC1_q_b[29]_PORT_B_data_out_reg = DFFE(LC1_q_b[29]_PORT_B_data_out, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29] = LC1_q_b[29]_PORT_B_data_out_reg[0];


--LC1_q_b[29] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[29]_PORT_A_data_in = A1L0;
LC1_q_b[29]_PORT_A_data_in_reg = DFFE(LC1_q_b[29]_PORT_A_data_in, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[29]_PORT_A_address_reg = DFFE(LC1_q_b[29]_PORT_A_address, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[29]_PORT_B_address_reg = DFFE(LC1_q_b[29]_PORT_B_address, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[29]_PORT_A_write_enable_reg = DFFE(LC1_q_b[29]_PORT_A_write_enable, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_PORT_B_read_enable = VCC;
LC1_q_b[29]_PORT_B_read_enable_reg = DFFE(LC1_q_b[29]_PORT_B_read_enable, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29]_PORT_A_byte_mask = A1L0;
LC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[29]_PORT_A_byte_mask, LC1_q_b[29]_clock_0, , , LC1_q_b[29]_clock_enable_0);
LC1_q_b[29]_clock_0 = !CLK_25MHz2;
LC1_q_b[29]_clock_1 = !CLK_25MHz2;
LC1_q_b[29]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[29]_clock_enable_1 = inst154;
LC1_q_b[29]_PORT_B_data_out = MEMORY(LC1_q_b[29]_PORT_A_data_in_reg, , LC1_q_b[29]_PORT_A_address_reg, LC1_q_b[29]_PORT_B_address_reg, LC1_q_b[29]_PORT_A_write_enable_reg, LC1_q_b[29]_PORT_B_read_enable_reg, LC1_q_b[29]_PORT_A_byte_mask_reg, , LC1_q_b[29]_clock_0, LC1_q_b[29]_clock_1, LC1_q_b[29]_clock_enable_0, LC1_q_b[29]_clock_enable_1, , );
LC1_q_b[29]_PORT_B_data_out_reg = DFFE(LC1_q_b[29]_PORT_B_data_out, LC1_q_b[29]_clock_1, , , LC1_q_b[29]_clock_enable_1);
LC1_q_b[29] = LC1_q_b[29]_PORT_B_data_out_reg[0];


--GC1_q_b[29] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[29]_PORT_A_data_in = ZB1_o_RamData[29];
GC1_q_b[29]_PORT_A_data_in_reg = DFFE(GC1_q_b[29]_PORT_A_data_in, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[29]_PORT_A_address_reg = DFFE(GC1_q_b[29]_PORT_A_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[29]_PORT_B_address_reg = DFFE(GC1_q_b[29]_PORT_B_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[29]_PORT_A_write_enable_reg = DFFE(GC1_q_b[29]_PORT_A_write_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_read_enable = B1L0;
GC1_q_b[29]_PORT_B_read_enable_reg = DFFE(GC1_q_b[29]_PORT_B_read_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[29]_PORT_A_byte_mask, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_clock_0 = !CLK_25MHz2;
GC1_q_b[29]_clock_1 = !CLK_25MHz2;
GC1_q_b[29]_PORT_B_data_out = MEMORY(GC1_q_b[29]_PORT_A_data_in_reg, , GC1_q_b[29]_PORT_A_address_reg, GC1_q_b[29]_PORT_B_address_reg, GC1_q_b[29]_PORT_A_write_enable_reg, GC1_q_b[29]_PORT_B_read_enable_reg, GC1_q_b[29]_PORT_A_byte_mask_reg, , GC1_q_b[29]_clock_0, GC1_q_b[29]_clock_1, , , , );
GC1_q_b[29]_PORT_B_data_out_reg = DFFE(GC1_q_b[29]_PORT_B_data_out, GC1_q_b[29]_clock_1, , , );
GC1_q_b[29] = GC1_q_b[29]_PORT_B_data_out_reg[0];


--GC1_q_b[29] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[29]_PORT_A_data_in = ZB1_o_RamData[29];
GC1_q_b[29]_PORT_A_data_in_reg = DFFE(GC1_q_b[29]_PORT_A_data_in, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[29]_PORT_A_address_reg = DFFE(GC1_q_b[29]_PORT_A_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[29]_PORT_B_address_reg = DFFE(GC1_q_b[29]_PORT_B_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[29]_PORT_A_write_enable_reg = DFFE(GC1_q_b[29]_PORT_A_write_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_read_enable = B1L0;
GC1_q_b[29]_PORT_B_read_enable_reg = DFFE(GC1_q_b[29]_PORT_B_read_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[29]_PORT_A_byte_mask, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_clock_0 = !CLK_25MHz2;
GC1_q_b[29]_clock_1 = !CLK_25MHz2;
GC1_q_b[29]_PORT_B_data_out = MEMORY(GC1_q_b[29]_PORT_A_data_in_reg, , GC1_q_b[29]_PORT_A_address_reg, GC1_q_b[29]_PORT_B_address_reg, GC1_q_b[29]_PORT_A_write_enable_reg, GC1_q_b[29]_PORT_B_read_enable_reg, GC1_q_b[29]_PORT_A_byte_mask_reg, , GC1_q_b[29]_clock_0, GC1_q_b[29]_clock_1, , , , );
GC1_q_b[29]_PORT_B_data_out_reg = DFFE(GC1_q_b[29]_PORT_B_data_out, GC1_q_b[29]_clock_1, , , );
GC1_q_b[29] = GC1_q_b[29]_PORT_B_data_out_reg[0];


--GC1_q_b[29] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[29]_PORT_A_data_in = ZB1_o_RamData[29];
GC1_q_b[29]_PORT_A_data_in_reg = DFFE(GC1_q_b[29]_PORT_A_data_in, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[29]_PORT_A_address_reg = DFFE(GC1_q_b[29]_PORT_A_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[29]_PORT_B_address_reg = DFFE(GC1_q_b[29]_PORT_B_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[29]_PORT_A_write_enable_reg = DFFE(GC1_q_b[29]_PORT_A_write_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_read_enable = B1L0;
GC1_q_b[29]_PORT_B_read_enable_reg = DFFE(GC1_q_b[29]_PORT_B_read_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[29]_PORT_A_byte_mask, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_clock_0 = !CLK_25MHz2;
GC1_q_b[29]_clock_1 = !CLK_25MHz2;
GC1_q_b[29]_PORT_B_data_out = MEMORY(GC1_q_b[29]_PORT_A_data_in_reg, , GC1_q_b[29]_PORT_A_address_reg, GC1_q_b[29]_PORT_B_address_reg, GC1_q_b[29]_PORT_A_write_enable_reg, GC1_q_b[29]_PORT_B_read_enable_reg, GC1_q_b[29]_PORT_A_byte_mask_reg, , GC1_q_b[29]_clock_0, GC1_q_b[29]_clock_1, , , , );
GC1_q_b[29]_PORT_B_data_out_reg = DFFE(GC1_q_b[29]_PORT_B_data_out, GC1_q_b[29]_clock_1, , , );
GC1_q_b[29] = GC1_q_b[29]_PORT_B_data_out_reg[0];


--GC1_q_b[29] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[29]_PORT_A_data_in = ZB1_o_RamData[29];
GC1_q_b[29]_PORT_A_data_in_reg = DFFE(GC1_q_b[29]_PORT_A_data_in, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[29]_PORT_A_address_reg = DFFE(GC1_q_b[29]_PORT_A_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[29]_PORT_B_address_reg = DFFE(GC1_q_b[29]_PORT_B_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[29]_PORT_A_write_enable_reg = DFFE(GC1_q_b[29]_PORT_A_write_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_read_enable = B1L0;
GC1_q_b[29]_PORT_B_read_enable_reg = DFFE(GC1_q_b[29]_PORT_B_read_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[29]_PORT_A_byte_mask, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_clock_0 = !CLK_25MHz2;
GC1_q_b[29]_clock_1 = !CLK_25MHz2;
GC1_q_b[29]_PORT_B_data_out = MEMORY(GC1_q_b[29]_PORT_A_data_in_reg, , GC1_q_b[29]_PORT_A_address_reg, GC1_q_b[29]_PORT_B_address_reg, GC1_q_b[29]_PORT_A_write_enable_reg, GC1_q_b[29]_PORT_B_read_enable_reg, GC1_q_b[29]_PORT_A_byte_mask_reg, , GC1_q_b[29]_clock_0, GC1_q_b[29]_clock_1, , , , );
GC1_q_b[29]_PORT_B_data_out_reg = DFFE(GC1_q_b[29]_PORT_B_data_out, GC1_q_b[29]_clock_1, , , );
GC1_q_b[29] = GC1_q_b[29]_PORT_B_data_out_reg[0];


--GC1_q_b[29] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[29]_PORT_A_data_in = ZB1_o_RamData[29];
GC1_q_b[29]_PORT_A_data_in_reg = DFFE(GC1_q_b[29]_PORT_A_data_in, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[29]_PORT_A_address_reg = DFFE(GC1_q_b[29]_PORT_A_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[29]_PORT_B_address_reg = DFFE(GC1_q_b[29]_PORT_B_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[29]_PORT_A_write_enable_reg = DFFE(GC1_q_b[29]_PORT_A_write_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_read_enable = B1L0;
GC1_q_b[29]_PORT_B_read_enable_reg = DFFE(GC1_q_b[29]_PORT_B_read_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[29]_PORT_A_byte_mask, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_clock_0 = !CLK_25MHz2;
GC1_q_b[29]_clock_1 = !CLK_25MHz2;
GC1_q_b[29]_PORT_B_data_out = MEMORY(GC1_q_b[29]_PORT_A_data_in_reg, , GC1_q_b[29]_PORT_A_address_reg, GC1_q_b[29]_PORT_B_address_reg, GC1_q_b[29]_PORT_A_write_enable_reg, GC1_q_b[29]_PORT_B_read_enable_reg, GC1_q_b[29]_PORT_A_byte_mask_reg, , GC1_q_b[29]_clock_0, GC1_q_b[29]_clock_1, , , , );
GC1_q_b[29]_PORT_B_data_out_reg = DFFE(GC1_q_b[29]_PORT_B_data_out, GC1_q_b[29]_clock_1, , , );
GC1_q_b[29] = GC1_q_b[29]_PORT_B_data_out_reg[0];


--LC1_q_b[30] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[30]_PORT_A_data_in = A1L0;
LC1_q_b[30]_PORT_A_data_in_reg = DFFE(LC1_q_b[30]_PORT_A_data_in, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[30]_PORT_A_address_reg = DFFE(LC1_q_b[30]_PORT_A_address, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[30]_PORT_B_address_reg = DFFE(LC1_q_b[30]_PORT_B_address, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[30]_PORT_A_write_enable_reg = DFFE(LC1_q_b[30]_PORT_A_write_enable, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_B_read_enable = VCC;
LC1_q_b[30]_PORT_B_read_enable_reg = DFFE(LC1_q_b[30]_PORT_B_read_enable, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30]_PORT_A_byte_mask = A1L0;
LC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[30]_PORT_A_byte_mask, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_clock_0 = !CLK_25MHz2;
LC1_q_b[30]_clock_1 = !CLK_25MHz2;
LC1_q_b[30]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[30]_clock_enable_1 = inst146;
LC1_q_b[30]_PORT_B_data_out = MEMORY(LC1_q_b[30]_PORT_A_data_in_reg, , LC1_q_b[30]_PORT_A_address_reg, LC1_q_b[30]_PORT_B_address_reg, LC1_q_b[30]_PORT_A_write_enable_reg, LC1_q_b[30]_PORT_B_read_enable_reg, LC1_q_b[30]_PORT_A_byte_mask_reg, , LC1_q_b[30]_clock_0, LC1_q_b[30]_clock_1, LC1_q_b[30]_clock_enable_0, LC1_q_b[30]_clock_enable_1, , );
LC1_q_b[30]_PORT_B_data_out_reg = DFFE(LC1_q_b[30]_PORT_B_data_out, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30] = LC1_q_b[30]_PORT_B_data_out_reg[0];


--LC1_q_b[30] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[30]_PORT_A_data_in = A1L0;
LC1_q_b[30]_PORT_A_data_in_reg = DFFE(LC1_q_b[30]_PORT_A_data_in, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[30]_PORT_A_address_reg = DFFE(LC1_q_b[30]_PORT_A_address, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[30]_PORT_B_address_reg = DFFE(LC1_q_b[30]_PORT_B_address, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[30]_PORT_A_write_enable_reg = DFFE(LC1_q_b[30]_PORT_A_write_enable, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_B_read_enable = VCC;
LC1_q_b[30]_PORT_B_read_enable_reg = DFFE(LC1_q_b[30]_PORT_B_read_enable, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30]_PORT_A_byte_mask = A1L0;
LC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[30]_PORT_A_byte_mask, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_clock_0 = !CLK_25MHz2;
LC1_q_b[30]_clock_1 = !CLK_25MHz2;
LC1_q_b[30]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[30]_clock_enable_1 = inst80;
LC1_q_b[30]_PORT_B_data_out = MEMORY(LC1_q_b[30]_PORT_A_data_in_reg, , LC1_q_b[30]_PORT_A_address_reg, LC1_q_b[30]_PORT_B_address_reg, LC1_q_b[30]_PORT_A_write_enable_reg, LC1_q_b[30]_PORT_B_read_enable_reg, LC1_q_b[30]_PORT_A_byte_mask_reg, , LC1_q_b[30]_clock_0, LC1_q_b[30]_clock_1, LC1_q_b[30]_clock_enable_0, LC1_q_b[30]_clock_enable_1, , );
LC1_q_b[30]_PORT_B_data_out_reg = DFFE(LC1_q_b[30]_PORT_B_data_out, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30] = LC1_q_b[30]_PORT_B_data_out_reg[0];


--LC1_q_b[30] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[30]_PORT_A_data_in = A1L0;
LC1_q_b[30]_PORT_A_data_in_reg = DFFE(LC1_q_b[30]_PORT_A_data_in, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[30]_PORT_A_address_reg = DFFE(LC1_q_b[30]_PORT_A_address, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[30]_PORT_B_address_reg = DFFE(LC1_q_b[30]_PORT_B_address, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[30]_PORT_A_write_enable_reg = DFFE(LC1_q_b[30]_PORT_A_write_enable, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_B_read_enable = VCC;
LC1_q_b[30]_PORT_B_read_enable_reg = DFFE(LC1_q_b[30]_PORT_B_read_enable, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30]_PORT_A_byte_mask = A1L0;
LC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[30]_PORT_A_byte_mask, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_clock_0 = !CLK_25MHz2;
LC1_q_b[30]_clock_1 = !CLK_25MHz2;
LC1_q_b[30]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[30]_clock_enable_1 = inst182;
LC1_q_b[30]_PORT_B_data_out = MEMORY(LC1_q_b[30]_PORT_A_data_in_reg, , LC1_q_b[30]_PORT_A_address_reg, LC1_q_b[30]_PORT_B_address_reg, LC1_q_b[30]_PORT_A_write_enable_reg, LC1_q_b[30]_PORT_B_read_enable_reg, LC1_q_b[30]_PORT_A_byte_mask_reg, , LC1_q_b[30]_clock_0, LC1_q_b[30]_clock_1, LC1_q_b[30]_clock_enable_0, LC1_q_b[30]_clock_enable_1, , );
LC1_q_b[30]_PORT_B_data_out_reg = DFFE(LC1_q_b[30]_PORT_B_data_out, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30] = LC1_q_b[30]_PORT_B_data_out_reg[0];


--LC1_q_b[30] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[30]_PORT_A_data_in = A1L0;
LC1_q_b[30]_PORT_A_data_in_reg = DFFE(LC1_q_b[30]_PORT_A_data_in, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[30]_PORT_A_address_reg = DFFE(LC1_q_b[30]_PORT_A_address, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[30]_PORT_B_address_reg = DFFE(LC1_q_b[30]_PORT_B_address, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[30]_PORT_A_write_enable_reg = DFFE(LC1_q_b[30]_PORT_A_write_enable, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_PORT_B_read_enable = VCC;
LC1_q_b[30]_PORT_B_read_enable_reg = DFFE(LC1_q_b[30]_PORT_B_read_enable, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30]_PORT_A_byte_mask = A1L0;
LC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[30]_PORT_A_byte_mask, LC1_q_b[30]_clock_0, , , LC1_q_b[30]_clock_enable_0);
LC1_q_b[30]_clock_0 = !CLK_25MHz2;
LC1_q_b[30]_clock_1 = !CLK_25MHz2;
LC1_q_b[30]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[30]_clock_enable_1 = inst154;
LC1_q_b[30]_PORT_B_data_out = MEMORY(LC1_q_b[30]_PORT_A_data_in_reg, , LC1_q_b[30]_PORT_A_address_reg, LC1_q_b[30]_PORT_B_address_reg, LC1_q_b[30]_PORT_A_write_enable_reg, LC1_q_b[30]_PORT_B_read_enable_reg, LC1_q_b[30]_PORT_A_byte_mask_reg, , LC1_q_b[30]_clock_0, LC1_q_b[30]_clock_1, LC1_q_b[30]_clock_enable_0, LC1_q_b[30]_clock_enable_1, , );
LC1_q_b[30]_PORT_B_data_out_reg = DFFE(LC1_q_b[30]_PORT_B_data_out, LC1_q_b[30]_clock_1, , , LC1_q_b[30]_clock_enable_1);
LC1_q_b[30] = LC1_q_b[30]_PORT_B_data_out_reg[0];


--GC1_q_b[30] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[30]_PORT_A_data_in = ZB1_o_RamData[30];
GC1_q_b[30]_PORT_A_data_in_reg = DFFE(GC1_q_b[30]_PORT_A_data_in, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[30]_PORT_A_address_reg = DFFE(GC1_q_b[30]_PORT_A_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[30]_PORT_B_address_reg = DFFE(GC1_q_b[30]_PORT_B_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[30]_PORT_A_write_enable_reg = DFFE(GC1_q_b[30]_PORT_A_write_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_read_enable = B1L0;
GC1_q_b[30]_PORT_B_read_enable_reg = DFFE(GC1_q_b[30]_PORT_B_read_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[30]_PORT_A_byte_mask, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_clock_0 = !CLK_25MHz2;
GC1_q_b[30]_clock_1 = !CLK_25MHz2;
GC1_q_b[30]_PORT_B_data_out = MEMORY(GC1_q_b[30]_PORT_A_data_in_reg, , GC1_q_b[30]_PORT_A_address_reg, GC1_q_b[30]_PORT_B_address_reg, GC1_q_b[30]_PORT_A_write_enable_reg, GC1_q_b[30]_PORT_B_read_enable_reg, GC1_q_b[30]_PORT_A_byte_mask_reg, , GC1_q_b[30]_clock_0, GC1_q_b[30]_clock_1, , , , );
GC1_q_b[30]_PORT_B_data_out_reg = DFFE(GC1_q_b[30]_PORT_B_data_out, GC1_q_b[30]_clock_1, , , );
GC1_q_b[30] = GC1_q_b[30]_PORT_B_data_out_reg[0];


--GC1_q_b[30] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[30]_PORT_A_data_in = ZB1_o_RamData[30];
GC1_q_b[30]_PORT_A_data_in_reg = DFFE(GC1_q_b[30]_PORT_A_data_in, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[30]_PORT_A_address_reg = DFFE(GC1_q_b[30]_PORT_A_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[30]_PORT_B_address_reg = DFFE(GC1_q_b[30]_PORT_B_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[30]_PORT_A_write_enable_reg = DFFE(GC1_q_b[30]_PORT_A_write_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_read_enable = B1L0;
GC1_q_b[30]_PORT_B_read_enable_reg = DFFE(GC1_q_b[30]_PORT_B_read_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[30]_PORT_A_byte_mask, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_clock_0 = !CLK_25MHz2;
GC1_q_b[30]_clock_1 = !CLK_25MHz2;
GC1_q_b[30]_PORT_B_data_out = MEMORY(GC1_q_b[30]_PORT_A_data_in_reg, , GC1_q_b[30]_PORT_A_address_reg, GC1_q_b[30]_PORT_B_address_reg, GC1_q_b[30]_PORT_A_write_enable_reg, GC1_q_b[30]_PORT_B_read_enable_reg, GC1_q_b[30]_PORT_A_byte_mask_reg, , GC1_q_b[30]_clock_0, GC1_q_b[30]_clock_1, , , , );
GC1_q_b[30]_PORT_B_data_out_reg = DFFE(GC1_q_b[30]_PORT_B_data_out, GC1_q_b[30]_clock_1, , , );
GC1_q_b[30] = GC1_q_b[30]_PORT_B_data_out_reg[0];


--GC1_q_b[30] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[30]_PORT_A_data_in = ZB1_o_RamData[30];
GC1_q_b[30]_PORT_A_data_in_reg = DFFE(GC1_q_b[30]_PORT_A_data_in, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[30]_PORT_A_address_reg = DFFE(GC1_q_b[30]_PORT_A_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[30]_PORT_B_address_reg = DFFE(GC1_q_b[30]_PORT_B_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[30]_PORT_A_write_enable_reg = DFFE(GC1_q_b[30]_PORT_A_write_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_read_enable = B1L0;
GC1_q_b[30]_PORT_B_read_enable_reg = DFFE(GC1_q_b[30]_PORT_B_read_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[30]_PORT_A_byte_mask, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_clock_0 = !CLK_25MHz2;
GC1_q_b[30]_clock_1 = !CLK_25MHz2;
GC1_q_b[30]_PORT_B_data_out = MEMORY(GC1_q_b[30]_PORT_A_data_in_reg, , GC1_q_b[30]_PORT_A_address_reg, GC1_q_b[30]_PORT_B_address_reg, GC1_q_b[30]_PORT_A_write_enable_reg, GC1_q_b[30]_PORT_B_read_enable_reg, GC1_q_b[30]_PORT_A_byte_mask_reg, , GC1_q_b[30]_clock_0, GC1_q_b[30]_clock_1, , , , );
GC1_q_b[30]_PORT_B_data_out_reg = DFFE(GC1_q_b[30]_PORT_B_data_out, GC1_q_b[30]_clock_1, , , );
GC1_q_b[30] = GC1_q_b[30]_PORT_B_data_out_reg[0];


--GC1_q_b[30] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[30]_PORT_A_data_in = ZB1_o_RamData[30];
GC1_q_b[30]_PORT_A_data_in_reg = DFFE(GC1_q_b[30]_PORT_A_data_in, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[30]_PORT_A_address_reg = DFFE(GC1_q_b[30]_PORT_A_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[30]_PORT_B_address_reg = DFFE(GC1_q_b[30]_PORT_B_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[30]_PORT_A_write_enable_reg = DFFE(GC1_q_b[30]_PORT_A_write_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_read_enable = B1L0;
GC1_q_b[30]_PORT_B_read_enable_reg = DFFE(GC1_q_b[30]_PORT_B_read_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[30]_PORT_A_byte_mask, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_clock_0 = !CLK_25MHz2;
GC1_q_b[30]_clock_1 = !CLK_25MHz2;
GC1_q_b[30]_PORT_B_data_out = MEMORY(GC1_q_b[30]_PORT_A_data_in_reg, , GC1_q_b[30]_PORT_A_address_reg, GC1_q_b[30]_PORT_B_address_reg, GC1_q_b[30]_PORT_A_write_enable_reg, GC1_q_b[30]_PORT_B_read_enable_reg, GC1_q_b[30]_PORT_A_byte_mask_reg, , GC1_q_b[30]_clock_0, GC1_q_b[30]_clock_1, , , , );
GC1_q_b[30]_PORT_B_data_out_reg = DFFE(GC1_q_b[30]_PORT_B_data_out, GC1_q_b[30]_clock_1, , , );
GC1_q_b[30] = GC1_q_b[30]_PORT_B_data_out_reg[0];


--GC1_q_b[30] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[30]_PORT_A_data_in = ZB1_o_RamData[30];
GC1_q_b[30]_PORT_A_data_in_reg = DFFE(GC1_q_b[30]_PORT_A_data_in, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[30]_PORT_A_address_reg = DFFE(GC1_q_b[30]_PORT_A_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[30]_PORT_B_address_reg = DFFE(GC1_q_b[30]_PORT_B_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[30]_PORT_A_write_enable_reg = DFFE(GC1_q_b[30]_PORT_A_write_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_read_enable = B1L0;
GC1_q_b[30]_PORT_B_read_enable_reg = DFFE(GC1_q_b[30]_PORT_B_read_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[30]_PORT_A_byte_mask, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_clock_0 = !CLK_25MHz2;
GC1_q_b[30]_clock_1 = !CLK_25MHz2;
GC1_q_b[30]_PORT_B_data_out = MEMORY(GC1_q_b[30]_PORT_A_data_in_reg, , GC1_q_b[30]_PORT_A_address_reg, GC1_q_b[30]_PORT_B_address_reg, GC1_q_b[30]_PORT_A_write_enable_reg, GC1_q_b[30]_PORT_B_read_enable_reg, GC1_q_b[30]_PORT_A_byte_mask_reg, , GC1_q_b[30]_clock_0, GC1_q_b[30]_clock_1, , , , );
GC1_q_b[30]_PORT_B_data_out_reg = DFFE(GC1_q_b[30]_PORT_B_data_out, GC1_q_b[30]_clock_1, , , );
GC1_q_b[30] = GC1_q_b[30]_PORT_B_data_out_reg[0];


--LC1_q_b[31] is DPRAM_1WIRE_TEMP:inst147|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[31]_PORT_A_data_in = A1L0;
LC1_q_b[31]_PORT_A_data_in_reg = DFFE(LC1_q_b[31]_PORT_A_data_in, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[31]_PORT_A_address_reg = DFFE(LC1_q_b[31]_PORT_A_address, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[31]_PORT_B_address_reg = DFFE(LC1_q_b[31]_PORT_B_address, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[31]_PORT_A_write_enable_reg = DFFE(LC1_q_b[31]_PORT_A_write_enable, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_B_read_enable = VCC;
LC1_q_b[31]_PORT_B_read_enable_reg = DFFE(LC1_q_b[31]_PORT_B_read_enable, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31]_PORT_A_byte_mask = A1L0;
LC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[31]_PORT_A_byte_mask, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_clock_0 = !CLK_25MHz2;
LC1_q_b[31]_clock_1 = !CLK_25MHz2;
LC1_q_b[31]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[31]_clock_enable_1 = inst146;
LC1_q_b[31]_PORT_B_data_out = MEMORY(LC1_q_b[31]_PORT_A_data_in_reg, , LC1_q_b[31]_PORT_A_address_reg, LC1_q_b[31]_PORT_B_address_reg, LC1_q_b[31]_PORT_A_write_enable_reg, LC1_q_b[31]_PORT_B_read_enable_reg, LC1_q_b[31]_PORT_A_byte_mask_reg, , LC1_q_b[31]_clock_0, LC1_q_b[31]_clock_1, LC1_q_b[31]_clock_enable_0, LC1_q_b[31]_clock_enable_1, , );
LC1_q_b[31]_PORT_B_data_out_reg = DFFE(LC1_q_b[31]_PORT_B_data_out, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31] = LC1_q_b[31]_PORT_B_data_out_reg[0];


--LC1_q_b[31] is DPRAM_1WIRE_TEMP:inst54|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[31]_PORT_A_data_in = A1L0;
LC1_q_b[31]_PORT_A_data_in_reg = DFFE(LC1_q_b[31]_PORT_A_data_in, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[31]_PORT_A_address_reg = DFFE(LC1_q_b[31]_PORT_A_address, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[31]_PORT_B_address_reg = DFFE(LC1_q_b[31]_PORT_B_address, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[31]_PORT_A_write_enable_reg = DFFE(LC1_q_b[31]_PORT_A_write_enable, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_B_read_enable = VCC;
LC1_q_b[31]_PORT_B_read_enable_reg = DFFE(LC1_q_b[31]_PORT_B_read_enable, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31]_PORT_A_byte_mask = A1L0;
LC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[31]_PORT_A_byte_mask, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_clock_0 = !CLK_25MHz2;
LC1_q_b[31]_clock_1 = !CLK_25MHz2;
LC1_q_b[31]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[31]_clock_enable_1 = inst80;
LC1_q_b[31]_PORT_B_data_out = MEMORY(LC1_q_b[31]_PORT_A_data_in_reg, , LC1_q_b[31]_PORT_A_address_reg, LC1_q_b[31]_PORT_B_address_reg, LC1_q_b[31]_PORT_A_write_enable_reg, LC1_q_b[31]_PORT_B_read_enable_reg, LC1_q_b[31]_PORT_A_byte_mask_reg, , LC1_q_b[31]_clock_0, LC1_q_b[31]_clock_1, LC1_q_b[31]_clock_enable_0, LC1_q_b[31]_clock_enable_1, , );
LC1_q_b[31]_PORT_B_data_out_reg = DFFE(LC1_q_b[31]_PORT_B_data_out, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31] = LC1_q_b[31]_PORT_B_data_out_reg[0];


--LC1_q_b[31] is DPRAM_1WIRE_TEMP:inst183|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[31]_PORT_A_data_in = A1L0;
LC1_q_b[31]_PORT_A_data_in_reg = DFFE(LC1_q_b[31]_PORT_A_data_in, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[31]_PORT_A_address_reg = DFFE(LC1_q_b[31]_PORT_A_address, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[31]_PORT_B_address_reg = DFFE(LC1_q_b[31]_PORT_B_address, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[31]_PORT_A_write_enable_reg = DFFE(LC1_q_b[31]_PORT_A_write_enable, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_B_read_enable = VCC;
LC1_q_b[31]_PORT_B_read_enable_reg = DFFE(LC1_q_b[31]_PORT_B_read_enable, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31]_PORT_A_byte_mask = A1L0;
LC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[31]_PORT_A_byte_mask, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_clock_0 = !CLK_25MHz2;
LC1_q_b[31]_clock_1 = !CLK_25MHz2;
LC1_q_b[31]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[31]_clock_enable_1 = inst182;
LC1_q_b[31]_PORT_B_data_out = MEMORY(LC1_q_b[31]_PORT_A_data_in_reg, , LC1_q_b[31]_PORT_A_address_reg, LC1_q_b[31]_PORT_B_address_reg, LC1_q_b[31]_PORT_A_write_enable_reg, LC1_q_b[31]_PORT_B_read_enable_reg, LC1_q_b[31]_PORT_A_byte_mask_reg, , LC1_q_b[31]_clock_0, LC1_q_b[31]_clock_1, LC1_q_b[31]_clock_enable_0, LC1_q_b[31]_clock_enable_1, , );
LC1_q_b[31]_PORT_B_data_out_reg = DFFE(LC1_q_b[31]_PORT_B_data_out, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31] = LC1_q_b[31]_PORT_B_data_out_reg[0];


--LC1_q_b[31] is DPRAM_1WIRE_TEMP:inst155|altsyncram:altsyncram_component|altsyncram_mat1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 16, Port A Width: 1, Port B Depth: 16, Port B Width: 1
--Port A Logical Depth: 16, Port A Logical Width: 32, Port B Logical Depth: 16, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
LC1_q_b[31]_PORT_A_data_in = A1L0;
LC1_q_b[31]_PORT_A_data_in_reg = DFFE(LC1_q_b[31]_PORT_A_data_in, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_A_address = BUS(W1_o_TEMP_ADDR[0], W1_o_TEMP_ADDR[1], W1_o_TEMP_ADDR[2], W1_o_TEMP_ADDR[3]);
LC1_q_b[31]_PORT_A_address_reg = DFFE(LC1_q_b[31]_PORT_A_address, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_B_address = BUS(A0, A1, A2, A3);
LC1_q_b[31]_PORT_B_address_reg = DFFE(LC1_q_b[31]_PORT_B_address, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31]_PORT_A_write_enable = W1_o_TEMP_WR;
LC1_q_b[31]_PORT_A_write_enable_reg = DFFE(LC1_q_b[31]_PORT_A_write_enable, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_PORT_B_read_enable = VCC;
LC1_q_b[31]_PORT_B_read_enable_reg = DFFE(LC1_q_b[31]_PORT_B_read_enable, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31]_PORT_A_byte_mask = A1L0;
LC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(LC1_q_b[31]_PORT_A_byte_mask, LC1_q_b[31]_clock_0, , , LC1_q_b[31]_clock_enable_0);
LC1_q_b[31]_clock_0 = !CLK_25MHz2;
LC1_q_b[31]_clock_1 = !CLK_25MHz2;
LC1_q_b[31]_clock_enable_0 = W1_o_TEMP_WR;
LC1_q_b[31]_clock_enable_1 = inst154;
LC1_q_b[31]_PORT_B_data_out = MEMORY(LC1_q_b[31]_PORT_A_data_in_reg, , LC1_q_b[31]_PORT_A_address_reg, LC1_q_b[31]_PORT_B_address_reg, LC1_q_b[31]_PORT_A_write_enable_reg, LC1_q_b[31]_PORT_B_read_enable_reg, LC1_q_b[31]_PORT_A_byte_mask_reg, , LC1_q_b[31]_clock_0, LC1_q_b[31]_clock_1, LC1_q_b[31]_clock_enable_0, LC1_q_b[31]_clock_enable_1, , );
LC1_q_b[31]_PORT_B_data_out_reg = DFFE(LC1_q_b[31]_PORT_B_data_out, LC1_q_b[31]_clock_1, , , LC1_q_b[31]_clock_enable_1);
LC1_q_b[31] = LC1_q_b[31]_PORT_B_data_out_reg[0];


--GC1_q_b[31] is UART_MODULE:inst3|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[31]_PORT_A_data_in = ZB1_o_RamData[31];
GC1_q_b[31]_PORT_A_data_in_reg = DFFE(GC1_q_b[31]_PORT_A_data_in, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[31]_PORT_A_address_reg = DFFE(GC1_q_b[31]_PORT_A_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[31]_PORT_B_address_reg = DFFE(GC1_q_b[31]_PORT_B_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[31]_PORT_A_write_enable_reg = DFFE(GC1_q_b[31]_PORT_A_write_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_read_enable = B1L0;
GC1_q_b[31]_PORT_B_read_enable_reg = DFFE(GC1_q_b[31]_PORT_B_read_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[31]_PORT_A_byte_mask, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_clock_0 = !CLK_25MHz2;
GC1_q_b[31]_clock_1 = !CLK_25MHz2;
GC1_q_b[31]_PORT_B_data_out = MEMORY(GC1_q_b[31]_PORT_A_data_in_reg, , GC1_q_b[31]_PORT_A_address_reg, GC1_q_b[31]_PORT_B_address_reg, GC1_q_b[31]_PORT_A_write_enable_reg, GC1_q_b[31]_PORT_B_read_enable_reg, GC1_q_b[31]_PORT_A_byte_mask_reg, , GC1_q_b[31]_clock_0, GC1_q_b[31]_clock_1, , , , );
GC1_q_b[31]_PORT_B_data_out_reg = DFFE(GC1_q_b[31]_PORT_B_data_out, GC1_q_b[31]_clock_1, , , );
GC1_q_b[31] = GC1_q_b[31]_PORT_B_data_out_reg[0];


--GC1_q_b[31] is UART_MODULE:inst2|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[31]_PORT_A_data_in = ZB1_o_RamData[31];
GC1_q_b[31]_PORT_A_data_in_reg = DFFE(GC1_q_b[31]_PORT_A_data_in, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[31]_PORT_A_address_reg = DFFE(GC1_q_b[31]_PORT_A_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[31]_PORT_B_address_reg = DFFE(GC1_q_b[31]_PORT_B_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[31]_PORT_A_write_enable_reg = DFFE(GC1_q_b[31]_PORT_A_write_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_read_enable = B1L0;
GC1_q_b[31]_PORT_B_read_enable_reg = DFFE(GC1_q_b[31]_PORT_B_read_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[31]_PORT_A_byte_mask, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_clock_0 = !CLK_25MHz2;
GC1_q_b[31]_clock_1 = !CLK_25MHz2;
GC1_q_b[31]_PORT_B_data_out = MEMORY(GC1_q_b[31]_PORT_A_data_in_reg, , GC1_q_b[31]_PORT_A_address_reg, GC1_q_b[31]_PORT_B_address_reg, GC1_q_b[31]_PORT_A_write_enable_reg, GC1_q_b[31]_PORT_B_read_enable_reg, GC1_q_b[31]_PORT_A_byte_mask_reg, , GC1_q_b[31]_clock_0, GC1_q_b[31]_clock_1, , , , );
GC1_q_b[31]_PORT_B_data_out_reg = DFFE(GC1_q_b[31]_PORT_B_data_out, GC1_q_b[31]_clock_1, , , );
GC1_q_b[31] = GC1_q_b[31]_PORT_B_data_out_reg[0];


--GC1_q_b[31] is UART_MODULE:inst6|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[31]_PORT_A_data_in = ZB1_o_RamData[31];
GC1_q_b[31]_PORT_A_data_in_reg = DFFE(GC1_q_b[31]_PORT_A_data_in, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[31]_PORT_A_address_reg = DFFE(GC1_q_b[31]_PORT_A_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[31]_PORT_B_address_reg = DFFE(GC1_q_b[31]_PORT_B_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[31]_PORT_A_write_enable_reg = DFFE(GC1_q_b[31]_PORT_A_write_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_read_enable = B1L0;
GC1_q_b[31]_PORT_B_read_enable_reg = DFFE(GC1_q_b[31]_PORT_B_read_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[31]_PORT_A_byte_mask, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_clock_0 = !CLK_25MHz2;
GC1_q_b[31]_clock_1 = !CLK_25MHz2;
GC1_q_b[31]_PORT_B_data_out = MEMORY(GC1_q_b[31]_PORT_A_data_in_reg, , GC1_q_b[31]_PORT_A_address_reg, GC1_q_b[31]_PORT_B_address_reg, GC1_q_b[31]_PORT_A_write_enable_reg, GC1_q_b[31]_PORT_B_read_enable_reg, GC1_q_b[31]_PORT_A_byte_mask_reg, , GC1_q_b[31]_clock_0, GC1_q_b[31]_clock_1, , , , );
GC1_q_b[31]_PORT_B_data_out_reg = DFFE(GC1_q_b[31]_PORT_B_data_out, GC1_q_b[31]_clock_1, , , );
GC1_q_b[31] = GC1_q_b[31]_PORT_B_data_out_reg[0];


--GC1_q_b[31] is UART_MODULE:inst5|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[31]_PORT_A_data_in = ZB1_o_RamData[31];
GC1_q_b[31]_PORT_A_data_in_reg = DFFE(GC1_q_b[31]_PORT_A_data_in, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[31]_PORT_A_address_reg = DFFE(GC1_q_b[31]_PORT_A_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[31]_PORT_B_address_reg = DFFE(GC1_q_b[31]_PORT_B_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[31]_PORT_A_write_enable_reg = DFFE(GC1_q_b[31]_PORT_A_write_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_read_enable = B1L0;
GC1_q_b[31]_PORT_B_read_enable_reg = DFFE(GC1_q_b[31]_PORT_B_read_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[31]_PORT_A_byte_mask, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_clock_0 = !CLK_25MHz2;
GC1_q_b[31]_clock_1 = !CLK_25MHz2;
GC1_q_b[31]_PORT_B_data_out = MEMORY(GC1_q_b[31]_PORT_A_data_in_reg, , GC1_q_b[31]_PORT_A_address_reg, GC1_q_b[31]_PORT_B_address_reg, GC1_q_b[31]_PORT_A_write_enable_reg, GC1_q_b[31]_PORT_B_read_enable_reg, GC1_q_b[31]_PORT_A_byte_mask_reg, , GC1_q_b[31]_clock_0, GC1_q_b[31]_clock_1, , , , );
GC1_q_b[31]_PORT_B_data_out_reg = DFFE(GC1_q_b[31]_PORT_B_data_out, GC1_q_b[31]_clock_1, , , );
GC1_q_b[31] = GC1_q_b[31]_PORT_B_data_out_reg[0];


--GC1_q_b[31] is UART_MODULE:inst7|DPRAM_2k:inst25|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[31]_PORT_A_data_in = ZB1_o_RamData[31];
GC1_q_b[31]_PORT_A_data_in_reg = DFFE(GC1_q_b[31]_PORT_A_data_in, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_address = BUS(ZB1_o_RamAddr[0], ZB1_o_RamAddr[1], ZB1_o_RamAddr[2], ZB1_o_RamAddr[3], ZB1_o_RamAddr[4], ZB1_o_RamAddr[5], ZB1_o_RamAddr[6], ZB1_o_RamAddr[7], ZB1_o_RamAddr[8]);
GC1_q_b[31]_PORT_A_address_reg = DFFE(GC1_q_b[31]_PORT_A_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[31]_PORT_B_address_reg = DFFE(GC1_q_b[31]_PORT_B_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_write_enable = ZB1_o_RamWE;
GC1_q_b[31]_PORT_A_write_enable_reg = DFFE(GC1_q_b[31]_PORT_A_write_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_read_enable = B1L0;
GC1_q_b[31]_PORT_B_read_enable_reg = DFFE(GC1_q_b[31]_PORT_B_read_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_byte_mask = ZB1_o_ByteSel[3];
GC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[31]_PORT_A_byte_mask, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_clock_0 = !CLK_25MHz2;
GC1_q_b[31]_clock_1 = !CLK_25MHz2;
GC1_q_b[31]_PORT_B_data_out = MEMORY(GC1_q_b[31]_PORT_A_data_in_reg, , GC1_q_b[31]_PORT_A_address_reg, GC1_q_b[31]_PORT_B_address_reg, GC1_q_b[31]_PORT_A_write_enable_reg, GC1_q_b[31]_PORT_B_read_enable_reg, GC1_q_b[31]_PORT_A_byte_mask_reg, , GC1_q_b[31]_clock_0, GC1_q_b[31]_clock_1, , , , );
GC1_q_b[31]_PORT_B_data_out_reg = DFFE(GC1_q_b[31]_PORT_B_data_out, GC1_q_b[31]_clock_1, , , );
GC1_q_b[31] = GC1_q_b[31]_PORT_B_data_out_reg[0];


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[0]~5
SB1L0 = SB1_r_ClkCnt[0] $ (VCC);

--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[0]~6
SB1L0 = CARRY(SB1_r_ClkCnt[0]);


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[1]~8
SB1L0 = (SB1_r_ClkCnt[1] & (!SB1L0)) # (!SB1_r_ClkCnt[1] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[1]~9
SB1L0 = CARRY((!SB1L0) # (!SB1_r_ClkCnt[1]));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[2]~10
SB1L0 = (SB1_r_ClkCnt[2] & (SB1L0 $ (GND))) # (!SB1_r_ClkCnt[2] & (!SB1L0 & VCC));

--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[2]~11
SB1L0 = CARRY((SB1_r_ClkCnt[2] & !SB1L0));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[3]~12
SB1L0 = (SB1_r_ClkCnt[3] & (!SB1L0)) # (!SB1_r_ClkCnt[3] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[3]~13
SB1L0 = CARRY((!SB1L0) # (!SB1_r_ClkCnt[3]));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[4]~14
SB1L0 = SB1_r_ClkCnt[4] $ (!SB1L0);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[0]~7
W1L0 = W1_r_Cnt_Byte_Rom[0] $ (VCC);

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[0]~8
W1L0 = CARRY(W1_r_Cnt_Byte_Rom[0]);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[1]~10
W1L0 = (W1_r_Cnt_Byte_Rom[1] & (!W1L0)) # (!W1_r_Cnt_Byte_Rom[1] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[1]~11
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Byte_Rom[1]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[2]~12
W1L0 = (W1_r_Cnt_Byte_Rom[2] & (W1L0 $ (GND))) # (!W1_r_Cnt_Byte_Rom[2] & (!W1L0 & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[2]~13
W1L0 = CARRY((W1_r_Cnt_Byte_Rom[2] & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[3]~14
W1L0 = (W1_r_Cnt_Byte_Rom[3] & (!W1L0)) # (!W1_r_Cnt_Byte_Rom[3] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[3]~15
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Byte_Rom[3]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[4]~16
W1L0 = (W1_r_Cnt_Byte_Rom[4] & (W1L0 $ (GND))) # (!W1_r_Cnt_Byte_Rom[4] & (!W1L0 & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[4]~17
W1L0 = CARRY((W1_r_Cnt_Byte_Rom[4] & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[5]~18
W1L0 = (W1_r_Cnt_Byte_Rom[5] & (!W1L0)) # (!W1_r_Cnt_Byte_Rom[5] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[5]~19
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Byte_Rom[5]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[6]~20
W1L0 = W1_r_Cnt_Byte_Rom[6] $ (!W1L0);


--U1L0 is FREQ_1MHz_BLOCK:inst34|Add0~0
U1L0 = U1_r_Cnt[0] $ (VCC);

--U1L0 is FREQ_1MHz_BLOCK:inst34|Add0~1
U1L0 = CARRY(U1_r_Cnt[0]);


--U1L0 is FREQ_1MHz_BLOCK:inst34|Add0~2
U1L0 = (U1_r_Cnt[1] & (!U1L0)) # (!U1_r_Cnt[1] & ((U1L0) # (GND)));

--U1L0 is FREQ_1MHz_BLOCK:inst34|Add0~3
U1L0 = CARRY((!U1L0) # (!U1_r_Cnt[1]));


--U1L0 is FREQ_1MHz_BLOCK:inst34|Add0~4
U1L0 = (U1_r_Cnt[2] & (U1L0 $ (GND))) # (!U1_r_Cnt[2] & (!U1L0 & VCC));

--U1L0 is FREQ_1MHz_BLOCK:inst34|Add0~5
U1L0 = CARRY((U1_r_Cnt[2] & !U1L0));


--U1L0 is FREQ_1MHz_BLOCK:inst34|Add0~6
U1L0 = (U1_r_Cnt[3] & (!U1L0)) # (!U1_r_Cnt[3] & ((U1L0) # (GND)));

--U1L0 is FREQ_1MHz_BLOCK:inst34|Add0~7
U1L0 = CARRY((!U1L0) # (!U1_r_Cnt[3]));


--U1L0 is FREQ_1MHz_BLOCK:inst34|Add0~8
U1L0 = U1_r_Cnt[4] $ (!U1L0);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[0]~7
W1L0 = (W1_r_Cnt_Time125Hz[0] & (Q1_o_kHz $ (VCC))) # (!W1_r_Cnt_Time125Hz[0] & (Q1_o_kHz & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[0]~8
W1L0 = CARRY((W1_r_Cnt_Time125Hz[0] & Q1_o_kHz));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[1]~9
W1L0 = (W1_r_Cnt_Time125Hz[1] & (!W1L0)) # (!W1_r_Cnt_Time125Hz[1] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[1]~10
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Time125Hz[1]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[2]~11
W1L0 = (W1_r_Cnt_Time125Hz[2] & (W1L0 $ (GND))) # (!W1_r_Cnt_Time125Hz[2] & (!W1L0 & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[2]~12
W1L0 = CARRY((W1_r_Cnt_Time125Hz[2] & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[3]~13
W1L0 = (W1_r_Cnt_Time125Hz[3] & (!W1L0)) # (!W1_r_Cnt_Time125Hz[3] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[3]~14
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Time125Hz[3]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[4]~15
W1L0 = (W1_r_Cnt_Time125Hz[4] & (W1L0 $ (GND))) # (!W1_r_Cnt_Time125Hz[4] & (!W1L0 & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[4]~16
W1L0 = CARRY((W1_r_Cnt_Time125Hz[4] & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[5]~17
W1L0 = (W1_r_Cnt_Time125Hz[5] & (!W1L0)) # (!W1_r_Cnt_Time125Hz[5] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[5]~18
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Time125Hz[5]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time125Hz[6]~19
W1L0 = W1_r_Cnt_Time125Hz[6] $ (!W1L0);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[0]~6
W1L0 = (U1_o_MHz & (W1_r_Cnt_Time1MHz_BitHigh[0] $ (VCC))) # (!U1_o_MHz & (W1_r_Cnt_Time1MHz_BitHigh[0] & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[0]~7
W1L0 = CARRY((U1_o_MHz & W1_r_Cnt_Time1MHz_BitHigh[0]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[1]~8
W1L0 = (W1_r_Cnt_Time1MHz_BitHigh[1] & (!W1L0)) # (!W1_r_Cnt_Time1MHz_BitHigh[1] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[1]~9
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Time1MHz_BitHigh[1]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[2]~10
W1L0 = (W1_r_Cnt_Time1MHz_BitHigh[2] & (W1L0 $ (GND))) # (!W1_r_Cnt_Time1MHz_BitHigh[2] & (!W1L0 & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[2]~11
W1L0 = CARRY((W1_r_Cnt_Time1MHz_BitHigh[2] & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[3]~12
W1L0 = (W1_r_Cnt_Time1MHz_BitHigh[3] & (!W1L0)) # (!W1_r_Cnt_Time1MHz_BitHigh[3] & ((W1L0) # (GND)));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[3]~13
W1L0 = CARRY((!W1L0) # (!W1_r_Cnt_Time1MHz_BitHigh[3]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[4]~14
W1L0 = (W1_r_Cnt_Time1MHz_BitHigh[4] & (W1L0 $ (GND))) # (!W1_r_Cnt_Time1MHz_BitHigh[4] & (!W1L0 & VCC));

--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[4]~15
W1L0 = CARRY((W1_r_Cnt_Time1MHz_BitHigh[4] & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Time1MHz_BitHigh[5]~16
W1L0 = W1_r_Cnt_Time1MHz_BitHigh[5] $ (W1L0);


--GC1_q_b[12] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[12]_PORT_A_data_in = C1L0;
GC1_q_b[12]_PORT_A_data_in_reg = DFFE(GC1_q_b[12]_PORT_A_data_in, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[12]_PORT_A_address_reg = DFFE(GC1_q_b[12]_PORT_A_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[12]_PORT_B_address_reg = DFFE(GC1_q_b[12]_PORT_B_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_write_enable = B1L0;
GC1_q_b[12]_PORT_A_write_enable_reg = DFFE(GC1_q_b[12]_PORT_A_write_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[12]_PORT_B_read_enable_reg = DFFE(GC1_q_b[12]_PORT_B_read_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_byte_mask = A1L0;
GC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[12]_PORT_A_byte_mask, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_clock_0 = !CLK_25MHz2;
GC1_q_b[12]_clock_1 = !CLK_25MHz2;
GC1_q_b[12]_PORT_B_data_out = MEMORY(GC1_q_b[12]_PORT_A_data_in_reg, , GC1_q_b[12]_PORT_A_address_reg, GC1_q_b[12]_PORT_B_address_reg, GC1_q_b[12]_PORT_A_write_enable_reg, GC1_q_b[12]_PORT_B_read_enable_reg, GC1_q_b[12]_PORT_A_byte_mask_reg, , GC1_q_b[12]_clock_0, GC1_q_b[12]_clock_1, , , , );
GC1_q_b[12]_PORT_B_data_out_reg = DFFE(GC1_q_b[12]_PORT_B_data_out, GC1_q_b[12]_clock_1, , , );
GC1_q_b[12] = GC1_q_b[12]_PORT_B_data_out_reg[0];


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[0]~11
XB1L0 = (XB1_r_TxTail[0] & (SB1_o_Ready $ (GND))) # (!XB1_r_TxTail[0] & (!SB1_o_Ready & VCC));

--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[0]~12
XB1L0 = CARRY((XB1_r_TxTail[0] & !SB1_o_Ready));


--GC1_q_b[20] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[20]_PORT_A_data_in = C1L0;
GC1_q_b[20]_PORT_A_data_in_reg = DFFE(GC1_q_b[20]_PORT_A_data_in, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[20]_PORT_A_address_reg = DFFE(GC1_q_b[20]_PORT_A_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[20]_PORT_B_address_reg = DFFE(GC1_q_b[20]_PORT_B_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_write_enable = B1L0;
GC1_q_b[20]_PORT_A_write_enable_reg = DFFE(GC1_q_b[20]_PORT_A_write_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[20]_PORT_B_read_enable_reg = DFFE(GC1_q_b[20]_PORT_B_read_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_byte_mask = A1L0;
GC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[20]_PORT_A_byte_mask, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_clock_0 = !CLK_25MHz2;
GC1_q_b[20]_clock_1 = !CLK_25MHz2;
GC1_q_b[20]_PORT_B_data_out = MEMORY(GC1_q_b[20]_PORT_A_data_in_reg, , GC1_q_b[20]_PORT_A_address_reg, GC1_q_b[20]_PORT_B_address_reg, GC1_q_b[20]_PORT_A_write_enable_reg, GC1_q_b[20]_PORT_B_read_enable_reg, GC1_q_b[20]_PORT_A_byte_mask_reg, , GC1_q_b[20]_clock_0, GC1_q_b[20]_clock_1, , , , );
GC1_q_b[20]_PORT_B_data_out_reg = DFFE(GC1_q_b[20]_PORT_B_data_out, GC1_q_b[20]_clock_1, , , );
GC1_q_b[20] = GC1_q_b[20]_PORT_B_data_out_reg[0];


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[1]~13
XB1L0 = (XB1_r_TxTail[1] & (!XB1L0)) # (!XB1_r_TxTail[1] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[1]~14
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[1]));


--GC1_q_b[4] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[4]_PORT_A_data_in = C1L0;
GC1_q_b[4]_PORT_A_data_in_reg = DFFE(GC1_q_b[4]_PORT_A_data_in, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[4]_PORT_A_address_reg = DFFE(GC1_q_b[4]_PORT_A_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[4]_PORT_B_address_reg = DFFE(GC1_q_b[4]_PORT_B_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_write_enable = B1L0;
GC1_q_b[4]_PORT_A_write_enable_reg = DFFE(GC1_q_b[4]_PORT_A_write_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[4]_PORT_B_read_enable_reg = DFFE(GC1_q_b[4]_PORT_B_read_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_byte_mask = A1L0;
GC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[4]_PORT_A_byte_mask, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_clock_0 = !CLK_25MHz2;
GC1_q_b[4]_clock_1 = !CLK_25MHz2;
GC1_q_b[4]_PORT_B_data_out = MEMORY(GC1_q_b[4]_PORT_A_data_in_reg, , GC1_q_b[4]_PORT_A_address_reg, GC1_q_b[4]_PORT_B_address_reg, GC1_q_b[4]_PORT_A_write_enable_reg, GC1_q_b[4]_PORT_B_read_enable_reg, GC1_q_b[4]_PORT_A_byte_mask_reg, , GC1_q_b[4]_clock_0, GC1_q_b[4]_clock_1, , , , );
GC1_q_b[4]_PORT_B_data_out_reg = DFFE(GC1_q_b[4]_PORT_B_data_out, GC1_q_b[4]_clock_1, , , );
GC1_q_b[4] = GC1_q_b[4]_PORT_B_data_out_reg[0];


--GC1_q_b[28] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[28]_PORT_A_data_in = C1L0;
GC1_q_b[28]_PORT_A_data_in_reg = DFFE(GC1_q_b[28]_PORT_A_data_in, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[28]_PORT_A_address_reg = DFFE(GC1_q_b[28]_PORT_A_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[28]_PORT_B_address_reg = DFFE(GC1_q_b[28]_PORT_B_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_write_enable = B1L0;
GC1_q_b[28]_PORT_A_write_enable_reg = DFFE(GC1_q_b[28]_PORT_A_write_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[28]_PORT_B_read_enable_reg = DFFE(GC1_q_b[28]_PORT_B_read_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_byte_mask = A1L0;
GC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[28]_PORT_A_byte_mask, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_clock_0 = !CLK_25MHz2;
GC1_q_b[28]_clock_1 = !CLK_25MHz2;
GC1_q_b[28]_PORT_B_data_out = MEMORY(GC1_q_b[28]_PORT_A_data_in_reg, , GC1_q_b[28]_PORT_A_address_reg, GC1_q_b[28]_PORT_B_address_reg, GC1_q_b[28]_PORT_A_write_enable_reg, GC1_q_b[28]_PORT_B_read_enable_reg, GC1_q_b[28]_PORT_A_byte_mask_reg, , GC1_q_b[28]_clock_0, GC1_q_b[28]_clock_1, , , , );
GC1_q_b[28]_PORT_B_data_out_reg = DFFE(GC1_q_b[28]_PORT_B_data_out, GC1_q_b[28]_clock_1, , , );
GC1_q_b[28] = GC1_q_b[28]_PORT_B_data_out_reg[0];


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[0]~5
SB1L0 = SB1_r_ClkCnt[0] $ (VCC);

--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[0]~6
SB1L0 = CARRY(SB1_r_ClkCnt[0]);


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[1]~8
SB1L0 = (SB1_r_ClkCnt[1] & (!SB1L0)) # (!SB1_r_ClkCnt[1] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[1]~9
SB1L0 = CARRY((!SB1L0) # (!SB1_r_ClkCnt[1]));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[2]~10
SB1L0 = (SB1_r_ClkCnt[2] & (SB1L0 $ (GND))) # (!SB1_r_ClkCnt[2] & (!SB1L0 & VCC));

--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[2]~11
SB1L0 = CARRY((SB1_r_ClkCnt[2] & !SB1L0));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[3]~12
SB1L0 = (SB1_r_ClkCnt[3] & (!SB1L0)) # (!SB1_r_ClkCnt[3] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[3]~13
SB1L0 = CARRY((!SB1L0) # (!SB1_r_ClkCnt[3]));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[4]~14
SB1L0 = SB1_r_ClkCnt[4] $ (!SB1L0);


--GC1_q_b[19] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[19]_PORT_A_data_in = C1L0;
GC1_q_b[19]_PORT_A_data_in_reg = DFFE(GC1_q_b[19]_PORT_A_data_in, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[19]_PORT_A_address_reg = DFFE(GC1_q_b[19]_PORT_A_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[19]_PORT_B_address_reg = DFFE(GC1_q_b[19]_PORT_B_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_write_enable = B1L0;
GC1_q_b[19]_PORT_A_write_enable_reg = DFFE(GC1_q_b[19]_PORT_A_write_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[19]_PORT_B_read_enable_reg = DFFE(GC1_q_b[19]_PORT_B_read_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_byte_mask = A1L0;
GC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[19]_PORT_A_byte_mask, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_clock_0 = !CLK_25MHz2;
GC1_q_b[19]_clock_1 = !CLK_25MHz2;
GC1_q_b[19]_PORT_B_data_out = MEMORY(GC1_q_b[19]_PORT_A_data_in_reg, , GC1_q_b[19]_PORT_A_address_reg, GC1_q_b[19]_PORT_B_address_reg, GC1_q_b[19]_PORT_A_write_enable_reg, GC1_q_b[19]_PORT_B_read_enable_reg, GC1_q_b[19]_PORT_A_byte_mask_reg, , GC1_q_b[19]_clock_0, GC1_q_b[19]_clock_1, , , , );
GC1_q_b[19]_PORT_B_data_out_reg = DFFE(GC1_q_b[19]_PORT_B_data_out, GC1_q_b[19]_clock_1, , , );
GC1_q_b[19] = GC1_q_b[19]_PORT_B_data_out_reg[0];


--GC1_q_b[11] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[11]_PORT_A_data_in = C1L0;
GC1_q_b[11]_PORT_A_data_in_reg = DFFE(GC1_q_b[11]_PORT_A_data_in, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[11]_PORT_A_address_reg = DFFE(GC1_q_b[11]_PORT_A_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[11]_PORT_B_address_reg = DFFE(GC1_q_b[11]_PORT_B_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_write_enable = B1L0;
GC1_q_b[11]_PORT_A_write_enable_reg = DFFE(GC1_q_b[11]_PORT_A_write_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[11]_PORT_B_read_enable_reg = DFFE(GC1_q_b[11]_PORT_B_read_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_byte_mask = A1L0;
GC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[11]_PORT_A_byte_mask, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_clock_0 = !CLK_25MHz2;
GC1_q_b[11]_clock_1 = !CLK_25MHz2;
GC1_q_b[11]_PORT_B_data_out = MEMORY(GC1_q_b[11]_PORT_A_data_in_reg, , GC1_q_b[11]_PORT_A_address_reg, GC1_q_b[11]_PORT_B_address_reg, GC1_q_b[11]_PORT_A_write_enable_reg, GC1_q_b[11]_PORT_B_read_enable_reg, GC1_q_b[11]_PORT_A_byte_mask_reg, , GC1_q_b[11]_clock_0, GC1_q_b[11]_clock_1, , , , );
GC1_q_b[11]_PORT_B_data_out_reg = DFFE(GC1_q_b[11]_PORT_B_data_out, GC1_q_b[11]_clock_1, , , );
GC1_q_b[11] = GC1_q_b[11]_PORT_B_data_out_reg[0];


--GC1_q_b[3] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[3]_PORT_A_data_in = C1L0;
GC1_q_b[3]_PORT_A_data_in_reg = DFFE(GC1_q_b[3]_PORT_A_data_in, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[3]_PORT_A_address_reg = DFFE(GC1_q_b[3]_PORT_A_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[3]_PORT_B_address_reg = DFFE(GC1_q_b[3]_PORT_B_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_write_enable = B1L0;
GC1_q_b[3]_PORT_A_write_enable_reg = DFFE(GC1_q_b[3]_PORT_A_write_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[3]_PORT_B_read_enable_reg = DFFE(GC1_q_b[3]_PORT_B_read_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_byte_mask = A1L0;
GC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[3]_PORT_A_byte_mask, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_clock_0 = !CLK_25MHz2;
GC1_q_b[3]_clock_1 = !CLK_25MHz2;
GC1_q_b[3]_PORT_B_data_out = MEMORY(GC1_q_b[3]_PORT_A_data_in_reg, , GC1_q_b[3]_PORT_A_address_reg, GC1_q_b[3]_PORT_B_address_reg, GC1_q_b[3]_PORT_A_write_enable_reg, GC1_q_b[3]_PORT_B_read_enable_reg, GC1_q_b[3]_PORT_A_byte_mask_reg, , GC1_q_b[3]_clock_0, GC1_q_b[3]_clock_1, , , , );
GC1_q_b[3]_PORT_B_data_out_reg = DFFE(GC1_q_b[3]_PORT_B_data_out, GC1_q_b[3]_clock_1, , , );
GC1_q_b[3] = GC1_q_b[3]_PORT_B_data_out_reg[0];


--GC1_q_b[27] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[27]_PORT_A_data_in = C1L0;
GC1_q_b[27]_PORT_A_data_in_reg = DFFE(GC1_q_b[27]_PORT_A_data_in, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[27]_PORT_A_address_reg = DFFE(GC1_q_b[27]_PORT_A_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[27]_PORT_B_address_reg = DFFE(GC1_q_b[27]_PORT_B_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_write_enable = B1L0;
GC1_q_b[27]_PORT_A_write_enable_reg = DFFE(GC1_q_b[27]_PORT_A_write_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[27]_PORT_B_read_enable_reg = DFFE(GC1_q_b[27]_PORT_B_read_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_byte_mask = A1L0;
GC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[27]_PORT_A_byte_mask, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_clock_0 = !CLK_25MHz2;
GC1_q_b[27]_clock_1 = !CLK_25MHz2;
GC1_q_b[27]_PORT_B_data_out = MEMORY(GC1_q_b[27]_PORT_A_data_in_reg, , GC1_q_b[27]_PORT_A_address_reg, GC1_q_b[27]_PORT_B_address_reg, GC1_q_b[27]_PORT_A_write_enable_reg, GC1_q_b[27]_PORT_B_read_enable_reg, GC1_q_b[27]_PORT_A_byte_mask_reg, , GC1_q_b[27]_clock_0, GC1_q_b[27]_clock_1, , , , );
GC1_q_b[27]_PORT_B_data_out_reg = DFFE(GC1_q_b[27]_PORT_B_data_out, GC1_q_b[27]_clock_1, , , );
GC1_q_b[27] = GC1_q_b[27]_PORT_B_data_out_reg[0];


--GC1_q_b[10] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[10]_PORT_A_data_in = C1L0;
GC1_q_b[10]_PORT_A_data_in_reg = DFFE(GC1_q_b[10]_PORT_A_data_in, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[10]_PORT_A_address_reg = DFFE(GC1_q_b[10]_PORT_A_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[10]_PORT_B_address_reg = DFFE(GC1_q_b[10]_PORT_B_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_write_enable = B1L0;
GC1_q_b[10]_PORT_A_write_enable_reg = DFFE(GC1_q_b[10]_PORT_A_write_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[10]_PORT_B_read_enable_reg = DFFE(GC1_q_b[10]_PORT_B_read_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_byte_mask = A1L0;
GC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[10]_PORT_A_byte_mask, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_clock_0 = !CLK_25MHz2;
GC1_q_b[10]_clock_1 = !CLK_25MHz2;
GC1_q_b[10]_PORT_B_data_out = MEMORY(GC1_q_b[10]_PORT_A_data_in_reg, , GC1_q_b[10]_PORT_A_address_reg, GC1_q_b[10]_PORT_B_address_reg, GC1_q_b[10]_PORT_A_write_enable_reg, GC1_q_b[10]_PORT_B_read_enable_reg, GC1_q_b[10]_PORT_A_byte_mask_reg, , GC1_q_b[10]_clock_0, GC1_q_b[10]_clock_1, , , , );
GC1_q_b[10]_PORT_B_data_out_reg = DFFE(GC1_q_b[10]_PORT_B_data_out, GC1_q_b[10]_clock_1, , , );
GC1_q_b[10] = GC1_q_b[10]_PORT_B_data_out_reg[0];


--GC1_q_b[18] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[18]_PORT_A_data_in = C1L0;
GC1_q_b[18]_PORT_A_data_in_reg = DFFE(GC1_q_b[18]_PORT_A_data_in, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[18]_PORT_A_address_reg = DFFE(GC1_q_b[18]_PORT_A_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[18]_PORT_B_address_reg = DFFE(GC1_q_b[18]_PORT_B_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_write_enable = B1L0;
GC1_q_b[18]_PORT_A_write_enable_reg = DFFE(GC1_q_b[18]_PORT_A_write_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[18]_PORT_B_read_enable_reg = DFFE(GC1_q_b[18]_PORT_B_read_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_byte_mask = A1L0;
GC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[18]_PORT_A_byte_mask, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_clock_0 = !CLK_25MHz2;
GC1_q_b[18]_clock_1 = !CLK_25MHz2;
GC1_q_b[18]_PORT_B_data_out = MEMORY(GC1_q_b[18]_PORT_A_data_in_reg, , GC1_q_b[18]_PORT_A_address_reg, GC1_q_b[18]_PORT_B_address_reg, GC1_q_b[18]_PORT_A_write_enable_reg, GC1_q_b[18]_PORT_B_read_enable_reg, GC1_q_b[18]_PORT_A_byte_mask_reg, , GC1_q_b[18]_clock_0, GC1_q_b[18]_clock_1, , , , );
GC1_q_b[18]_PORT_B_data_out_reg = DFFE(GC1_q_b[18]_PORT_B_data_out, GC1_q_b[18]_clock_1, , , );
GC1_q_b[18] = GC1_q_b[18]_PORT_B_data_out_reg[0];


--GC1_q_b[2] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[2]_PORT_A_data_in = C1L0;
GC1_q_b[2]_PORT_A_data_in_reg = DFFE(GC1_q_b[2]_PORT_A_data_in, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[2]_PORT_A_address_reg = DFFE(GC1_q_b[2]_PORT_A_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[2]_PORT_B_address_reg = DFFE(GC1_q_b[2]_PORT_B_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_write_enable = B1L0;
GC1_q_b[2]_PORT_A_write_enable_reg = DFFE(GC1_q_b[2]_PORT_A_write_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[2]_PORT_B_read_enable_reg = DFFE(GC1_q_b[2]_PORT_B_read_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_byte_mask = A1L0;
GC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[2]_PORT_A_byte_mask, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_clock_0 = !CLK_25MHz2;
GC1_q_b[2]_clock_1 = !CLK_25MHz2;
GC1_q_b[2]_PORT_B_data_out = MEMORY(GC1_q_b[2]_PORT_A_data_in_reg, , GC1_q_b[2]_PORT_A_address_reg, GC1_q_b[2]_PORT_B_address_reg, GC1_q_b[2]_PORT_A_write_enable_reg, GC1_q_b[2]_PORT_B_read_enable_reg, GC1_q_b[2]_PORT_A_byte_mask_reg, , GC1_q_b[2]_clock_0, GC1_q_b[2]_clock_1, , , , );
GC1_q_b[2]_PORT_B_data_out_reg = DFFE(GC1_q_b[2]_PORT_B_data_out, GC1_q_b[2]_clock_1, , , );
GC1_q_b[2] = GC1_q_b[2]_PORT_B_data_out_reg[0];


--GC1_q_b[26] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[26]_PORT_A_data_in = C1L0;
GC1_q_b[26]_PORT_A_data_in_reg = DFFE(GC1_q_b[26]_PORT_A_data_in, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[26]_PORT_A_address_reg = DFFE(GC1_q_b[26]_PORT_A_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[26]_PORT_B_address_reg = DFFE(GC1_q_b[26]_PORT_B_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_write_enable = B1L0;
GC1_q_b[26]_PORT_A_write_enable_reg = DFFE(GC1_q_b[26]_PORT_A_write_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[26]_PORT_B_read_enable_reg = DFFE(GC1_q_b[26]_PORT_B_read_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_byte_mask = A1L0;
GC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[26]_PORT_A_byte_mask, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_clock_0 = !CLK_25MHz2;
GC1_q_b[26]_clock_1 = !CLK_25MHz2;
GC1_q_b[26]_PORT_B_data_out = MEMORY(GC1_q_b[26]_PORT_A_data_in_reg, , GC1_q_b[26]_PORT_A_address_reg, GC1_q_b[26]_PORT_B_address_reg, GC1_q_b[26]_PORT_A_write_enable_reg, GC1_q_b[26]_PORT_B_read_enable_reg, GC1_q_b[26]_PORT_A_byte_mask_reg, , GC1_q_b[26]_clock_0, GC1_q_b[26]_clock_1, , , , );
GC1_q_b[26]_PORT_B_data_out_reg = DFFE(GC1_q_b[26]_PORT_B_data_out, GC1_q_b[26]_clock_1, , , );
GC1_q_b[26] = GC1_q_b[26]_PORT_B_data_out_reg[0];


--GC1_q_b[21] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[21]_PORT_A_data_in = C1L0;
GC1_q_b[21]_PORT_A_data_in_reg = DFFE(GC1_q_b[21]_PORT_A_data_in, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[21]_PORT_A_address_reg = DFFE(GC1_q_b[21]_PORT_A_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[21]_PORT_B_address_reg = DFFE(GC1_q_b[21]_PORT_B_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_write_enable = B1L0;
GC1_q_b[21]_PORT_A_write_enable_reg = DFFE(GC1_q_b[21]_PORT_A_write_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[21]_PORT_B_read_enable_reg = DFFE(GC1_q_b[21]_PORT_B_read_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_byte_mask = A1L0;
GC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[21]_PORT_A_byte_mask, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_clock_0 = !CLK_25MHz2;
GC1_q_b[21]_clock_1 = !CLK_25MHz2;
GC1_q_b[21]_PORT_B_data_out = MEMORY(GC1_q_b[21]_PORT_A_data_in_reg, , GC1_q_b[21]_PORT_A_address_reg, GC1_q_b[21]_PORT_B_address_reg, GC1_q_b[21]_PORT_A_write_enable_reg, GC1_q_b[21]_PORT_B_read_enable_reg, GC1_q_b[21]_PORT_A_byte_mask_reg, , GC1_q_b[21]_clock_0, GC1_q_b[21]_clock_1, , , , );
GC1_q_b[21]_PORT_B_data_out_reg = DFFE(GC1_q_b[21]_PORT_B_data_out, GC1_q_b[21]_clock_1, , , );
GC1_q_b[21] = GC1_q_b[21]_PORT_B_data_out_reg[0];


--GC1_q_b[13] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[13]_PORT_A_data_in = C1L0;
GC1_q_b[13]_PORT_A_data_in_reg = DFFE(GC1_q_b[13]_PORT_A_data_in, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[13]_PORT_A_address_reg = DFFE(GC1_q_b[13]_PORT_A_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[13]_PORT_B_address_reg = DFFE(GC1_q_b[13]_PORT_B_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_write_enable = B1L0;
GC1_q_b[13]_PORT_A_write_enable_reg = DFFE(GC1_q_b[13]_PORT_A_write_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[13]_PORT_B_read_enable_reg = DFFE(GC1_q_b[13]_PORT_B_read_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_byte_mask = A1L0;
GC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[13]_PORT_A_byte_mask, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_clock_0 = !CLK_25MHz2;
GC1_q_b[13]_clock_1 = !CLK_25MHz2;
GC1_q_b[13]_PORT_B_data_out = MEMORY(GC1_q_b[13]_PORT_A_data_in_reg, , GC1_q_b[13]_PORT_A_address_reg, GC1_q_b[13]_PORT_B_address_reg, GC1_q_b[13]_PORT_A_write_enable_reg, GC1_q_b[13]_PORT_B_read_enable_reg, GC1_q_b[13]_PORT_A_byte_mask_reg, , GC1_q_b[13]_clock_0, GC1_q_b[13]_clock_1, , , , );
GC1_q_b[13]_PORT_B_data_out_reg = DFFE(GC1_q_b[13]_PORT_B_data_out, GC1_q_b[13]_clock_1, , , );
GC1_q_b[13] = GC1_q_b[13]_PORT_B_data_out_reg[0];


--GC1_q_b[5] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[5]_PORT_A_data_in = C1L0;
GC1_q_b[5]_PORT_A_data_in_reg = DFFE(GC1_q_b[5]_PORT_A_data_in, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[5]_PORT_A_address_reg = DFFE(GC1_q_b[5]_PORT_A_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[5]_PORT_B_address_reg = DFFE(GC1_q_b[5]_PORT_B_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_write_enable = B1L0;
GC1_q_b[5]_PORT_A_write_enable_reg = DFFE(GC1_q_b[5]_PORT_A_write_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[5]_PORT_B_read_enable_reg = DFFE(GC1_q_b[5]_PORT_B_read_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_byte_mask = A1L0;
GC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[5]_PORT_A_byte_mask, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_clock_0 = !CLK_25MHz2;
GC1_q_b[5]_clock_1 = !CLK_25MHz2;
GC1_q_b[5]_PORT_B_data_out = MEMORY(GC1_q_b[5]_PORT_A_data_in_reg, , GC1_q_b[5]_PORT_A_address_reg, GC1_q_b[5]_PORT_B_address_reg, GC1_q_b[5]_PORT_A_write_enable_reg, GC1_q_b[5]_PORT_B_read_enable_reg, GC1_q_b[5]_PORT_A_byte_mask_reg, , GC1_q_b[5]_clock_0, GC1_q_b[5]_clock_1, , , , );
GC1_q_b[5]_PORT_B_data_out_reg = DFFE(GC1_q_b[5]_PORT_B_data_out, GC1_q_b[5]_clock_1, , , );
GC1_q_b[5] = GC1_q_b[5]_PORT_B_data_out_reg[0];


--GC1_q_b[29] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[29]_PORT_A_data_in = C1L0;
GC1_q_b[29]_PORT_A_data_in_reg = DFFE(GC1_q_b[29]_PORT_A_data_in, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[29]_PORT_A_address_reg = DFFE(GC1_q_b[29]_PORT_A_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[29]_PORT_B_address_reg = DFFE(GC1_q_b[29]_PORT_B_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_write_enable = B1L0;
GC1_q_b[29]_PORT_A_write_enable_reg = DFFE(GC1_q_b[29]_PORT_A_write_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[29]_PORT_B_read_enable_reg = DFFE(GC1_q_b[29]_PORT_B_read_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_byte_mask = A1L0;
GC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[29]_PORT_A_byte_mask, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_clock_0 = !CLK_25MHz2;
GC1_q_b[29]_clock_1 = !CLK_25MHz2;
GC1_q_b[29]_PORT_B_data_out = MEMORY(GC1_q_b[29]_PORT_A_data_in_reg, , GC1_q_b[29]_PORT_A_address_reg, GC1_q_b[29]_PORT_B_address_reg, GC1_q_b[29]_PORT_A_write_enable_reg, GC1_q_b[29]_PORT_B_read_enable_reg, GC1_q_b[29]_PORT_A_byte_mask_reg, , GC1_q_b[29]_clock_0, GC1_q_b[29]_clock_1, , , , );
GC1_q_b[29]_PORT_B_data_out_reg = DFFE(GC1_q_b[29]_PORT_B_data_out, GC1_q_b[29]_clock_1, , , );
GC1_q_b[29] = GC1_q_b[29]_PORT_B_data_out_reg[0];


--GC1_q_b[23] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[23]_PORT_A_data_in = C1L0;
GC1_q_b[23]_PORT_A_data_in_reg = DFFE(GC1_q_b[23]_PORT_A_data_in, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[23]_PORT_A_address_reg = DFFE(GC1_q_b[23]_PORT_A_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[23]_PORT_B_address_reg = DFFE(GC1_q_b[23]_PORT_B_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_write_enable = B1L0;
GC1_q_b[23]_PORT_A_write_enable_reg = DFFE(GC1_q_b[23]_PORT_A_write_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[23]_PORT_B_read_enable_reg = DFFE(GC1_q_b[23]_PORT_B_read_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_byte_mask = A1L0;
GC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[23]_PORT_A_byte_mask, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_clock_0 = !CLK_25MHz2;
GC1_q_b[23]_clock_1 = !CLK_25MHz2;
GC1_q_b[23]_PORT_B_data_out = MEMORY(GC1_q_b[23]_PORT_A_data_in_reg, , GC1_q_b[23]_PORT_A_address_reg, GC1_q_b[23]_PORT_B_address_reg, GC1_q_b[23]_PORT_A_write_enable_reg, GC1_q_b[23]_PORT_B_read_enable_reg, GC1_q_b[23]_PORT_A_byte_mask_reg, , GC1_q_b[23]_clock_0, GC1_q_b[23]_clock_1, , , , );
GC1_q_b[23]_PORT_B_data_out_reg = DFFE(GC1_q_b[23]_PORT_B_data_out, GC1_q_b[23]_clock_1, , , );
GC1_q_b[23] = GC1_q_b[23]_PORT_B_data_out_reg[0];


--GC1_q_b[15] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[15]_PORT_A_data_in = C1L0;
GC1_q_b[15]_PORT_A_data_in_reg = DFFE(GC1_q_b[15]_PORT_A_data_in, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[15]_PORT_A_address_reg = DFFE(GC1_q_b[15]_PORT_A_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[15]_PORT_B_address_reg = DFFE(GC1_q_b[15]_PORT_B_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_write_enable = B1L0;
GC1_q_b[15]_PORT_A_write_enable_reg = DFFE(GC1_q_b[15]_PORT_A_write_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[15]_PORT_B_read_enable_reg = DFFE(GC1_q_b[15]_PORT_B_read_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_byte_mask = A1L0;
GC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[15]_PORT_A_byte_mask, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_clock_0 = !CLK_25MHz2;
GC1_q_b[15]_clock_1 = !CLK_25MHz2;
GC1_q_b[15]_PORT_B_data_out = MEMORY(GC1_q_b[15]_PORT_A_data_in_reg, , GC1_q_b[15]_PORT_A_address_reg, GC1_q_b[15]_PORT_B_address_reg, GC1_q_b[15]_PORT_A_write_enable_reg, GC1_q_b[15]_PORT_B_read_enable_reg, GC1_q_b[15]_PORT_A_byte_mask_reg, , GC1_q_b[15]_clock_0, GC1_q_b[15]_clock_1, , , , );
GC1_q_b[15]_PORT_B_data_out_reg = DFFE(GC1_q_b[15]_PORT_B_data_out, GC1_q_b[15]_clock_1, , , );
GC1_q_b[15] = GC1_q_b[15]_PORT_B_data_out_reg[0];


--GC1_q_b[7] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[7]_PORT_A_data_in = C1L0;
GC1_q_b[7]_PORT_A_data_in_reg = DFFE(GC1_q_b[7]_PORT_A_data_in, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[7]_PORT_A_address_reg = DFFE(GC1_q_b[7]_PORT_A_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[7]_PORT_B_address_reg = DFFE(GC1_q_b[7]_PORT_B_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_write_enable = B1L0;
GC1_q_b[7]_PORT_A_write_enable_reg = DFFE(GC1_q_b[7]_PORT_A_write_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[7]_PORT_B_read_enable_reg = DFFE(GC1_q_b[7]_PORT_B_read_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_byte_mask = A1L0;
GC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[7]_PORT_A_byte_mask, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_clock_0 = !CLK_25MHz2;
GC1_q_b[7]_clock_1 = !CLK_25MHz2;
GC1_q_b[7]_PORT_B_data_out = MEMORY(GC1_q_b[7]_PORT_A_data_in_reg, , GC1_q_b[7]_PORT_A_address_reg, GC1_q_b[7]_PORT_B_address_reg, GC1_q_b[7]_PORT_A_write_enable_reg, GC1_q_b[7]_PORT_B_read_enable_reg, GC1_q_b[7]_PORT_A_byte_mask_reg, , GC1_q_b[7]_clock_0, GC1_q_b[7]_clock_1, , , , );
GC1_q_b[7]_PORT_B_data_out_reg = DFFE(GC1_q_b[7]_PORT_B_data_out, GC1_q_b[7]_clock_1, , , );
GC1_q_b[7] = GC1_q_b[7]_PORT_B_data_out_reg[0];


--GC1_q_b[31] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[31]_PORT_A_data_in = C1L0;
GC1_q_b[31]_PORT_A_data_in_reg = DFFE(GC1_q_b[31]_PORT_A_data_in, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[31]_PORT_A_address_reg = DFFE(GC1_q_b[31]_PORT_A_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[31]_PORT_B_address_reg = DFFE(GC1_q_b[31]_PORT_B_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_write_enable = B1L0;
GC1_q_b[31]_PORT_A_write_enable_reg = DFFE(GC1_q_b[31]_PORT_A_write_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[31]_PORT_B_read_enable_reg = DFFE(GC1_q_b[31]_PORT_B_read_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_byte_mask = A1L0;
GC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[31]_PORT_A_byte_mask, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_clock_0 = !CLK_25MHz2;
GC1_q_b[31]_clock_1 = !CLK_25MHz2;
GC1_q_b[31]_PORT_B_data_out = MEMORY(GC1_q_b[31]_PORT_A_data_in_reg, , GC1_q_b[31]_PORT_A_address_reg, GC1_q_b[31]_PORT_B_address_reg, GC1_q_b[31]_PORT_A_write_enable_reg, GC1_q_b[31]_PORT_B_read_enable_reg, GC1_q_b[31]_PORT_A_byte_mask_reg, , GC1_q_b[31]_clock_0, GC1_q_b[31]_clock_1, , , , );
GC1_q_b[31]_PORT_B_data_out_reg = DFFE(GC1_q_b[31]_PORT_B_data_out, GC1_q_b[31]_clock_1, , , );
GC1_q_b[31] = GC1_q_b[31]_PORT_B_data_out_reg[0];


--GC1_q_b[14] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[14]_PORT_A_data_in = C1L0;
GC1_q_b[14]_PORT_A_data_in_reg = DFFE(GC1_q_b[14]_PORT_A_data_in, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[14]_PORT_A_address_reg = DFFE(GC1_q_b[14]_PORT_A_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[14]_PORT_B_address_reg = DFFE(GC1_q_b[14]_PORT_B_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_write_enable = B1L0;
GC1_q_b[14]_PORT_A_write_enable_reg = DFFE(GC1_q_b[14]_PORT_A_write_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[14]_PORT_B_read_enable_reg = DFFE(GC1_q_b[14]_PORT_B_read_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_byte_mask = A1L0;
GC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[14]_PORT_A_byte_mask, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_clock_0 = !CLK_25MHz2;
GC1_q_b[14]_clock_1 = !CLK_25MHz2;
GC1_q_b[14]_PORT_B_data_out = MEMORY(GC1_q_b[14]_PORT_A_data_in_reg, , GC1_q_b[14]_PORT_A_address_reg, GC1_q_b[14]_PORT_B_address_reg, GC1_q_b[14]_PORT_A_write_enable_reg, GC1_q_b[14]_PORT_B_read_enable_reg, GC1_q_b[14]_PORT_A_byte_mask_reg, , GC1_q_b[14]_clock_0, GC1_q_b[14]_clock_1, , , , );
GC1_q_b[14]_PORT_B_data_out_reg = DFFE(GC1_q_b[14]_PORT_B_data_out, GC1_q_b[14]_clock_1, , , );
GC1_q_b[14] = GC1_q_b[14]_PORT_B_data_out_reg[0];


--GC1_q_b[22] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[22]_PORT_A_data_in = C1L0;
GC1_q_b[22]_PORT_A_data_in_reg = DFFE(GC1_q_b[22]_PORT_A_data_in, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[22]_PORT_A_address_reg = DFFE(GC1_q_b[22]_PORT_A_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[22]_PORT_B_address_reg = DFFE(GC1_q_b[22]_PORT_B_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_write_enable = B1L0;
GC1_q_b[22]_PORT_A_write_enable_reg = DFFE(GC1_q_b[22]_PORT_A_write_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[22]_PORT_B_read_enable_reg = DFFE(GC1_q_b[22]_PORT_B_read_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_byte_mask = A1L0;
GC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[22]_PORT_A_byte_mask, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_clock_0 = !CLK_25MHz2;
GC1_q_b[22]_clock_1 = !CLK_25MHz2;
GC1_q_b[22]_PORT_B_data_out = MEMORY(GC1_q_b[22]_PORT_A_data_in_reg, , GC1_q_b[22]_PORT_A_address_reg, GC1_q_b[22]_PORT_B_address_reg, GC1_q_b[22]_PORT_A_write_enable_reg, GC1_q_b[22]_PORT_B_read_enable_reg, GC1_q_b[22]_PORT_A_byte_mask_reg, , GC1_q_b[22]_clock_0, GC1_q_b[22]_clock_1, , , , );
GC1_q_b[22]_PORT_B_data_out_reg = DFFE(GC1_q_b[22]_PORT_B_data_out, GC1_q_b[22]_clock_1, , , );
GC1_q_b[22] = GC1_q_b[22]_PORT_B_data_out_reg[0];


--GC1_q_b[6] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[6]_PORT_A_data_in = C1L0;
GC1_q_b[6]_PORT_A_data_in_reg = DFFE(GC1_q_b[6]_PORT_A_data_in, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[6]_PORT_A_address_reg = DFFE(GC1_q_b[6]_PORT_A_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[6]_PORT_B_address_reg = DFFE(GC1_q_b[6]_PORT_B_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_write_enable = B1L0;
GC1_q_b[6]_PORT_A_write_enable_reg = DFFE(GC1_q_b[6]_PORT_A_write_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[6]_PORT_B_read_enable_reg = DFFE(GC1_q_b[6]_PORT_B_read_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_byte_mask = A1L0;
GC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[6]_PORT_A_byte_mask, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_clock_0 = !CLK_25MHz2;
GC1_q_b[6]_clock_1 = !CLK_25MHz2;
GC1_q_b[6]_PORT_B_data_out = MEMORY(GC1_q_b[6]_PORT_A_data_in_reg, , GC1_q_b[6]_PORT_A_address_reg, GC1_q_b[6]_PORT_B_address_reg, GC1_q_b[6]_PORT_A_write_enable_reg, GC1_q_b[6]_PORT_B_read_enable_reg, GC1_q_b[6]_PORT_A_byte_mask_reg, , GC1_q_b[6]_clock_0, GC1_q_b[6]_clock_1, , , , );
GC1_q_b[6]_PORT_B_data_out_reg = DFFE(GC1_q_b[6]_PORT_B_data_out, GC1_q_b[6]_clock_1, , , );
GC1_q_b[6] = GC1_q_b[6]_PORT_B_data_out_reg[0];


--GC1_q_b[30] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[30]_PORT_A_data_in = C1L0;
GC1_q_b[30]_PORT_A_data_in_reg = DFFE(GC1_q_b[30]_PORT_A_data_in, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[30]_PORT_A_address_reg = DFFE(GC1_q_b[30]_PORT_A_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[30]_PORT_B_address_reg = DFFE(GC1_q_b[30]_PORT_B_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_write_enable = B1L0;
GC1_q_b[30]_PORT_A_write_enable_reg = DFFE(GC1_q_b[30]_PORT_A_write_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[30]_PORT_B_read_enable_reg = DFFE(GC1_q_b[30]_PORT_B_read_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_byte_mask = A1L0;
GC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[30]_PORT_A_byte_mask, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_clock_0 = !CLK_25MHz2;
GC1_q_b[30]_clock_1 = !CLK_25MHz2;
GC1_q_b[30]_PORT_B_data_out = MEMORY(GC1_q_b[30]_PORT_A_data_in_reg, , GC1_q_b[30]_PORT_A_address_reg, GC1_q_b[30]_PORT_B_address_reg, GC1_q_b[30]_PORT_A_write_enable_reg, GC1_q_b[30]_PORT_B_read_enable_reg, GC1_q_b[30]_PORT_A_byte_mask_reg, , GC1_q_b[30]_clock_0, GC1_q_b[30]_clock_1, , , , );
GC1_q_b[30]_PORT_B_data_out_reg = DFFE(GC1_q_b[30]_PORT_B_data_out, GC1_q_b[30]_clock_1, , , );
GC1_q_b[30] = GC1_q_b[30]_PORT_B_data_out_reg[0];


--GC1_q_b[17] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[17]_PORT_A_data_in = C1L0;
GC1_q_b[17]_PORT_A_data_in_reg = DFFE(GC1_q_b[17]_PORT_A_data_in, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[17]_PORT_A_address_reg = DFFE(GC1_q_b[17]_PORT_A_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[17]_PORT_B_address_reg = DFFE(GC1_q_b[17]_PORT_B_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_write_enable = B1L0;
GC1_q_b[17]_PORT_A_write_enable_reg = DFFE(GC1_q_b[17]_PORT_A_write_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[17]_PORT_B_read_enable_reg = DFFE(GC1_q_b[17]_PORT_B_read_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_byte_mask = A1L0;
GC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[17]_PORT_A_byte_mask, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_clock_0 = !CLK_25MHz2;
GC1_q_b[17]_clock_1 = !CLK_25MHz2;
GC1_q_b[17]_PORT_B_data_out = MEMORY(GC1_q_b[17]_PORT_A_data_in_reg, , GC1_q_b[17]_PORT_A_address_reg, GC1_q_b[17]_PORT_B_address_reg, GC1_q_b[17]_PORT_A_write_enable_reg, GC1_q_b[17]_PORT_B_read_enable_reg, GC1_q_b[17]_PORT_A_byte_mask_reg, , GC1_q_b[17]_clock_0, GC1_q_b[17]_clock_1, , , , );
GC1_q_b[17]_PORT_B_data_out_reg = DFFE(GC1_q_b[17]_PORT_B_data_out, GC1_q_b[17]_clock_1, , , );
GC1_q_b[17] = GC1_q_b[17]_PORT_B_data_out_reg[0];


--GC1_q_b[9] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[9]_PORT_A_data_in = C1L0;
GC1_q_b[9]_PORT_A_data_in_reg = DFFE(GC1_q_b[9]_PORT_A_data_in, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[9]_PORT_A_address_reg = DFFE(GC1_q_b[9]_PORT_A_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[9]_PORT_B_address_reg = DFFE(GC1_q_b[9]_PORT_B_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_write_enable = B1L0;
GC1_q_b[9]_PORT_A_write_enable_reg = DFFE(GC1_q_b[9]_PORT_A_write_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[9]_PORT_B_read_enable_reg = DFFE(GC1_q_b[9]_PORT_B_read_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_byte_mask = A1L0;
GC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[9]_PORT_A_byte_mask, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_clock_0 = !CLK_25MHz2;
GC1_q_b[9]_clock_1 = !CLK_25MHz2;
GC1_q_b[9]_PORT_B_data_out = MEMORY(GC1_q_b[9]_PORT_A_data_in_reg, , GC1_q_b[9]_PORT_A_address_reg, GC1_q_b[9]_PORT_B_address_reg, GC1_q_b[9]_PORT_A_write_enable_reg, GC1_q_b[9]_PORT_B_read_enable_reg, GC1_q_b[9]_PORT_A_byte_mask_reg, , GC1_q_b[9]_clock_0, GC1_q_b[9]_clock_1, , , , );
GC1_q_b[9]_PORT_B_data_out_reg = DFFE(GC1_q_b[9]_PORT_B_data_out, GC1_q_b[9]_clock_1, , , );
GC1_q_b[9] = GC1_q_b[9]_PORT_B_data_out_reg[0];


--GC1_q_b[1] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[1]_PORT_A_data_in = C1L0;
GC1_q_b[1]_PORT_A_data_in_reg = DFFE(GC1_q_b[1]_PORT_A_data_in, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[1]_PORT_A_address_reg = DFFE(GC1_q_b[1]_PORT_A_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[1]_PORT_B_address_reg = DFFE(GC1_q_b[1]_PORT_B_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_write_enable = B1L0;
GC1_q_b[1]_PORT_A_write_enable_reg = DFFE(GC1_q_b[1]_PORT_A_write_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[1]_PORT_B_read_enable_reg = DFFE(GC1_q_b[1]_PORT_B_read_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_byte_mask = A1L0;
GC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[1]_PORT_A_byte_mask, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_clock_0 = !CLK_25MHz2;
GC1_q_b[1]_clock_1 = !CLK_25MHz2;
GC1_q_b[1]_PORT_B_data_out = MEMORY(GC1_q_b[1]_PORT_A_data_in_reg, , GC1_q_b[1]_PORT_A_address_reg, GC1_q_b[1]_PORT_B_address_reg, GC1_q_b[1]_PORT_A_write_enable_reg, GC1_q_b[1]_PORT_B_read_enable_reg, GC1_q_b[1]_PORT_A_byte_mask_reg, , GC1_q_b[1]_clock_0, GC1_q_b[1]_clock_1, , , , );
GC1_q_b[1]_PORT_B_data_out_reg = DFFE(GC1_q_b[1]_PORT_B_data_out, GC1_q_b[1]_clock_1, , , );
GC1_q_b[1] = GC1_q_b[1]_PORT_B_data_out_reg[0];


--GC1_q_b[25] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[25]_PORT_A_data_in = C1L0;
GC1_q_b[25]_PORT_A_data_in_reg = DFFE(GC1_q_b[25]_PORT_A_data_in, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[25]_PORT_A_address_reg = DFFE(GC1_q_b[25]_PORT_A_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[25]_PORT_B_address_reg = DFFE(GC1_q_b[25]_PORT_B_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_write_enable = B1L0;
GC1_q_b[25]_PORT_A_write_enable_reg = DFFE(GC1_q_b[25]_PORT_A_write_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[25]_PORT_B_read_enable_reg = DFFE(GC1_q_b[25]_PORT_B_read_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_byte_mask = A1L0;
GC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[25]_PORT_A_byte_mask, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_clock_0 = !CLK_25MHz2;
GC1_q_b[25]_clock_1 = !CLK_25MHz2;
GC1_q_b[25]_PORT_B_data_out = MEMORY(GC1_q_b[25]_PORT_A_data_in_reg, , GC1_q_b[25]_PORT_A_address_reg, GC1_q_b[25]_PORT_B_address_reg, GC1_q_b[25]_PORT_A_write_enable_reg, GC1_q_b[25]_PORT_B_read_enable_reg, GC1_q_b[25]_PORT_A_byte_mask_reg, , GC1_q_b[25]_clock_0, GC1_q_b[25]_clock_1, , , , );
GC1_q_b[25]_PORT_B_data_out_reg = DFFE(GC1_q_b[25]_PORT_B_data_out, GC1_q_b[25]_clock_1, , , );
GC1_q_b[25] = GC1_q_b[25]_PORT_B_data_out_reg[0];


--GC1_q_b[8] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[8]_PORT_A_data_in = C1L0;
GC1_q_b[8]_PORT_A_data_in_reg = DFFE(GC1_q_b[8]_PORT_A_data_in, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[8]_PORT_A_address_reg = DFFE(GC1_q_b[8]_PORT_A_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[8]_PORT_B_address_reg = DFFE(GC1_q_b[8]_PORT_B_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_write_enable = B1L0;
GC1_q_b[8]_PORT_A_write_enable_reg = DFFE(GC1_q_b[8]_PORT_A_write_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[8]_PORT_B_read_enable_reg = DFFE(GC1_q_b[8]_PORT_B_read_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_byte_mask = A1L0;
GC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[8]_PORT_A_byte_mask, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_clock_0 = !CLK_25MHz2;
GC1_q_b[8]_clock_1 = !CLK_25MHz2;
GC1_q_b[8]_PORT_B_data_out = MEMORY(GC1_q_b[8]_PORT_A_data_in_reg, , GC1_q_b[8]_PORT_A_address_reg, GC1_q_b[8]_PORT_B_address_reg, GC1_q_b[8]_PORT_A_write_enable_reg, GC1_q_b[8]_PORT_B_read_enable_reg, GC1_q_b[8]_PORT_A_byte_mask_reg, , GC1_q_b[8]_clock_0, GC1_q_b[8]_clock_1, , , , );
GC1_q_b[8]_PORT_B_data_out_reg = DFFE(GC1_q_b[8]_PORT_B_data_out, GC1_q_b[8]_clock_1, , , );
GC1_q_b[8] = GC1_q_b[8]_PORT_B_data_out_reg[0];


--GC1_q_b[16] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[16]_PORT_A_data_in = C1L0;
GC1_q_b[16]_PORT_A_data_in_reg = DFFE(GC1_q_b[16]_PORT_A_data_in, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[16]_PORT_A_address_reg = DFFE(GC1_q_b[16]_PORT_A_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[16]_PORT_B_address_reg = DFFE(GC1_q_b[16]_PORT_B_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_write_enable = B1L0;
GC1_q_b[16]_PORT_A_write_enable_reg = DFFE(GC1_q_b[16]_PORT_A_write_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[16]_PORT_B_read_enable_reg = DFFE(GC1_q_b[16]_PORT_B_read_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_byte_mask = A1L0;
GC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[16]_PORT_A_byte_mask, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_clock_0 = !CLK_25MHz2;
GC1_q_b[16]_clock_1 = !CLK_25MHz2;
GC1_q_b[16]_PORT_B_data_out = MEMORY(GC1_q_b[16]_PORT_A_data_in_reg, , GC1_q_b[16]_PORT_A_address_reg, GC1_q_b[16]_PORT_B_address_reg, GC1_q_b[16]_PORT_A_write_enable_reg, GC1_q_b[16]_PORT_B_read_enable_reg, GC1_q_b[16]_PORT_A_byte_mask_reg, , GC1_q_b[16]_clock_0, GC1_q_b[16]_clock_1, , , , );
GC1_q_b[16]_PORT_B_data_out_reg = DFFE(GC1_q_b[16]_PORT_B_data_out, GC1_q_b[16]_clock_1, , , );
GC1_q_b[16] = GC1_q_b[16]_PORT_B_data_out_reg[0];


--GC1_q_b[0] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[0]_PORT_A_data_in = C1L0;
GC1_q_b[0]_PORT_A_data_in_reg = DFFE(GC1_q_b[0]_PORT_A_data_in, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[0]_PORT_A_address_reg = DFFE(GC1_q_b[0]_PORT_A_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[0]_PORT_B_address_reg = DFFE(GC1_q_b[0]_PORT_B_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_write_enable = B1L0;
GC1_q_b[0]_PORT_A_write_enable_reg = DFFE(GC1_q_b[0]_PORT_A_write_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[0]_PORT_B_read_enable_reg = DFFE(GC1_q_b[0]_PORT_B_read_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_byte_mask = A1L0;
GC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[0]_PORT_A_byte_mask, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_clock_0 = !CLK_25MHz2;
GC1_q_b[0]_clock_1 = !CLK_25MHz2;
GC1_q_b[0]_PORT_B_data_out = MEMORY(GC1_q_b[0]_PORT_A_data_in_reg, , GC1_q_b[0]_PORT_A_address_reg, GC1_q_b[0]_PORT_B_address_reg, GC1_q_b[0]_PORT_A_write_enable_reg, GC1_q_b[0]_PORT_B_read_enable_reg, GC1_q_b[0]_PORT_A_byte_mask_reg, , GC1_q_b[0]_clock_0, GC1_q_b[0]_clock_1, , , , );
GC1_q_b[0]_PORT_B_data_out_reg = DFFE(GC1_q_b[0]_PORT_B_data_out, GC1_q_b[0]_clock_1, , , );
GC1_q_b[0] = GC1_q_b[0]_PORT_B_data_out_reg[0];


--GC1_q_b[24] is UART_MODULE:inst5|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[24]_PORT_A_data_in = C1L0;
GC1_q_b[24]_PORT_A_data_in_reg = DFFE(GC1_q_b[24]_PORT_A_data_in, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[24]_PORT_A_address_reg = DFFE(GC1_q_b[24]_PORT_A_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[24]_PORT_B_address_reg = DFFE(GC1_q_b[24]_PORT_B_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_write_enable = B1L0;
GC1_q_b[24]_PORT_A_write_enable_reg = DFFE(GC1_q_b[24]_PORT_A_write_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[24]_PORT_B_read_enable_reg = DFFE(GC1_q_b[24]_PORT_B_read_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_byte_mask = A1L0;
GC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[24]_PORT_A_byte_mask, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_clock_0 = !CLK_25MHz2;
GC1_q_b[24]_clock_1 = !CLK_25MHz2;
GC1_q_b[24]_PORT_B_data_out = MEMORY(GC1_q_b[24]_PORT_A_data_in_reg, , GC1_q_b[24]_PORT_A_address_reg, GC1_q_b[24]_PORT_B_address_reg, GC1_q_b[24]_PORT_A_write_enable_reg, GC1_q_b[24]_PORT_B_read_enable_reg, GC1_q_b[24]_PORT_A_byte_mask_reg, , GC1_q_b[24]_clock_0, GC1_q_b[24]_clock_1, , , , );
GC1_q_b[24]_PORT_B_data_out_reg = DFFE(GC1_q_b[24]_PORT_B_data_out, GC1_q_b[24]_clock_1, , , );
GC1_q_b[24] = GC1_q_b[24]_PORT_B_data_out_reg[0];


--GC1_q_b[12] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[12]_PORT_A_data_in = C1L0;
GC1_q_b[12]_PORT_A_data_in_reg = DFFE(GC1_q_b[12]_PORT_A_data_in, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[12]_PORT_A_address_reg = DFFE(GC1_q_b[12]_PORT_A_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[12]_PORT_B_address_reg = DFFE(GC1_q_b[12]_PORT_B_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_write_enable = B1L0;
GC1_q_b[12]_PORT_A_write_enable_reg = DFFE(GC1_q_b[12]_PORT_A_write_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[12]_PORT_B_read_enable_reg = DFFE(GC1_q_b[12]_PORT_B_read_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_byte_mask = A1L0;
GC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[12]_PORT_A_byte_mask, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_clock_0 = !CLK_25MHz2;
GC1_q_b[12]_clock_1 = !CLK_25MHz2;
GC1_q_b[12]_PORT_B_data_out = MEMORY(GC1_q_b[12]_PORT_A_data_in_reg, , GC1_q_b[12]_PORT_A_address_reg, GC1_q_b[12]_PORT_B_address_reg, GC1_q_b[12]_PORT_A_write_enable_reg, GC1_q_b[12]_PORT_B_read_enable_reg, GC1_q_b[12]_PORT_A_byte_mask_reg, , GC1_q_b[12]_clock_0, GC1_q_b[12]_clock_1, , , , );
GC1_q_b[12]_PORT_B_data_out_reg = DFFE(GC1_q_b[12]_PORT_B_data_out, GC1_q_b[12]_clock_1, , , );
GC1_q_b[12] = GC1_q_b[12]_PORT_B_data_out_reg[0];


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[0]~11
XB1L0 = (XB1_r_TxTail[0] & (SB1_o_Ready $ (GND))) # (!XB1_r_TxTail[0] & (!SB1_o_Ready & VCC));

--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[0]~12
XB1L0 = CARRY((XB1_r_TxTail[0] & !SB1_o_Ready));


--GC1_q_b[20] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[20]_PORT_A_data_in = C1L0;
GC1_q_b[20]_PORT_A_data_in_reg = DFFE(GC1_q_b[20]_PORT_A_data_in, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[20]_PORT_A_address_reg = DFFE(GC1_q_b[20]_PORT_A_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[20]_PORT_B_address_reg = DFFE(GC1_q_b[20]_PORT_B_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_write_enable = B1L0;
GC1_q_b[20]_PORT_A_write_enable_reg = DFFE(GC1_q_b[20]_PORT_A_write_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[20]_PORT_B_read_enable_reg = DFFE(GC1_q_b[20]_PORT_B_read_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_byte_mask = A1L0;
GC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[20]_PORT_A_byte_mask, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_clock_0 = !CLK_25MHz2;
GC1_q_b[20]_clock_1 = !CLK_25MHz2;
GC1_q_b[20]_PORT_B_data_out = MEMORY(GC1_q_b[20]_PORT_A_data_in_reg, , GC1_q_b[20]_PORT_A_address_reg, GC1_q_b[20]_PORT_B_address_reg, GC1_q_b[20]_PORT_A_write_enable_reg, GC1_q_b[20]_PORT_B_read_enable_reg, GC1_q_b[20]_PORT_A_byte_mask_reg, , GC1_q_b[20]_clock_0, GC1_q_b[20]_clock_1, , , , );
GC1_q_b[20]_PORT_B_data_out_reg = DFFE(GC1_q_b[20]_PORT_B_data_out, GC1_q_b[20]_clock_1, , , );
GC1_q_b[20] = GC1_q_b[20]_PORT_B_data_out_reg[0];


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[1]~13
XB1L0 = (XB1_r_TxTail[1] & (!XB1L0)) # (!XB1_r_TxTail[1] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[1]~14
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[1]));


--GC1_q_b[4] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[4]_PORT_A_data_in = C1L0;
GC1_q_b[4]_PORT_A_data_in_reg = DFFE(GC1_q_b[4]_PORT_A_data_in, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[4]_PORT_A_address_reg = DFFE(GC1_q_b[4]_PORT_A_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[4]_PORT_B_address_reg = DFFE(GC1_q_b[4]_PORT_B_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_write_enable = B1L0;
GC1_q_b[4]_PORT_A_write_enable_reg = DFFE(GC1_q_b[4]_PORT_A_write_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[4]_PORT_B_read_enable_reg = DFFE(GC1_q_b[4]_PORT_B_read_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_byte_mask = A1L0;
GC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[4]_PORT_A_byte_mask, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_clock_0 = !CLK_25MHz2;
GC1_q_b[4]_clock_1 = !CLK_25MHz2;
GC1_q_b[4]_PORT_B_data_out = MEMORY(GC1_q_b[4]_PORT_A_data_in_reg, , GC1_q_b[4]_PORT_A_address_reg, GC1_q_b[4]_PORT_B_address_reg, GC1_q_b[4]_PORT_A_write_enable_reg, GC1_q_b[4]_PORT_B_read_enable_reg, GC1_q_b[4]_PORT_A_byte_mask_reg, , GC1_q_b[4]_clock_0, GC1_q_b[4]_clock_1, , , , );
GC1_q_b[4]_PORT_B_data_out_reg = DFFE(GC1_q_b[4]_PORT_B_data_out, GC1_q_b[4]_clock_1, , , );
GC1_q_b[4] = GC1_q_b[4]_PORT_B_data_out_reg[0];


--GC1_q_b[28] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[28]_PORT_A_data_in = C1L0;
GC1_q_b[28]_PORT_A_data_in_reg = DFFE(GC1_q_b[28]_PORT_A_data_in, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[28]_PORT_A_address_reg = DFFE(GC1_q_b[28]_PORT_A_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[28]_PORT_B_address_reg = DFFE(GC1_q_b[28]_PORT_B_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_write_enable = B1L0;
GC1_q_b[28]_PORT_A_write_enable_reg = DFFE(GC1_q_b[28]_PORT_A_write_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[28]_PORT_B_read_enable_reg = DFFE(GC1_q_b[28]_PORT_B_read_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_byte_mask = A1L0;
GC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[28]_PORT_A_byte_mask, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_clock_0 = !CLK_25MHz2;
GC1_q_b[28]_clock_1 = !CLK_25MHz2;
GC1_q_b[28]_PORT_B_data_out = MEMORY(GC1_q_b[28]_PORT_A_data_in_reg, , GC1_q_b[28]_PORT_A_address_reg, GC1_q_b[28]_PORT_B_address_reg, GC1_q_b[28]_PORT_A_write_enable_reg, GC1_q_b[28]_PORT_B_read_enable_reg, GC1_q_b[28]_PORT_A_byte_mask_reg, , GC1_q_b[28]_clock_0, GC1_q_b[28]_clock_1, , , , );
GC1_q_b[28]_PORT_B_data_out_reg = DFFE(GC1_q_b[28]_PORT_B_data_out, GC1_q_b[28]_clock_1, , , );
GC1_q_b[28] = GC1_q_b[28]_PORT_B_data_out_reg[0];


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[0]~5
SB1L0 = SB1_r_ClkCnt[0] $ (VCC);

--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[0]~6
SB1L0 = CARRY(SB1_r_ClkCnt[0]);


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[1]~8
SB1L0 = (SB1_r_ClkCnt[1] & (!SB1L0)) # (!SB1_r_ClkCnt[1] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[1]~9
SB1L0 = CARRY((!SB1L0) # (!SB1_r_ClkCnt[1]));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[2]~10
SB1L0 = (SB1_r_ClkCnt[2] & (SB1L0 $ (GND))) # (!SB1_r_ClkCnt[2] & (!SB1L0 & VCC));

--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[2]~11
SB1L0 = CARRY((SB1_r_ClkCnt[2] & !SB1L0));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[3]~12
SB1L0 = (SB1_r_ClkCnt[3] & (!SB1L0)) # (!SB1_r_ClkCnt[3] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[3]~13
SB1L0 = CARRY((!SB1L0) # (!SB1_r_ClkCnt[3]));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[4]~14
SB1L0 = SB1_r_ClkCnt[4] $ (!SB1L0);


--GC1_q_b[19] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[19]_PORT_A_data_in = C1L0;
GC1_q_b[19]_PORT_A_data_in_reg = DFFE(GC1_q_b[19]_PORT_A_data_in, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[19]_PORT_A_address_reg = DFFE(GC1_q_b[19]_PORT_A_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[19]_PORT_B_address_reg = DFFE(GC1_q_b[19]_PORT_B_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_write_enable = B1L0;
GC1_q_b[19]_PORT_A_write_enable_reg = DFFE(GC1_q_b[19]_PORT_A_write_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[19]_PORT_B_read_enable_reg = DFFE(GC1_q_b[19]_PORT_B_read_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_byte_mask = A1L0;
GC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[19]_PORT_A_byte_mask, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_clock_0 = !CLK_25MHz2;
GC1_q_b[19]_clock_1 = !CLK_25MHz2;
GC1_q_b[19]_PORT_B_data_out = MEMORY(GC1_q_b[19]_PORT_A_data_in_reg, , GC1_q_b[19]_PORT_A_address_reg, GC1_q_b[19]_PORT_B_address_reg, GC1_q_b[19]_PORT_A_write_enable_reg, GC1_q_b[19]_PORT_B_read_enable_reg, GC1_q_b[19]_PORT_A_byte_mask_reg, , GC1_q_b[19]_clock_0, GC1_q_b[19]_clock_1, , , , );
GC1_q_b[19]_PORT_B_data_out_reg = DFFE(GC1_q_b[19]_PORT_B_data_out, GC1_q_b[19]_clock_1, , , );
GC1_q_b[19] = GC1_q_b[19]_PORT_B_data_out_reg[0];


--GC1_q_b[11] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[11]_PORT_A_data_in = C1L0;
GC1_q_b[11]_PORT_A_data_in_reg = DFFE(GC1_q_b[11]_PORT_A_data_in, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[11]_PORT_A_address_reg = DFFE(GC1_q_b[11]_PORT_A_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[11]_PORT_B_address_reg = DFFE(GC1_q_b[11]_PORT_B_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_write_enable = B1L0;
GC1_q_b[11]_PORT_A_write_enable_reg = DFFE(GC1_q_b[11]_PORT_A_write_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[11]_PORT_B_read_enable_reg = DFFE(GC1_q_b[11]_PORT_B_read_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_byte_mask = A1L0;
GC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[11]_PORT_A_byte_mask, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_clock_0 = !CLK_25MHz2;
GC1_q_b[11]_clock_1 = !CLK_25MHz2;
GC1_q_b[11]_PORT_B_data_out = MEMORY(GC1_q_b[11]_PORT_A_data_in_reg, , GC1_q_b[11]_PORT_A_address_reg, GC1_q_b[11]_PORT_B_address_reg, GC1_q_b[11]_PORT_A_write_enable_reg, GC1_q_b[11]_PORT_B_read_enable_reg, GC1_q_b[11]_PORT_A_byte_mask_reg, , GC1_q_b[11]_clock_0, GC1_q_b[11]_clock_1, , , , );
GC1_q_b[11]_PORT_B_data_out_reg = DFFE(GC1_q_b[11]_PORT_B_data_out, GC1_q_b[11]_clock_1, , , );
GC1_q_b[11] = GC1_q_b[11]_PORT_B_data_out_reg[0];


--GC1_q_b[3] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[3]_PORT_A_data_in = C1L0;
GC1_q_b[3]_PORT_A_data_in_reg = DFFE(GC1_q_b[3]_PORT_A_data_in, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[3]_PORT_A_address_reg = DFFE(GC1_q_b[3]_PORT_A_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[3]_PORT_B_address_reg = DFFE(GC1_q_b[3]_PORT_B_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_write_enable = B1L0;
GC1_q_b[3]_PORT_A_write_enable_reg = DFFE(GC1_q_b[3]_PORT_A_write_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[3]_PORT_B_read_enable_reg = DFFE(GC1_q_b[3]_PORT_B_read_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_byte_mask = A1L0;
GC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[3]_PORT_A_byte_mask, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_clock_0 = !CLK_25MHz2;
GC1_q_b[3]_clock_1 = !CLK_25MHz2;
GC1_q_b[3]_PORT_B_data_out = MEMORY(GC1_q_b[3]_PORT_A_data_in_reg, , GC1_q_b[3]_PORT_A_address_reg, GC1_q_b[3]_PORT_B_address_reg, GC1_q_b[3]_PORT_A_write_enable_reg, GC1_q_b[3]_PORT_B_read_enable_reg, GC1_q_b[3]_PORT_A_byte_mask_reg, , GC1_q_b[3]_clock_0, GC1_q_b[3]_clock_1, , , , );
GC1_q_b[3]_PORT_B_data_out_reg = DFFE(GC1_q_b[3]_PORT_B_data_out, GC1_q_b[3]_clock_1, , , );
GC1_q_b[3] = GC1_q_b[3]_PORT_B_data_out_reg[0];


--GC1_q_b[27] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[27]_PORT_A_data_in = C1L0;
GC1_q_b[27]_PORT_A_data_in_reg = DFFE(GC1_q_b[27]_PORT_A_data_in, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[27]_PORT_A_address_reg = DFFE(GC1_q_b[27]_PORT_A_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[27]_PORT_B_address_reg = DFFE(GC1_q_b[27]_PORT_B_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_write_enable = B1L0;
GC1_q_b[27]_PORT_A_write_enable_reg = DFFE(GC1_q_b[27]_PORT_A_write_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[27]_PORT_B_read_enable_reg = DFFE(GC1_q_b[27]_PORT_B_read_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_byte_mask = A1L0;
GC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[27]_PORT_A_byte_mask, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_clock_0 = !CLK_25MHz2;
GC1_q_b[27]_clock_1 = !CLK_25MHz2;
GC1_q_b[27]_PORT_B_data_out = MEMORY(GC1_q_b[27]_PORT_A_data_in_reg, , GC1_q_b[27]_PORT_A_address_reg, GC1_q_b[27]_PORT_B_address_reg, GC1_q_b[27]_PORT_A_write_enable_reg, GC1_q_b[27]_PORT_B_read_enable_reg, GC1_q_b[27]_PORT_A_byte_mask_reg, , GC1_q_b[27]_clock_0, GC1_q_b[27]_clock_1, , , , );
GC1_q_b[27]_PORT_B_data_out_reg = DFFE(GC1_q_b[27]_PORT_B_data_out, GC1_q_b[27]_clock_1, , , );
GC1_q_b[27] = GC1_q_b[27]_PORT_B_data_out_reg[0];


--GC1_q_b[10] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[10]_PORT_A_data_in = C1L0;
GC1_q_b[10]_PORT_A_data_in_reg = DFFE(GC1_q_b[10]_PORT_A_data_in, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[10]_PORT_A_address_reg = DFFE(GC1_q_b[10]_PORT_A_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[10]_PORT_B_address_reg = DFFE(GC1_q_b[10]_PORT_B_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_write_enable = B1L0;
GC1_q_b[10]_PORT_A_write_enable_reg = DFFE(GC1_q_b[10]_PORT_A_write_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[10]_PORT_B_read_enable_reg = DFFE(GC1_q_b[10]_PORT_B_read_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_byte_mask = A1L0;
GC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[10]_PORT_A_byte_mask, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_clock_0 = !CLK_25MHz2;
GC1_q_b[10]_clock_1 = !CLK_25MHz2;
GC1_q_b[10]_PORT_B_data_out = MEMORY(GC1_q_b[10]_PORT_A_data_in_reg, , GC1_q_b[10]_PORT_A_address_reg, GC1_q_b[10]_PORT_B_address_reg, GC1_q_b[10]_PORT_A_write_enable_reg, GC1_q_b[10]_PORT_B_read_enable_reg, GC1_q_b[10]_PORT_A_byte_mask_reg, , GC1_q_b[10]_clock_0, GC1_q_b[10]_clock_1, , , , );
GC1_q_b[10]_PORT_B_data_out_reg = DFFE(GC1_q_b[10]_PORT_B_data_out, GC1_q_b[10]_clock_1, , , );
GC1_q_b[10] = GC1_q_b[10]_PORT_B_data_out_reg[0];


--GC1_q_b[18] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[18]_PORT_A_data_in = C1L0;
GC1_q_b[18]_PORT_A_data_in_reg = DFFE(GC1_q_b[18]_PORT_A_data_in, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[18]_PORT_A_address_reg = DFFE(GC1_q_b[18]_PORT_A_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[18]_PORT_B_address_reg = DFFE(GC1_q_b[18]_PORT_B_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_write_enable = B1L0;
GC1_q_b[18]_PORT_A_write_enable_reg = DFFE(GC1_q_b[18]_PORT_A_write_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[18]_PORT_B_read_enable_reg = DFFE(GC1_q_b[18]_PORT_B_read_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_byte_mask = A1L0;
GC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[18]_PORT_A_byte_mask, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_clock_0 = !CLK_25MHz2;
GC1_q_b[18]_clock_1 = !CLK_25MHz2;
GC1_q_b[18]_PORT_B_data_out = MEMORY(GC1_q_b[18]_PORT_A_data_in_reg, , GC1_q_b[18]_PORT_A_address_reg, GC1_q_b[18]_PORT_B_address_reg, GC1_q_b[18]_PORT_A_write_enable_reg, GC1_q_b[18]_PORT_B_read_enable_reg, GC1_q_b[18]_PORT_A_byte_mask_reg, , GC1_q_b[18]_clock_0, GC1_q_b[18]_clock_1, , , , );
GC1_q_b[18]_PORT_B_data_out_reg = DFFE(GC1_q_b[18]_PORT_B_data_out, GC1_q_b[18]_clock_1, , , );
GC1_q_b[18] = GC1_q_b[18]_PORT_B_data_out_reg[0];


--GC1_q_b[2] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[2]_PORT_A_data_in = C1L0;
GC1_q_b[2]_PORT_A_data_in_reg = DFFE(GC1_q_b[2]_PORT_A_data_in, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[2]_PORT_A_address_reg = DFFE(GC1_q_b[2]_PORT_A_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[2]_PORT_B_address_reg = DFFE(GC1_q_b[2]_PORT_B_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_write_enable = B1L0;
GC1_q_b[2]_PORT_A_write_enable_reg = DFFE(GC1_q_b[2]_PORT_A_write_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[2]_PORT_B_read_enable_reg = DFFE(GC1_q_b[2]_PORT_B_read_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_byte_mask = A1L0;
GC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[2]_PORT_A_byte_mask, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_clock_0 = !CLK_25MHz2;
GC1_q_b[2]_clock_1 = !CLK_25MHz2;
GC1_q_b[2]_PORT_B_data_out = MEMORY(GC1_q_b[2]_PORT_A_data_in_reg, , GC1_q_b[2]_PORT_A_address_reg, GC1_q_b[2]_PORT_B_address_reg, GC1_q_b[2]_PORT_A_write_enable_reg, GC1_q_b[2]_PORT_B_read_enable_reg, GC1_q_b[2]_PORT_A_byte_mask_reg, , GC1_q_b[2]_clock_0, GC1_q_b[2]_clock_1, , , , );
GC1_q_b[2]_PORT_B_data_out_reg = DFFE(GC1_q_b[2]_PORT_B_data_out, GC1_q_b[2]_clock_1, , , );
GC1_q_b[2] = GC1_q_b[2]_PORT_B_data_out_reg[0];


--GC1_q_b[26] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[26]_PORT_A_data_in = C1L0;
GC1_q_b[26]_PORT_A_data_in_reg = DFFE(GC1_q_b[26]_PORT_A_data_in, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[26]_PORT_A_address_reg = DFFE(GC1_q_b[26]_PORT_A_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[26]_PORT_B_address_reg = DFFE(GC1_q_b[26]_PORT_B_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_write_enable = B1L0;
GC1_q_b[26]_PORT_A_write_enable_reg = DFFE(GC1_q_b[26]_PORT_A_write_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[26]_PORT_B_read_enable_reg = DFFE(GC1_q_b[26]_PORT_B_read_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_byte_mask = A1L0;
GC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[26]_PORT_A_byte_mask, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_clock_0 = !CLK_25MHz2;
GC1_q_b[26]_clock_1 = !CLK_25MHz2;
GC1_q_b[26]_PORT_B_data_out = MEMORY(GC1_q_b[26]_PORT_A_data_in_reg, , GC1_q_b[26]_PORT_A_address_reg, GC1_q_b[26]_PORT_B_address_reg, GC1_q_b[26]_PORT_A_write_enable_reg, GC1_q_b[26]_PORT_B_read_enable_reg, GC1_q_b[26]_PORT_A_byte_mask_reg, , GC1_q_b[26]_clock_0, GC1_q_b[26]_clock_1, , , , );
GC1_q_b[26]_PORT_B_data_out_reg = DFFE(GC1_q_b[26]_PORT_B_data_out, GC1_q_b[26]_clock_1, , , );
GC1_q_b[26] = GC1_q_b[26]_PORT_B_data_out_reg[0];


--GC1_q_b[21] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[21]_PORT_A_data_in = C1L0;
GC1_q_b[21]_PORT_A_data_in_reg = DFFE(GC1_q_b[21]_PORT_A_data_in, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[21]_PORT_A_address_reg = DFFE(GC1_q_b[21]_PORT_A_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[21]_PORT_B_address_reg = DFFE(GC1_q_b[21]_PORT_B_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_write_enable = B1L0;
GC1_q_b[21]_PORT_A_write_enable_reg = DFFE(GC1_q_b[21]_PORT_A_write_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[21]_PORT_B_read_enable_reg = DFFE(GC1_q_b[21]_PORT_B_read_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_byte_mask = A1L0;
GC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[21]_PORT_A_byte_mask, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_clock_0 = !CLK_25MHz2;
GC1_q_b[21]_clock_1 = !CLK_25MHz2;
GC1_q_b[21]_PORT_B_data_out = MEMORY(GC1_q_b[21]_PORT_A_data_in_reg, , GC1_q_b[21]_PORT_A_address_reg, GC1_q_b[21]_PORT_B_address_reg, GC1_q_b[21]_PORT_A_write_enable_reg, GC1_q_b[21]_PORT_B_read_enable_reg, GC1_q_b[21]_PORT_A_byte_mask_reg, , GC1_q_b[21]_clock_0, GC1_q_b[21]_clock_1, , , , );
GC1_q_b[21]_PORT_B_data_out_reg = DFFE(GC1_q_b[21]_PORT_B_data_out, GC1_q_b[21]_clock_1, , , );
GC1_q_b[21] = GC1_q_b[21]_PORT_B_data_out_reg[0];


--GC1_q_b[13] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[13]_PORT_A_data_in = C1L0;
GC1_q_b[13]_PORT_A_data_in_reg = DFFE(GC1_q_b[13]_PORT_A_data_in, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[13]_PORT_A_address_reg = DFFE(GC1_q_b[13]_PORT_A_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[13]_PORT_B_address_reg = DFFE(GC1_q_b[13]_PORT_B_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_write_enable = B1L0;
GC1_q_b[13]_PORT_A_write_enable_reg = DFFE(GC1_q_b[13]_PORT_A_write_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[13]_PORT_B_read_enable_reg = DFFE(GC1_q_b[13]_PORT_B_read_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_byte_mask = A1L0;
GC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[13]_PORT_A_byte_mask, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_clock_0 = !CLK_25MHz2;
GC1_q_b[13]_clock_1 = !CLK_25MHz2;
GC1_q_b[13]_PORT_B_data_out = MEMORY(GC1_q_b[13]_PORT_A_data_in_reg, , GC1_q_b[13]_PORT_A_address_reg, GC1_q_b[13]_PORT_B_address_reg, GC1_q_b[13]_PORT_A_write_enable_reg, GC1_q_b[13]_PORT_B_read_enable_reg, GC1_q_b[13]_PORT_A_byte_mask_reg, , GC1_q_b[13]_clock_0, GC1_q_b[13]_clock_1, , , , );
GC1_q_b[13]_PORT_B_data_out_reg = DFFE(GC1_q_b[13]_PORT_B_data_out, GC1_q_b[13]_clock_1, , , );
GC1_q_b[13] = GC1_q_b[13]_PORT_B_data_out_reg[0];


--GC1_q_b[5] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[5]_PORT_A_data_in = C1L0;
GC1_q_b[5]_PORT_A_data_in_reg = DFFE(GC1_q_b[5]_PORT_A_data_in, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[5]_PORT_A_address_reg = DFFE(GC1_q_b[5]_PORT_A_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[5]_PORT_B_address_reg = DFFE(GC1_q_b[5]_PORT_B_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_write_enable = B1L0;
GC1_q_b[5]_PORT_A_write_enable_reg = DFFE(GC1_q_b[5]_PORT_A_write_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[5]_PORT_B_read_enable_reg = DFFE(GC1_q_b[5]_PORT_B_read_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_byte_mask = A1L0;
GC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[5]_PORT_A_byte_mask, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_clock_0 = !CLK_25MHz2;
GC1_q_b[5]_clock_1 = !CLK_25MHz2;
GC1_q_b[5]_PORT_B_data_out = MEMORY(GC1_q_b[5]_PORT_A_data_in_reg, , GC1_q_b[5]_PORT_A_address_reg, GC1_q_b[5]_PORT_B_address_reg, GC1_q_b[5]_PORT_A_write_enable_reg, GC1_q_b[5]_PORT_B_read_enable_reg, GC1_q_b[5]_PORT_A_byte_mask_reg, , GC1_q_b[5]_clock_0, GC1_q_b[5]_clock_1, , , , );
GC1_q_b[5]_PORT_B_data_out_reg = DFFE(GC1_q_b[5]_PORT_B_data_out, GC1_q_b[5]_clock_1, , , );
GC1_q_b[5] = GC1_q_b[5]_PORT_B_data_out_reg[0];


--GC1_q_b[29] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[29]_PORT_A_data_in = C1L0;
GC1_q_b[29]_PORT_A_data_in_reg = DFFE(GC1_q_b[29]_PORT_A_data_in, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[29]_PORT_A_address_reg = DFFE(GC1_q_b[29]_PORT_A_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[29]_PORT_B_address_reg = DFFE(GC1_q_b[29]_PORT_B_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_write_enable = B1L0;
GC1_q_b[29]_PORT_A_write_enable_reg = DFFE(GC1_q_b[29]_PORT_A_write_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[29]_PORT_B_read_enable_reg = DFFE(GC1_q_b[29]_PORT_B_read_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_byte_mask = A1L0;
GC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[29]_PORT_A_byte_mask, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_clock_0 = !CLK_25MHz2;
GC1_q_b[29]_clock_1 = !CLK_25MHz2;
GC1_q_b[29]_PORT_B_data_out = MEMORY(GC1_q_b[29]_PORT_A_data_in_reg, , GC1_q_b[29]_PORT_A_address_reg, GC1_q_b[29]_PORT_B_address_reg, GC1_q_b[29]_PORT_A_write_enable_reg, GC1_q_b[29]_PORT_B_read_enable_reg, GC1_q_b[29]_PORT_A_byte_mask_reg, , GC1_q_b[29]_clock_0, GC1_q_b[29]_clock_1, , , , );
GC1_q_b[29]_PORT_B_data_out_reg = DFFE(GC1_q_b[29]_PORT_B_data_out, GC1_q_b[29]_clock_1, , , );
GC1_q_b[29] = GC1_q_b[29]_PORT_B_data_out_reg[0];


--GC1_q_b[23] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[23]_PORT_A_data_in = C1L0;
GC1_q_b[23]_PORT_A_data_in_reg = DFFE(GC1_q_b[23]_PORT_A_data_in, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[23]_PORT_A_address_reg = DFFE(GC1_q_b[23]_PORT_A_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[23]_PORT_B_address_reg = DFFE(GC1_q_b[23]_PORT_B_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_write_enable = B1L0;
GC1_q_b[23]_PORT_A_write_enable_reg = DFFE(GC1_q_b[23]_PORT_A_write_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[23]_PORT_B_read_enable_reg = DFFE(GC1_q_b[23]_PORT_B_read_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_byte_mask = A1L0;
GC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[23]_PORT_A_byte_mask, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_clock_0 = !CLK_25MHz2;
GC1_q_b[23]_clock_1 = !CLK_25MHz2;
GC1_q_b[23]_PORT_B_data_out = MEMORY(GC1_q_b[23]_PORT_A_data_in_reg, , GC1_q_b[23]_PORT_A_address_reg, GC1_q_b[23]_PORT_B_address_reg, GC1_q_b[23]_PORT_A_write_enable_reg, GC1_q_b[23]_PORT_B_read_enable_reg, GC1_q_b[23]_PORT_A_byte_mask_reg, , GC1_q_b[23]_clock_0, GC1_q_b[23]_clock_1, , , , );
GC1_q_b[23]_PORT_B_data_out_reg = DFFE(GC1_q_b[23]_PORT_B_data_out, GC1_q_b[23]_clock_1, , , );
GC1_q_b[23] = GC1_q_b[23]_PORT_B_data_out_reg[0];


--GC1_q_b[15] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[15]_PORT_A_data_in = C1L0;
GC1_q_b[15]_PORT_A_data_in_reg = DFFE(GC1_q_b[15]_PORT_A_data_in, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[15]_PORT_A_address_reg = DFFE(GC1_q_b[15]_PORT_A_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[15]_PORT_B_address_reg = DFFE(GC1_q_b[15]_PORT_B_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_write_enable = B1L0;
GC1_q_b[15]_PORT_A_write_enable_reg = DFFE(GC1_q_b[15]_PORT_A_write_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[15]_PORT_B_read_enable_reg = DFFE(GC1_q_b[15]_PORT_B_read_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_byte_mask = A1L0;
GC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[15]_PORT_A_byte_mask, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_clock_0 = !CLK_25MHz2;
GC1_q_b[15]_clock_1 = !CLK_25MHz2;
GC1_q_b[15]_PORT_B_data_out = MEMORY(GC1_q_b[15]_PORT_A_data_in_reg, , GC1_q_b[15]_PORT_A_address_reg, GC1_q_b[15]_PORT_B_address_reg, GC1_q_b[15]_PORT_A_write_enable_reg, GC1_q_b[15]_PORT_B_read_enable_reg, GC1_q_b[15]_PORT_A_byte_mask_reg, , GC1_q_b[15]_clock_0, GC1_q_b[15]_clock_1, , , , );
GC1_q_b[15]_PORT_B_data_out_reg = DFFE(GC1_q_b[15]_PORT_B_data_out, GC1_q_b[15]_clock_1, , , );
GC1_q_b[15] = GC1_q_b[15]_PORT_B_data_out_reg[0];


--GC1_q_b[7] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[7]_PORT_A_data_in = C1L0;
GC1_q_b[7]_PORT_A_data_in_reg = DFFE(GC1_q_b[7]_PORT_A_data_in, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[7]_PORT_A_address_reg = DFFE(GC1_q_b[7]_PORT_A_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[7]_PORT_B_address_reg = DFFE(GC1_q_b[7]_PORT_B_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_write_enable = B1L0;
GC1_q_b[7]_PORT_A_write_enable_reg = DFFE(GC1_q_b[7]_PORT_A_write_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[7]_PORT_B_read_enable_reg = DFFE(GC1_q_b[7]_PORT_B_read_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_byte_mask = A1L0;
GC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[7]_PORT_A_byte_mask, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_clock_0 = !CLK_25MHz2;
GC1_q_b[7]_clock_1 = !CLK_25MHz2;
GC1_q_b[7]_PORT_B_data_out = MEMORY(GC1_q_b[7]_PORT_A_data_in_reg, , GC1_q_b[7]_PORT_A_address_reg, GC1_q_b[7]_PORT_B_address_reg, GC1_q_b[7]_PORT_A_write_enable_reg, GC1_q_b[7]_PORT_B_read_enable_reg, GC1_q_b[7]_PORT_A_byte_mask_reg, , GC1_q_b[7]_clock_0, GC1_q_b[7]_clock_1, , , , );
GC1_q_b[7]_PORT_B_data_out_reg = DFFE(GC1_q_b[7]_PORT_B_data_out, GC1_q_b[7]_clock_1, , , );
GC1_q_b[7] = GC1_q_b[7]_PORT_B_data_out_reg[0];


--GC1_q_b[31] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[31]_PORT_A_data_in = C1L0;
GC1_q_b[31]_PORT_A_data_in_reg = DFFE(GC1_q_b[31]_PORT_A_data_in, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[31]_PORT_A_address_reg = DFFE(GC1_q_b[31]_PORT_A_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[31]_PORT_B_address_reg = DFFE(GC1_q_b[31]_PORT_B_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_write_enable = B1L0;
GC1_q_b[31]_PORT_A_write_enable_reg = DFFE(GC1_q_b[31]_PORT_A_write_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[31]_PORT_B_read_enable_reg = DFFE(GC1_q_b[31]_PORT_B_read_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_byte_mask = A1L0;
GC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[31]_PORT_A_byte_mask, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_clock_0 = !CLK_25MHz2;
GC1_q_b[31]_clock_1 = !CLK_25MHz2;
GC1_q_b[31]_PORT_B_data_out = MEMORY(GC1_q_b[31]_PORT_A_data_in_reg, , GC1_q_b[31]_PORT_A_address_reg, GC1_q_b[31]_PORT_B_address_reg, GC1_q_b[31]_PORT_A_write_enable_reg, GC1_q_b[31]_PORT_B_read_enable_reg, GC1_q_b[31]_PORT_A_byte_mask_reg, , GC1_q_b[31]_clock_0, GC1_q_b[31]_clock_1, , , , );
GC1_q_b[31]_PORT_B_data_out_reg = DFFE(GC1_q_b[31]_PORT_B_data_out, GC1_q_b[31]_clock_1, , , );
GC1_q_b[31] = GC1_q_b[31]_PORT_B_data_out_reg[0];


--GC1_q_b[14] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[14]_PORT_A_data_in = C1L0;
GC1_q_b[14]_PORT_A_data_in_reg = DFFE(GC1_q_b[14]_PORT_A_data_in, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[14]_PORT_A_address_reg = DFFE(GC1_q_b[14]_PORT_A_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[14]_PORT_B_address_reg = DFFE(GC1_q_b[14]_PORT_B_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_write_enable = B1L0;
GC1_q_b[14]_PORT_A_write_enable_reg = DFFE(GC1_q_b[14]_PORT_A_write_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[14]_PORT_B_read_enable_reg = DFFE(GC1_q_b[14]_PORT_B_read_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_byte_mask = A1L0;
GC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[14]_PORT_A_byte_mask, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_clock_0 = !CLK_25MHz2;
GC1_q_b[14]_clock_1 = !CLK_25MHz2;
GC1_q_b[14]_PORT_B_data_out = MEMORY(GC1_q_b[14]_PORT_A_data_in_reg, , GC1_q_b[14]_PORT_A_address_reg, GC1_q_b[14]_PORT_B_address_reg, GC1_q_b[14]_PORT_A_write_enable_reg, GC1_q_b[14]_PORT_B_read_enable_reg, GC1_q_b[14]_PORT_A_byte_mask_reg, , GC1_q_b[14]_clock_0, GC1_q_b[14]_clock_1, , , , );
GC1_q_b[14]_PORT_B_data_out_reg = DFFE(GC1_q_b[14]_PORT_B_data_out, GC1_q_b[14]_clock_1, , , );
GC1_q_b[14] = GC1_q_b[14]_PORT_B_data_out_reg[0];


--GC1_q_b[22] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[22]_PORT_A_data_in = C1L0;
GC1_q_b[22]_PORT_A_data_in_reg = DFFE(GC1_q_b[22]_PORT_A_data_in, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[22]_PORT_A_address_reg = DFFE(GC1_q_b[22]_PORT_A_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[22]_PORT_B_address_reg = DFFE(GC1_q_b[22]_PORT_B_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_write_enable = B1L0;
GC1_q_b[22]_PORT_A_write_enable_reg = DFFE(GC1_q_b[22]_PORT_A_write_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[22]_PORT_B_read_enable_reg = DFFE(GC1_q_b[22]_PORT_B_read_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_byte_mask = A1L0;
GC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[22]_PORT_A_byte_mask, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_clock_0 = !CLK_25MHz2;
GC1_q_b[22]_clock_1 = !CLK_25MHz2;
GC1_q_b[22]_PORT_B_data_out = MEMORY(GC1_q_b[22]_PORT_A_data_in_reg, , GC1_q_b[22]_PORT_A_address_reg, GC1_q_b[22]_PORT_B_address_reg, GC1_q_b[22]_PORT_A_write_enable_reg, GC1_q_b[22]_PORT_B_read_enable_reg, GC1_q_b[22]_PORT_A_byte_mask_reg, , GC1_q_b[22]_clock_0, GC1_q_b[22]_clock_1, , , , );
GC1_q_b[22]_PORT_B_data_out_reg = DFFE(GC1_q_b[22]_PORT_B_data_out, GC1_q_b[22]_clock_1, , , );
GC1_q_b[22] = GC1_q_b[22]_PORT_B_data_out_reg[0];


--GC1_q_b[6] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[6]_PORT_A_data_in = C1L0;
GC1_q_b[6]_PORT_A_data_in_reg = DFFE(GC1_q_b[6]_PORT_A_data_in, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[6]_PORT_A_address_reg = DFFE(GC1_q_b[6]_PORT_A_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[6]_PORT_B_address_reg = DFFE(GC1_q_b[6]_PORT_B_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_write_enable = B1L0;
GC1_q_b[6]_PORT_A_write_enable_reg = DFFE(GC1_q_b[6]_PORT_A_write_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[6]_PORT_B_read_enable_reg = DFFE(GC1_q_b[6]_PORT_B_read_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_byte_mask = A1L0;
GC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[6]_PORT_A_byte_mask, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_clock_0 = !CLK_25MHz2;
GC1_q_b[6]_clock_1 = !CLK_25MHz2;
GC1_q_b[6]_PORT_B_data_out = MEMORY(GC1_q_b[6]_PORT_A_data_in_reg, , GC1_q_b[6]_PORT_A_address_reg, GC1_q_b[6]_PORT_B_address_reg, GC1_q_b[6]_PORT_A_write_enable_reg, GC1_q_b[6]_PORT_B_read_enable_reg, GC1_q_b[6]_PORT_A_byte_mask_reg, , GC1_q_b[6]_clock_0, GC1_q_b[6]_clock_1, , , , );
GC1_q_b[6]_PORT_B_data_out_reg = DFFE(GC1_q_b[6]_PORT_B_data_out, GC1_q_b[6]_clock_1, , , );
GC1_q_b[6] = GC1_q_b[6]_PORT_B_data_out_reg[0];


--GC1_q_b[30] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[30]_PORT_A_data_in = C1L0;
GC1_q_b[30]_PORT_A_data_in_reg = DFFE(GC1_q_b[30]_PORT_A_data_in, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[30]_PORT_A_address_reg = DFFE(GC1_q_b[30]_PORT_A_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[30]_PORT_B_address_reg = DFFE(GC1_q_b[30]_PORT_B_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_write_enable = B1L0;
GC1_q_b[30]_PORT_A_write_enable_reg = DFFE(GC1_q_b[30]_PORT_A_write_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[30]_PORT_B_read_enable_reg = DFFE(GC1_q_b[30]_PORT_B_read_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_byte_mask = A1L0;
GC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[30]_PORT_A_byte_mask, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_clock_0 = !CLK_25MHz2;
GC1_q_b[30]_clock_1 = !CLK_25MHz2;
GC1_q_b[30]_PORT_B_data_out = MEMORY(GC1_q_b[30]_PORT_A_data_in_reg, , GC1_q_b[30]_PORT_A_address_reg, GC1_q_b[30]_PORT_B_address_reg, GC1_q_b[30]_PORT_A_write_enable_reg, GC1_q_b[30]_PORT_B_read_enable_reg, GC1_q_b[30]_PORT_A_byte_mask_reg, , GC1_q_b[30]_clock_0, GC1_q_b[30]_clock_1, , , , );
GC1_q_b[30]_PORT_B_data_out_reg = DFFE(GC1_q_b[30]_PORT_B_data_out, GC1_q_b[30]_clock_1, , , );
GC1_q_b[30] = GC1_q_b[30]_PORT_B_data_out_reg[0];


--GC1_q_b[17] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[17]_PORT_A_data_in = C1L0;
GC1_q_b[17]_PORT_A_data_in_reg = DFFE(GC1_q_b[17]_PORT_A_data_in, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[17]_PORT_A_address_reg = DFFE(GC1_q_b[17]_PORT_A_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[17]_PORT_B_address_reg = DFFE(GC1_q_b[17]_PORT_B_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_write_enable = B1L0;
GC1_q_b[17]_PORT_A_write_enable_reg = DFFE(GC1_q_b[17]_PORT_A_write_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[17]_PORT_B_read_enable_reg = DFFE(GC1_q_b[17]_PORT_B_read_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_byte_mask = A1L0;
GC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[17]_PORT_A_byte_mask, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_clock_0 = !CLK_25MHz2;
GC1_q_b[17]_clock_1 = !CLK_25MHz2;
GC1_q_b[17]_PORT_B_data_out = MEMORY(GC1_q_b[17]_PORT_A_data_in_reg, , GC1_q_b[17]_PORT_A_address_reg, GC1_q_b[17]_PORT_B_address_reg, GC1_q_b[17]_PORT_A_write_enable_reg, GC1_q_b[17]_PORT_B_read_enable_reg, GC1_q_b[17]_PORT_A_byte_mask_reg, , GC1_q_b[17]_clock_0, GC1_q_b[17]_clock_1, , , , );
GC1_q_b[17]_PORT_B_data_out_reg = DFFE(GC1_q_b[17]_PORT_B_data_out, GC1_q_b[17]_clock_1, , , );
GC1_q_b[17] = GC1_q_b[17]_PORT_B_data_out_reg[0];


--GC1_q_b[9] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[9]_PORT_A_data_in = C1L0;
GC1_q_b[9]_PORT_A_data_in_reg = DFFE(GC1_q_b[9]_PORT_A_data_in, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[9]_PORT_A_address_reg = DFFE(GC1_q_b[9]_PORT_A_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[9]_PORT_B_address_reg = DFFE(GC1_q_b[9]_PORT_B_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_write_enable = B1L0;
GC1_q_b[9]_PORT_A_write_enable_reg = DFFE(GC1_q_b[9]_PORT_A_write_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[9]_PORT_B_read_enable_reg = DFFE(GC1_q_b[9]_PORT_B_read_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_byte_mask = A1L0;
GC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[9]_PORT_A_byte_mask, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_clock_0 = !CLK_25MHz2;
GC1_q_b[9]_clock_1 = !CLK_25MHz2;
GC1_q_b[9]_PORT_B_data_out = MEMORY(GC1_q_b[9]_PORT_A_data_in_reg, , GC1_q_b[9]_PORT_A_address_reg, GC1_q_b[9]_PORT_B_address_reg, GC1_q_b[9]_PORT_A_write_enable_reg, GC1_q_b[9]_PORT_B_read_enable_reg, GC1_q_b[9]_PORT_A_byte_mask_reg, , GC1_q_b[9]_clock_0, GC1_q_b[9]_clock_1, , , , );
GC1_q_b[9]_PORT_B_data_out_reg = DFFE(GC1_q_b[9]_PORT_B_data_out, GC1_q_b[9]_clock_1, , , );
GC1_q_b[9] = GC1_q_b[9]_PORT_B_data_out_reg[0];


--GC1_q_b[1] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[1]_PORT_A_data_in = C1L0;
GC1_q_b[1]_PORT_A_data_in_reg = DFFE(GC1_q_b[1]_PORT_A_data_in, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[1]_PORT_A_address_reg = DFFE(GC1_q_b[1]_PORT_A_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[1]_PORT_B_address_reg = DFFE(GC1_q_b[1]_PORT_B_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_write_enable = B1L0;
GC1_q_b[1]_PORT_A_write_enable_reg = DFFE(GC1_q_b[1]_PORT_A_write_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[1]_PORT_B_read_enable_reg = DFFE(GC1_q_b[1]_PORT_B_read_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_byte_mask = A1L0;
GC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[1]_PORT_A_byte_mask, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_clock_0 = !CLK_25MHz2;
GC1_q_b[1]_clock_1 = !CLK_25MHz2;
GC1_q_b[1]_PORT_B_data_out = MEMORY(GC1_q_b[1]_PORT_A_data_in_reg, , GC1_q_b[1]_PORT_A_address_reg, GC1_q_b[1]_PORT_B_address_reg, GC1_q_b[1]_PORT_A_write_enable_reg, GC1_q_b[1]_PORT_B_read_enable_reg, GC1_q_b[1]_PORT_A_byte_mask_reg, , GC1_q_b[1]_clock_0, GC1_q_b[1]_clock_1, , , , );
GC1_q_b[1]_PORT_B_data_out_reg = DFFE(GC1_q_b[1]_PORT_B_data_out, GC1_q_b[1]_clock_1, , , );
GC1_q_b[1] = GC1_q_b[1]_PORT_B_data_out_reg[0];


--GC1_q_b[25] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[25]_PORT_A_data_in = C1L0;
GC1_q_b[25]_PORT_A_data_in_reg = DFFE(GC1_q_b[25]_PORT_A_data_in, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[25]_PORT_A_address_reg = DFFE(GC1_q_b[25]_PORT_A_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[25]_PORT_B_address_reg = DFFE(GC1_q_b[25]_PORT_B_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_write_enable = B1L0;
GC1_q_b[25]_PORT_A_write_enable_reg = DFFE(GC1_q_b[25]_PORT_A_write_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[25]_PORT_B_read_enable_reg = DFFE(GC1_q_b[25]_PORT_B_read_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_byte_mask = A1L0;
GC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[25]_PORT_A_byte_mask, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_clock_0 = !CLK_25MHz2;
GC1_q_b[25]_clock_1 = !CLK_25MHz2;
GC1_q_b[25]_PORT_B_data_out = MEMORY(GC1_q_b[25]_PORT_A_data_in_reg, , GC1_q_b[25]_PORT_A_address_reg, GC1_q_b[25]_PORT_B_address_reg, GC1_q_b[25]_PORT_A_write_enable_reg, GC1_q_b[25]_PORT_B_read_enable_reg, GC1_q_b[25]_PORT_A_byte_mask_reg, , GC1_q_b[25]_clock_0, GC1_q_b[25]_clock_1, , , , );
GC1_q_b[25]_PORT_B_data_out_reg = DFFE(GC1_q_b[25]_PORT_B_data_out, GC1_q_b[25]_clock_1, , , );
GC1_q_b[25] = GC1_q_b[25]_PORT_B_data_out_reg[0];


--GC1_q_b[8] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[8]_PORT_A_data_in = C1L0;
GC1_q_b[8]_PORT_A_data_in_reg = DFFE(GC1_q_b[8]_PORT_A_data_in, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[8]_PORT_A_address_reg = DFFE(GC1_q_b[8]_PORT_A_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[8]_PORT_B_address_reg = DFFE(GC1_q_b[8]_PORT_B_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_write_enable = B1L0;
GC1_q_b[8]_PORT_A_write_enable_reg = DFFE(GC1_q_b[8]_PORT_A_write_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[8]_PORT_B_read_enable_reg = DFFE(GC1_q_b[8]_PORT_B_read_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_byte_mask = A1L0;
GC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[8]_PORT_A_byte_mask, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_clock_0 = !CLK_25MHz2;
GC1_q_b[8]_clock_1 = !CLK_25MHz2;
GC1_q_b[8]_PORT_B_data_out = MEMORY(GC1_q_b[8]_PORT_A_data_in_reg, , GC1_q_b[8]_PORT_A_address_reg, GC1_q_b[8]_PORT_B_address_reg, GC1_q_b[8]_PORT_A_write_enable_reg, GC1_q_b[8]_PORT_B_read_enable_reg, GC1_q_b[8]_PORT_A_byte_mask_reg, , GC1_q_b[8]_clock_0, GC1_q_b[8]_clock_1, , , , );
GC1_q_b[8]_PORT_B_data_out_reg = DFFE(GC1_q_b[8]_PORT_B_data_out, GC1_q_b[8]_clock_1, , , );
GC1_q_b[8] = GC1_q_b[8]_PORT_B_data_out_reg[0];


--GC1_q_b[16] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[16]_PORT_A_data_in = C1L0;
GC1_q_b[16]_PORT_A_data_in_reg = DFFE(GC1_q_b[16]_PORT_A_data_in, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[16]_PORT_A_address_reg = DFFE(GC1_q_b[16]_PORT_A_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[16]_PORT_B_address_reg = DFFE(GC1_q_b[16]_PORT_B_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_write_enable = B1L0;
GC1_q_b[16]_PORT_A_write_enable_reg = DFFE(GC1_q_b[16]_PORT_A_write_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[16]_PORT_B_read_enable_reg = DFFE(GC1_q_b[16]_PORT_B_read_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_byte_mask = A1L0;
GC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[16]_PORT_A_byte_mask, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_clock_0 = !CLK_25MHz2;
GC1_q_b[16]_clock_1 = !CLK_25MHz2;
GC1_q_b[16]_PORT_B_data_out = MEMORY(GC1_q_b[16]_PORT_A_data_in_reg, , GC1_q_b[16]_PORT_A_address_reg, GC1_q_b[16]_PORT_B_address_reg, GC1_q_b[16]_PORT_A_write_enable_reg, GC1_q_b[16]_PORT_B_read_enable_reg, GC1_q_b[16]_PORT_A_byte_mask_reg, , GC1_q_b[16]_clock_0, GC1_q_b[16]_clock_1, , , , );
GC1_q_b[16]_PORT_B_data_out_reg = DFFE(GC1_q_b[16]_PORT_B_data_out, GC1_q_b[16]_clock_1, , , );
GC1_q_b[16] = GC1_q_b[16]_PORT_B_data_out_reg[0];


--GC1_q_b[0] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[0]_PORT_A_data_in = C1L0;
GC1_q_b[0]_PORT_A_data_in_reg = DFFE(GC1_q_b[0]_PORT_A_data_in, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[0]_PORT_A_address_reg = DFFE(GC1_q_b[0]_PORT_A_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[0]_PORT_B_address_reg = DFFE(GC1_q_b[0]_PORT_B_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_write_enable = B1L0;
GC1_q_b[0]_PORT_A_write_enable_reg = DFFE(GC1_q_b[0]_PORT_A_write_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[0]_PORT_B_read_enable_reg = DFFE(GC1_q_b[0]_PORT_B_read_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_byte_mask = A1L0;
GC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[0]_PORT_A_byte_mask, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_clock_0 = !CLK_25MHz2;
GC1_q_b[0]_clock_1 = !CLK_25MHz2;
GC1_q_b[0]_PORT_B_data_out = MEMORY(GC1_q_b[0]_PORT_A_data_in_reg, , GC1_q_b[0]_PORT_A_address_reg, GC1_q_b[0]_PORT_B_address_reg, GC1_q_b[0]_PORT_A_write_enable_reg, GC1_q_b[0]_PORT_B_read_enable_reg, GC1_q_b[0]_PORT_A_byte_mask_reg, , GC1_q_b[0]_clock_0, GC1_q_b[0]_clock_1, , , , );
GC1_q_b[0]_PORT_B_data_out_reg = DFFE(GC1_q_b[0]_PORT_B_data_out, GC1_q_b[0]_clock_1, , , );
GC1_q_b[0] = GC1_q_b[0]_PORT_B_data_out_reg[0];


--GC1_q_b[24] is UART_MODULE:inst2|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[24]_PORT_A_data_in = C1L0;
GC1_q_b[24]_PORT_A_data_in_reg = DFFE(GC1_q_b[24]_PORT_A_data_in, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[24]_PORT_A_address_reg = DFFE(GC1_q_b[24]_PORT_A_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[24]_PORT_B_address_reg = DFFE(GC1_q_b[24]_PORT_B_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_write_enable = B1L0;
GC1_q_b[24]_PORT_A_write_enable_reg = DFFE(GC1_q_b[24]_PORT_A_write_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[24]_PORT_B_read_enable_reg = DFFE(GC1_q_b[24]_PORT_B_read_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_byte_mask = A1L0;
GC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[24]_PORT_A_byte_mask, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_clock_0 = !CLK_25MHz2;
GC1_q_b[24]_clock_1 = !CLK_25MHz2;
GC1_q_b[24]_PORT_B_data_out = MEMORY(GC1_q_b[24]_PORT_A_data_in_reg, , GC1_q_b[24]_PORT_A_address_reg, GC1_q_b[24]_PORT_B_address_reg, GC1_q_b[24]_PORT_A_write_enable_reg, GC1_q_b[24]_PORT_B_read_enable_reg, GC1_q_b[24]_PORT_A_byte_mask_reg, , GC1_q_b[24]_clock_0, GC1_q_b[24]_clock_1, , , , );
GC1_q_b[24]_PORT_B_data_out_reg = DFFE(GC1_q_b[24]_PORT_B_data_out, GC1_q_b[24]_clock_1, , , );
GC1_q_b[24] = GC1_q_b[24]_PORT_B_data_out_reg[0];


--GC1_q_b[12] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[12]_PORT_A_data_in = C1L0;
GC1_q_b[12]_PORT_A_data_in_reg = DFFE(GC1_q_b[12]_PORT_A_data_in, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[12]_PORT_A_address_reg = DFFE(GC1_q_b[12]_PORT_A_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[12]_PORT_B_address_reg = DFFE(GC1_q_b[12]_PORT_B_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_write_enable = B1L0;
GC1_q_b[12]_PORT_A_write_enable_reg = DFFE(GC1_q_b[12]_PORT_A_write_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[12]_PORT_B_read_enable_reg = DFFE(GC1_q_b[12]_PORT_B_read_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_byte_mask = A1L0;
GC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[12]_PORT_A_byte_mask, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_clock_0 = !CLK_25MHz2;
GC1_q_b[12]_clock_1 = !CLK_25MHz2;
GC1_q_b[12]_PORT_B_data_out = MEMORY(GC1_q_b[12]_PORT_A_data_in_reg, , GC1_q_b[12]_PORT_A_address_reg, GC1_q_b[12]_PORT_B_address_reg, GC1_q_b[12]_PORT_A_write_enable_reg, GC1_q_b[12]_PORT_B_read_enable_reg, GC1_q_b[12]_PORT_A_byte_mask_reg, , GC1_q_b[12]_clock_0, GC1_q_b[12]_clock_1, , , , );
GC1_q_b[12]_PORT_B_data_out_reg = DFFE(GC1_q_b[12]_PORT_B_data_out, GC1_q_b[12]_clock_1, , , );
GC1_q_b[12] = GC1_q_b[12]_PORT_B_data_out_reg[0];


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[0]~11
XB1L0 = (XB1_r_TxTail[0] & (SB1_o_Ready $ (GND))) # (!XB1_r_TxTail[0] & (!SB1_o_Ready & VCC));

--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[0]~12
XB1L0 = CARRY((XB1_r_TxTail[0] & !SB1_o_Ready));


--GC1_q_b[20] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[20]_PORT_A_data_in = C1L0;
GC1_q_b[20]_PORT_A_data_in_reg = DFFE(GC1_q_b[20]_PORT_A_data_in, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[20]_PORT_A_address_reg = DFFE(GC1_q_b[20]_PORT_A_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[20]_PORT_B_address_reg = DFFE(GC1_q_b[20]_PORT_B_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_write_enable = B1L0;
GC1_q_b[20]_PORT_A_write_enable_reg = DFFE(GC1_q_b[20]_PORT_A_write_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[20]_PORT_B_read_enable_reg = DFFE(GC1_q_b[20]_PORT_B_read_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_byte_mask = A1L0;
GC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[20]_PORT_A_byte_mask, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_clock_0 = !CLK_25MHz2;
GC1_q_b[20]_clock_1 = !CLK_25MHz2;
GC1_q_b[20]_PORT_B_data_out = MEMORY(GC1_q_b[20]_PORT_A_data_in_reg, , GC1_q_b[20]_PORT_A_address_reg, GC1_q_b[20]_PORT_B_address_reg, GC1_q_b[20]_PORT_A_write_enable_reg, GC1_q_b[20]_PORT_B_read_enable_reg, GC1_q_b[20]_PORT_A_byte_mask_reg, , GC1_q_b[20]_clock_0, GC1_q_b[20]_clock_1, , , , );
GC1_q_b[20]_PORT_B_data_out_reg = DFFE(GC1_q_b[20]_PORT_B_data_out, GC1_q_b[20]_clock_1, , , );
GC1_q_b[20] = GC1_q_b[20]_PORT_B_data_out_reg[0];


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[1]~13
XB1L0 = (XB1_r_TxTail[1] & (!XB1L0)) # (!XB1_r_TxTail[1] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[1]~14
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[1]));


--GC1_q_b[4] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[4]_PORT_A_data_in = C1L0;
GC1_q_b[4]_PORT_A_data_in_reg = DFFE(GC1_q_b[4]_PORT_A_data_in, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[4]_PORT_A_address_reg = DFFE(GC1_q_b[4]_PORT_A_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[4]_PORT_B_address_reg = DFFE(GC1_q_b[4]_PORT_B_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_write_enable = B1L0;
GC1_q_b[4]_PORT_A_write_enable_reg = DFFE(GC1_q_b[4]_PORT_A_write_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[4]_PORT_B_read_enable_reg = DFFE(GC1_q_b[4]_PORT_B_read_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_byte_mask = A1L0;
GC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[4]_PORT_A_byte_mask, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_clock_0 = !CLK_25MHz2;
GC1_q_b[4]_clock_1 = !CLK_25MHz2;
GC1_q_b[4]_PORT_B_data_out = MEMORY(GC1_q_b[4]_PORT_A_data_in_reg, , GC1_q_b[4]_PORT_A_address_reg, GC1_q_b[4]_PORT_B_address_reg, GC1_q_b[4]_PORT_A_write_enable_reg, GC1_q_b[4]_PORT_B_read_enable_reg, GC1_q_b[4]_PORT_A_byte_mask_reg, , GC1_q_b[4]_clock_0, GC1_q_b[4]_clock_1, , , , );
GC1_q_b[4]_PORT_B_data_out_reg = DFFE(GC1_q_b[4]_PORT_B_data_out, GC1_q_b[4]_clock_1, , , );
GC1_q_b[4] = GC1_q_b[4]_PORT_B_data_out_reg[0];


--GC1_q_b[28] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[28]_PORT_A_data_in = C1L0;
GC1_q_b[28]_PORT_A_data_in_reg = DFFE(GC1_q_b[28]_PORT_A_data_in, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[28]_PORT_A_address_reg = DFFE(GC1_q_b[28]_PORT_A_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[28]_PORT_B_address_reg = DFFE(GC1_q_b[28]_PORT_B_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_write_enable = B1L0;
GC1_q_b[28]_PORT_A_write_enable_reg = DFFE(GC1_q_b[28]_PORT_A_write_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[28]_PORT_B_read_enable_reg = DFFE(GC1_q_b[28]_PORT_B_read_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_byte_mask = A1L0;
GC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[28]_PORT_A_byte_mask, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_clock_0 = !CLK_25MHz2;
GC1_q_b[28]_clock_1 = !CLK_25MHz2;
GC1_q_b[28]_PORT_B_data_out = MEMORY(GC1_q_b[28]_PORT_A_data_in_reg, , GC1_q_b[28]_PORT_A_address_reg, GC1_q_b[28]_PORT_B_address_reg, GC1_q_b[28]_PORT_A_write_enable_reg, GC1_q_b[28]_PORT_B_read_enable_reg, GC1_q_b[28]_PORT_A_byte_mask_reg, , GC1_q_b[28]_clock_0, GC1_q_b[28]_clock_1, , , , );
GC1_q_b[28]_PORT_B_data_out_reg = DFFE(GC1_q_b[28]_PORT_B_data_out, GC1_q_b[28]_clock_1, , , );
GC1_q_b[28] = GC1_q_b[28]_PORT_B_data_out_reg[0];


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[0]~5
SB1L0 = SB1_r_ClkCnt[0] $ (VCC);

--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[0]~6
SB1L0 = CARRY(SB1_r_ClkCnt[0]);


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[1]~8
SB1L0 = (SB1_r_ClkCnt[1] & (!SB1L0)) # (!SB1_r_ClkCnt[1] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[1]~9
SB1L0 = CARRY((!SB1L0) # (!SB1_r_ClkCnt[1]));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[2]~10
SB1L0 = (SB1_r_ClkCnt[2] & (SB1L0 $ (GND))) # (!SB1_r_ClkCnt[2] & (!SB1L0 & VCC));

--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[2]~11
SB1L0 = CARRY((SB1_r_ClkCnt[2] & !SB1L0));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[3]~12
SB1L0 = (SB1_r_ClkCnt[3] & (!SB1L0)) # (!SB1_r_ClkCnt[3] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[3]~13
SB1L0 = CARRY((!SB1L0) # (!SB1_r_ClkCnt[3]));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[4]~14
SB1L0 = SB1_r_ClkCnt[4] $ (!SB1L0);


--GC1_q_b[19] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[19]_PORT_A_data_in = C1L0;
GC1_q_b[19]_PORT_A_data_in_reg = DFFE(GC1_q_b[19]_PORT_A_data_in, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[19]_PORT_A_address_reg = DFFE(GC1_q_b[19]_PORT_A_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[19]_PORT_B_address_reg = DFFE(GC1_q_b[19]_PORT_B_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_write_enable = B1L0;
GC1_q_b[19]_PORT_A_write_enable_reg = DFFE(GC1_q_b[19]_PORT_A_write_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[19]_PORT_B_read_enable_reg = DFFE(GC1_q_b[19]_PORT_B_read_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_byte_mask = A1L0;
GC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[19]_PORT_A_byte_mask, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_clock_0 = !CLK_25MHz2;
GC1_q_b[19]_clock_1 = !CLK_25MHz2;
GC1_q_b[19]_PORT_B_data_out = MEMORY(GC1_q_b[19]_PORT_A_data_in_reg, , GC1_q_b[19]_PORT_A_address_reg, GC1_q_b[19]_PORT_B_address_reg, GC1_q_b[19]_PORT_A_write_enable_reg, GC1_q_b[19]_PORT_B_read_enable_reg, GC1_q_b[19]_PORT_A_byte_mask_reg, , GC1_q_b[19]_clock_0, GC1_q_b[19]_clock_1, , , , );
GC1_q_b[19]_PORT_B_data_out_reg = DFFE(GC1_q_b[19]_PORT_B_data_out, GC1_q_b[19]_clock_1, , , );
GC1_q_b[19] = GC1_q_b[19]_PORT_B_data_out_reg[0];


--GC1_q_b[11] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[11]_PORT_A_data_in = C1L0;
GC1_q_b[11]_PORT_A_data_in_reg = DFFE(GC1_q_b[11]_PORT_A_data_in, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[11]_PORT_A_address_reg = DFFE(GC1_q_b[11]_PORT_A_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[11]_PORT_B_address_reg = DFFE(GC1_q_b[11]_PORT_B_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_write_enable = B1L0;
GC1_q_b[11]_PORT_A_write_enable_reg = DFFE(GC1_q_b[11]_PORT_A_write_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[11]_PORT_B_read_enable_reg = DFFE(GC1_q_b[11]_PORT_B_read_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_byte_mask = A1L0;
GC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[11]_PORT_A_byte_mask, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_clock_0 = !CLK_25MHz2;
GC1_q_b[11]_clock_1 = !CLK_25MHz2;
GC1_q_b[11]_PORT_B_data_out = MEMORY(GC1_q_b[11]_PORT_A_data_in_reg, , GC1_q_b[11]_PORT_A_address_reg, GC1_q_b[11]_PORT_B_address_reg, GC1_q_b[11]_PORT_A_write_enable_reg, GC1_q_b[11]_PORT_B_read_enable_reg, GC1_q_b[11]_PORT_A_byte_mask_reg, , GC1_q_b[11]_clock_0, GC1_q_b[11]_clock_1, , , , );
GC1_q_b[11]_PORT_B_data_out_reg = DFFE(GC1_q_b[11]_PORT_B_data_out, GC1_q_b[11]_clock_1, , , );
GC1_q_b[11] = GC1_q_b[11]_PORT_B_data_out_reg[0];


--GC1_q_b[3] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[3]_PORT_A_data_in = C1L0;
GC1_q_b[3]_PORT_A_data_in_reg = DFFE(GC1_q_b[3]_PORT_A_data_in, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[3]_PORT_A_address_reg = DFFE(GC1_q_b[3]_PORT_A_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[3]_PORT_B_address_reg = DFFE(GC1_q_b[3]_PORT_B_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_write_enable = B1L0;
GC1_q_b[3]_PORT_A_write_enable_reg = DFFE(GC1_q_b[3]_PORT_A_write_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[3]_PORT_B_read_enable_reg = DFFE(GC1_q_b[3]_PORT_B_read_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_byte_mask = A1L0;
GC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[3]_PORT_A_byte_mask, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_clock_0 = !CLK_25MHz2;
GC1_q_b[3]_clock_1 = !CLK_25MHz2;
GC1_q_b[3]_PORT_B_data_out = MEMORY(GC1_q_b[3]_PORT_A_data_in_reg, , GC1_q_b[3]_PORT_A_address_reg, GC1_q_b[3]_PORT_B_address_reg, GC1_q_b[3]_PORT_A_write_enable_reg, GC1_q_b[3]_PORT_B_read_enable_reg, GC1_q_b[3]_PORT_A_byte_mask_reg, , GC1_q_b[3]_clock_0, GC1_q_b[3]_clock_1, , , , );
GC1_q_b[3]_PORT_B_data_out_reg = DFFE(GC1_q_b[3]_PORT_B_data_out, GC1_q_b[3]_clock_1, , , );
GC1_q_b[3] = GC1_q_b[3]_PORT_B_data_out_reg[0];


--GC1_q_b[27] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[27]_PORT_A_data_in = C1L0;
GC1_q_b[27]_PORT_A_data_in_reg = DFFE(GC1_q_b[27]_PORT_A_data_in, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[27]_PORT_A_address_reg = DFFE(GC1_q_b[27]_PORT_A_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[27]_PORT_B_address_reg = DFFE(GC1_q_b[27]_PORT_B_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_write_enable = B1L0;
GC1_q_b[27]_PORT_A_write_enable_reg = DFFE(GC1_q_b[27]_PORT_A_write_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[27]_PORT_B_read_enable_reg = DFFE(GC1_q_b[27]_PORT_B_read_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_byte_mask = A1L0;
GC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[27]_PORT_A_byte_mask, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_clock_0 = !CLK_25MHz2;
GC1_q_b[27]_clock_1 = !CLK_25MHz2;
GC1_q_b[27]_PORT_B_data_out = MEMORY(GC1_q_b[27]_PORT_A_data_in_reg, , GC1_q_b[27]_PORT_A_address_reg, GC1_q_b[27]_PORT_B_address_reg, GC1_q_b[27]_PORT_A_write_enable_reg, GC1_q_b[27]_PORT_B_read_enable_reg, GC1_q_b[27]_PORT_A_byte_mask_reg, , GC1_q_b[27]_clock_0, GC1_q_b[27]_clock_1, , , , );
GC1_q_b[27]_PORT_B_data_out_reg = DFFE(GC1_q_b[27]_PORT_B_data_out, GC1_q_b[27]_clock_1, , , );
GC1_q_b[27] = GC1_q_b[27]_PORT_B_data_out_reg[0];


--GC1_q_b[10] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[10]_PORT_A_data_in = C1L0;
GC1_q_b[10]_PORT_A_data_in_reg = DFFE(GC1_q_b[10]_PORT_A_data_in, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[10]_PORT_A_address_reg = DFFE(GC1_q_b[10]_PORT_A_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[10]_PORT_B_address_reg = DFFE(GC1_q_b[10]_PORT_B_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_write_enable = B1L0;
GC1_q_b[10]_PORT_A_write_enable_reg = DFFE(GC1_q_b[10]_PORT_A_write_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[10]_PORT_B_read_enable_reg = DFFE(GC1_q_b[10]_PORT_B_read_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_byte_mask = A1L0;
GC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[10]_PORT_A_byte_mask, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_clock_0 = !CLK_25MHz2;
GC1_q_b[10]_clock_1 = !CLK_25MHz2;
GC1_q_b[10]_PORT_B_data_out = MEMORY(GC1_q_b[10]_PORT_A_data_in_reg, , GC1_q_b[10]_PORT_A_address_reg, GC1_q_b[10]_PORT_B_address_reg, GC1_q_b[10]_PORT_A_write_enable_reg, GC1_q_b[10]_PORT_B_read_enable_reg, GC1_q_b[10]_PORT_A_byte_mask_reg, , GC1_q_b[10]_clock_0, GC1_q_b[10]_clock_1, , , , );
GC1_q_b[10]_PORT_B_data_out_reg = DFFE(GC1_q_b[10]_PORT_B_data_out, GC1_q_b[10]_clock_1, , , );
GC1_q_b[10] = GC1_q_b[10]_PORT_B_data_out_reg[0];


--GC1_q_b[18] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[18]_PORT_A_data_in = C1L0;
GC1_q_b[18]_PORT_A_data_in_reg = DFFE(GC1_q_b[18]_PORT_A_data_in, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[18]_PORT_A_address_reg = DFFE(GC1_q_b[18]_PORT_A_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[18]_PORT_B_address_reg = DFFE(GC1_q_b[18]_PORT_B_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_write_enable = B1L0;
GC1_q_b[18]_PORT_A_write_enable_reg = DFFE(GC1_q_b[18]_PORT_A_write_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[18]_PORT_B_read_enable_reg = DFFE(GC1_q_b[18]_PORT_B_read_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_byte_mask = A1L0;
GC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[18]_PORT_A_byte_mask, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_clock_0 = !CLK_25MHz2;
GC1_q_b[18]_clock_1 = !CLK_25MHz2;
GC1_q_b[18]_PORT_B_data_out = MEMORY(GC1_q_b[18]_PORT_A_data_in_reg, , GC1_q_b[18]_PORT_A_address_reg, GC1_q_b[18]_PORT_B_address_reg, GC1_q_b[18]_PORT_A_write_enable_reg, GC1_q_b[18]_PORT_B_read_enable_reg, GC1_q_b[18]_PORT_A_byte_mask_reg, , GC1_q_b[18]_clock_0, GC1_q_b[18]_clock_1, , , , );
GC1_q_b[18]_PORT_B_data_out_reg = DFFE(GC1_q_b[18]_PORT_B_data_out, GC1_q_b[18]_clock_1, , , );
GC1_q_b[18] = GC1_q_b[18]_PORT_B_data_out_reg[0];


--GC1_q_b[2] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[2]_PORT_A_data_in = C1L0;
GC1_q_b[2]_PORT_A_data_in_reg = DFFE(GC1_q_b[2]_PORT_A_data_in, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[2]_PORT_A_address_reg = DFFE(GC1_q_b[2]_PORT_A_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[2]_PORT_B_address_reg = DFFE(GC1_q_b[2]_PORT_B_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_write_enable = B1L0;
GC1_q_b[2]_PORT_A_write_enable_reg = DFFE(GC1_q_b[2]_PORT_A_write_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[2]_PORT_B_read_enable_reg = DFFE(GC1_q_b[2]_PORT_B_read_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_byte_mask = A1L0;
GC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[2]_PORT_A_byte_mask, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_clock_0 = !CLK_25MHz2;
GC1_q_b[2]_clock_1 = !CLK_25MHz2;
GC1_q_b[2]_PORT_B_data_out = MEMORY(GC1_q_b[2]_PORT_A_data_in_reg, , GC1_q_b[2]_PORT_A_address_reg, GC1_q_b[2]_PORT_B_address_reg, GC1_q_b[2]_PORT_A_write_enable_reg, GC1_q_b[2]_PORT_B_read_enable_reg, GC1_q_b[2]_PORT_A_byte_mask_reg, , GC1_q_b[2]_clock_0, GC1_q_b[2]_clock_1, , , , );
GC1_q_b[2]_PORT_B_data_out_reg = DFFE(GC1_q_b[2]_PORT_B_data_out, GC1_q_b[2]_clock_1, , , );
GC1_q_b[2] = GC1_q_b[2]_PORT_B_data_out_reg[0];


--GC1_q_b[26] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[26]_PORT_A_data_in = C1L0;
GC1_q_b[26]_PORT_A_data_in_reg = DFFE(GC1_q_b[26]_PORT_A_data_in, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[26]_PORT_A_address_reg = DFFE(GC1_q_b[26]_PORT_A_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[26]_PORT_B_address_reg = DFFE(GC1_q_b[26]_PORT_B_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_write_enable = B1L0;
GC1_q_b[26]_PORT_A_write_enable_reg = DFFE(GC1_q_b[26]_PORT_A_write_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[26]_PORT_B_read_enable_reg = DFFE(GC1_q_b[26]_PORT_B_read_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_byte_mask = A1L0;
GC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[26]_PORT_A_byte_mask, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_clock_0 = !CLK_25MHz2;
GC1_q_b[26]_clock_1 = !CLK_25MHz2;
GC1_q_b[26]_PORT_B_data_out = MEMORY(GC1_q_b[26]_PORT_A_data_in_reg, , GC1_q_b[26]_PORT_A_address_reg, GC1_q_b[26]_PORT_B_address_reg, GC1_q_b[26]_PORT_A_write_enable_reg, GC1_q_b[26]_PORT_B_read_enable_reg, GC1_q_b[26]_PORT_A_byte_mask_reg, , GC1_q_b[26]_clock_0, GC1_q_b[26]_clock_1, , , , );
GC1_q_b[26]_PORT_B_data_out_reg = DFFE(GC1_q_b[26]_PORT_B_data_out, GC1_q_b[26]_clock_1, , , );
GC1_q_b[26] = GC1_q_b[26]_PORT_B_data_out_reg[0];


--GC1_q_b[21] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[21]_PORT_A_data_in = C1L0;
GC1_q_b[21]_PORT_A_data_in_reg = DFFE(GC1_q_b[21]_PORT_A_data_in, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[21]_PORT_A_address_reg = DFFE(GC1_q_b[21]_PORT_A_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[21]_PORT_B_address_reg = DFFE(GC1_q_b[21]_PORT_B_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_write_enable = B1L0;
GC1_q_b[21]_PORT_A_write_enable_reg = DFFE(GC1_q_b[21]_PORT_A_write_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[21]_PORT_B_read_enable_reg = DFFE(GC1_q_b[21]_PORT_B_read_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_byte_mask = A1L0;
GC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[21]_PORT_A_byte_mask, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_clock_0 = !CLK_25MHz2;
GC1_q_b[21]_clock_1 = !CLK_25MHz2;
GC1_q_b[21]_PORT_B_data_out = MEMORY(GC1_q_b[21]_PORT_A_data_in_reg, , GC1_q_b[21]_PORT_A_address_reg, GC1_q_b[21]_PORT_B_address_reg, GC1_q_b[21]_PORT_A_write_enable_reg, GC1_q_b[21]_PORT_B_read_enable_reg, GC1_q_b[21]_PORT_A_byte_mask_reg, , GC1_q_b[21]_clock_0, GC1_q_b[21]_clock_1, , , , );
GC1_q_b[21]_PORT_B_data_out_reg = DFFE(GC1_q_b[21]_PORT_B_data_out, GC1_q_b[21]_clock_1, , , );
GC1_q_b[21] = GC1_q_b[21]_PORT_B_data_out_reg[0];


--GC1_q_b[13] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[13]_PORT_A_data_in = C1L0;
GC1_q_b[13]_PORT_A_data_in_reg = DFFE(GC1_q_b[13]_PORT_A_data_in, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[13]_PORT_A_address_reg = DFFE(GC1_q_b[13]_PORT_A_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[13]_PORT_B_address_reg = DFFE(GC1_q_b[13]_PORT_B_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_write_enable = B1L0;
GC1_q_b[13]_PORT_A_write_enable_reg = DFFE(GC1_q_b[13]_PORT_A_write_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[13]_PORT_B_read_enable_reg = DFFE(GC1_q_b[13]_PORT_B_read_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_byte_mask = A1L0;
GC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[13]_PORT_A_byte_mask, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_clock_0 = !CLK_25MHz2;
GC1_q_b[13]_clock_1 = !CLK_25MHz2;
GC1_q_b[13]_PORT_B_data_out = MEMORY(GC1_q_b[13]_PORT_A_data_in_reg, , GC1_q_b[13]_PORT_A_address_reg, GC1_q_b[13]_PORT_B_address_reg, GC1_q_b[13]_PORT_A_write_enable_reg, GC1_q_b[13]_PORT_B_read_enable_reg, GC1_q_b[13]_PORT_A_byte_mask_reg, , GC1_q_b[13]_clock_0, GC1_q_b[13]_clock_1, , , , );
GC1_q_b[13]_PORT_B_data_out_reg = DFFE(GC1_q_b[13]_PORT_B_data_out, GC1_q_b[13]_clock_1, , , );
GC1_q_b[13] = GC1_q_b[13]_PORT_B_data_out_reg[0];


--GC1_q_b[5] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[5]_PORT_A_data_in = C1L0;
GC1_q_b[5]_PORT_A_data_in_reg = DFFE(GC1_q_b[5]_PORT_A_data_in, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[5]_PORT_A_address_reg = DFFE(GC1_q_b[5]_PORT_A_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[5]_PORT_B_address_reg = DFFE(GC1_q_b[5]_PORT_B_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_write_enable = B1L0;
GC1_q_b[5]_PORT_A_write_enable_reg = DFFE(GC1_q_b[5]_PORT_A_write_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[5]_PORT_B_read_enable_reg = DFFE(GC1_q_b[5]_PORT_B_read_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_byte_mask = A1L0;
GC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[5]_PORT_A_byte_mask, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_clock_0 = !CLK_25MHz2;
GC1_q_b[5]_clock_1 = !CLK_25MHz2;
GC1_q_b[5]_PORT_B_data_out = MEMORY(GC1_q_b[5]_PORT_A_data_in_reg, , GC1_q_b[5]_PORT_A_address_reg, GC1_q_b[5]_PORT_B_address_reg, GC1_q_b[5]_PORT_A_write_enable_reg, GC1_q_b[5]_PORT_B_read_enable_reg, GC1_q_b[5]_PORT_A_byte_mask_reg, , GC1_q_b[5]_clock_0, GC1_q_b[5]_clock_1, , , , );
GC1_q_b[5]_PORT_B_data_out_reg = DFFE(GC1_q_b[5]_PORT_B_data_out, GC1_q_b[5]_clock_1, , , );
GC1_q_b[5] = GC1_q_b[5]_PORT_B_data_out_reg[0];


--GC1_q_b[29] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[29]_PORT_A_data_in = C1L0;
GC1_q_b[29]_PORT_A_data_in_reg = DFFE(GC1_q_b[29]_PORT_A_data_in, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[29]_PORT_A_address_reg = DFFE(GC1_q_b[29]_PORT_A_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[29]_PORT_B_address_reg = DFFE(GC1_q_b[29]_PORT_B_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_write_enable = B1L0;
GC1_q_b[29]_PORT_A_write_enable_reg = DFFE(GC1_q_b[29]_PORT_A_write_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[29]_PORT_B_read_enable_reg = DFFE(GC1_q_b[29]_PORT_B_read_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_byte_mask = A1L0;
GC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[29]_PORT_A_byte_mask, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_clock_0 = !CLK_25MHz2;
GC1_q_b[29]_clock_1 = !CLK_25MHz2;
GC1_q_b[29]_PORT_B_data_out = MEMORY(GC1_q_b[29]_PORT_A_data_in_reg, , GC1_q_b[29]_PORT_A_address_reg, GC1_q_b[29]_PORT_B_address_reg, GC1_q_b[29]_PORT_A_write_enable_reg, GC1_q_b[29]_PORT_B_read_enable_reg, GC1_q_b[29]_PORT_A_byte_mask_reg, , GC1_q_b[29]_clock_0, GC1_q_b[29]_clock_1, , , , );
GC1_q_b[29]_PORT_B_data_out_reg = DFFE(GC1_q_b[29]_PORT_B_data_out, GC1_q_b[29]_clock_1, , , );
GC1_q_b[29] = GC1_q_b[29]_PORT_B_data_out_reg[0];


--GC1_q_b[23] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[23]_PORT_A_data_in = C1L0;
GC1_q_b[23]_PORT_A_data_in_reg = DFFE(GC1_q_b[23]_PORT_A_data_in, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[23]_PORT_A_address_reg = DFFE(GC1_q_b[23]_PORT_A_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[23]_PORT_B_address_reg = DFFE(GC1_q_b[23]_PORT_B_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_write_enable = B1L0;
GC1_q_b[23]_PORT_A_write_enable_reg = DFFE(GC1_q_b[23]_PORT_A_write_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[23]_PORT_B_read_enable_reg = DFFE(GC1_q_b[23]_PORT_B_read_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_byte_mask = A1L0;
GC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[23]_PORT_A_byte_mask, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_clock_0 = !CLK_25MHz2;
GC1_q_b[23]_clock_1 = !CLK_25MHz2;
GC1_q_b[23]_PORT_B_data_out = MEMORY(GC1_q_b[23]_PORT_A_data_in_reg, , GC1_q_b[23]_PORT_A_address_reg, GC1_q_b[23]_PORT_B_address_reg, GC1_q_b[23]_PORT_A_write_enable_reg, GC1_q_b[23]_PORT_B_read_enable_reg, GC1_q_b[23]_PORT_A_byte_mask_reg, , GC1_q_b[23]_clock_0, GC1_q_b[23]_clock_1, , , , );
GC1_q_b[23]_PORT_B_data_out_reg = DFFE(GC1_q_b[23]_PORT_B_data_out, GC1_q_b[23]_clock_1, , , );
GC1_q_b[23] = GC1_q_b[23]_PORT_B_data_out_reg[0];


--GC1_q_b[15] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[15]_PORT_A_data_in = C1L0;
GC1_q_b[15]_PORT_A_data_in_reg = DFFE(GC1_q_b[15]_PORT_A_data_in, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[15]_PORT_A_address_reg = DFFE(GC1_q_b[15]_PORT_A_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[15]_PORT_B_address_reg = DFFE(GC1_q_b[15]_PORT_B_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_write_enable = B1L0;
GC1_q_b[15]_PORT_A_write_enable_reg = DFFE(GC1_q_b[15]_PORT_A_write_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[15]_PORT_B_read_enable_reg = DFFE(GC1_q_b[15]_PORT_B_read_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_byte_mask = A1L0;
GC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[15]_PORT_A_byte_mask, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_clock_0 = !CLK_25MHz2;
GC1_q_b[15]_clock_1 = !CLK_25MHz2;
GC1_q_b[15]_PORT_B_data_out = MEMORY(GC1_q_b[15]_PORT_A_data_in_reg, , GC1_q_b[15]_PORT_A_address_reg, GC1_q_b[15]_PORT_B_address_reg, GC1_q_b[15]_PORT_A_write_enable_reg, GC1_q_b[15]_PORT_B_read_enable_reg, GC1_q_b[15]_PORT_A_byte_mask_reg, , GC1_q_b[15]_clock_0, GC1_q_b[15]_clock_1, , , , );
GC1_q_b[15]_PORT_B_data_out_reg = DFFE(GC1_q_b[15]_PORT_B_data_out, GC1_q_b[15]_clock_1, , , );
GC1_q_b[15] = GC1_q_b[15]_PORT_B_data_out_reg[0];


--GC1_q_b[7] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[7]_PORT_A_data_in = C1L0;
GC1_q_b[7]_PORT_A_data_in_reg = DFFE(GC1_q_b[7]_PORT_A_data_in, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[7]_PORT_A_address_reg = DFFE(GC1_q_b[7]_PORT_A_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[7]_PORT_B_address_reg = DFFE(GC1_q_b[7]_PORT_B_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_write_enable = B1L0;
GC1_q_b[7]_PORT_A_write_enable_reg = DFFE(GC1_q_b[7]_PORT_A_write_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[7]_PORT_B_read_enable_reg = DFFE(GC1_q_b[7]_PORT_B_read_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_byte_mask = A1L0;
GC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[7]_PORT_A_byte_mask, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_clock_0 = !CLK_25MHz2;
GC1_q_b[7]_clock_1 = !CLK_25MHz2;
GC1_q_b[7]_PORT_B_data_out = MEMORY(GC1_q_b[7]_PORT_A_data_in_reg, , GC1_q_b[7]_PORT_A_address_reg, GC1_q_b[7]_PORT_B_address_reg, GC1_q_b[7]_PORT_A_write_enable_reg, GC1_q_b[7]_PORT_B_read_enable_reg, GC1_q_b[7]_PORT_A_byte_mask_reg, , GC1_q_b[7]_clock_0, GC1_q_b[7]_clock_1, , , , );
GC1_q_b[7]_PORT_B_data_out_reg = DFFE(GC1_q_b[7]_PORT_B_data_out, GC1_q_b[7]_clock_1, , , );
GC1_q_b[7] = GC1_q_b[7]_PORT_B_data_out_reg[0];


--GC1_q_b[31] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[31]_PORT_A_data_in = C1L0;
GC1_q_b[31]_PORT_A_data_in_reg = DFFE(GC1_q_b[31]_PORT_A_data_in, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[31]_PORT_A_address_reg = DFFE(GC1_q_b[31]_PORT_A_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[31]_PORT_B_address_reg = DFFE(GC1_q_b[31]_PORT_B_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_write_enable = B1L0;
GC1_q_b[31]_PORT_A_write_enable_reg = DFFE(GC1_q_b[31]_PORT_A_write_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[31]_PORT_B_read_enable_reg = DFFE(GC1_q_b[31]_PORT_B_read_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_byte_mask = A1L0;
GC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[31]_PORT_A_byte_mask, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_clock_0 = !CLK_25MHz2;
GC1_q_b[31]_clock_1 = !CLK_25MHz2;
GC1_q_b[31]_PORT_B_data_out = MEMORY(GC1_q_b[31]_PORT_A_data_in_reg, , GC1_q_b[31]_PORT_A_address_reg, GC1_q_b[31]_PORT_B_address_reg, GC1_q_b[31]_PORT_A_write_enable_reg, GC1_q_b[31]_PORT_B_read_enable_reg, GC1_q_b[31]_PORT_A_byte_mask_reg, , GC1_q_b[31]_clock_0, GC1_q_b[31]_clock_1, , , , );
GC1_q_b[31]_PORT_B_data_out_reg = DFFE(GC1_q_b[31]_PORT_B_data_out, GC1_q_b[31]_clock_1, , , );
GC1_q_b[31] = GC1_q_b[31]_PORT_B_data_out_reg[0];


--GC1_q_b[14] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[14]_PORT_A_data_in = C1L0;
GC1_q_b[14]_PORT_A_data_in_reg = DFFE(GC1_q_b[14]_PORT_A_data_in, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[14]_PORT_A_address_reg = DFFE(GC1_q_b[14]_PORT_A_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[14]_PORT_B_address_reg = DFFE(GC1_q_b[14]_PORT_B_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_write_enable = B1L0;
GC1_q_b[14]_PORT_A_write_enable_reg = DFFE(GC1_q_b[14]_PORT_A_write_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[14]_PORT_B_read_enable_reg = DFFE(GC1_q_b[14]_PORT_B_read_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_byte_mask = A1L0;
GC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[14]_PORT_A_byte_mask, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_clock_0 = !CLK_25MHz2;
GC1_q_b[14]_clock_1 = !CLK_25MHz2;
GC1_q_b[14]_PORT_B_data_out = MEMORY(GC1_q_b[14]_PORT_A_data_in_reg, , GC1_q_b[14]_PORT_A_address_reg, GC1_q_b[14]_PORT_B_address_reg, GC1_q_b[14]_PORT_A_write_enable_reg, GC1_q_b[14]_PORT_B_read_enable_reg, GC1_q_b[14]_PORT_A_byte_mask_reg, , GC1_q_b[14]_clock_0, GC1_q_b[14]_clock_1, , , , );
GC1_q_b[14]_PORT_B_data_out_reg = DFFE(GC1_q_b[14]_PORT_B_data_out, GC1_q_b[14]_clock_1, , , );
GC1_q_b[14] = GC1_q_b[14]_PORT_B_data_out_reg[0];


--GC1_q_b[22] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[22]_PORT_A_data_in = C1L0;
GC1_q_b[22]_PORT_A_data_in_reg = DFFE(GC1_q_b[22]_PORT_A_data_in, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[22]_PORT_A_address_reg = DFFE(GC1_q_b[22]_PORT_A_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[22]_PORT_B_address_reg = DFFE(GC1_q_b[22]_PORT_B_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_write_enable = B1L0;
GC1_q_b[22]_PORT_A_write_enable_reg = DFFE(GC1_q_b[22]_PORT_A_write_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[22]_PORT_B_read_enable_reg = DFFE(GC1_q_b[22]_PORT_B_read_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_byte_mask = A1L0;
GC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[22]_PORT_A_byte_mask, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_clock_0 = !CLK_25MHz2;
GC1_q_b[22]_clock_1 = !CLK_25MHz2;
GC1_q_b[22]_PORT_B_data_out = MEMORY(GC1_q_b[22]_PORT_A_data_in_reg, , GC1_q_b[22]_PORT_A_address_reg, GC1_q_b[22]_PORT_B_address_reg, GC1_q_b[22]_PORT_A_write_enable_reg, GC1_q_b[22]_PORT_B_read_enable_reg, GC1_q_b[22]_PORT_A_byte_mask_reg, , GC1_q_b[22]_clock_0, GC1_q_b[22]_clock_1, , , , );
GC1_q_b[22]_PORT_B_data_out_reg = DFFE(GC1_q_b[22]_PORT_B_data_out, GC1_q_b[22]_clock_1, , , );
GC1_q_b[22] = GC1_q_b[22]_PORT_B_data_out_reg[0];


--GC1_q_b[6] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[6]_PORT_A_data_in = C1L0;
GC1_q_b[6]_PORT_A_data_in_reg = DFFE(GC1_q_b[6]_PORT_A_data_in, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[6]_PORT_A_address_reg = DFFE(GC1_q_b[6]_PORT_A_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[6]_PORT_B_address_reg = DFFE(GC1_q_b[6]_PORT_B_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_write_enable = B1L0;
GC1_q_b[6]_PORT_A_write_enable_reg = DFFE(GC1_q_b[6]_PORT_A_write_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[6]_PORT_B_read_enable_reg = DFFE(GC1_q_b[6]_PORT_B_read_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_byte_mask = A1L0;
GC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[6]_PORT_A_byte_mask, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_clock_0 = !CLK_25MHz2;
GC1_q_b[6]_clock_1 = !CLK_25MHz2;
GC1_q_b[6]_PORT_B_data_out = MEMORY(GC1_q_b[6]_PORT_A_data_in_reg, , GC1_q_b[6]_PORT_A_address_reg, GC1_q_b[6]_PORT_B_address_reg, GC1_q_b[6]_PORT_A_write_enable_reg, GC1_q_b[6]_PORT_B_read_enable_reg, GC1_q_b[6]_PORT_A_byte_mask_reg, , GC1_q_b[6]_clock_0, GC1_q_b[6]_clock_1, , , , );
GC1_q_b[6]_PORT_B_data_out_reg = DFFE(GC1_q_b[6]_PORT_B_data_out, GC1_q_b[6]_clock_1, , , );
GC1_q_b[6] = GC1_q_b[6]_PORT_B_data_out_reg[0];


--GC1_q_b[30] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[30]_PORT_A_data_in = C1L0;
GC1_q_b[30]_PORT_A_data_in_reg = DFFE(GC1_q_b[30]_PORT_A_data_in, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[30]_PORT_A_address_reg = DFFE(GC1_q_b[30]_PORT_A_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[30]_PORT_B_address_reg = DFFE(GC1_q_b[30]_PORT_B_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_write_enable = B1L0;
GC1_q_b[30]_PORT_A_write_enable_reg = DFFE(GC1_q_b[30]_PORT_A_write_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[30]_PORT_B_read_enable_reg = DFFE(GC1_q_b[30]_PORT_B_read_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_byte_mask = A1L0;
GC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[30]_PORT_A_byte_mask, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_clock_0 = !CLK_25MHz2;
GC1_q_b[30]_clock_1 = !CLK_25MHz2;
GC1_q_b[30]_PORT_B_data_out = MEMORY(GC1_q_b[30]_PORT_A_data_in_reg, , GC1_q_b[30]_PORT_A_address_reg, GC1_q_b[30]_PORT_B_address_reg, GC1_q_b[30]_PORT_A_write_enable_reg, GC1_q_b[30]_PORT_B_read_enable_reg, GC1_q_b[30]_PORT_A_byte_mask_reg, , GC1_q_b[30]_clock_0, GC1_q_b[30]_clock_1, , , , );
GC1_q_b[30]_PORT_B_data_out_reg = DFFE(GC1_q_b[30]_PORT_B_data_out, GC1_q_b[30]_clock_1, , , );
GC1_q_b[30] = GC1_q_b[30]_PORT_B_data_out_reg[0];


--GC1_q_b[17] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[17]_PORT_A_data_in = C1L0;
GC1_q_b[17]_PORT_A_data_in_reg = DFFE(GC1_q_b[17]_PORT_A_data_in, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[17]_PORT_A_address_reg = DFFE(GC1_q_b[17]_PORT_A_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[17]_PORT_B_address_reg = DFFE(GC1_q_b[17]_PORT_B_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_write_enable = B1L0;
GC1_q_b[17]_PORT_A_write_enable_reg = DFFE(GC1_q_b[17]_PORT_A_write_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[17]_PORT_B_read_enable_reg = DFFE(GC1_q_b[17]_PORT_B_read_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_byte_mask = A1L0;
GC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[17]_PORT_A_byte_mask, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_clock_0 = !CLK_25MHz2;
GC1_q_b[17]_clock_1 = !CLK_25MHz2;
GC1_q_b[17]_PORT_B_data_out = MEMORY(GC1_q_b[17]_PORT_A_data_in_reg, , GC1_q_b[17]_PORT_A_address_reg, GC1_q_b[17]_PORT_B_address_reg, GC1_q_b[17]_PORT_A_write_enable_reg, GC1_q_b[17]_PORT_B_read_enable_reg, GC1_q_b[17]_PORT_A_byte_mask_reg, , GC1_q_b[17]_clock_0, GC1_q_b[17]_clock_1, , , , );
GC1_q_b[17]_PORT_B_data_out_reg = DFFE(GC1_q_b[17]_PORT_B_data_out, GC1_q_b[17]_clock_1, , , );
GC1_q_b[17] = GC1_q_b[17]_PORT_B_data_out_reg[0];


--GC1_q_b[9] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[9]_PORT_A_data_in = C1L0;
GC1_q_b[9]_PORT_A_data_in_reg = DFFE(GC1_q_b[9]_PORT_A_data_in, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[9]_PORT_A_address_reg = DFFE(GC1_q_b[9]_PORT_A_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[9]_PORT_B_address_reg = DFFE(GC1_q_b[9]_PORT_B_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_write_enable = B1L0;
GC1_q_b[9]_PORT_A_write_enable_reg = DFFE(GC1_q_b[9]_PORT_A_write_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[9]_PORT_B_read_enable_reg = DFFE(GC1_q_b[9]_PORT_B_read_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_byte_mask = A1L0;
GC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[9]_PORT_A_byte_mask, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_clock_0 = !CLK_25MHz2;
GC1_q_b[9]_clock_1 = !CLK_25MHz2;
GC1_q_b[9]_PORT_B_data_out = MEMORY(GC1_q_b[9]_PORT_A_data_in_reg, , GC1_q_b[9]_PORT_A_address_reg, GC1_q_b[9]_PORT_B_address_reg, GC1_q_b[9]_PORT_A_write_enable_reg, GC1_q_b[9]_PORT_B_read_enable_reg, GC1_q_b[9]_PORT_A_byte_mask_reg, , GC1_q_b[9]_clock_0, GC1_q_b[9]_clock_1, , , , );
GC1_q_b[9]_PORT_B_data_out_reg = DFFE(GC1_q_b[9]_PORT_B_data_out, GC1_q_b[9]_clock_1, , , );
GC1_q_b[9] = GC1_q_b[9]_PORT_B_data_out_reg[0];


--GC1_q_b[1] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[1]_PORT_A_data_in = C1L0;
GC1_q_b[1]_PORT_A_data_in_reg = DFFE(GC1_q_b[1]_PORT_A_data_in, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[1]_PORT_A_address_reg = DFFE(GC1_q_b[1]_PORT_A_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[1]_PORT_B_address_reg = DFFE(GC1_q_b[1]_PORT_B_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_write_enable = B1L0;
GC1_q_b[1]_PORT_A_write_enable_reg = DFFE(GC1_q_b[1]_PORT_A_write_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[1]_PORT_B_read_enable_reg = DFFE(GC1_q_b[1]_PORT_B_read_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_byte_mask = A1L0;
GC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[1]_PORT_A_byte_mask, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_clock_0 = !CLK_25MHz2;
GC1_q_b[1]_clock_1 = !CLK_25MHz2;
GC1_q_b[1]_PORT_B_data_out = MEMORY(GC1_q_b[1]_PORT_A_data_in_reg, , GC1_q_b[1]_PORT_A_address_reg, GC1_q_b[1]_PORT_B_address_reg, GC1_q_b[1]_PORT_A_write_enable_reg, GC1_q_b[1]_PORT_B_read_enable_reg, GC1_q_b[1]_PORT_A_byte_mask_reg, , GC1_q_b[1]_clock_0, GC1_q_b[1]_clock_1, , , , );
GC1_q_b[1]_PORT_B_data_out_reg = DFFE(GC1_q_b[1]_PORT_B_data_out, GC1_q_b[1]_clock_1, , , );
GC1_q_b[1] = GC1_q_b[1]_PORT_B_data_out_reg[0];


--GC1_q_b[25] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[25]_PORT_A_data_in = C1L0;
GC1_q_b[25]_PORT_A_data_in_reg = DFFE(GC1_q_b[25]_PORT_A_data_in, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[25]_PORT_A_address_reg = DFFE(GC1_q_b[25]_PORT_A_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[25]_PORT_B_address_reg = DFFE(GC1_q_b[25]_PORT_B_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_write_enable = B1L0;
GC1_q_b[25]_PORT_A_write_enable_reg = DFFE(GC1_q_b[25]_PORT_A_write_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[25]_PORT_B_read_enable_reg = DFFE(GC1_q_b[25]_PORT_B_read_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_byte_mask = A1L0;
GC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[25]_PORT_A_byte_mask, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_clock_0 = !CLK_25MHz2;
GC1_q_b[25]_clock_1 = !CLK_25MHz2;
GC1_q_b[25]_PORT_B_data_out = MEMORY(GC1_q_b[25]_PORT_A_data_in_reg, , GC1_q_b[25]_PORT_A_address_reg, GC1_q_b[25]_PORT_B_address_reg, GC1_q_b[25]_PORT_A_write_enable_reg, GC1_q_b[25]_PORT_B_read_enable_reg, GC1_q_b[25]_PORT_A_byte_mask_reg, , GC1_q_b[25]_clock_0, GC1_q_b[25]_clock_1, , , , );
GC1_q_b[25]_PORT_B_data_out_reg = DFFE(GC1_q_b[25]_PORT_B_data_out, GC1_q_b[25]_clock_1, , , );
GC1_q_b[25] = GC1_q_b[25]_PORT_B_data_out_reg[0];


--GC1_q_b[8] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[8]_PORT_A_data_in = C1L0;
GC1_q_b[8]_PORT_A_data_in_reg = DFFE(GC1_q_b[8]_PORT_A_data_in, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[8]_PORT_A_address_reg = DFFE(GC1_q_b[8]_PORT_A_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[8]_PORT_B_address_reg = DFFE(GC1_q_b[8]_PORT_B_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_write_enable = B1L0;
GC1_q_b[8]_PORT_A_write_enable_reg = DFFE(GC1_q_b[8]_PORT_A_write_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[8]_PORT_B_read_enable_reg = DFFE(GC1_q_b[8]_PORT_B_read_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_byte_mask = A1L0;
GC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[8]_PORT_A_byte_mask, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_clock_0 = !CLK_25MHz2;
GC1_q_b[8]_clock_1 = !CLK_25MHz2;
GC1_q_b[8]_PORT_B_data_out = MEMORY(GC1_q_b[8]_PORT_A_data_in_reg, , GC1_q_b[8]_PORT_A_address_reg, GC1_q_b[8]_PORT_B_address_reg, GC1_q_b[8]_PORT_A_write_enable_reg, GC1_q_b[8]_PORT_B_read_enable_reg, GC1_q_b[8]_PORT_A_byte_mask_reg, , GC1_q_b[8]_clock_0, GC1_q_b[8]_clock_1, , , , );
GC1_q_b[8]_PORT_B_data_out_reg = DFFE(GC1_q_b[8]_PORT_B_data_out, GC1_q_b[8]_clock_1, , , );
GC1_q_b[8] = GC1_q_b[8]_PORT_B_data_out_reg[0];


--GC1_q_b[16] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[16]_PORT_A_data_in = C1L0;
GC1_q_b[16]_PORT_A_data_in_reg = DFFE(GC1_q_b[16]_PORT_A_data_in, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[16]_PORT_A_address_reg = DFFE(GC1_q_b[16]_PORT_A_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[16]_PORT_B_address_reg = DFFE(GC1_q_b[16]_PORT_B_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_write_enable = B1L0;
GC1_q_b[16]_PORT_A_write_enable_reg = DFFE(GC1_q_b[16]_PORT_A_write_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[16]_PORT_B_read_enable_reg = DFFE(GC1_q_b[16]_PORT_B_read_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_byte_mask = A1L0;
GC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[16]_PORT_A_byte_mask, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_clock_0 = !CLK_25MHz2;
GC1_q_b[16]_clock_1 = !CLK_25MHz2;
GC1_q_b[16]_PORT_B_data_out = MEMORY(GC1_q_b[16]_PORT_A_data_in_reg, , GC1_q_b[16]_PORT_A_address_reg, GC1_q_b[16]_PORT_B_address_reg, GC1_q_b[16]_PORT_A_write_enable_reg, GC1_q_b[16]_PORT_B_read_enable_reg, GC1_q_b[16]_PORT_A_byte_mask_reg, , GC1_q_b[16]_clock_0, GC1_q_b[16]_clock_1, , , , );
GC1_q_b[16]_PORT_B_data_out_reg = DFFE(GC1_q_b[16]_PORT_B_data_out, GC1_q_b[16]_clock_1, , , );
GC1_q_b[16] = GC1_q_b[16]_PORT_B_data_out_reg[0];


--GC1_q_b[0] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[0]_PORT_A_data_in = C1L0;
GC1_q_b[0]_PORT_A_data_in_reg = DFFE(GC1_q_b[0]_PORT_A_data_in, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[0]_PORT_A_address_reg = DFFE(GC1_q_b[0]_PORT_A_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[0]_PORT_B_address_reg = DFFE(GC1_q_b[0]_PORT_B_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_write_enable = B1L0;
GC1_q_b[0]_PORT_A_write_enable_reg = DFFE(GC1_q_b[0]_PORT_A_write_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[0]_PORT_B_read_enable_reg = DFFE(GC1_q_b[0]_PORT_B_read_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_byte_mask = A1L0;
GC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[0]_PORT_A_byte_mask, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_clock_0 = !CLK_25MHz2;
GC1_q_b[0]_clock_1 = !CLK_25MHz2;
GC1_q_b[0]_PORT_B_data_out = MEMORY(GC1_q_b[0]_PORT_A_data_in_reg, , GC1_q_b[0]_PORT_A_address_reg, GC1_q_b[0]_PORT_B_address_reg, GC1_q_b[0]_PORT_A_write_enable_reg, GC1_q_b[0]_PORT_B_read_enable_reg, GC1_q_b[0]_PORT_A_byte_mask_reg, , GC1_q_b[0]_clock_0, GC1_q_b[0]_clock_1, , , , );
GC1_q_b[0]_PORT_B_data_out_reg = DFFE(GC1_q_b[0]_PORT_B_data_out, GC1_q_b[0]_clock_1, , , );
GC1_q_b[0] = GC1_q_b[0]_PORT_B_data_out_reg[0];


--GC1_q_b[24] is UART_MODULE:inst3|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[24]_PORT_A_data_in = C1L0;
GC1_q_b[24]_PORT_A_data_in_reg = DFFE(GC1_q_b[24]_PORT_A_data_in, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[24]_PORT_A_address_reg = DFFE(GC1_q_b[24]_PORT_A_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[24]_PORT_B_address_reg = DFFE(GC1_q_b[24]_PORT_B_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_write_enable = B1L0;
GC1_q_b[24]_PORT_A_write_enable_reg = DFFE(GC1_q_b[24]_PORT_A_write_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[24]_PORT_B_read_enable_reg = DFFE(GC1_q_b[24]_PORT_B_read_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_byte_mask = A1L0;
GC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[24]_PORT_A_byte_mask, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_clock_0 = !CLK_25MHz2;
GC1_q_b[24]_clock_1 = !CLK_25MHz2;
GC1_q_b[24]_PORT_B_data_out = MEMORY(GC1_q_b[24]_PORT_A_data_in_reg, , GC1_q_b[24]_PORT_A_address_reg, GC1_q_b[24]_PORT_B_address_reg, GC1_q_b[24]_PORT_A_write_enable_reg, GC1_q_b[24]_PORT_B_read_enable_reg, GC1_q_b[24]_PORT_A_byte_mask_reg, , GC1_q_b[24]_clock_0, GC1_q_b[24]_clock_1, , , , );
GC1_q_b[24]_PORT_B_data_out_reg = DFFE(GC1_q_b[24]_PORT_B_data_out, GC1_q_b[24]_clock_1, , , );
GC1_q_b[24] = GC1_q_b[24]_PORT_B_data_out_reg[0];


--GC1_q_b[12] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[12]_PORT_A_data_in = C1L0;
GC1_q_b[12]_PORT_A_data_in_reg = DFFE(GC1_q_b[12]_PORT_A_data_in, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[12]_PORT_A_address_reg = DFFE(GC1_q_b[12]_PORT_A_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[12]_PORT_B_address_reg = DFFE(GC1_q_b[12]_PORT_B_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_write_enable = B1L0;
GC1_q_b[12]_PORT_A_write_enable_reg = DFFE(GC1_q_b[12]_PORT_A_write_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[12]_PORT_B_read_enable_reg = DFFE(GC1_q_b[12]_PORT_B_read_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_byte_mask = A1L0;
GC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[12]_PORT_A_byte_mask, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_clock_0 = !CLK_25MHz2;
GC1_q_b[12]_clock_1 = !CLK_25MHz2;
GC1_q_b[12]_PORT_B_data_out = MEMORY(GC1_q_b[12]_PORT_A_data_in_reg, , GC1_q_b[12]_PORT_A_address_reg, GC1_q_b[12]_PORT_B_address_reg, GC1_q_b[12]_PORT_A_write_enable_reg, GC1_q_b[12]_PORT_B_read_enable_reg, GC1_q_b[12]_PORT_A_byte_mask_reg, , GC1_q_b[12]_clock_0, GC1_q_b[12]_clock_1, , , , );
GC1_q_b[12]_PORT_B_data_out_reg = DFFE(GC1_q_b[12]_PORT_B_data_out, GC1_q_b[12]_clock_1, , , );
GC1_q_b[12] = GC1_q_b[12]_PORT_B_data_out_reg[0];


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[0]~11
XB1L0 = (XB1_r_TxTail[0] & (SB1_o_Ready $ (GND))) # (!XB1_r_TxTail[0] & (!SB1_o_Ready & VCC));

--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[0]~12
XB1L0 = CARRY((XB1_r_TxTail[0] & !SB1_o_Ready));


--GC1_q_b[20] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[20]_PORT_A_data_in = C1L0;
GC1_q_b[20]_PORT_A_data_in_reg = DFFE(GC1_q_b[20]_PORT_A_data_in, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[20]_PORT_A_address_reg = DFFE(GC1_q_b[20]_PORT_A_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[20]_PORT_B_address_reg = DFFE(GC1_q_b[20]_PORT_B_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_write_enable = B1L0;
GC1_q_b[20]_PORT_A_write_enable_reg = DFFE(GC1_q_b[20]_PORT_A_write_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[20]_PORT_B_read_enable_reg = DFFE(GC1_q_b[20]_PORT_B_read_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_byte_mask = A1L0;
GC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[20]_PORT_A_byte_mask, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_clock_0 = !CLK_25MHz2;
GC1_q_b[20]_clock_1 = !CLK_25MHz2;
GC1_q_b[20]_PORT_B_data_out = MEMORY(GC1_q_b[20]_PORT_A_data_in_reg, , GC1_q_b[20]_PORT_A_address_reg, GC1_q_b[20]_PORT_B_address_reg, GC1_q_b[20]_PORT_A_write_enable_reg, GC1_q_b[20]_PORT_B_read_enable_reg, GC1_q_b[20]_PORT_A_byte_mask_reg, , GC1_q_b[20]_clock_0, GC1_q_b[20]_clock_1, , , , );
GC1_q_b[20]_PORT_B_data_out_reg = DFFE(GC1_q_b[20]_PORT_B_data_out, GC1_q_b[20]_clock_1, , , );
GC1_q_b[20] = GC1_q_b[20]_PORT_B_data_out_reg[0];


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[1]~13
XB1L0 = (XB1_r_TxTail[1] & (!XB1L0)) # (!XB1_r_TxTail[1] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[1]~14
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[1]));


--GC1_q_b[4] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[4]_PORT_A_data_in = C1L0;
GC1_q_b[4]_PORT_A_data_in_reg = DFFE(GC1_q_b[4]_PORT_A_data_in, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[4]_PORT_A_address_reg = DFFE(GC1_q_b[4]_PORT_A_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[4]_PORT_B_address_reg = DFFE(GC1_q_b[4]_PORT_B_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_write_enable = B1L0;
GC1_q_b[4]_PORT_A_write_enable_reg = DFFE(GC1_q_b[4]_PORT_A_write_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[4]_PORT_B_read_enable_reg = DFFE(GC1_q_b[4]_PORT_B_read_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_byte_mask = A1L0;
GC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[4]_PORT_A_byte_mask, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_clock_0 = !CLK_25MHz2;
GC1_q_b[4]_clock_1 = !CLK_25MHz2;
GC1_q_b[4]_PORT_B_data_out = MEMORY(GC1_q_b[4]_PORT_A_data_in_reg, , GC1_q_b[4]_PORT_A_address_reg, GC1_q_b[4]_PORT_B_address_reg, GC1_q_b[4]_PORT_A_write_enable_reg, GC1_q_b[4]_PORT_B_read_enable_reg, GC1_q_b[4]_PORT_A_byte_mask_reg, , GC1_q_b[4]_clock_0, GC1_q_b[4]_clock_1, , , , );
GC1_q_b[4]_PORT_B_data_out_reg = DFFE(GC1_q_b[4]_PORT_B_data_out, GC1_q_b[4]_clock_1, , , );
GC1_q_b[4] = GC1_q_b[4]_PORT_B_data_out_reg[0];


--GC1_q_b[28] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[28]_PORT_A_data_in = C1L0;
GC1_q_b[28]_PORT_A_data_in_reg = DFFE(GC1_q_b[28]_PORT_A_data_in, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[28]_PORT_A_address_reg = DFFE(GC1_q_b[28]_PORT_A_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[28]_PORT_B_address_reg = DFFE(GC1_q_b[28]_PORT_B_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_write_enable = B1L0;
GC1_q_b[28]_PORT_A_write_enable_reg = DFFE(GC1_q_b[28]_PORT_A_write_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[28]_PORT_B_read_enable_reg = DFFE(GC1_q_b[28]_PORT_B_read_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_byte_mask = A1L0;
GC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[28]_PORT_A_byte_mask, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_clock_0 = !CLK_25MHz2;
GC1_q_b[28]_clock_1 = !CLK_25MHz2;
GC1_q_b[28]_PORT_B_data_out = MEMORY(GC1_q_b[28]_PORT_A_data_in_reg, , GC1_q_b[28]_PORT_A_address_reg, GC1_q_b[28]_PORT_B_address_reg, GC1_q_b[28]_PORT_A_write_enable_reg, GC1_q_b[28]_PORT_B_read_enable_reg, GC1_q_b[28]_PORT_A_byte_mask_reg, , GC1_q_b[28]_clock_0, GC1_q_b[28]_clock_1, , , , );
GC1_q_b[28]_PORT_B_data_out_reg = DFFE(GC1_q_b[28]_PORT_B_data_out, GC1_q_b[28]_clock_1, , , );
GC1_q_b[28] = GC1_q_b[28]_PORT_B_data_out_reg[0];


--GC1_q_b[19] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[19]_PORT_A_data_in = C1L0;
GC1_q_b[19]_PORT_A_data_in_reg = DFFE(GC1_q_b[19]_PORT_A_data_in, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[19]_PORT_A_address_reg = DFFE(GC1_q_b[19]_PORT_A_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[19]_PORT_B_address_reg = DFFE(GC1_q_b[19]_PORT_B_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_write_enable = B1L0;
GC1_q_b[19]_PORT_A_write_enable_reg = DFFE(GC1_q_b[19]_PORT_A_write_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[19]_PORT_B_read_enable_reg = DFFE(GC1_q_b[19]_PORT_B_read_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_byte_mask = A1L0;
GC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[19]_PORT_A_byte_mask, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_clock_0 = !CLK_25MHz2;
GC1_q_b[19]_clock_1 = !CLK_25MHz2;
GC1_q_b[19]_PORT_B_data_out = MEMORY(GC1_q_b[19]_PORT_A_data_in_reg, , GC1_q_b[19]_PORT_A_address_reg, GC1_q_b[19]_PORT_B_address_reg, GC1_q_b[19]_PORT_A_write_enable_reg, GC1_q_b[19]_PORT_B_read_enable_reg, GC1_q_b[19]_PORT_A_byte_mask_reg, , GC1_q_b[19]_clock_0, GC1_q_b[19]_clock_1, , , , );
GC1_q_b[19]_PORT_B_data_out_reg = DFFE(GC1_q_b[19]_PORT_B_data_out, GC1_q_b[19]_clock_1, , , );
GC1_q_b[19] = GC1_q_b[19]_PORT_B_data_out_reg[0];


--GC1_q_b[11] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[11]_PORT_A_data_in = C1L0;
GC1_q_b[11]_PORT_A_data_in_reg = DFFE(GC1_q_b[11]_PORT_A_data_in, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[11]_PORT_A_address_reg = DFFE(GC1_q_b[11]_PORT_A_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[11]_PORT_B_address_reg = DFFE(GC1_q_b[11]_PORT_B_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_write_enable = B1L0;
GC1_q_b[11]_PORT_A_write_enable_reg = DFFE(GC1_q_b[11]_PORT_A_write_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[11]_PORT_B_read_enable_reg = DFFE(GC1_q_b[11]_PORT_B_read_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_byte_mask = A1L0;
GC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[11]_PORT_A_byte_mask, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_clock_0 = !CLK_25MHz2;
GC1_q_b[11]_clock_1 = !CLK_25MHz2;
GC1_q_b[11]_PORT_B_data_out = MEMORY(GC1_q_b[11]_PORT_A_data_in_reg, , GC1_q_b[11]_PORT_A_address_reg, GC1_q_b[11]_PORT_B_address_reg, GC1_q_b[11]_PORT_A_write_enable_reg, GC1_q_b[11]_PORT_B_read_enable_reg, GC1_q_b[11]_PORT_A_byte_mask_reg, , GC1_q_b[11]_clock_0, GC1_q_b[11]_clock_1, , , , );
GC1_q_b[11]_PORT_B_data_out_reg = DFFE(GC1_q_b[11]_PORT_B_data_out, GC1_q_b[11]_clock_1, , , );
GC1_q_b[11] = GC1_q_b[11]_PORT_B_data_out_reg[0];


--GC1_q_b[3] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[3]_PORT_A_data_in = C1L0;
GC1_q_b[3]_PORT_A_data_in_reg = DFFE(GC1_q_b[3]_PORT_A_data_in, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[3]_PORT_A_address_reg = DFFE(GC1_q_b[3]_PORT_A_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[3]_PORT_B_address_reg = DFFE(GC1_q_b[3]_PORT_B_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_write_enable = B1L0;
GC1_q_b[3]_PORT_A_write_enable_reg = DFFE(GC1_q_b[3]_PORT_A_write_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[3]_PORT_B_read_enable_reg = DFFE(GC1_q_b[3]_PORT_B_read_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_byte_mask = A1L0;
GC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[3]_PORT_A_byte_mask, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_clock_0 = !CLK_25MHz2;
GC1_q_b[3]_clock_1 = !CLK_25MHz2;
GC1_q_b[3]_PORT_B_data_out = MEMORY(GC1_q_b[3]_PORT_A_data_in_reg, , GC1_q_b[3]_PORT_A_address_reg, GC1_q_b[3]_PORT_B_address_reg, GC1_q_b[3]_PORT_A_write_enable_reg, GC1_q_b[3]_PORT_B_read_enable_reg, GC1_q_b[3]_PORT_A_byte_mask_reg, , GC1_q_b[3]_clock_0, GC1_q_b[3]_clock_1, , , , );
GC1_q_b[3]_PORT_B_data_out_reg = DFFE(GC1_q_b[3]_PORT_B_data_out, GC1_q_b[3]_clock_1, , , );
GC1_q_b[3] = GC1_q_b[3]_PORT_B_data_out_reg[0];


--GC1_q_b[27] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[27]_PORT_A_data_in = C1L0;
GC1_q_b[27]_PORT_A_data_in_reg = DFFE(GC1_q_b[27]_PORT_A_data_in, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[27]_PORT_A_address_reg = DFFE(GC1_q_b[27]_PORT_A_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[27]_PORT_B_address_reg = DFFE(GC1_q_b[27]_PORT_B_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_write_enable = B1L0;
GC1_q_b[27]_PORT_A_write_enable_reg = DFFE(GC1_q_b[27]_PORT_A_write_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[27]_PORT_B_read_enable_reg = DFFE(GC1_q_b[27]_PORT_B_read_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_byte_mask = A1L0;
GC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[27]_PORT_A_byte_mask, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_clock_0 = !CLK_25MHz2;
GC1_q_b[27]_clock_1 = !CLK_25MHz2;
GC1_q_b[27]_PORT_B_data_out = MEMORY(GC1_q_b[27]_PORT_A_data_in_reg, , GC1_q_b[27]_PORT_A_address_reg, GC1_q_b[27]_PORT_B_address_reg, GC1_q_b[27]_PORT_A_write_enable_reg, GC1_q_b[27]_PORT_B_read_enable_reg, GC1_q_b[27]_PORT_A_byte_mask_reg, , GC1_q_b[27]_clock_0, GC1_q_b[27]_clock_1, , , , );
GC1_q_b[27]_PORT_B_data_out_reg = DFFE(GC1_q_b[27]_PORT_B_data_out, GC1_q_b[27]_clock_1, , , );
GC1_q_b[27] = GC1_q_b[27]_PORT_B_data_out_reg[0];


--GC1_q_b[10] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[10]_PORT_A_data_in = C1L0;
GC1_q_b[10]_PORT_A_data_in_reg = DFFE(GC1_q_b[10]_PORT_A_data_in, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[10]_PORT_A_address_reg = DFFE(GC1_q_b[10]_PORT_A_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[10]_PORT_B_address_reg = DFFE(GC1_q_b[10]_PORT_B_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_write_enable = B1L0;
GC1_q_b[10]_PORT_A_write_enable_reg = DFFE(GC1_q_b[10]_PORT_A_write_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[10]_PORT_B_read_enable_reg = DFFE(GC1_q_b[10]_PORT_B_read_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_byte_mask = A1L0;
GC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[10]_PORT_A_byte_mask, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_clock_0 = !CLK_25MHz2;
GC1_q_b[10]_clock_1 = !CLK_25MHz2;
GC1_q_b[10]_PORT_B_data_out = MEMORY(GC1_q_b[10]_PORT_A_data_in_reg, , GC1_q_b[10]_PORT_A_address_reg, GC1_q_b[10]_PORT_B_address_reg, GC1_q_b[10]_PORT_A_write_enable_reg, GC1_q_b[10]_PORT_B_read_enable_reg, GC1_q_b[10]_PORT_A_byte_mask_reg, , GC1_q_b[10]_clock_0, GC1_q_b[10]_clock_1, , , , );
GC1_q_b[10]_PORT_B_data_out_reg = DFFE(GC1_q_b[10]_PORT_B_data_out, GC1_q_b[10]_clock_1, , , );
GC1_q_b[10] = GC1_q_b[10]_PORT_B_data_out_reg[0];


--GC1_q_b[18] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[18]_PORT_A_data_in = C1L0;
GC1_q_b[18]_PORT_A_data_in_reg = DFFE(GC1_q_b[18]_PORT_A_data_in, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[18]_PORT_A_address_reg = DFFE(GC1_q_b[18]_PORT_A_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[18]_PORT_B_address_reg = DFFE(GC1_q_b[18]_PORT_B_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_write_enable = B1L0;
GC1_q_b[18]_PORT_A_write_enable_reg = DFFE(GC1_q_b[18]_PORT_A_write_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[18]_PORT_B_read_enable_reg = DFFE(GC1_q_b[18]_PORT_B_read_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_byte_mask = A1L0;
GC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[18]_PORT_A_byte_mask, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_clock_0 = !CLK_25MHz2;
GC1_q_b[18]_clock_1 = !CLK_25MHz2;
GC1_q_b[18]_PORT_B_data_out = MEMORY(GC1_q_b[18]_PORT_A_data_in_reg, , GC1_q_b[18]_PORT_A_address_reg, GC1_q_b[18]_PORT_B_address_reg, GC1_q_b[18]_PORT_A_write_enable_reg, GC1_q_b[18]_PORT_B_read_enable_reg, GC1_q_b[18]_PORT_A_byte_mask_reg, , GC1_q_b[18]_clock_0, GC1_q_b[18]_clock_1, , , , );
GC1_q_b[18]_PORT_B_data_out_reg = DFFE(GC1_q_b[18]_PORT_B_data_out, GC1_q_b[18]_clock_1, , , );
GC1_q_b[18] = GC1_q_b[18]_PORT_B_data_out_reg[0];


--GC1_q_b[2] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[2]_PORT_A_data_in = C1L0;
GC1_q_b[2]_PORT_A_data_in_reg = DFFE(GC1_q_b[2]_PORT_A_data_in, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[2]_PORT_A_address_reg = DFFE(GC1_q_b[2]_PORT_A_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[2]_PORT_B_address_reg = DFFE(GC1_q_b[2]_PORT_B_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_write_enable = B1L0;
GC1_q_b[2]_PORT_A_write_enable_reg = DFFE(GC1_q_b[2]_PORT_A_write_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[2]_PORT_B_read_enable_reg = DFFE(GC1_q_b[2]_PORT_B_read_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_byte_mask = A1L0;
GC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[2]_PORT_A_byte_mask, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_clock_0 = !CLK_25MHz2;
GC1_q_b[2]_clock_1 = !CLK_25MHz2;
GC1_q_b[2]_PORT_B_data_out = MEMORY(GC1_q_b[2]_PORT_A_data_in_reg, , GC1_q_b[2]_PORT_A_address_reg, GC1_q_b[2]_PORT_B_address_reg, GC1_q_b[2]_PORT_A_write_enable_reg, GC1_q_b[2]_PORT_B_read_enable_reg, GC1_q_b[2]_PORT_A_byte_mask_reg, , GC1_q_b[2]_clock_0, GC1_q_b[2]_clock_1, , , , );
GC1_q_b[2]_PORT_B_data_out_reg = DFFE(GC1_q_b[2]_PORT_B_data_out, GC1_q_b[2]_clock_1, , , );
GC1_q_b[2] = GC1_q_b[2]_PORT_B_data_out_reg[0];


--GC1_q_b[26] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[26]_PORT_A_data_in = C1L0;
GC1_q_b[26]_PORT_A_data_in_reg = DFFE(GC1_q_b[26]_PORT_A_data_in, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[26]_PORT_A_address_reg = DFFE(GC1_q_b[26]_PORT_A_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[26]_PORT_B_address_reg = DFFE(GC1_q_b[26]_PORT_B_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_write_enable = B1L0;
GC1_q_b[26]_PORT_A_write_enable_reg = DFFE(GC1_q_b[26]_PORT_A_write_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[26]_PORT_B_read_enable_reg = DFFE(GC1_q_b[26]_PORT_B_read_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_byte_mask = A1L0;
GC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[26]_PORT_A_byte_mask, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_clock_0 = !CLK_25MHz2;
GC1_q_b[26]_clock_1 = !CLK_25MHz2;
GC1_q_b[26]_PORT_B_data_out = MEMORY(GC1_q_b[26]_PORT_A_data_in_reg, , GC1_q_b[26]_PORT_A_address_reg, GC1_q_b[26]_PORT_B_address_reg, GC1_q_b[26]_PORT_A_write_enable_reg, GC1_q_b[26]_PORT_B_read_enable_reg, GC1_q_b[26]_PORT_A_byte_mask_reg, , GC1_q_b[26]_clock_0, GC1_q_b[26]_clock_1, , , , );
GC1_q_b[26]_PORT_B_data_out_reg = DFFE(GC1_q_b[26]_PORT_B_data_out, GC1_q_b[26]_clock_1, , , );
GC1_q_b[26] = GC1_q_b[26]_PORT_B_data_out_reg[0];


--GC1_q_b[21] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[21]_PORT_A_data_in = C1L0;
GC1_q_b[21]_PORT_A_data_in_reg = DFFE(GC1_q_b[21]_PORT_A_data_in, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[21]_PORT_A_address_reg = DFFE(GC1_q_b[21]_PORT_A_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[21]_PORT_B_address_reg = DFFE(GC1_q_b[21]_PORT_B_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_write_enable = B1L0;
GC1_q_b[21]_PORT_A_write_enable_reg = DFFE(GC1_q_b[21]_PORT_A_write_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[21]_PORT_B_read_enable_reg = DFFE(GC1_q_b[21]_PORT_B_read_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_byte_mask = A1L0;
GC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[21]_PORT_A_byte_mask, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_clock_0 = !CLK_25MHz2;
GC1_q_b[21]_clock_1 = !CLK_25MHz2;
GC1_q_b[21]_PORT_B_data_out = MEMORY(GC1_q_b[21]_PORT_A_data_in_reg, , GC1_q_b[21]_PORT_A_address_reg, GC1_q_b[21]_PORT_B_address_reg, GC1_q_b[21]_PORT_A_write_enable_reg, GC1_q_b[21]_PORT_B_read_enable_reg, GC1_q_b[21]_PORT_A_byte_mask_reg, , GC1_q_b[21]_clock_0, GC1_q_b[21]_clock_1, , , , );
GC1_q_b[21]_PORT_B_data_out_reg = DFFE(GC1_q_b[21]_PORT_B_data_out, GC1_q_b[21]_clock_1, , , );
GC1_q_b[21] = GC1_q_b[21]_PORT_B_data_out_reg[0];


--GC1_q_b[13] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[13]_PORT_A_data_in = C1L0;
GC1_q_b[13]_PORT_A_data_in_reg = DFFE(GC1_q_b[13]_PORT_A_data_in, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[13]_PORT_A_address_reg = DFFE(GC1_q_b[13]_PORT_A_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[13]_PORT_B_address_reg = DFFE(GC1_q_b[13]_PORT_B_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_write_enable = B1L0;
GC1_q_b[13]_PORT_A_write_enable_reg = DFFE(GC1_q_b[13]_PORT_A_write_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[13]_PORT_B_read_enable_reg = DFFE(GC1_q_b[13]_PORT_B_read_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_byte_mask = A1L0;
GC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[13]_PORT_A_byte_mask, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_clock_0 = !CLK_25MHz2;
GC1_q_b[13]_clock_1 = !CLK_25MHz2;
GC1_q_b[13]_PORT_B_data_out = MEMORY(GC1_q_b[13]_PORT_A_data_in_reg, , GC1_q_b[13]_PORT_A_address_reg, GC1_q_b[13]_PORT_B_address_reg, GC1_q_b[13]_PORT_A_write_enable_reg, GC1_q_b[13]_PORT_B_read_enable_reg, GC1_q_b[13]_PORT_A_byte_mask_reg, , GC1_q_b[13]_clock_0, GC1_q_b[13]_clock_1, , , , );
GC1_q_b[13]_PORT_B_data_out_reg = DFFE(GC1_q_b[13]_PORT_B_data_out, GC1_q_b[13]_clock_1, , , );
GC1_q_b[13] = GC1_q_b[13]_PORT_B_data_out_reg[0];


--GC1_q_b[5] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[5]_PORT_A_data_in = C1L0;
GC1_q_b[5]_PORT_A_data_in_reg = DFFE(GC1_q_b[5]_PORT_A_data_in, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[5]_PORT_A_address_reg = DFFE(GC1_q_b[5]_PORT_A_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[5]_PORT_B_address_reg = DFFE(GC1_q_b[5]_PORT_B_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_write_enable = B1L0;
GC1_q_b[5]_PORT_A_write_enable_reg = DFFE(GC1_q_b[5]_PORT_A_write_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[5]_PORT_B_read_enable_reg = DFFE(GC1_q_b[5]_PORT_B_read_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_byte_mask = A1L0;
GC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[5]_PORT_A_byte_mask, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_clock_0 = !CLK_25MHz2;
GC1_q_b[5]_clock_1 = !CLK_25MHz2;
GC1_q_b[5]_PORT_B_data_out = MEMORY(GC1_q_b[5]_PORT_A_data_in_reg, , GC1_q_b[5]_PORT_A_address_reg, GC1_q_b[5]_PORT_B_address_reg, GC1_q_b[5]_PORT_A_write_enable_reg, GC1_q_b[5]_PORT_B_read_enable_reg, GC1_q_b[5]_PORT_A_byte_mask_reg, , GC1_q_b[5]_clock_0, GC1_q_b[5]_clock_1, , , , );
GC1_q_b[5]_PORT_B_data_out_reg = DFFE(GC1_q_b[5]_PORT_B_data_out, GC1_q_b[5]_clock_1, , , );
GC1_q_b[5] = GC1_q_b[5]_PORT_B_data_out_reg[0];


--GC1_q_b[29] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[29]_PORT_A_data_in = C1L0;
GC1_q_b[29]_PORT_A_data_in_reg = DFFE(GC1_q_b[29]_PORT_A_data_in, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[29]_PORT_A_address_reg = DFFE(GC1_q_b[29]_PORT_A_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[29]_PORT_B_address_reg = DFFE(GC1_q_b[29]_PORT_B_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_write_enable = B1L0;
GC1_q_b[29]_PORT_A_write_enable_reg = DFFE(GC1_q_b[29]_PORT_A_write_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[29]_PORT_B_read_enable_reg = DFFE(GC1_q_b[29]_PORT_B_read_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_byte_mask = A1L0;
GC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[29]_PORT_A_byte_mask, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_clock_0 = !CLK_25MHz2;
GC1_q_b[29]_clock_1 = !CLK_25MHz2;
GC1_q_b[29]_PORT_B_data_out = MEMORY(GC1_q_b[29]_PORT_A_data_in_reg, , GC1_q_b[29]_PORT_A_address_reg, GC1_q_b[29]_PORT_B_address_reg, GC1_q_b[29]_PORT_A_write_enable_reg, GC1_q_b[29]_PORT_B_read_enable_reg, GC1_q_b[29]_PORT_A_byte_mask_reg, , GC1_q_b[29]_clock_0, GC1_q_b[29]_clock_1, , , , );
GC1_q_b[29]_PORT_B_data_out_reg = DFFE(GC1_q_b[29]_PORT_B_data_out, GC1_q_b[29]_clock_1, , , );
GC1_q_b[29] = GC1_q_b[29]_PORT_B_data_out_reg[0];


--GC1_q_b[23] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[23]_PORT_A_data_in = C1L0;
GC1_q_b[23]_PORT_A_data_in_reg = DFFE(GC1_q_b[23]_PORT_A_data_in, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[23]_PORT_A_address_reg = DFFE(GC1_q_b[23]_PORT_A_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[23]_PORT_B_address_reg = DFFE(GC1_q_b[23]_PORT_B_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_write_enable = B1L0;
GC1_q_b[23]_PORT_A_write_enable_reg = DFFE(GC1_q_b[23]_PORT_A_write_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[23]_PORT_B_read_enable_reg = DFFE(GC1_q_b[23]_PORT_B_read_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_byte_mask = A1L0;
GC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[23]_PORT_A_byte_mask, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_clock_0 = !CLK_25MHz2;
GC1_q_b[23]_clock_1 = !CLK_25MHz2;
GC1_q_b[23]_PORT_B_data_out = MEMORY(GC1_q_b[23]_PORT_A_data_in_reg, , GC1_q_b[23]_PORT_A_address_reg, GC1_q_b[23]_PORT_B_address_reg, GC1_q_b[23]_PORT_A_write_enable_reg, GC1_q_b[23]_PORT_B_read_enable_reg, GC1_q_b[23]_PORT_A_byte_mask_reg, , GC1_q_b[23]_clock_0, GC1_q_b[23]_clock_1, , , , );
GC1_q_b[23]_PORT_B_data_out_reg = DFFE(GC1_q_b[23]_PORT_B_data_out, GC1_q_b[23]_clock_1, , , );
GC1_q_b[23] = GC1_q_b[23]_PORT_B_data_out_reg[0];


--GC1_q_b[15] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[15]_PORT_A_data_in = C1L0;
GC1_q_b[15]_PORT_A_data_in_reg = DFFE(GC1_q_b[15]_PORT_A_data_in, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[15]_PORT_A_address_reg = DFFE(GC1_q_b[15]_PORT_A_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[15]_PORT_B_address_reg = DFFE(GC1_q_b[15]_PORT_B_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_write_enable = B1L0;
GC1_q_b[15]_PORT_A_write_enable_reg = DFFE(GC1_q_b[15]_PORT_A_write_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[15]_PORT_B_read_enable_reg = DFFE(GC1_q_b[15]_PORT_B_read_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_byte_mask = A1L0;
GC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[15]_PORT_A_byte_mask, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_clock_0 = !CLK_25MHz2;
GC1_q_b[15]_clock_1 = !CLK_25MHz2;
GC1_q_b[15]_PORT_B_data_out = MEMORY(GC1_q_b[15]_PORT_A_data_in_reg, , GC1_q_b[15]_PORT_A_address_reg, GC1_q_b[15]_PORT_B_address_reg, GC1_q_b[15]_PORT_A_write_enable_reg, GC1_q_b[15]_PORT_B_read_enable_reg, GC1_q_b[15]_PORT_A_byte_mask_reg, , GC1_q_b[15]_clock_0, GC1_q_b[15]_clock_1, , , , );
GC1_q_b[15]_PORT_B_data_out_reg = DFFE(GC1_q_b[15]_PORT_B_data_out, GC1_q_b[15]_clock_1, , , );
GC1_q_b[15] = GC1_q_b[15]_PORT_B_data_out_reg[0];


--GC1_q_b[7] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[7]_PORT_A_data_in = C1L0;
GC1_q_b[7]_PORT_A_data_in_reg = DFFE(GC1_q_b[7]_PORT_A_data_in, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[7]_PORT_A_address_reg = DFFE(GC1_q_b[7]_PORT_A_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[7]_PORT_B_address_reg = DFFE(GC1_q_b[7]_PORT_B_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_write_enable = B1L0;
GC1_q_b[7]_PORT_A_write_enable_reg = DFFE(GC1_q_b[7]_PORT_A_write_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[7]_PORT_B_read_enable_reg = DFFE(GC1_q_b[7]_PORT_B_read_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_byte_mask = A1L0;
GC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[7]_PORT_A_byte_mask, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_clock_0 = !CLK_25MHz2;
GC1_q_b[7]_clock_1 = !CLK_25MHz2;
GC1_q_b[7]_PORT_B_data_out = MEMORY(GC1_q_b[7]_PORT_A_data_in_reg, , GC1_q_b[7]_PORT_A_address_reg, GC1_q_b[7]_PORT_B_address_reg, GC1_q_b[7]_PORT_A_write_enable_reg, GC1_q_b[7]_PORT_B_read_enable_reg, GC1_q_b[7]_PORT_A_byte_mask_reg, , GC1_q_b[7]_clock_0, GC1_q_b[7]_clock_1, , , , );
GC1_q_b[7]_PORT_B_data_out_reg = DFFE(GC1_q_b[7]_PORT_B_data_out, GC1_q_b[7]_clock_1, , , );
GC1_q_b[7] = GC1_q_b[7]_PORT_B_data_out_reg[0];


--GC1_q_b[31] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[31]_PORT_A_data_in = C1L0;
GC1_q_b[31]_PORT_A_data_in_reg = DFFE(GC1_q_b[31]_PORT_A_data_in, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[31]_PORT_A_address_reg = DFFE(GC1_q_b[31]_PORT_A_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[31]_PORT_B_address_reg = DFFE(GC1_q_b[31]_PORT_B_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_write_enable = B1L0;
GC1_q_b[31]_PORT_A_write_enable_reg = DFFE(GC1_q_b[31]_PORT_A_write_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[31]_PORT_B_read_enable_reg = DFFE(GC1_q_b[31]_PORT_B_read_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_byte_mask = A1L0;
GC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[31]_PORT_A_byte_mask, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_clock_0 = !CLK_25MHz2;
GC1_q_b[31]_clock_1 = !CLK_25MHz2;
GC1_q_b[31]_PORT_B_data_out = MEMORY(GC1_q_b[31]_PORT_A_data_in_reg, , GC1_q_b[31]_PORT_A_address_reg, GC1_q_b[31]_PORT_B_address_reg, GC1_q_b[31]_PORT_A_write_enable_reg, GC1_q_b[31]_PORT_B_read_enable_reg, GC1_q_b[31]_PORT_A_byte_mask_reg, , GC1_q_b[31]_clock_0, GC1_q_b[31]_clock_1, , , , );
GC1_q_b[31]_PORT_B_data_out_reg = DFFE(GC1_q_b[31]_PORT_B_data_out, GC1_q_b[31]_clock_1, , , );
GC1_q_b[31] = GC1_q_b[31]_PORT_B_data_out_reg[0];


--GC1_q_b[14] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[14]_PORT_A_data_in = C1L0;
GC1_q_b[14]_PORT_A_data_in_reg = DFFE(GC1_q_b[14]_PORT_A_data_in, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[14]_PORT_A_address_reg = DFFE(GC1_q_b[14]_PORT_A_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[14]_PORT_B_address_reg = DFFE(GC1_q_b[14]_PORT_B_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_write_enable = B1L0;
GC1_q_b[14]_PORT_A_write_enable_reg = DFFE(GC1_q_b[14]_PORT_A_write_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[14]_PORT_B_read_enable_reg = DFFE(GC1_q_b[14]_PORT_B_read_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_byte_mask = A1L0;
GC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[14]_PORT_A_byte_mask, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_clock_0 = !CLK_25MHz2;
GC1_q_b[14]_clock_1 = !CLK_25MHz2;
GC1_q_b[14]_PORT_B_data_out = MEMORY(GC1_q_b[14]_PORT_A_data_in_reg, , GC1_q_b[14]_PORT_A_address_reg, GC1_q_b[14]_PORT_B_address_reg, GC1_q_b[14]_PORT_A_write_enable_reg, GC1_q_b[14]_PORT_B_read_enable_reg, GC1_q_b[14]_PORT_A_byte_mask_reg, , GC1_q_b[14]_clock_0, GC1_q_b[14]_clock_1, , , , );
GC1_q_b[14]_PORT_B_data_out_reg = DFFE(GC1_q_b[14]_PORT_B_data_out, GC1_q_b[14]_clock_1, , , );
GC1_q_b[14] = GC1_q_b[14]_PORT_B_data_out_reg[0];


--GC1_q_b[22] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[22]_PORT_A_data_in = C1L0;
GC1_q_b[22]_PORT_A_data_in_reg = DFFE(GC1_q_b[22]_PORT_A_data_in, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[22]_PORT_A_address_reg = DFFE(GC1_q_b[22]_PORT_A_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[22]_PORT_B_address_reg = DFFE(GC1_q_b[22]_PORT_B_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_write_enable = B1L0;
GC1_q_b[22]_PORT_A_write_enable_reg = DFFE(GC1_q_b[22]_PORT_A_write_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[22]_PORT_B_read_enable_reg = DFFE(GC1_q_b[22]_PORT_B_read_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_byte_mask = A1L0;
GC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[22]_PORT_A_byte_mask, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_clock_0 = !CLK_25MHz2;
GC1_q_b[22]_clock_1 = !CLK_25MHz2;
GC1_q_b[22]_PORT_B_data_out = MEMORY(GC1_q_b[22]_PORT_A_data_in_reg, , GC1_q_b[22]_PORT_A_address_reg, GC1_q_b[22]_PORT_B_address_reg, GC1_q_b[22]_PORT_A_write_enable_reg, GC1_q_b[22]_PORT_B_read_enable_reg, GC1_q_b[22]_PORT_A_byte_mask_reg, , GC1_q_b[22]_clock_0, GC1_q_b[22]_clock_1, , , , );
GC1_q_b[22]_PORT_B_data_out_reg = DFFE(GC1_q_b[22]_PORT_B_data_out, GC1_q_b[22]_clock_1, , , );
GC1_q_b[22] = GC1_q_b[22]_PORT_B_data_out_reg[0];


--GC1_q_b[6] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[6]_PORT_A_data_in = C1L0;
GC1_q_b[6]_PORT_A_data_in_reg = DFFE(GC1_q_b[6]_PORT_A_data_in, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[6]_PORT_A_address_reg = DFFE(GC1_q_b[6]_PORT_A_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[6]_PORT_B_address_reg = DFFE(GC1_q_b[6]_PORT_B_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_write_enable = B1L0;
GC1_q_b[6]_PORT_A_write_enable_reg = DFFE(GC1_q_b[6]_PORT_A_write_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[6]_PORT_B_read_enable_reg = DFFE(GC1_q_b[6]_PORT_B_read_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_byte_mask = A1L0;
GC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[6]_PORT_A_byte_mask, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_clock_0 = !CLK_25MHz2;
GC1_q_b[6]_clock_1 = !CLK_25MHz2;
GC1_q_b[6]_PORT_B_data_out = MEMORY(GC1_q_b[6]_PORT_A_data_in_reg, , GC1_q_b[6]_PORT_A_address_reg, GC1_q_b[6]_PORT_B_address_reg, GC1_q_b[6]_PORT_A_write_enable_reg, GC1_q_b[6]_PORT_B_read_enable_reg, GC1_q_b[6]_PORT_A_byte_mask_reg, , GC1_q_b[6]_clock_0, GC1_q_b[6]_clock_1, , , , );
GC1_q_b[6]_PORT_B_data_out_reg = DFFE(GC1_q_b[6]_PORT_B_data_out, GC1_q_b[6]_clock_1, , , );
GC1_q_b[6] = GC1_q_b[6]_PORT_B_data_out_reg[0];


--GC1_q_b[30] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[30]_PORT_A_data_in = C1L0;
GC1_q_b[30]_PORT_A_data_in_reg = DFFE(GC1_q_b[30]_PORT_A_data_in, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[30]_PORT_A_address_reg = DFFE(GC1_q_b[30]_PORT_A_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[30]_PORT_B_address_reg = DFFE(GC1_q_b[30]_PORT_B_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_write_enable = B1L0;
GC1_q_b[30]_PORT_A_write_enable_reg = DFFE(GC1_q_b[30]_PORT_A_write_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[30]_PORT_B_read_enable_reg = DFFE(GC1_q_b[30]_PORT_B_read_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_byte_mask = A1L0;
GC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[30]_PORT_A_byte_mask, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_clock_0 = !CLK_25MHz2;
GC1_q_b[30]_clock_1 = !CLK_25MHz2;
GC1_q_b[30]_PORT_B_data_out = MEMORY(GC1_q_b[30]_PORT_A_data_in_reg, , GC1_q_b[30]_PORT_A_address_reg, GC1_q_b[30]_PORT_B_address_reg, GC1_q_b[30]_PORT_A_write_enable_reg, GC1_q_b[30]_PORT_B_read_enable_reg, GC1_q_b[30]_PORT_A_byte_mask_reg, , GC1_q_b[30]_clock_0, GC1_q_b[30]_clock_1, , , , );
GC1_q_b[30]_PORT_B_data_out_reg = DFFE(GC1_q_b[30]_PORT_B_data_out, GC1_q_b[30]_clock_1, , , );
GC1_q_b[30] = GC1_q_b[30]_PORT_B_data_out_reg[0];


--GC1_q_b[17] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[17]_PORT_A_data_in = C1L0;
GC1_q_b[17]_PORT_A_data_in_reg = DFFE(GC1_q_b[17]_PORT_A_data_in, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[17]_PORT_A_address_reg = DFFE(GC1_q_b[17]_PORT_A_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[17]_PORT_B_address_reg = DFFE(GC1_q_b[17]_PORT_B_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_write_enable = B1L0;
GC1_q_b[17]_PORT_A_write_enable_reg = DFFE(GC1_q_b[17]_PORT_A_write_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[17]_PORT_B_read_enable_reg = DFFE(GC1_q_b[17]_PORT_B_read_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_byte_mask = A1L0;
GC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[17]_PORT_A_byte_mask, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_clock_0 = !CLK_25MHz2;
GC1_q_b[17]_clock_1 = !CLK_25MHz2;
GC1_q_b[17]_PORT_B_data_out = MEMORY(GC1_q_b[17]_PORT_A_data_in_reg, , GC1_q_b[17]_PORT_A_address_reg, GC1_q_b[17]_PORT_B_address_reg, GC1_q_b[17]_PORT_A_write_enable_reg, GC1_q_b[17]_PORT_B_read_enable_reg, GC1_q_b[17]_PORT_A_byte_mask_reg, , GC1_q_b[17]_clock_0, GC1_q_b[17]_clock_1, , , , );
GC1_q_b[17]_PORT_B_data_out_reg = DFFE(GC1_q_b[17]_PORT_B_data_out, GC1_q_b[17]_clock_1, , , );
GC1_q_b[17] = GC1_q_b[17]_PORT_B_data_out_reg[0];


--GC1_q_b[9] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[9]_PORT_A_data_in = C1L0;
GC1_q_b[9]_PORT_A_data_in_reg = DFFE(GC1_q_b[9]_PORT_A_data_in, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[9]_PORT_A_address_reg = DFFE(GC1_q_b[9]_PORT_A_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[9]_PORT_B_address_reg = DFFE(GC1_q_b[9]_PORT_B_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_write_enable = B1L0;
GC1_q_b[9]_PORT_A_write_enable_reg = DFFE(GC1_q_b[9]_PORT_A_write_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[9]_PORT_B_read_enable_reg = DFFE(GC1_q_b[9]_PORT_B_read_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_byte_mask = A1L0;
GC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[9]_PORT_A_byte_mask, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_clock_0 = !CLK_25MHz2;
GC1_q_b[9]_clock_1 = !CLK_25MHz2;
GC1_q_b[9]_PORT_B_data_out = MEMORY(GC1_q_b[9]_PORT_A_data_in_reg, , GC1_q_b[9]_PORT_A_address_reg, GC1_q_b[9]_PORT_B_address_reg, GC1_q_b[9]_PORT_A_write_enable_reg, GC1_q_b[9]_PORT_B_read_enable_reg, GC1_q_b[9]_PORT_A_byte_mask_reg, , GC1_q_b[9]_clock_0, GC1_q_b[9]_clock_1, , , , );
GC1_q_b[9]_PORT_B_data_out_reg = DFFE(GC1_q_b[9]_PORT_B_data_out, GC1_q_b[9]_clock_1, , , );
GC1_q_b[9] = GC1_q_b[9]_PORT_B_data_out_reg[0];


--GC1_q_b[1] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[1]_PORT_A_data_in = C1L0;
GC1_q_b[1]_PORT_A_data_in_reg = DFFE(GC1_q_b[1]_PORT_A_data_in, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[1]_PORT_A_address_reg = DFFE(GC1_q_b[1]_PORT_A_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[1]_PORT_B_address_reg = DFFE(GC1_q_b[1]_PORT_B_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_write_enable = B1L0;
GC1_q_b[1]_PORT_A_write_enable_reg = DFFE(GC1_q_b[1]_PORT_A_write_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[1]_PORT_B_read_enable_reg = DFFE(GC1_q_b[1]_PORT_B_read_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_byte_mask = A1L0;
GC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[1]_PORT_A_byte_mask, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_clock_0 = !CLK_25MHz2;
GC1_q_b[1]_clock_1 = !CLK_25MHz2;
GC1_q_b[1]_PORT_B_data_out = MEMORY(GC1_q_b[1]_PORT_A_data_in_reg, , GC1_q_b[1]_PORT_A_address_reg, GC1_q_b[1]_PORT_B_address_reg, GC1_q_b[1]_PORT_A_write_enable_reg, GC1_q_b[1]_PORT_B_read_enable_reg, GC1_q_b[1]_PORT_A_byte_mask_reg, , GC1_q_b[1]_clock_0, GC1_q_b[1]_clock_1, , , , );
GC1_q_b[1]_PORT_B_data_out_reg = DFFE(GC1_q_b[1]_PORT_B_data_out, GC1_q_b[1]_clock_1, , , );
GC1_q_b[1] = GC1_q_b[1]_PORT_B_data_out_reg[0];


--GC1_q_b[25] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[25]_PORT_A_data_in = C1L0;
GC1_q_b[25]_PORT_A_data_in_reg = DFFE(GC1_q_b[25]_PORT_A_data_in, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[25]_PORT_A_address_reg = DFFE(GC1_q_b[25]_PORT_A_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[25]_PORT_B_address_reg = DFFE(GC1_q_b[25]_PORT_B_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_write_enable = B1L0;
GC1_q_b[25]_PORT_A_write_enable_reg = DFFE(GC1_q_b[25]_PORT_A_write_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[25]_PORT_B_read_enable_reg = DFFE(GC1_q_b[25]_PORT_B_read_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_byte_mask = A1L0;
GC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[25]_PORT_A_byte_mask, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_clock_0 = !CLK_25MHz2;
GC1_q_b[25]_clock_1 = !CLK_25MHz2;
GC1_q_b[25]_PORT_B_data_out = MEMORY(GC1_q_b[25]_PORT_A_data_in_reg, , GC1_q_b[25]_PORT_A_address_reg, GC1_q_b[25]_PORT_B_address_reg, GC1_q_b[25]_PORT_A_write_enable_reg, GC1_q_b[25]_PORT_B_read_enable_reg, GC1_q_b[25]_PORT_A_byte_mask_reg, , GC1_q_b[25]_clock_0, GC1_q_b[25]_clock_1, , , , );
GC1_q_b[25]_PORT_B_data_out_reg = DFFE(GC1_q_b[25]_PORT_B_data_out, GC1_q_b[25]_clock_1, , , );
GC1_q_b[25] = GC1_q_b[25]_PORT_B_data_out_reg[0];


--GC1_q_b[8] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[8]_PORT_A_data_in = C1L0;
GC1_q_b[8]_PORT_A_data_in_reg = DFFE(GC1_q_b[8]_PORT_A_data_in, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[8]_PORT_A_address_reg = DFFE(GC1_q_b[8]_PORT_A_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[8]_PORT_B_address_reg = DFFE(GC1_q_b[8]_PORT_B_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_write_enable = B1L0;
GC1_q_b[8]_PORT_A_write_enable_reg = DFFE(GC1_q_b[8]_PORT_A_write_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[8]_PORT_B_read_enable_reg = DFFE(GC1_q_b[8]_PORT_B_read_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_byte_mask = A1L0;
GC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[8]_PORT_A_byte_mask, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_clock_0 = !CLK_25MHz2;
GC1_q_b[8]_clock_1 = !CLK_25MHz2;
GC1_q_b[8]_PORT_B_data_out = MEMORY(GC1_q_b[8]_PORT_A_data_in_reg, , GC1_q_b[8]_PORT_A_address_reg, GC1_q_b[8]_PORT_B_address_reg, GC1_q_b[8]_PORT_A_write_enable_reg, GC1_q_b[8]_PORT_B_read_enable_reg, GC1_q_b[8]_PORT_A_byte_mask_reg, , GC1_q_b[8]_clock_0, GC1_q_b[8]_clock_1, , , , );
GC1_q_b[8]_PORT_B_data_out_reg = DFFE(GC1_q_b[8]_PORT_B_data_out, GC1_q_b[8]_clock_1, , , );
GC1_q_b[8] = GC1_q_b[8]_PORT_B_data_out_reg[0];


--GC1_q_b[16] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[16]_PORT_A_data_in = C1L0;
GC1_q_b[16]_PORT_A_data_in_reg = DFFE(GC1_q_b[16]_PORT_A_data_in, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[16]_PORT_A_address_reg = DFFE(GC1_q_b[16]_PORT_A_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[16]_PORT_B_address_reg = DFFE(GC1_q_b[16]_PORT_B_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_write_enable = B1L0;
GC1_q_b[16]_PORT_A_write_enable_reg = DFFE(GC1_q_b[16]_PORT_A_write_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[16]_PORT_B_read_enable_reg = DFFE(GC1_q_b[16]_PORT_B_read_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_byte_mask = A1L0;
GC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[16]_PORT_A_byte_mask, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_clock_0 = !CLK_25MHz2;
GC1_q_b[16]_clock_1 = !CLK_25MHz2;
GC1_q_b[16]_PORT_B_data_out = MEMORY(GC1_q_b[16]_PORT_A_data_in_reg, , GC1_q_b[16]_PORT_A_address_reg, GC1_q_b[16]_PORT_B_address_reg, GC1_q_b[16]_PORT_A_write_enable_reg, GC1_q_b[16]_PORT_B_read_enable_reg, GC1_q_b[16]_PORT_A_byte_mask_reg, , GC1_q_b[16]_clock_0, GC1_q_b[16]_clock_1, , , , );
GC1_q_b[16]_PORT_B_data_out_reg = DFFE(GC1_q_b[16]_PORT_B_data_out, GC1_q_b[16]_clock_1, , , );
GC1_q_b[16] = GC1_q_b[16]_PORT_B_data_out_reg[0];


--GC1_q_b[0] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[0]_PORT_A_data_in = C1L0;
GC1_q_b[0]_PORT_A_data_in_reg = DFFE(GC1_q_b[0]_PORT_A_data_in, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[0]_PORT_A_address_reg = DFFE(GC1_q_b[0]_PORT_A_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[0]_PORT_B_address_reg = DFFE(GC1_q_b[0]_PORT_B_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_write_enable = B1L0;
GC1_q_b[0]_PORT_A_write_enable_reg = DFFE(GC1_q_b[0]_PORT_A_write_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[0]_PORT_B_read_enable_reg = DFFE(GC1_q_b[0]_PORT_B_read_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_byte_mask = A1L0;
GC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[0]_PORT_A_byte_mask, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_clock_0 = !CLK_25MHz2;
GC1_q_b[0]_clock_1 = !CLK_25MHz2;
GC1_q_b[0]_PORT_B_data_out = MEMORY(GC1_q_b[0]_PORT_A_data_in_reg, , GC1_q_b[0]_PORT_A_address_reg, GC1_q_b[0]_PORT_B_address_reg, GC1_q_b[0]_PORT_A_write_enable_reg, GC1_q_b[0]_PORT_B_read_enable_reg, GC1_q_b[0]_PORT_A_byte_mask_reg, , GC1_q_b[0]_clock_0, GC1_q_b[0]_clock_1, , , , );
GC1_q_b[0]_PORT_B_data_out_reg = DFFE(GC1_q_b[0]_PORT_B_data_out, GC1_q_b[0]_clock_1, , , );
GC1_q_b[0] = GC1_q_b[0]_PORT_B_data_out_reg[0];


--GC1_q_b[24] is UART_MODULE:inst7|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[24]_PORT_A_data_in = C1L0;
GC1_q_b[24]_PORT_A_data_in_reg = DFFE(GC1_q_b[24]_PORT_A_data_in, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[24]_PORT_A_address_reg = DFFE(GC1_q_b[24]_PORT_A_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[24]_PORT_B_address_reg = DFFE(GC1_q_b[24]_PORT_B_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_write_enable = B1L0;
GC1_q_b[24]_PORT_A_write_enable_reg = DFFE(GC1_q_b[24]_PORT_A_write_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[24]_PORT_B_read_enable_reg = DFFE(GC1_q_b[24]_PORT_B_read_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_byte_mask = A1L0;
GC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[24]_PORT_A_byte_mask, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_clock_0 = !CLK_25MHz2;
GC1_q_b[24]_clock_1 = !CLK_25MHz2;
GC1_q_b[24]_PORT_B_data_out = MEMORY(GC1_q_b[24]_PORT_A_data_in_reg, , GC1_q_b[24]_PORT_A_address_reg, GC1_q_b[24]_PORT_B_address_reg, GC1_q_b[24]_PORT_A_write_enable_reg, GC1_q_b[24]_PORT_B_read_enable_reg, GC1_q_b[24]_PORT_A_byte_mask_reg, , GC1_q_b[24]_clock_0, GC1_q_b[24]_clock_1, , , , );
GC1_q_b[24]_PORT_B_data_out_reg = DFFE(GC1_q_b[24]_PORT_B_data_out, GC1_q_b[24]_clock_1, , , );
GC1_q_b[24] = GC1_q_b[24]_PORT_B_data_out_reg[0];


--GC1_q_b[12] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[12]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[12]_PORT_A_data_in = C1L0;
GC1_q_b[12]_PORT_A_data_in_reg = DFFE(GC1_q_b[12]_PORT_A_data_in, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[12]_PORT_A_address_reg = DFFE(GC1_q_b[12]_PORT_A_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[12]_PORT_B_address_reg = DFFE(GC1_q_b[12]_PORT_B_address, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_write_enable = B1L0;
GC1_q_b[12]_PORT_A_write_enable_reg = DFFE(GC1_q_b[12]_PORT_A_write_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[12]_PORT_B_read_enable_reg = DFFE(GC1_q_b[12]_PORT_B_read_enable, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_PORT_A_byte_mask = A1L0;
GC1_q_b[12]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[12]_PORT_A_byte_mask, GC1_q_b[12]_clock_0, , , );
GC1_q_b[12]_clock_0 = !CLK_25MHz2;
GC1_q_b[12]_clock_1 = !CLK_25MHz2;
GC1_q_b[12]_PORT_B_data_out = MEMORY(GC1_q_b[12]_PORT_A_data_in_reg, , GC1_q_b[12]_PORT_A_address_reg, GC1_q_b[12]_PORT_B_address_reg, GC1_q_b[12]_PORT_A_write_enable_reg, GC1_q_b[12]_PORT_B_read_enable_reg, GC1_q_b[12]_PORT_A_byte_mask_reg, , GC1_q_b[12]_clock_0, GC1_q_b[12]_clock_1, , , , );
GC1_q_b[12]_PORT_B_data_out_reg = DFFE(GC1_q_b[12]_PORT_B_data_out, GC1_q_b[12]_clock_1, , , );
GC1_q_b[12] = GC1_q_b[12]_PORT_B_data_out_reg[0];


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[0]~11
XB1L0 = (XB1_r_TxTail[0] & (SB1_o_Ready $ (GND))) # (!XB1_r_TxTail[0] & (!SB1_o_Ready & VCC));

--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[0]~12
XB1L0 = CARRY((XB1_r_TxTail[0] & !SB1_o_Ready));


--GC1_q_b[20] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[20]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[20]_PORT_A_data_in = C1L0;
GC1_q_b[20]_PORT_A_data_in_reg = DFFE(GC1_q_b[20]_PORT_A_data_in, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[20]_PORT_A_address_reg = DFFE(GC1_q_b[20]_PORT_A_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[20]_PORT_B_address_reg = DFFE(GC1_q_b[20]_PORT_B_address, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_write_enable = B1L0;
GC1_q_b[20]_PORT_A_write_enable_reg = DFFE(GC1_q_b[20]_PORT_A_write_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[20]_PORT_B_read_enable_reg = DFFE(GC1_q_b[20]_PORT_B_read_enable, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_PORT_A_byte_mask = A1L0;
GC1_q_b[20]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[20]_PORT_A_byte_mask, GC1_q_b[20]_clock_0, , , );
GC1_q_b[20]_clock_0 = !CLK_25MHz2;
GC1_q_b[20]_clock_1 = !CLK_25MHz2;
GC1_q_b[20]_PORT_B_data_out = MEMORY(GC1_q_b[20]_PORT_A_data_in_reg, , GC1_q_b[20]_PORT_A_address_reg, GC1_q_b[20]_PORT_B_address_reg, GC1_q_b[20]_PORT_A_write_enable_reg, GC1_q_b[20]_PORT_B_read_enable_reg, GC1_q_b[20]_PORT_A_byte_mask_reg, , GC1_q_b[20]_clock_0, GC1_q_b[20]_clock_1, , , , );
GC1_q_b[20]_PORT_B_data_out_reg = DFFE(GC1_q_b[20]_PORT_B_data_out, GC1_q_b[20]_clock_1, , , );
GC1_q_b[20] = GC1_q_b[20]_PORT_B_data_out_reg[0];


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[1]~13
XB1L0 = (XB1_r_TxTail[1] & (!XB1L0)) # (!XB1_r_TxTail[1] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[1]~14
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[1]));


--GC1_q_b[4] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[4]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[4]_PORT_A_data_in = C1L0;
GC1_q_b[4]_PORT_A_data_in_reg = DFFE(GC1_q_b[4]_PORT_A_data_in, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[4]_PORT_A_address_reg = DFFE(GC1_q_b[4]_PORT_A_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[4]_PORT_B_address_reg = DFFE(GC1_q_b[4]_PORT_B_address, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_write_enable = B1L0;
GC1_q_b[4]_PORT_A_write_enable_reg = DFFE(GC1_q_b[4]_PORT_A_write_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[4]_PORT_B_read_enable_reg = DFFE(GC1_q_b[4]_PORT_B_read_enable, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_PORT_A_byte_mask = A1L0;
GC1_q_b[4]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[4]_PORT_A_byte_mask, GC1_q_b[4]_clock_0, , , );
GC1_q_b[4]_clock_0 = !CLK_25MHz2;
GC1_q_b[4]_clock_1 = !CLK_25MHz2;
GC1_q_b[4]_PORT_B_data_out = MEMORY(GC1_q_b[4]_PORT_A_data_in_reg, , GC1_q_b[4]_PORT_A_address_reg, GC1_q_b[4]_PORT_B_address_reg, GC1_q_b[4]_PORT_A_write_enable_reg, GC1_q_b[4]_PORT_B_read_enable_reg, GC1_q_b[4]_PORT_A_byte_mask_reg, , GC1_q_b[4]_clock_0, GC1_q_b[4]_clock_1, , , , );
GC1_q_b[4]_PORT_B_data_out_reg = DFFE(GC1_q_b[4]_PORT_B_data_out, GC1_q_b[4]_clock_1, , , );
GC1_q_b[4] = GC1_q_b[4]_PORT_B_data_out_reg[0];


--GC1_q_b[28] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[28]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[28]_PORT_A_data_in = C1L0;
GC1_q_b[28]_PORT_A_data_in_reg = DFFE(GC1_q_b[28]_PORT_A_data_in, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[28]_PORT_A_address_reg = DFFE(GC1_q_b[28]_PORT_A_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[28]_PORT_B_address_reg = DFFE(GC1_q_b[28]_PORT_B_address, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_write_enable = B1L0;
GC1_q_b[28]_PORT_A_write_enable_reg = DFFE(GC1_q_b[28]_PORT_A_write_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[28]_PORT_B_read_enable_reg = DFFE(GC1_q_b[28]_PORT_B_read_enable, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_PORT_A_byte_mask = A1L0;
GC1_q_b[28]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[28]_PORT_A_byte_mask, GC1_q_b[28]_clock_0, , , );
GC1_q_b[28]_clock_0 = !CLK_25MHz2;
GC1_q_b[28]_clock_1 = !CLK_25MHz2;
GC1_q_b[28]_PORT_B_data_out = MEMORY(GC1_q_b[28]_PORT_A_data_in_reg, , GC1_q_b[28]_PORT_A_address_reg, GC1_q_b[28]_PORT_B_address_reg, GC1_q_b[28]_PORT_A_write_enable_reg, GC1_q_b[28]_PORT_B_read_enable_reg, GC1_q_b[28]_PORT_A_byte_mask_reg, , GC1_q_b[28]_clock_0, GC1_q_b[28]_clock_1, , , , );
GC1_q_b[28]_PORT_B_data_out_reg = DFFE(GC1_q_b[28]_PORT_B_data_out, GC1_q_b[28]_clock_1, , , );
GC1_q_b[28] = GC1_q_b[28]_PORT_B_data_out_reg[0];


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[0]~5
SB1L0 = SB1_r_ClkCnt[0] $ (VCC);

--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[0]~6
SB1L0 = CARRY(SB1_r_ClkCnt[0]);


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[1]~8
SB1L0 = (SB1_r_ClkCnt[1] & (!SB1L0)) # (!SB1_r_ClkCnt[1] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[1]~9
SB1L0 = CARRY((!SB1L0) # (!SB1_r_ClkCnt[1]));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[2]~10
SB1L0 = (SB1_r_ClkCnt[2] & (SB1L0 $ (GND))) # (!SB1_r_ClkCnt[2] & (!SB1L0 & VCC));

--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[2]~11
SB1L0 = CARRY((SB1_r_ClkCnt[2] & !SB1L0));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[3]~12
SB1L0 = (SB1_r_ClkCnt[3] & (!SB1L0)) # (!SB1_r_ClkCnt[3] & ((SB1L0) # (GND)));

--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[3]~13
SB1L0 = CARRY((!SB1L0) # (!SB1_r_ClkCnt[3]));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[4]~14
SB1L0 = SB1_r_ClkCnt[4] $ (!SB1L0);


--GC1_q_b[19] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[19]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[19]_PORT_A_data_in = C1L0;
GC1_q_b[19]_PORT_A_data_in_reg = DFFE(GC1_q_b[19]_PORT_A_data_in, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[19]_PORT_A_address_reg = DFFE(GC1_q_b[19]_PORT_A_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[19]_PORT_B_address_reg = DFFE(GC1_q_b[19]_PORT_B_address, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_write_enable = B1L0;
GC1_q_b[19]_PORT_A_write_enable_reg = DFFE(GC1_q_b[19]_PORT_A_write_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[19]_PORT_B_read_enable_reg = DFFE(GC1_q_b[19]_PORT_B_read_enable, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_PORT_A_byte_mask = A1L0;
GC1_q_b[19]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[19]_PORT_A_byte_mask, GC1_q_b[19]_clock_0, , , );
GC1_q_b[19]_clock_0 = !CLK_25MHz2;
GC1_q_b[19]_clock_1 = !CLK_25MHz2;
GC1_q_b[19]_PORT_B_data_out = MEMORY(GC1_q_b[19]_PORT_A_data_in_reg, , GC1_q_b[19]_PORT_A_address_reg, GC1_q_b[19]_PORT_B_address_reg, GC1_q_b[19]_PORT_A_write_enable_reg, GC1_q_b[19]_PORT_B_read_enable_reg, GC1_q_b[19]_PORT_A_byte_mask_reg, , GC1_q_b[19]_clock_0, GC1_q_b[19]_clock_1, , , , );
GC1_q_b[19]_PORT_B_data_out_reg = DFFE(GC1_q_b[19]_PORT_B_data_out, GC1_q_b[19]_clock_1, , , );
GC1_q_b[19] = GC1_q_b[19]_PORT_B_data_out_reg[0];


--GC1_q_b[11] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[11]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[11]_PORT_A_data_in = C1L0;
GC1_q_b[11]_PORT_A_data_in_reg = DFFE(GC1_q_b[11]_PORT_A_data_in, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[11]_PORT_A_address_reg = DFFE(GC1_q_b[11]_PORT_A_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[11]_PORT_B_address_reg = DFFE(GC1_q_b[11]_PORT_B_address, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_write_enable = B1L0;
GC1_q_b[11]_PORT_A_write_enable_reg = DFFE(GC1_q_b[11]_PORT_A_write_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[11]_PORT_B_read_enable_reg = DFFE(GC1_q_b[11]_PORT_B_read_enable, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_PORT_A_byte_mask = A1L0;
GC1_q_b[11]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[11]_PORT_A_byte_mask, GC1_q_b[11]_clock_0, , , );
GC1_q_b[11]_clock_0 = !CLK_25MHz2;
GC1_q_b[11]_clock_1 = !CLK_25MHz2;
GC1_q_b[11]_PORT_B_data_out = MEMORY(GC1_q_b[11]_PORT_A_data_in_reg, , GC1_q_b[11]_PORT_A_address_reg, GC1_q_b[11]_PORT_B_address_reg, GC1_q_b[11]_PORT_A_write_enable_reg, GC1_q_b[11]_PORT_B_read_enable_reg, GC1_q_b[11]_PORT_A_byte_mask_reg, , GC1_q_b[11]_clock_0, GC1_q_b[11]_clock_1, , , , );
GC1_q_b[11]_PORT_B_data_out_reg = DFFE(GC1_q_b[11]_PORT_B_data_out, GC1_q_b[11]_clock_1, , , );
GC1_q_b[11] = GC1_q_b[11]_PORT_B_data_out_reg[0];


--GC1_q_b[3] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[3]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[3]_PORT_A_data_in = C1L0;
GC1_q_b[3]_PORT_A_data_in_reg = DFFE(GC1_q_b[3]_PORT_A_data_in, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[3]_PORT_A_address_reg = DFFE(GC1_q_b[3]_PORT_A_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[3]_PORT_B_address_reg = DFFE(GC1_q_b[3]_PORT_B_address, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_write_enable = B1L0;
GC1_q_b[3]_PORT_A_write_enable_reg = DFFE(GC1_q_b[3]_PORT_A_write_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[3]_PORT_B_read_enable_reg = DFFE(GC1_q_b[3]_PORT_B_read_enable, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_PORT_A_byte_mask = A1L0;
GC1_q_b[3]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[3]_PORT_A_byte_mask, GC1_q_b[3]_clock_0, , , );
GC1_q_b[3]_clock_0 = !CLK_25MHz2;
GC1_q_b[3]_clock_1 = !CLK_25MHz2;
GC1_q_b[3]_PORT_B_data_out = MEMORY(GC1_q_b[3]_PORT_A_data_in_reg, , GC1_q_b[3]_PORT_A_address_reg, GC1_q_b[3]_PORT_B_address_reg, GC1_q_b[3]_PORT_A_write_enable_reg, GC1_q_b[3]_PORT_B_read_enable_reg, GC1_q_b[3]_PORT_A_byte_mask_reg, , GC1_q_b[3]_clock_0, GC1_q_b[3]_clock_1, , , , );
GC1_q_b[3]_PORT_B_data_out_reg = DFFE(GC1_q_b[3]_PORT_B_data_out, GC1_q_b[3]_clock_1, , , );
GC1_q_b[3] = GC1_q_b[3]_PORT_B_data_out_reg[0];


--GC1_q_b[27] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[27]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[27]_PORT_A_data_in = C1L0;
GC1_q_b[27]_PORT_A_data_in_reg = DFFE(GC1_q_b[27]_PORT_A_data_in, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[27]_PORT_A_address_reg = DFFE(GC1_q_b[27]_PORT_A_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[27]_PORT_B_address_reg = DFFE(GC1_q_b[27]_PORT_B_address, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_write_enable = B1L0;
GC1_q_b[27]_PORT_A_write_enable_reg = DFFE(GC1_q_b[27]_PORT_A_write_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[27]_PORT_B_read_enable_reg = DFFE(GC1_q_b[27]_PORT_B_read_enable, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_PORT_A_byte_mask = A1L0;
GC1_q_b[27]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[27]_PORT_A_byte_mask, GC1_q_b[27]_clock_0, , , );
GC1_q_b[27]_clock_0 = !CLK_25MHz2;
GC1_q_b[27]_clock_1 = !CLK_25MHz2;
GC1_q_b[27]_PORT_B_data_out = MEMORY(GC1_q_b[27]_PORT_A_data_in_reg, , GC1_q_b[27]_PORT_A_address_reg, GC1_q_b[27]_PORT_B_address_reg, GC1_q_b[27]_PORT_A_write_enable_reg, GC1_q_b[27]_PORT_B_read_enable_reg, GC1_q_b[27]_PORT_A_byte_mask_reg, , GC1_q_b[27]_clock_0, GC1_q_b[27]_clock_1, , , , );
GC1_q_b[27]_PORT_B_data_out_reg = DFFE(GC1_q_b[27]_PORT_B_data_out, GC1_q_b[27]_clock_1, , , );
GC1_q_b[27] = GC1_q_b[27]_PORT_B_data_out_reg[0];


--GC1_q_b[10] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[10]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[10]_PORT_A_data_in = C1L0;
GC1_q_b[10]_PORT_A_data_in_reg = DFFE(GC1_q_b[10]_PORT_A_data_in, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[10]_PORT_A_address_reg = DFFE(GC1_q_b[10]_PORT_A_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[10]_PORT_B_address_reg = DFFE(GC1_q_b[10]_PORT_B_address, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_write_enable = B1L0;
GC1_q_b[10]_PORT_A_write_enable_reg = DFFE(GC1_q_b[10]_PORT_A_write_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[10]_PORT_B_read_enable_reg = DFFE(GC1_q_b[10]_PORT_B_read_enable, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_PORT_A_byte_mask = A1L0;
GC1_q_b[10]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[10]_PORT_A_byte_mask, GC1_q_b[10]_clock_0, , , );
GC1_q_b[10]_clock_0 = !CLK_25MHz2;
GC1_q_b[10]_clock_1 = !CLK_25MHz2;
GC1_q_b[10]_PORT_B_data_out = MEMORY(GC1_q_b[10]_PORT_A_data_in_reg, , GC1_q_b[10]_PORT_A_address_reg, GC1_q_b[10]_PORT_B_address_reg, GC1_q_b[10]_PORT_A_write_enable_reg, GC1_q_b[10]_PORT_B_read_enable_reg, GC1_q_b[10]_PORT_A_byte_mask_reg, , GC1_q_b[10]_clock_0, GC1_q_b[10]_clock_1, , , , );
GC1_q_b[10]_PORT_B_data_out_reg = DFFE(GC1_q_b[10]_PORT_B_data_out, GC1_q_b[10]_clock_1, , , );
GC1_q_b[10] = GC1_q_b[10]_PORT_B_data_out_reg[0];


--GC1_q_b[18] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[18]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[18]_PORT_A_data_in = C1L0;
GC1_q_b[18]_PORT_A_data_in_reg = DFFE(GC1_q_b[18]_PORT_A_data_in, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[18]_PORT_A_address_reg = DFFE(GC1_q_b[18]_PORT_A_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[18]_PORT_B_address_reg = DFFE(GC1_q_b[18]_PORT_B_address, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_write_enable = B1L0;
GC1_q_b[18]_PORT_A_write_enable_reg = DFFE(GC1_q_b[18]_PORT_A_write_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[18]_PORT_B_read_enable_reg = DFFE(GC1_q_b[18]_PORT_B_read_enable, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_PORT_A_byte_mask = A1L0;
GC1_q_b[18]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[18]_PORT_A_byte_mask, GC1_q_b[18]_clock_0, , , );
GC1_q_b[18]_clock_0 = !CLK_25MHz2;
GC1_q_b[18]_clock_1 = !CLK_25MHz2;
GC1_q_b[18]_PORT_B_data_out = MEMORY(GC1_q_b[18]_PORT_A_data_in_reg, , GC1_q_b[18]_PORT_A_address_reg, GC1_q_b[18]_PORT_B_address_reg, GC1_q_b[18]_PORT_A_write_enable_reg, GC1_q_b[18]_PORT_B_read_enable_reg, GC1_q_b[18]_PORT_A_byte_mask_reg, , GC1_q_b[18]_clock_0, GC1_q_b[18]_clock_1, , , , );
GC1_q_b[18]_PORT_B_data_out_reg = DFFE(GC1_q_b[18]_PORT_B_data_out, GC1_q_b[18]_clock_1, , , );
GC1_q_b[18] = GC1_q_b[18]_PORT_B_data_out_reg[0];


--GC1_q_b[2] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[2]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[2]_PORT_A_data_in = C1L0;
GC1_q_b[2]_PORT_A_data_in_reg = DFFE(GC1_q_b[2]_PORT_A_data_in, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[2]_PORT_A_address_reg = DFFE(GC1_q_b[2]_PORT_A_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[2]_PORT_B_address_reg = DFFE(GC1_q_b[2]_PORT_B_address, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_write_enable = B1L0;
GC1_q_b[2]_PORT_A_write_enable_reg = DFFE(GC1_q_b[2]_PORT_A_write_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[2]_PORT_B_read_enable_reg = DFFE(GC1_q_b[2]_PORT_B_read_enable, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_PORT_A_byte_mask = A1L0;
GC1_q_b[2]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[2]_PORT_A_byte_mask, GC1_q_b[2]_clock_0, , , );
GC1_q_b[2]_clock_0 = !CLK_25MHz2;
GC1_q_b[2]_clock_1 = !CLK_25MHz2;
GC1_q_b[2]_PORT_B_data_out = MEMORY(GC1_q_b[2]_PORT_A_data_in_reg, , GC1_q_b[2]_PORT_A_address_reg, GC1_q_b[2]_PORT_B_address_reg, GC1_q_b[2]_PORT_A_write_enable_reg, GC1_q_b[2]_PORT_B_read_enable_reg, GC1_q_b[2]_PORT_A_byte_mask_reg, , GC1_q_b[2]_clock_0, GC1_q_b[2]_clock_1, , , , );
GC1_q_b[2]_PORT_B_data_out_reg = DFFE(GC1_q_b[2]_PORT_B_data_out, GC1_q_b[2]_clock_1, , , );
GC1_q_b[2] = GC1_q_b[2]_PORT_B_data_out_reg[0];


--GC1_q_b[26] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[26]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[26]_PORT_A_data_in = C1L0;
GC1_q_b[26]_PORT_A_data_in_reg = DFFE(GC1_q_b[26]_PORT_A_data_in, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[26]_PORT_A_address_reg = DFFE(GC1_q_b[26]_PORT_A_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[26]_PORT_B_address_reg = DFFE(GC1_q_b[26]_PORT_B_address, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_write_enable = B1L0;
GC1_q_b[26]_PORT_A_write_enable_reg = DFFE(GC1_q_b[26]_PORT_A_write_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[26]_PORT_B_read_enable_reg = DFFE(GC1_q_b[26]_PORT_B_read_enable, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_PORT_A_byte_mask = A1L0;
GC1_q_b[26]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[26]_PORT_A_byte_mask, GC1_q_b[26]_clock_0, , , );
GC1_q_b[26]_clock_0 = !CLK_25MHz2;
GC1_q_b[26]_clock_1 = !CLK_25MHz2;
GC1_q_b[26]_PORT_B_data_out = MEMORY(GC1_q_b[26]_PORT_A_data_in_reg, , GC1_q_b[26]_PORT_A_address_reg, GC1_q_b[26]_PORT_B_address_reg, GC1_q_b[26]_PORT_A_write_enable_reg, GC1_q_b[26]_PORT_B_read_enable_reg, GC1_q_b[26]_PORT_A_byte_mask_reg, , GC1_q_b[26]_clock_0, GC1_q_b[26]_clock_1, , , , );
GC1_q_b[26]_PORT_B_data_out_reg = DFFE(GC1_q_b[26]_PORT_B_data_out, GC1_q_b[26]_clock_1, , , );
GC1_q_b[26] = GC1_q_b[26]_PORT_B_data_out_reg[0];


--GC1_q_b[21] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[21]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[21]_PORT_A_data_in = C1L0;
GC1_q_b[21]_PORT_A_data_in_reg = DFFE(GC1_q_b[21]_PORT_A_data_in, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[21]_PORT_A_address_reg = DFFE(GC1_q_b[21]_PORT_A_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[21]_PORT_B_address_reg = DFFE(GC1_q_b[21]_PORT_B_address, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_write_enable = B1L0;
GC1_q_b[21]_PORT_A_write_enable_reg = DFFE(GC1_q_b[21]_PORT_A_write_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[21]_PORT_B_read_enable_reg = DFFE(GC1_q_b[21]_PORT_B_read_enable, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_PORT_A_byte_mask = A1L0;
GC1_q_b[21]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[21]_PORT_A_byte_mask, GC1_q_b[21]_clock_0, , , );
GC1_q_b[21]_clock_0 = !CLK_25MHz2;
GC1_q_b[21]_clock_1 = !CLK_25MHz2;
GC1_q_b[21]_PORT_B_data_out = MEMORY(GC1_q_b[21]_PORT_A_data_in_reg, , GC1_q_b[21]_PORT_A_address_reg, GC1_q_b[21]_PORT_B_address_reg, GC1_q_b[21]_PORT_A_write_enable_reg, GC1_q_b[21]_PORT_B_read_enable_reg, GC1_q_b[21]_PORT_A_byte_mask_reg, , GC1_q_b[21]_clock_0, GC1_q_b[21]_clock_1, , , , );
GC1_q_b[21]_PORT_B_data_out_reg = DFFE(GC1_q_b[21]_PORT_B_data_out, GC1_q_b[21]_clock_1, , , );
GC1_q_b[21] = GC1_q_b[21]_PORT_B_data_out_reg[0];


--GC1_q_b[13] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[13]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[13]_PORT_A_data_in = C1L0;
GC1_q_b[13]_PORT_A_data_in_reg = DFFE(GC1_q_b[13]_PORT_A_data_in, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[13]_PORT_A_address_reg = DFFE(GC1_q_b[13]_PORT_A_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[13]_PORT_B_address_reg = DFFE(GC1_q_b[13]_PORT_B_address, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_write_enable = B1L0;
GC1_q_b[13]_PORT_A_write_enable_reg = DFFE(GC1_q_b[13]_PORT_A_write_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[13]_PORT_B_read_enable_reg = DFFE(GC1_q_b[13]_PORT_B_read_enable, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_PORT_A_byte_mask = A1L0;
GC1_q_b[13]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[13]_PORT_A_byte_mask, GC1_q_b[13]_clock_0, , , );
GC1_q_b[13]_clock_0 = !CLK_25MHz2;
GC1_q_b[13]_clock_1 = !CLK_25MHz2;
GC1_q_b[13]_PORT_B_data_out = MEMORY(GC1_q_b[13]_PORT_A_data_in_reg, , GC1_q_b[13]_PORT_A_address_reg, GC1_q_b[13]_PORT_B_address_reg, GC1_q_b[13]_PORT_A_write_enable_reg, GC1_q_b[13]_PORT_B_read_enable_reg, GC1_q_b[13]_PORT_A_byte_mask_reg, , GC1_q_b[13]_clock_0, GC1_q_b[13]_clock_1, , , , );
GC1_q_b[13]_PORT_B_data_out_reg = DFFE(GC1_q_b[13]_PORT_B_data_out, GC1_q_b[13]_clock_1, , , );
GC1_q_b[13] = GC1_q_b[13]_PORT_B_data_out_reg[0];


--GC1_q_b[5] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[5]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[5]_PORT_A_data_in = C1L0;
GC1_q_b[5]_PORT_A_data_in_reg = DFFE(GC1_q_b[5]_PORT_A_data_in, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[5]_PORT_A_address_reg = DFFE(GC1_q_b[5]_PORT_A_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[5]_PORT_B_address_reg = DFFE(GC1_q_b[5]_PORT_B_address, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_write_enable = B1L0;
GC1_q_b[5]_PORT_A_write_enable_reg = DFFE(GC1_q_b[5]_PORT_A_write_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[5]_PORT_B_read_enable_reg = DFFE(GC1_q_b[5]_PORT_B_read_enable, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_PORT_A_byte_mask = A1L0;
GC1_q_b[5]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[5]_PORT_A_byte_mask, GC1_q_b[5]_clock_0, , , );
GC1_q_b[5]_clock_0 = !CLK_25MHz2;
GC1_q_b[5]_clock_1 = !CLK_25MHz2;
GC1_q_b[5]_PORT_B_data_out = MEMORY(GC1_q_b[5]_PORT_A_data_in_reg, , GC1_q_b[5]_PORT_A_address_reg, GC1_q_b[5]_PORT_B_address_reg, GC1_q_b[5]_PORT_A_write_enable_reg, GC1_q_b[5]_PORT_B_read_enable_reg, GC1_q_b[5]_PORT_A_byte_mask_reg, , GC1_q_b[5]_clock_0, GC1_q_b[5]_clock_1, , , , );
GC1_q_b[5]_PORT_B_data_out_reg = DFFE(GC1_q_b[5]_PORT_B_data_out, GC1_q_b[5]_clock_1, , , );
GC1_q_b[5] = GC1_q_b[5]_PORT_B_data_out_reg[0];


--GC1_q_b[29] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[29]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[29]_PORT_A_data_in = C1L0;
GC1_q_b[29]_PORT_A_data_in_reg = DFFE(GC1_q_b[29]_PORT_A_data_in, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[29]_PORT_A_address_reg = DFFE(GC1_q_b[29]_PORT_A_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[29]_PORT_B_address_reg = DFFE(GC1_q_b[29]_PORT_B_address, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_write_enable = B1L0;
GC1_q_b[29]_PORT_A_write_enable_reg = DFFE(GC1_q_b[29]_PORT_A_write_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[29]_PORT_B_read_enable_reg = DFFE(GC1_q_b[29]_PORT_B_read_enable, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_PORT_A_byte_mask = A1L0;
GC1_q_b[29]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[29]_PORT_A_byte_mask, GC1_q_b[29]_clock_0, , , );
GC1_q_b[29]_clock_0 = !CLK_25MHz2;
GC1_q_b[29]_clock_1 = !CLK_25MHz2;
GC1_q_b[29]_PORT_B_data_out = MEMORY(GC1_q_b[29]_PORT_A_data_in_reg, , GC1_q_b[29]_PORT_A_address_reg, GC1_q_b[29]_PORT_B_address_reg, GC1_q_b[29]_PORT_A_write_enable_reg, GC1_q_b[29]_PORT_B_read_enable_reg, GC1_q_b[29]_PORT_A_byte_mask_reg, , GC1_q_b[29]_clock_0, GC1_q_b[29]_clock_1, , , , );
GC1_q_b[29]_PORT_B_data_out_reg = DFFE(GC1_q_b[29]_PORT_B_data_out, GC1_q_b[29]_clock_1, , , );
GC1_q_b[29] = GC1_q_b[29]_PORT_B_data_out_reg[0];


--GC1_q_b[23] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[23]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[23]_PORT_A_data_in = C1L0;
GC1_q_b[23]_PORT_A_data_in_reg = DFFE(GC1_q_b[23]_PORT_A_data_in, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[23]_PORT_A_address_reg = DFFE(GC1_q_b[23]_PORT_A_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[23]_PORT_B_address_reg = DFFE(GC1_q_b[23]_PORT_B_address, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_write_enable = B1L0;
GC1_q_b[23]_PORT_A_write_enable_reg = DFFE(GC1_q_b[23]_PORT_A_write_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[23]_PORT_B_read_enable_reg = DFFE(GC1_q_b[23]_PORT_B_read_enable, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_PORT_A_byte_mask = A1L0;
GC1_q_b[23]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[23]_PORT_A_byte_mask, GC1_q_b[23]_clock_0, , , );
GC1_q_b[23]_clock_0 = !CLK_25MHz2;
GC1_q_b[23]_clock_1 = !CLK_25MHz2;
GC1_q_b[23]_PORT_B_data_out = MEMORY(GC1_q_b[23]_PORT_A_data_in_reg, , GC1_q_b[23]_PORT_A_address_reg, GC1_q_b[23]_PORT_B_address_reg, GC1_q_b[23]_PORT_A_write_enable_reg, GC1_q_b[23]_PORT_B_read_enable_reg, GC1_q_b[23]_PORT_A_byte_mask_reg, , GC1_q_b[23]_clock_0, GC1_q_b[23]_clock_1, , , , );
GC1_q_b[23]_PORT_B_data_out_reg = DFFE(GC1_q_b[23]_PORT_B_data_out, GC1_q_b[23]_clock_1, , , );
GC1_q_b[23] = GC1_q_b[23]_PORT_B_data_out_reg[0];


--GC1_q_b[15] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[15]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[15]_PORT_A_data_in = C1L0;
GC1_q_b[15]_PORT_A_data_in_reg = DFFE(GC1_q_b[15]_PORT_A_data_in, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[15]_PORT_A_address_reg = DFFE(GC1_q_b[15]_PORT_A_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[15]_PORT_B_address_reg = DFFE(GC1_q_b[15]_PORT_B_address, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_write_enable = B1L0;
GC1_q_b[15]_PORT_A_write_enable_reg = DFFE(GC1_q_b[15]_PORT_A_write_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[15]_PORT_B_read_enable_reg = DFFE(GC1_q_b[15]_PORT_B_read_enable, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_PORT_A_byte_mask = A1L0;
GC1_q_b[15]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[15]_PORT_A_byte_mask, GC1_q_b[15]_clock_0, , , );
GC1_q_b[15]_clock_0 = !CLK_25MHz2;
GC1_q_b[15]_clock_1 = !CLK_25MHz2;
GC1_q_b[15]_PORT_B_data_out = MEMORY(GC1_q_b[15]_PORT_A_data_in_reg, , GC1_q_b[15]_PORT_A_address_reg, GC1_q_b[15]_PORT_B_address_reg, GC1_q_b[15]_PORT_A_write_enable_reg, GC1_q_b[15]_PORT_B_read_enable_reg, GC1_q_b[15]_PORT_A_byte_mask_reg, , GC1_q_b[15]_clock_0, GC1_q_b[15]_clock_1, , , , );
GC1_q_b[15]_PORT_B_data_out_reg = DFFE(GC1_q_b[15]_PORT_B_data_out, GC1_q_b[15]_clock_1, , , );
GC1_q_b[15] = GC1_q_b[15]_PORT_B_data_out_reg[0];


--GC1_q_b[7] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[7]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[7]_PORT_A_data_in = C1L0;
GC1_q_b[7]_PORT_A_data_in_reg = DFFE(GC1_q_b[7]_PORT_A_data_in, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[7]_PORT_A_address_reg = DFFE(GC1_q_b[7]_PORT_A_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[7]_PORT_B_address_reg = DFFE(GC1_q_b[7]_PORT_B_address, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_write_enable = B1L0;
GC1_q_b[7]_PORT_A_write_enable_reg = DFFE(GC1_q_b[7]_PORT_A_write_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[7]_PORT_B_read_enable_reg = DFFE(GC1_q_b[7]_PORT_B_read_enable, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_PORT_A_byte_mask = A1L0;
GC1_q_b[7]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[7]_PORT_A_byte_mask, GC1_q_b[7]_clock_0, , , );
GC1_q_b[7]_clock_0 = !CLK_25MHz2;
GC1_q_b[7]_clock_1 = !CLK_25MHz2;
GC1_q_b[7]_PORT_B_data_out = MEMORY(GC1_q_b[7]_PORT_A_data_in_reg, , GC1_q_b[7]_PORT_A_address_reg, GC1_q_b[7]_PORT_B_address_reg, GC1_q_b[7]_PORT_A_write_enable_reg, GC1_q_b[7]_PORT_B_read_enable_reg, GC1_q_b[7]_PORT_A_byte_mask_reg, , GC1_q_b[7]_clock_0, GC1_q_b[7]_clock_1, , , , );
GC1_q_b[7]_PORT_B_data_out_reg = DFFE(GC1_q_b[7]_PORT_B_data_out, GC1_q_b[7]_clock_1, , , );
GC1_q_b[7] = GC1_q_b[7]_PORT_B_data_out_reg[0];


--GC1_q_b[31] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[31]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[31]_PORT_A_data_in = C1L0;
GC1_q_b[31]_PORT_A_data_in_reg = DFFE(GC1_q_b[31]_PORT_A_data_in, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[31]_PORT_A_address_reg = DFFE(GC1_q_b[31]_PORT_A_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[31]_PORT_B_address_reg = DFFE(GC1_q_b[31]_PORT_B_address, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_write_enable = B1L0;
GC1_q_b[31]_PORT_A_write_enable_reg = DFFE(GC1_q_b[31]_PORT_A_write_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[31]_PORT_B_read_enable_reg = DFFE(GC1_q_b[31]_PORT_B_read_enable, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_PORT_A_byte_mask = A1L0;
GC1_q_b[31]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[31]_PORT_A_byte_mask, GC1_q_b[31]_clock_0, , , );
GC1_q_b[31]_clock_0 = !CLK_25MHz2;
GC1_q_b[31]_clock_1 = !CLK_25MHz2;
GC1_q_b[31]_PORT_B_data_out = MEMORY(GC1_q_b[31]_PORT_A_data_in_reg, , GC1_q_b[31]_PORT_A_address_reg, GC1_q_b[31]_PORT_B_address_reg, GC1_q_b[31]_PORT_A_write_enable_reg, GC1_q_b[31]_PORT_B_read_enable_reg, GC1_q_b[31]_PORT_A_byte_mask_reg, , GC1_q_b[31]_clock_0, GC1_q_b[31]_clock_1, , , , );
GC1_q_b[31]_PORT_B_data_out_reg = DFFE(GC1_q_b[31]_PORT_B_data_out, GC1_q_b[31]_clock_1, , , );
GC1_q_b[31] = GC1_q_b[31]_PORT_B_data_out_reg[0];


--GC1_q_b[14] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[14]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[14]_PORT_A_data_in = C1L0;
GC1_q_b[14]_PORT_A_data_in_reg = DFFE(GC1_q_b[14]_PORT_A_data_in, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[14]_PORT_A_address_reg = DFFE(GC1_q_b[14]_PORT_A_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[14]_PORT_B_address_reg = DFFE(GC1_q_b[14]_PORT_B_address, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_write_enable = B1L0;
GC1_q_b[14]_PORT_A_write_enable_reg = DFFE(GC1_q_b[14]_PORT_A_write_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[14]_PORT_B_read_enable_reg = DFFE(GC1_q_b[14]_PORT_B_read_enable, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_PORT_A_byte_mask = A1L0;
GC1_q_b[14]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[14]_PORT_A_byte_mask, GC1_q_b[14]_clock_0, , , );
GC1_q_b[14]_clock_0 = !CLK_25MHz2;
GC1_q_b[14]_clock_1 = !CLK_25MHz2;
GC1_q_b[14]_PORT_B_data_out = MEMORY(GC1_q_b[14]_PORT_A_data_in_reg, , GC1_q_b[14]_PORT_A_address_reg, GC1_q_b[14]_PORT_B_address_reg, GC1_q_b[14]_PORT_A_write_enable_reg, GC1_q_b[14]_PORT_B_read_enable_reg, GC1_q_b[14]_PORT_A_byte_mask_reg, , GC1_q_b[14]_clock_0, GC1_q_b[14]_clock_1, , , , );
GC1_q_b[14]_PORT_B_data_out_reg = DFFE(GC1_q_b[14]_PORT_B_data_out, GC1_q_b[14]_clock_1, , , );
GC1_q_b[14] = GC1_q_b[14]_PORT_B_data_out_reg[0];


--GC1_q_b[22] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[22]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[22]_PORT_A_data_in = C1L0;
GC1_q_b[22]_PORT_A_data_in_reg = DFFE(GC1_q_b[22]_PORT_A_data_in, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[22]_PORT_A_address_reg = DFFE(GC1_q_b[22]_PORT_A_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[22]_PORT_B_address_reg = DFFE(GC1_q_b[22]_PORT_B_address, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_write_enable = B1L0;
GC1_q_b[22]_PORT_A_write_enable_reg = DFFE(GC1_q_b[22]_PORT_A_write_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[22]_PORT_B_read_enable_reg = DFFE(GC1_q_b[22]_PORT_B_read_enable, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_PORT_A_byte_mask = A1L0;
GC1_q_b[22]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[22]_PORT_A_byte_mask, GC1_q_b[22]_clock_0, , , );
GC1_q_b[22]_clock_0 = !CLK_25MHz2;
GC1_q_b[22]_clock_1 = !CLK_25MHz2;
GC1_q_b[22]_PORT_B_data_out = MEMORY(GC1_q_b[22]_PORT_A_data_in_reg, , GC1_q_b[22]_PORT_A_address_reg, GC1_q_b[22]_PORT_B_address_reg, GC1_q_b[22]_PORT_A_write_enable_reg, GC1_q_b[22]_PORT_B_read_enable_reg, GC1_q_b[22]_PORT_A_byte_mask_reg, , GC1_q_b[22]_clock_0, GC1_q_b[22]_clock_1, , , , );
GC1_q_b[22]_PORT_B_data_out_reg = DFFE(GC1_q_b[22]_PORT_B_data_out, GC1_q_b[22]_clock_1, , , );
GC1_q_b[22] = GC1_q_b[22]_PORT_B_data_out_reg[0];


--GC1_q_b[6] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[6]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[6]_PORT_A_data_in = C1L0;
GC1_q_b[6]_PORT_A_data_in_reg = DFFE(GC1_q_b[6]_PORT_A_data_in, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[6]_PORT_A_address_reg = DFFE(GC1_q_b[6]_PORT_A_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[6]_PORT_B_address_reg = DFFE(GC1_q_b[6]_PORT_B_address, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_write_enable = B1L0;
GC1_q_b[6]_PORT_A_write_enable_reg = DFFE(GC1_q_b[6]_PORT_A_write_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[6]_PORT_B_read_enable_reg = DFFE(GC1_q_b[6]_PORT_B_read_enable, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_PORT_A_byte_mask = A1L0;
GC1_q_b[6]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[6]_PORT_A_byte_mask, GC1_q_b[6]_clock_0, , , );
GC1_q_b[6]_clock_0 = !CLK_25MHz2;
GC1_q_b[6]_clock_1 = !CLK_25MHz2;
GC1_q_b[6]_PORT_B_data_out = MEMORY(GC1_q_b[6]_PORT_A_data_in_reg, , GC1_q_b[6]_PORT_A_address_reg, GC1_q_b[6]_PORT_B_address_reg, GC1_q_b[6]_PORT_A_write_enable_reg, GC1_q_b[6]_PORT_B_read_enable_reg, GC1_q_b[6]_PORT_A_byte_mask_reg, , GC1_q_b[6]_clock_0, GC1_q_b[6]_clock_1, , , , );
GC1_q_b[6]_PORT_B_data_out_reg = DFFE(GC1_q_b[6]_PORT_B_data_out, GC1_q_b[6]_clock_1, , , );
GC1_q_b[6] = GC1_q_b[6]_PORT_B_data_out_reg[0];


--GC1_q_b[30] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[30]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[30]_PORT_A_data_in = C1L0;
GC1_q_b[30]_PORT_A_data_in_reg = DFFE(GC1_q_b[30]_PORT_A_data_in, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[30]_PORT_A_address_reg = DFFE(GC1_q_b[30]_PORT_A_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[30]_PORT_B_address_reg = DFFE(GC1_q_b[30]_PORT_B_address, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_write_enable = B1L0;
GC1_q_b[30]_PORT_A_write_enable_reg = DFFE(GC1_q_b[30]_PORT_A_write_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[30]_PORT_B_read_enable_reg = DFFE(GC1_q_b[30]_PORT_B_read_enable, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_PORT_A_byte_mask = A1L0;
GC1_q_b[30]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[30]_PORT_A_byte_mask, GC1_q_b[30]_clock_0, , , );
GC1_q_b[30]_clock_0 = !CLK_25MHz2;
GC1_q_b[30]_clock_1 = !CLK_25MHz2;
GC1_q_b[30]_PORT_B_data_out = MEMORY(GC1_q_b[30]_PORT_A_data_in_reg, , GC1_q_b[30]_PORT_A_address_reg, GC1_q_b[30]_PORT_B_address_reg, GC1_q_b[30]_PORT_A_write_enable_reg, GC1_q_b[30]_PORT_B_read_enable_reg, GC1_q_b[30]_PORT_A_byte_mask_reg, , GC1_q_b[30]_clock_0, GC1_q_b[30]_clock_1, , , , );
GC1_q_b[30]_PORT_B_data_out_reg = DFFE(GC1_q_b[30]_PORT_B_data_out, GC1_q_b[30]_clock_1, , , );
GC1_q_b[30] = GC1_q_b[30]_PORT_B_data_out_reg[0];


--GC1_q_b[17] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[17]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[17]_PORT_A_data_in = C1L0;
GC1_q_b[17]_PORT_A_data_in_reg = DFFE(GC1_q_b[17]_PORT_A_data_in, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[17]_PORT_A_address_reg = DFFE(GC1_q_b[17]_PORT_A_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[17]_PORT_B_address_reg = DFFE(GC1_q_b[17]_PORT_B_address, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_write_enable = B1L0;
GC1_q_b[17]_PORT_A_write_enable_reg = DFFE(GC1_q_b[17]_PORT_A_write_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[17]_PORT_B_read_enable_reg = DFFE(GC1_q_b[17]_PORT_B_read_enable, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_PORT_A_byte_mask = A1L0;
GC1_q_b[17]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[17]_PORT_A_byte_mask, GC1_q_b[17]_clock_0, , , );
GC1_q_b[17]_clock_0 = !CLK_25MHz2;
GC1_q_b[17]_clock_1 = !CLK_25MHz2;
GC1_q_b[17]_PORT_B_data_out = MEMORY(GC1_q_b[17]_PORT_A_data_in_reg, , GC1_q_b[17]_PORT_A_address_reg, GC1_q_b[17]_PORT_B_address_reg, GC1_q_b[17]_PORT_A_write_enable_reg, GC1_q_b[17]_PORT_B_read_enable_reg, GC1_q_b[17]_PORT_A_byte_mask_reg, , GC1_q_b[17]_clock_0, GC1_q_b[17]_clock_1, , , , );
GC1_q_b[17]_PORT_B_data_out_reg = DFFE(GC1_q_b[17]_PORT_B_data_out, GC1_q_b[17]_clock_1, , , );
GC1_q_b[17] = GC1_q_b[17]_PORT_B_data_out_reg[0];


--GC1_q_b[9] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[9]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[9]_PORT_A_data_in = C1L0;
GC1_q_b[9]_PORT_A_data_in_reg = DFFE(GC1_q_b[9]_PORT_A_data_in, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[9]_PORT_A_address_reg = DFFE(GC1_q_b[9]_PORT_A_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[9]_PORT_B_address_reg = DFFE(GC1_q_b[9]_PORT_B_address, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_write_enable = B1L0;
GC1_q_b[9]_PORT_A_write_enable_reg = DFFE(GC1_q_b[9]_PORT_A_write_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[9]_PORT_B_read_enable_reg = DFFE(GC1_q_b[9]_PORT_B_read_enable, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_PORT_A_byte_mask = A1L0;
GC1_q_b[9]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[9]_PORT_A_byte_mask, GC1_q_b[9]_clock_0, , , );
GC1_q_b[9]_clock_0 = !CLK_25MHz2;
GC1_q_b[9]_clock_1 = !CLK_25MHz2;
GC1_q_b[9]_PORT_B_data_out = MEMORY(GC1_q_b[9]_PORT_A_data_in_reg, , GC1_q_b[9]_PORT_A_address_reg, GC1_q_b[9]_PORT_B_address_reg, GC1_q_b[9]_PORT_A_write_enable_reg, GC1_q_b[9]_PORT_B_read_enable_reg, GC1_q_b[9]_PORT_A_byte_mask_reg, , GC1_q_b[9]_clock_0, GC1_q_b[9]_clock_1, , , , );
GC1_q_b[9]_PORT_B_data_out_reg = DFFE(GC1_q_b[9]_PORT_B_data_out, GC1_q_b[9]_clock_1, , , );
GC1_q_b[9] = GC1_q_b[9]_PORT_B_data_out_reg[0];


--GC1_q_b[1] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[1]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[1]_PORT_A_data_in = C1L0;
GC1_q_b[1]_PORT_A_data_in_reg = DFFE(GC1_q_b[1]_PORT_A_data_in, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[1]_PORT_A_address_reg = DFFE(GC1_q_b[1]_PORT_A_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[1]_PORT_B_address_reg = DFFE(GC1_q_b[1]_PORT_B_address, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_write_enable = B1L0;
GC1_q_b[1]_PORT_A_write_enable_reg = DFFE(GC1_q_b[1]_PORT_A_write_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[1]_PORT_B_read_enable_reg = DFFE(GC1_q_b[1]_PORT_B_read_enable, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_PORT_A_byte_mask = A1L0;
GC1_q_b[1]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[1]_PORT_A_byte_mask, GC1_q_b[1]_clock_0, , , );
GC1_q_b[1]_clock_0 = !CLK_25MHz2;
GC1_q_b[1]_clock_1 = !CLK_25MHz2;
GC1_q_b[1]_PORT_B_data_out = MEMORY(GC1_q_b[1]_PORT_A_data_in_reg, , GC1_q_b[1]_PORT_A_address_reg, GC1_q_b[1]_PORT_B_address_reg, GC1_q_b[1]_PORT_A_write_enable_reg, GC1_q_b[1]_PORT_B_read_enable_reg, GC1_q_b[1]_PORT_A_byte_mask_reg, , GC1_q_b[1]_clock_0, GC1_q_b[1]_clock_1, , , , );
GC1_q_b[1]_PORT_B_data_out_reg = DFFE(GC1_q_b[1]_PORT_B_data_out, GC1_q_b[1]_clock_1, , , );
GC1_q_b[1] = GC1_q_b[1]_PORT_B_data_out_reg[0];


--GC1_q_b[25] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[25]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[25]_PORT_A_data_in = C1L0;
GC1_q_b[25]_PORT_A_data_in_reg = DFFE(GC1_q_b[25]_PORT_A_data_in, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[25]_PORT_A_address_reg = DFFE(GC1_q_b[25]_PORT_A_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[25]_PORT_B_address_reg = DFFE(GC1_q_b[25]_PORT_B_address, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_write_enable = B1L0;
GC1_q_b[25]_PORT_A_write_enable_reg = DFFE(GC1_q_b[25]_PORT_A_write_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[25]_PORT_B_read_enable_reg = DFFE(GC1_q_b[25]_PORT_B_read_enable, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_PORT_A_byte_mask = A1L0;
GC1_q_b[25]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[25]_PORT_A_byte_mask, GC1_q_b[25]_clock_0, , , );
GC1_q_b[25]_clock_0 = !CLK_25MHz2;
GC1_q_b[25]_clock_1 = !CLK_25MHz2;
GC1_q_b[25]_PORT_B_data_out = MEMORY(GC1_q_b[25]_PORT_A_data_in_reg, , GC1_q_b[25]_PORT_A_address_reg, GC1_q_b[25]_PORT_B_address_reg, GC1_q_b[25]_PORT_A_write_enable_reg, GC1_q_b[25]_PORT_B_read_enable_reg, GC1_q_b[25]_PORT_A_byte_mask_reg, , GC1_q_b[25]_clock_0, GC1_q_b[25]_clock_1, , , , );
GC1_q_b[25]_PORT_B_data_out_reg = DFFE(GC1_q_b[25]_PORT_B_data_out, GC1_q_b[25]_clock_1, , , );
GC1_q_b[25] = GC1_q_b[25]_PORT_B_data_out_reg[0];


--GC1_q_b[8] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[8]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[8]_PORT_A_data_in = C1L0;
GC1_q_b[8]_PORT_A_data_in_reg = DFFE(GC1_q_b[8]_PORT_A_data_in, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[8]_PORT_A_address_reg = DFFE(GC1_q_b[8]_PORT_A_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[8]_PORT_B_address_reg = DFFE(GC1_q_b[8]_PORT_B_address, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_write_enable = B1L0;
GC1_q_b[8]_PORT_A_write_enable_reg = DFFE(GC1_q_b[8]_PORT_A_write_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[8]_PORT_B_read_enable_reg = DFFE(GC1_q_b[8]_PORT_B_read_enable, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_PORT_A_byte_mask = A1L0;
GC1_q_b[8]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[8]_PORT_A_byte_mask, GC1_q_b[8]_clock_0, , , );
GC1_q_b[8]_clock_0 = !CLK_25MHz2;
GC1_q_b[8]_clock_1 = !CLK_25MHz2;
GC1_q_b[8]_PORT_B_data_out = MEMORY(GC1_q_b[8]_PORT_A_data_in_reg, , GC1_q_b[8]_PORT_A_address_reg, GC1_q_b[8]_PORT_B_address_reg, GC1_q_b[8]_PORT_A_write_enable_reg, GC1_q_b[8]_PORT_B_read_enable_reg, GC1_q_b[8]_PORT_A_byte_mask_reg, , GC1_q_b[8]_clock_0, GC1_q_b[8]_clock_1, , , , );
GC1_q_b[8]_PORT_B_data_out_reg = DFFE(GC1_q_b[8]_PORT_B_data_out, GC1_q_b[8]_clock_1, , , );
GC1_q_b[8] = GC1_q_b[8]_PORT_B_data_out_reg[0];


--GC1_q_b[16] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[16]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[16]_PORT_A_data_in = C1L0;
GC1_q_b[16]_PORT_A_data_in_reg = DFFE(GC1_q_b[16]_PORT_A_data_in, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[16]_PORT_A_address_reg = DFFE(GC1_q_b[16]_PORT_A_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[16]_PORT_B_address_reg = DFFE(GC1_q_b[16]_PORT_B_address, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_write_enable = B1L0;
GC1_q_b[16]_PORT_A_write_enable_reg = DFFE(GC1_q_b[16]_PORT_A_write_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[16]_PORT_B_read_enable_reg = DFFE(GC1_q_b[16]_PORT_B_read_enable, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_PORT_A_byte_mask = A1L0;
GC1_q_b[16]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[16]_PORT_A_byte_mask, GC1_q_b[16]_clock_0, , , );
GC1_q_b[16]_clock_0 = !CLK_25MHz2;
GC1_q_b[16]_clock_1 = !CLK_25MHz2;
GC1_q_b[16]_PORT_B_data_out = MEMORY(GC1_q_b[16]_PORT_A_data_in_reg, , GC1_q_b[16]_PORT_A_address_reg, GC1_q_b[16]_PORT_B_address_reg, GC1_q_b[16]_PORT_A_write_enable_reg, GC1_q_b[16]_PORT_B_read_enable_reg, GC1_q_b[16]_PORT_A_byte_mask_reg, , GC1_q_b[16]_clock_0, GC1_q_b[16]_clock_1, , , , );
GC1_q_b[16]_PORT_B_data_out_reg = DFFE(GC1_q_b[16]_PORT_B_data_out, GC1_q_b[16]_clock_1, , , );
GC1_q_b[16] = GC1_q_b[16]_PORT_B_data_out_reg[0];


--GC1_q_b[0] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[0]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[0]_PORT_A_data_in = C1L0;
GC1_q_b[0]_PORT_A_data_in_reg = DFFE(GC1_q_b[0]_PORT_A_data_in, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[0]_PORT_A_address_reg = DFFE(GC1_q_b[0]_PORT_A_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[0]_PORT_B_address_reg = DFFE(GC1_q_b[0]_PORT_B_address, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_write_enable = B1L0;
GC1_q_b[0]_PORT_A_write_enable_reg = DFFE(GC1_q_b[0]_PORT_A_write_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[0]_PORT_B_read_enable_reg = DFFE(GC1_q_b[0]_PORT_B_read_enable, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_PORT_A_byte_mask = A1L0;
GC1_q_b[0]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[0]_PORT_A_byte_mask, GC1_q_b[0]_clock_0, , , );
GC1_q_b[0]_clock_0 = !CLK_25MHz2;
GC1_q_b[0]_clock_1 = !CLK_25MHz2;
GC1_q_b[0]_PORT_B_data_out = MEMORY(GC1_q_b[0]_PORT_A_data_in_reg, , GC1_q_b[0]_PORT_A_address_reg, GC1_q_b[0]_PORT_B_address_reg, GC1_q_b[0]_PORT_A_write_enable_reg, GC1_q_b[0]_PORT_B_read_enable_reg, GC1_q_b[0]_PORT_A_byte_mask_reg, , GC1_q_b[0]_clock_0, GC1_q_b[0]_clock_1, , , , );
GC1_q_b[0]_PORT_B_data_out_reg = DFFE(GC1_q_b[0]_PORT_B_data_out, GC1_q_b[0]_clock_1, , , );
GC1_q_b[0] = GC1_q_b[0]_PORT_B_data_out_reg[0];


--GC1_q_b[24] is UART_MODULE:inst6|DPRAM_2k:inst29|altsyncram:altsyncram_component|altsyncram_01u1:auto_generated|q_b[24]
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 512, Port A Width: 1, Port B Depth: 512, Port B Width: 1
--Port A Logical Depth: 512, Port A Logical Width: 32, Port B Logical Depth: 512, Port B Logical Width: 32
--Port A Input: Registered, Port B Input: Registered, Port B Output: Registered
GC1_q_b[24]_PORT_A_data_in = C1L0;
GC1_q_b[24]_PORT_A_data_in_reg = DFFE(GC1_q_b[24]_PORT_A_data_in, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_address = BUS(A0, A1, A2, A3, A4, A5, A6, A7, A8);
GC1_q_b[24]_PORT_A_address_reg = DFFE(GC1_q_b[24]_PORT_A_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_address = BUS(XB1_o_RamAddr[0], XB1_o_RamAddr[1], XB1_o_RamAddr[2], XB1_o_RamAddr[3], XB1_o_RamAddr[4], XB1_o_RamAddr[5], XB1_o_RamAddr[6], XB1_o_RamAddr[7], XB1_o_RamAddr[8]);
GC1_q_b[24]_PORT_B_address_reg = DFFE(GC1_q_b[24]_PORT_B_address, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_write_enable = B1L0;
GC1_q_b[24]_PORT_A_write_enable_reg = DFFE(GC1_q_b[24]_PORT_A_write_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_B_read_enable = XB1_o_RamRE;
GC1_q_b[24]_PORT_B_read_enable_reg = DFFE(GC1_q_b[24]_PORT_B_read_enable, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_PORT_A_byte_mask = A1L0;
GC1_q_b[24]_PORT_A_byte_mask_reg = DFFE(GC1_q_b[24]_PORT_A_byte_mask, GC1_q_b[24]_clock_0, , , );
GC1_q_b[24]_clock_0 = !CLK_25MHz2;
GC1_q_b[24]_clock_1 = !CLK_25MHz2;
GC1_q_b[24]_PORT_B_data_out = MEMORY(GC1_q_b[24]_PORT_A_data_in_reg, , GC1_q_b[24]_PORT_A_address_reg, GC1_q_b[24]_PORT_B_address_reg, GC1_q_b[24]_PORT_A_write_enable_reg, GC1_q_b[24]_PORT_B_read_enable_reg, GC1_q_b[24]_PORT_A_byte_mask_reg, , GC1_q_b[24]_clock_0, GC1_q_b[24]_clock_1, , , , );
GC1_q_b[24]_PORT_B_data_out_reg = DFFE(GC1_q_b[24]_PORT_B_data_out, GC1_q_b[24]_clock_1, , , );
GC1_q_b[24] = GC1_q_b[24]_PORT_B_data_out_reg[0];


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst12|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst12|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst12|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst12|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst12|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[0]~11
ZB1L0 = ZB1_r_RxHead[0] $ (VCC);

--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[0]~12
ZB1L0 = CARRY(ZB1_r_RxHead[0]);


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[0]~11
ZB1L0 = ZB1_r_RxHead[0] $ (VCC);

--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[0]~12
ZB1L0 = CARRY(ZB1_r_RxHead[0]);


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[0]~11
ZB1L0 = ZB1_r_RxHead[0] $ (VCC);

--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[0]~12
ZB1L0 = CARRY(ZB1_r_RxHead[0]);


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[0]~11
ZB1L0 = ZB1_r_RxHead[0] $ (VCC);

--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[0]~12
ZB1L0 = CARRY(ZB1_r_RxHead[0]);


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[0]~11
ZB1L0 = ZB1_r_RxHead[0] $ (VCC);

--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[0]~12
ZB1L0 = CARRY(ZB1_r_RxHead[0]);


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst23|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst23|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst23|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst23|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst23|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[1]~14
ZB1L0 = (ZB1_r_RxHead[1] & (!ZB1L0)) # (!ZB1_r_RxHead[1] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[1]~15
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[1]));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[1]~14
ZB1L0 = (ZB1_r_RxHead[1] & (!ZB1L0)) # (!ZB1_r_RxHead[1] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[1]~15
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[1]));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[1]~14
ZB1L0 = (ZB1_r_RxHead[1] & (!ZB1L0)) # (!ZB1_r_RxHead[1] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[1]~15
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[1]));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[1]~14
ZB1L0 = (ZB1_r_RxHead[1] & (!ZB1L0)) # (!ZB1_r_RxHead[1] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[1]~15
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[1]));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[1]~14
ZB1L0 = (ZB1_r_RxHead[1] & (!ZB1L0)) # (!ZB1_r_RxHead[1] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[1]~15
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[1]));


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst39|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst39|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst39|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst39|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst39|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[2]~15
XB1L0 = (XB1_r_TxTail[2] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[2] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[2]~16
XB1L0 = CARRY((XB1_r_TxTail[2] & !XB1L0));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[2]~15
XB1L0 = (XB1_r_TxTail[2] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[2] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[2]~16
XB1L0 = CARRY((XB1_r_TxTail[2] & !XB1L0));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[2]~15
XB1L0 = (XB1_r_TxTail[2] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[2] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[2]~16
XB1L0 = CARRY((XB1_r_TxTail[2] & !XB1L0));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[2]~17
ZB1L0 = (ZB1_r_RxHead[2] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[2] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[2]~18
ZB1L0 = CARRY((ZB1_r_RxHead[2] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[2]~17
ZB1L0 = (ZB1_r_RxHead[2] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[2] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[2]~18
ZB1L0 = CARRY((ZB1_r_RxHead[2] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[2]~17
ZB1L0 = (ZB1_r_RxHead[2] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[2] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[2]~18
ZB1L0 = CARRY((ZB1_r_RxHead[2] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[2]~17
ZB1L0 = (ZB1_r_RxHead[2] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[2] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[2]~18
ZB1L0 = CARRY((ZB1_r_RxHead[2] & !ZB1L0));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[2]~15
XB1L0 = (XB1_r_TxTail[2] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[2] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[2]~16
XB1L0 = CARRY((XB1_r_TxTail[2] & !XB1L0));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[2]~15
XB1L0 = (XB1_r_TxTail[2] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[2] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[2]~16
XB1L0 = CARRY((XB1_r_TxTail[2] & !XB1L0));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[2]~17
ZB1L0 = (ZB1_r_RxHead[2] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[2] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[2]~18
ZB1L0 = CARRY((ZB1_r_RxHead[2] & !ZB1L0));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[3]~17
XB1L0 = (XB1_r_TxTail[3] & (!XB1L0)) # (!XB1_r_TxTail[3] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[3]~18
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[3]));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[3]~17
XB1L0 = (XB1_r_TxTail[3] & (!XB1L0)) # (!XB1_r_TxTail[3] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[3]~18
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[3]));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[3]~17
XB1L0 = (XB1_r_TxTail[3] & (!XB1L0)) # (!XB1_r_TxTail[3] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[3]~18
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[3]));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[3]~20
ZB1L0 = (ZB1_r_RxHead[3] & (!ZB1L0)) # (!ZB1_r_RxHead[3] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[3]~21
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[3]));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[3]~20
ZB1L0 = (ZB1_r_RxHead[3] & (!ZB1L0)) # (!ZB1_r_RxHead[3] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[3]~21
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[3]));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[3]~20
ZB1L0 = (ZB1_r_RxHead[3] & (!ZB1L0)) # (!ZB1_r_RxHead[3] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[3]~21
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[3]));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[3]~20
ZB1L0 = (ZB1_r_RxHead[3] & (!ZB1L0)) # (!ZB1_r_RxHead[3] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[3]~21
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[3]));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[3]~17
XB1L0 = (XB1_r_TxTail[3] & (!XB1L0)) # (!XB1_r_TxTail[3] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[3]~18
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[3]));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[3]~17
XB1L0 = (XB1_r_TxTail[3] & (!XB1L0)) # (!XB1_r_TxTail[3] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[3]~18
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[3]));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[3]~20
ZB1L0 = (ZB1_r_RxHead[3] & (!ZB1L0)) # (!ZB1_r_RxHead[3] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[3]~21
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[3]));


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst12|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst68|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst69|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst55|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst55|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst55|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst55|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst55|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst74|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst72|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst71|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst70|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst23|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst39|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst55|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst56|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[0] is PKU_IN_BLOCK_v2:inst67|r_CntkHz[0]
H1_r_CntkHz[0] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[4]~19
XB1L0 = (XB1_r_TxTail[4] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[4] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[4]~20
XB1L0 = CARRY((XB1_r_TxTail[4] & !XB1L0));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[4]~19
XB1L0 = (XB1_r_TxTail[4] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[4] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[4]~20
XB1L0 = CARRY((XB1_r_TxTail[4] & !XB1L0));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[4]~19
XB1L0 = (XB1_r_TxTail[4] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[4] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[4]~20
XB1L0 = CARRY((XB1_r_TxTail[4] & !XB1L0));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[4]~23
ZB1L0 = (ZB1_r_RxHead[4] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[4] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[4]~24
ZB1L0 = CARRY((ZB1_r_RxHead[4] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[4]~23
ZB1L0 = (ZB1_r_RxHead[4] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[4] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[4]~24
ZB1L0 = CARRY((ZB1_r_RxHead[4] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[4]~23
ZB1L0 = (ZB1_r_RxHead[4] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[4] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[4]~24
ZB1L0 = CARRY((ZB1_r_RxHead[4] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[4]~23
ZB1L0 = (ZB1_r_RxHead[4] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[4] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[4]~24
ZB1L0 = CARRY((ZB1_r_RxHead[4] & !ZB1L0));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[4]~19
XB1L0 = (XB1_r_TxTail[4] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[4] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[4]~20
XB1L0 = CARRY((XB1_r_TxTail[4] & !XB1L0));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[4]~19
XB1L0 = (XB1_r_TxTail[4] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[4] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[4]~20
XB1L0 = CARRY((XB1_r_TxTail[4] & !XB1L0));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[4]~23
ZB1L0 = (ZB1_r_RxHead[4] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[4] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[4]~24
ZB1L0 = CARRY((ZB1_r_RxHead[4] & !ZB1L0));


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst23|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst56|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst56|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst56|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst56|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst56|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst74|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst72|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst71|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst68|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst69|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst70|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst12|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst67|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst39|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst55|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[1] is PKU_IN_BLOCK_v2:inst56|r_CntkHz[1]
H1_r_CntkHz[1] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[5]~21
XB1L0 = (XB1_r_TxTail[5] & (!XB1L0)) # (!XB1_r_TxTail[5] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[5]~22
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[5]));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[5]~21
XB1L0 = (XB1_r_TxTail[5] & (!XB1L0)) # (!XB1_r_TxTail[5] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[5]~22
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[5]));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[5]~21
XB1L0 = (XB1_r_TxTail[5] & (!XB1L0)) # (!XB1_r_TxTail[5] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[5]~22
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[5]));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[5]~26
ZB1L0 = (ZB1_r_RxHead[5] & (!ZB1L0)) # (!ZB1_r_RxHead[5] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[5]~27
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[5]));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[5]~26
ZB1L0 = (ZB1_r_RxHead[5] & (!ZB1L0)) # (!ZB1_r_RxHead[5] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[5]~27
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[5]));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[5]~26
ZB1L0 = (ZB1_r_RxHead[5] & (!ZB1L0)) # (!ZB1_r_RxHead[5] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[5]~27
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[5]));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[5]~26
ZB1L0 = (ZB1_r_RxHead[5] & (!ZB1L0)) # (!ZB1_r_RxHead[5] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[5]~27
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[5]));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[5]~21
XB1L0 = (XB1_r_TxTail[5] & (!XB1L0)) # (!XB1_r_TxTail[5] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[5]~22
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[5]));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[5]~21
XB1L0 = (XB1_r_TxTail[5] & (!XB1L0)) # (!XB1_r_TxTail[5] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[5]~22
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[5]));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[5]~26
ZB1L0 = (ZB1_r_RxHead[5] & (!ZB1L0)) # (!ZB1_r_RxHead[5] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[5]~27
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[5]));


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst68|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst69|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst67|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst67|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst67|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst67|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst67|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst74|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst72|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst71|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[2] is PKU_IN_BLOCK_v2:inst70|r_CntkHz[2]
H1_r_CntkHz[2] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[6]~23
XB1L0 = (XB1_r_TxTail[6] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[6] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[6]~24
XB1L0 = CARRY((XB1_r_TxTail[6] & !XB1L0));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[6]~23
XB1L0 = (XB1_r_TxTail[6] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[6] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[6]~24
XB1L0 = CARRY((XB1_r_TxTail[6] & !XB1L0));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[6]~23
XB1L0 = (XB1_r_TxTail[6] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[6] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[6]~24
XB1L0 = CARRY((XB1_r_TxTail[6] & !XB1L0));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[6]~29
ZB1L0 = (ZB1_r_RxHead[6] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[6] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[6]~30
ZB1L0 = CARRY((ZB1_r_RxHead[6] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[6]~29
ZB1L0 = (ZB1_r_RxHead[6] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[6] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[6]~30
ZB1L0 = CARRY((ZB1_r_RxHead[6] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[6]~29
ZB1L0 = (ZB1_r_RxHead[6] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[6] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[6]~30
ZB1L0 = CARRY((ZB1_r_RxHead[6] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[6]~29
ZB1L0 = (ZB1_r_RxHead[6] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[6] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[6]~30
ZB1L0 = CARRY((ZB1_r_RxHead[6] & !ZB1L0));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[6]~23
XB1L0 = (XB1_r_TxTail[6] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[6] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[6]~24
XB1L0 = CARRY((XB1_r_TxTail[6] & !XB1L0));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[6]~23
XB1L0 = (XB1_r_TxTail[6] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[6] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[6]~24
XB1L0 = CARRY((XB1_r_TxTail[6] & !XB1L0));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[6]~29
ZB1L0 = (ZB1_r_RxHead[6] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[6] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[6]~30
ZB1L0 = CARRY((ZB1_r_RxHead[6] & !ZB1L0));


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst68|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst68|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst68|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst68|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst74|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst72|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst71|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst69|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[3] is PKU_IN_BLOCK_v2:inst70|r_CntkHz[3]
H1_r_CntkHz[3] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[7]~25
XB1L0 = (XB1_r_TxTail[7] & (!XB1L0)) # (!XB1_r_TxTail[7] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[7]~26
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[7]));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[7]~25
XB1L0 = (XB1_r_TxTail[7] & (!XB1L0)) # (!XB1_r_TxTail[7] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[7]~26
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[7]));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[7]~25
XB1L0 = (XB1_r_TxTail[7] & (!XB1L0)) # (!XB1_r_TxTail[7] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[7]~26
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[7]));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[7]~32
ZB1L0 = (ZB1_r_RxHead[7] & (!ZB1L0)) # (!ZB1_r_RxHead[7] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[7]~33
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[7]));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[7]~32
ZB1L0 = (ZB1_r_RxHead[7] & (!ZB1L0)) # (!ZB1_r_RxHead[7] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[7]~33
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[7]));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[7]~32
ZB1L0 = (ZB1_r_RxHead[7] & (!ZB1L0)) # (!ZB1_r_RxHead[7] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[7]~33
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[7]));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[7]~32
ZB1L0 = (ZB1_r_RxHead[7] & (!ZB1L0)) # (!ZB1_r_RxHead[7] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[7]~33
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[7]));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[7]~25
XB1L0 = (XB1_r_TxTail[7] & (!XB1L0)) # (!XB1_r_TxTail[7] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[7]~26
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[7]));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[7]~25
XB1L0 = (XB1_r_TxTail[7] & (!XB1L0)) # (!XB1_r_TxTail[7] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[7]~26
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[7]));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[7]~32
ZB1L0 = (ZB1_r_RxHead[7] & (!ZB1L0)) # (!ZB1_r_RxHead[7] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[7]~33
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[7]));


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst69|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst69|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst69|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst74|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst72|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst71|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[4] is PKU_IN_BLOCK_v2:inst70|r_CntkHz[4]
H1_r_CntkHz[4] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[8]~27
XB1L0 = (XB1_r_TxTail[8] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[8] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[8]~28
XB1L0 = CARRY((XB1_r_TxTail[8] & !XB1L0));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[8]~27
XB1L0 = (XB1_r_TxTail[8] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[8] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[8]~28
XB1L0 = CARRY((XB1_r_TxTail[8] & !XB1L0));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[8]~27
XB1L0 = (XB1_r_TxTail[8] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[8] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[8]~28
XB1L0 = CARRY((XB1_r_TxTail[8] & !XB1L0));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[8]~35
ZB1L0 = (ZB1_r_RxHead[8] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[8] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[8]~36
ZB1L0 = CARRY((ZB1_r_RxHead[8] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[8]~35
ZB1L0 = (ZB1_r_RxHead[8] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[8] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[8]~36
ZB1L0 = CARRY((ZB1_r_RxHead[8] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[8]~35
ZB1L0 = (ZB1_r_RxHead[8] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[8] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[8]~36
ZB1L0 = CARRY((ZB1_r_RxHead[8] & !ZB1L0));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[8]~35
ZB1L0 = (ZB1_r_RxHead[8] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[8] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[8]~36
ZB1L0 = CARRY((ZB1_r_RxHead[8] & !ZB1L0));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[8]~27
XB1L0 = (XB1_r_TxTail[8] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[8] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[8]~28
XB1L0 = CARRY((XB1_r_TxTail[8] & !XB1L0));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[8]~27
XB1L0 = (XB1_r_TxTail[8] & (XB1L0 $ (GND))) # (!XB1_r_TxTail[8] & (!XB1L0 & VCC));

--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[8]~28
XB1L0 = CARRY((XB1_r_TxTail[8] & !XB1L0));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[8]~35
ZB1L0 = (ZB1_r_RxHead[8] & (ZB1L0 $ (GND))) # (!ZB1_r_RxHead[8] & (!ZB1L0 & VCC));

--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[8]~36
ZB1L0 = CARRY((ZB1_r_RxHead[8] & !ZB1L0));


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst70|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst70|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst74|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst72|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[5] is PKU_IN_BLOCK_v2:inst71|r_CntkHz[5]
H1_r_CntkHz[5] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[9]~29
XB1L0 = (XB1_r_TxTail[9] & (!XB1L0)) # (!XB1_r_TxTail[9] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[9]~30
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[9]));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[9]~29
XB1L0 = (XB1_r_TxTail[9] & (!XB1L0)) # (!XB1_r_TxTail[9] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[9]~30
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[9]));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[9]~29
XB1L0 = (XB1_r_TxTail[9] & (!XB1L0)) # (!XB1_r_TxTail[9] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[9]~30
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[9]));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[9]~38
ZB1L0 = (ZB1_r_RxHead[9] & (!ZB1L0)) # (!ZB1_r_RxHead[9] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[9]~39
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[9]));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[9]~38
ZB1L0 = (ZB1_r_RxHead[9] & (!ZB1L0)) # (!ZB1_r_RxHead[9] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[9]~39
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[9]));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[9]~38
ZB1L0 = (ZB1_r_RxHead[9] & (!ZB1L0)) # (!ZB1_r_RxHead[9] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[9]~39
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[9]));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[9]~38
ZB1L0 = (ZB1_r_RxHead[9] & (!ZB1L0)) # (!ZB1_r_RxHead[9] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[9]~39
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[9]));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[9]~29
XB1L0 = (XB1_r_TxTail[9] & (!XB1L0)) # (!XB1_r_TxTail[9] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[9]~30
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[9]));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[9]~29
XB1L0 = (XB1_r_TxTail[9] & (!XB1L0)) # (!XB1_r_TxTail[9] & ((XB1L0) # (GND)));

--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[9]~30
XB1L0 = CARRY((!XB1L0) # (!XB1_r_TxTail[9]));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[9]~38
ZB1L0 = (ZB1_r_RxHead[9] & (!ZB1L0)) # (!ZB1_r_RxHead[9] & ((ZB1L0) # (GND)));

--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[9]~39
ZB1L0 = CARRY((!ZB1L0) # (!ZB1_r_RxHead[9]));


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst71|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst74|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--H1_r_CntkHz[6] is PKU_IN_BLOCK_v2:inst72|r_CntkHz[6]
H1_r_CntkHz[6] = DFFEAS(H1L0, !CLK_25MHz2,  ,  , H1L0,  ,  , H1L0,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_TxTail[10]~31
XB1L0 = XB1_r_TxTail[10] $ (!XB1L0);


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_TxTail[10]~31
XB1L0 = XB1_r_TxTail[10] $ (!XB1L0);


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_TxTail[10]~31
XB1L0 = XB1_r_TxTail[10] $ (!XB1L0);


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead[10]~41
ZB1L0 = ZB1_r_RxHead[10] $ (!ZB1L0);


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead[10]~41
ZB1L0 = ZB1_r_RxHead[10] $ (!ZB1L0);


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead[10]~41
ZB1L0 = ZB1_r_RxHead[10] $ (!ZB1L0);


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead[10]~41
ZB1L0 = ZB1_r_RxHead[10] $ (!ZB1L0);


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_TxTail[10]~31
XB1L0 = XB1_r_TxTail[10] $ (!XB1L0);


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead[10]~41
ZB1L0 = ZB1_r_RxHead[10] $ (!ZB1L0);


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_TxTail[10]~31
XB1L0 = XB1_r_TxTail[10] $ (!XB1L0);


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~0
Q1L0 = Q1_r_Cnt[0] $ (VCC);

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~1
Q1L0 = CARRY(Q1_r_Cnt[0]);


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~2
Q1L0 = (Q1_r_Cnt[1] & (!Q1L0)) # (!Q1_r_Cnt[1] & ((Q1L0) # (GND)));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~3
Q1L0 = CARRY((!Q1L0) # (!Q1_r_Cnt[1]));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~4
Q1L0 = (Q1_r_Cnt[2] & (Q1L0 $ (GND))) # (!Q1_r_Cnt[2] & (!Q1L0 & VCC));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~5
Q1L0 = CARRY((Q1_r_Cnt[2] & !Q1L0));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~6
Q1L0 = (Q1_r_Cnt[3] & (!Q1L0)) # (!Q1_r_Cnt[3] & ((Q1L0) # (GND)));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~7
Q1L0 = CARRY((!Q1L0) # (!Q1_r_Cnt[3]));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~8
Q1L0 = (Q1_r_Cnt[4] & (Q1L0 $ (GND))) # (!Q1_r_Cnt[4] & (!Q1L0 & VCC));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~9
Q1L0 = CARRY((Q1_r_Cnt[4] & !Q1L0));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~10
Q1L0 = (Q1_r_Cnt[5] & (!Q1L0)) # (!Q1_r_Cnt[5] & ((Q1L0) # (GND)));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~11
Q1L0 = CARRY((!Q1L0) # (!Q1_r_Cnt[5]));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~12
Q1L0 = (Q1_r_Cnt[6] & (Q1L0 $ (GND))) # (!Q1_r_Cnt[6] & (!Q1L0 & VCC));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~13
Q1L0 = CARRY((Q1_r_Cnt[6] & !Q1L0));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~14
Q1L0 = (Q1_r_Cnt[7] & (!Q1L0)) # (!Q1_r_Cnt[7] & ((Q1L0) # (GND)));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~15
Q1L0 = CARRY((!Q1L0) # (!Q1_r_Cnt[7]));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~16
Q1L0 = (Q1_r_Cnt[8] & (Q1L0 $ (GND))) # (!Q1_r_Cnt[8] & (!Q1L0 & VCC));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~17
Q1L0 = CARRY((Q1_r_Cnt[8] & !Q1L0));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~18
Q1L0 = (Q1_r_Cnt[9] & (!Q1L0)) # (!Q1_r_Cnt[9] & ((Q1L0) # (GND)));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~19
Q1L0 = CARRY((!Q1L0) # (!Q1_r_Cnt[9]));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~20
Q1L0 = (Q1_r_Cnt[10] & (Q1L0 $ (GND))) # (!Q1_r_Cnt[10] & (!Q1L0 & VCC));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~21
Q1L0 = CARRY((Q1_r_Cnt[10] & !Q1L0));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~22
Q1L0 = (Q1_r_Cnt[11] & (!Q1L0)) # (!Q1_r_Cnt[11] & ((Q1L0) # (GND)));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~23
Q1L0 = CARRY((!Q1L0) # (!Q1_r_Cnt[11]));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~24
Q1L0 = (Q1_r_Cnt[12] & (Q1L0 $ (GND))) # (!Q1_r_Cnt[12] & (!Q1L0 & VCC));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~25
Q1L0 = CARRY((Q1_r_Cnt[12] & !Q1L0));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~26
Q1L0 = (Q1_r_Cnt[13] & (!Q1L0)) # (!Q1_r_Cnt[13] & ((Q1L0) # (GND)));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~27
Q1L0 = CARRY((!Q1L0) # (!Q1_r_Cnt[13]));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~28
Q1L0 = (Q1_r_Cnt[14] & (Q1L0 $ (GND))) # (!Q1_r_Cnt[14] & (!Q1L0 & VCC));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~29
Q1L0 = CARRY((Q1_r_Cnt[14] & !Q1L0));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~30
Q1L0 = (Q1_r_Cnt[15] & (!Q1L0)) # (!Q1_r_Cnt[15] & ((Q1L0) # (GND)));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~31
Q1L0 = CARRY((!Q1L0) # (!Q1_r_Cnt[15]));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~32
Q1L0 = (Q1_r_Cnt[16] & (Q1L0 $ (GND))) # (!Q1_r_Cnt[16] & (!Q1L0 & VCC));

--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~33
Q1L0 = CARRY((Q1_r_Cnt[16] & !Q1L0));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Add0~34
Q1L0 = Q1_r_Cnt[17] $ (Q1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[0]~7
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[0]~8
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[1]~9
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[1]~10
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[2]~11
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[2]~12
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[3]~13
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[3]~14
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[4]~15
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[4]~16
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[5]~17
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[5]~18
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[6]~19
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--YB1_r_RxDataValid is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxDataValid
YB1_r_RxDataValid = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_RxDataValid is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxDataValid
YB1_r_RxDataValid = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_RxDataValid is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxDataValid
YB1_r_RxDataValid = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_RxDataValid is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxDataValid
YB1_r_RxDataValid = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_RxDataValid is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxDataValid
YB1_r_RxDataValid = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[0]~7
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[0]~8
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[1]~9
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[1]~10
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[2]~11
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[2]~12
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[3]~13
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[3]~14
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[4]~15
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[4]~16
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[5]~17
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[5]~18
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[6]~19
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[0]~7
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[0]~8
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[1]~9
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[1]~10
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[2]~11
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[2]~12
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[3]~13
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[3]~14
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[4]~15
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[4]~16
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[5]~17
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[5]~18
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[6]~19
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[0]~7
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[0]~8
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[0]~7
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[0]~8
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[0]~7
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[0]~8
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[1]~9
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[1]~10
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[2]~11
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[2]~12
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[3]~13
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[3]~14
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[4]~15
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[4]~16
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[5]~17
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[5]~18
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[6]~19
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[0]~8
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[0]~9
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[0]~7
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[0]~8
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[0]~7
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[0]~8
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[0]~7
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[0]~8
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[0]~7
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[0]~8
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[0]~7
H1L0 = H1_r_CntkHz[0] $ (VCC);

--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[0]~8
H1L0 = CARRY(H1_r_CntkHz[0]);


--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[1]~11
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[1]~12
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[2]~13
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[2]~14
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[3]~15
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[3]~16
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[4]~17
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[4]~18
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[5]~19
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[5]~20
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[6]~21
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[1]~12
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[1]~13
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[1]~11
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[1]~12
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[1]~11
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[1]~12
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[1]~11
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[1]~12
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[1]~11
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[1]~12
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[1]~11
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[1]~12
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[1]~11
H1L0 = (H1_r_CntkHz[1] & (!H1L0)) # (!H1_r_CntkHz[1] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[1]~12
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[1]));


--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[2]~13
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[2]~14
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[2]~13
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[2]~14
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[2]~13
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[2]~14
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[3]~15
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[3]~16
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[4]~17
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[4]~18
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[5]~19
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[5]~20
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[6]~21
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[2]~14
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[2]~15
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[2]~13
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[2]~14
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[2]~13
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[2]~14
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[2]~13
H1L0 = (H1_r_CntkHz[2] & (H1L0 $ (GND))) # (!H1_r_CntkHz[2] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[2]~14
H1L0 = CARRY((H1_r_CntkHz[2] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[3]~15
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[3]~16
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[4]~17
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[4]~18
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[5]~19
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[5]~20
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[6]~21
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[3]~16
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[3]~17
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[3]~15
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[3]~16
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[3]~15
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[3]~16
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[3]~15
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[3]~16
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[3]~15
H1L0 = (H1_r_CntkHz[3] & (!H1L0)) # (!H1_r_CntkHz[3] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[3]~16
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[3]));


--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[4]~17
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[4]~18
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[5]~19
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[5]~20
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[6]~21
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[4]~18
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[4]~19
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[4]~17
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[4]~18
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[4]~17
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[4]~18
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[4]~17
H1L0 = (H1_r_CntkHz[4] & (H1L0 $ (GND))) # (!H1_r_CntkHz[4] & (!H1L0 & VCC));

--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[4]~18
H1L0 = CARRY((H1_r_CntkHz[4] & !H1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[5]~19
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[5]~20
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[6]~21
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[5]~20
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[5]~21
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[5]~19
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[5]~20
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[5]~19
H1L0 = (H1_r_CntkHz[5] & (!H1L0)) # (!H1_r_CntkHz[5] & ((H1L0) # (GND)));

--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[5]~20
H1L0 = CARRY((!H1L0) # (!H1_r_CntkHz[5]));


--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[6]~21
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[6]~22
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[6]~21
H1L0 = H1_r_CntkHz[6] $ (!H1L0);


--YB1_r_CntClk[3] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[3]
YB1_r_CntClk[3] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[4] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[4]
YB1_r_CntClk[4] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[1] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[1]
YB1_r_CntClk[1] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[2] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[2]
YB1_r_CntClk[2] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntBit[1] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntBit[1]
YB1_r_CntBit[1] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_CntBit[3] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntBit[3]
YB1_r_CntBit[3] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_CntClk[3] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[3]
YB1_r_CntClk[3] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[4] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[4]
YB1_r_CntClk[4] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[1] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[1]
YB1_r_CntClk[1] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[2] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[2]
YB1_r_CntClk[2] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntBit[1] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntBit[1]
YB1_r_CntBit[1] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_CntBit[3] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntBit[3]
YB1_r_CntBit[3] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_CntClk[3] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[3]
YB1_r_CntClk[3] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[4] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[4]
YB1_r_CntClk[4] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[1] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[1]
YB1_r_CntClk[1] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[2] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[2]
YB1_r_CntClk[2] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntBit[1] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntBit[1]
YB1_r_CntBit[1] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_CntBit[3] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntBit[3]
YB1_r_CntBit[3] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_CntClk[3] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[3]
YB1_r_CntClk[3] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[4] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[4]
YB1_r_CntClk[4] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[1] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[1]
YB1_r_CntClk[1] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[2] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[2]
YB1_r_CntClk[2] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntBit[1] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntBit[1]
YB1_r_CntBit[1] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_CntBit[3] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntBit[3]
YB1_r_CntBit[3] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_CntClk[3] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[3]
YB1_r_CntClk[3] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[4] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[4]
YB1_r_CntClk[4] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[1] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[1]
YB1_r_CntClk[1] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntClk[2] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[2]
YB1_r_CntClk[2] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1_r_CntBit[1] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntBit[1]
YB1_r_CntBit[1] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_CntBit[3] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntBit[3]
YB1_r_CntBit[3] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1_r_CntClk[0] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[0]
YB1_r_CntClk[0] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[0]~6
YB1L0 = YB1_r_CntClk[0] $ (VCC);

--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[0]~7
YB1L0 = CARRY(YB1_r_CntClk[0]);


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[1]~8
YB1L0 = (YB1_r_CntClk[1] & (!YB1L0)) # (!YB1_r_CntClk[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[1]~9
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntClk[1]));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[2]~10
YB1L0 = (YB1_r_CntClk[2] & (YB1L0 $ (GND))) # (!YB1_r_CntClk[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[2]~11
YB1L0 = CARRY((YB1_r_CntClk[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[3]~12
YB1L0 = (YB1_r_CntClk[3] & (!YB1L0)) # (!YB1_r_CntClk[3] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[3]~13
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntClk[3]));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[4]~15
YB1L0 = YB1_r_CntClk[4] $ (!YB1L0);


--YB1_r_CntBit[0] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntBit[0]
YB1_r_CntBit[0] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntBit[0]~4
YB1L0 = (YB1L0 & (YB1_r_CntBit[0] & VCC)) # (!YB1L0 & (YB1_r_CntBit[0] $ (VCC)));

--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntBit[0]~5
YB1L0 = CARRY((!YB1L0 & YB1_r_CntBit[0]));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntBit[1]~6
YB1L0 = (YB1_r_CntBit[1] & (!YB1L0)) # (!YB1_r_CntBit[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntBit[1]~7
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntBit[1]));


--YB1_r_CntBit[2] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntBit[2]
YB1_r_CntBit[2] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntBit[2]~8
YB1L0 = (YB1_r_CntBit[2] & (YB1L0 $ (GND))) # (!YB1_r_CntBit[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntBit[2]~9
YB1L0 = CARRY((YB1_r_CntBit[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntBit[3]~10
YB1L0 = YB1_r_CntBit[3] $ (YB1L0);


--YB1_r_Acc[4] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[4]
YB1_r_Acc[4] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[2] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[2]
YB1_r_Acc[2] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[3] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[3]
YB1_r_Acc[3] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[0] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[0]
YB1_r_Acc[0] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[1] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[1]
YB1_r_Acc[1] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_CntClk[0] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[0]
YB1_r_CntClk[0] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[0]~6
YB1L0 = YB1_r_CntClk[0] $ (VCC);

--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[0]~7
YB1L0 = CARRY(YB1_r_CntClk[0]);


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[1]~8
YB1L0 = (YB1_r_CntClk[1] & (!YB1L0)) # (!YB1_r_CntClk[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[1]~9
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntClk[1]));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[2]~10
YB1L0 = (YB1_r_CntClk[2] & (YB1L0 $ (GND))) # (!YB1_r_CntClk[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[2]~11
YB1L0 = CARRY((YB1_r_CntClk[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[3]~12
YB1L0 = (YB1_r_CntClk[3] & (!YB1L0)) # (!YB1_r_CntClk[3] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[3]~13
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntClk[3]));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[4]~15
YB1L0 = YB1_r_CntClk[4] $ (!YB1L0);


--YB1_r_CntBit[0] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntBit[0]
YB1_r_CntBit[0] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntBit[0]~4
YB1L0 = (YB1L0 & (YB1_r_CntBit[0] & VCC)) # (!YB1L0 & (YB1_r_CntBit[0] $ (VCC)));

--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntBit[0]~5
YB1L0 = CARRY((!YB1L0 & YB1_r_CntBit[0]));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntBit[1]~6
YB1L0 = (YB1_r_CntBit[1] & (!YB1L0)) # (!YB1_r_CntBit[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntBit[1]~7
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntBit[1]));


--YB1_r_CntBit[2] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntBit[2]
YB1_r_CntBit[2] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntBit[2]~8
YB1L0 = (YB1_r_CntBit[2] & (YB1L0 $ (GND))) # (!YB1_r_CntBit[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntBit[2]~9
YB1L0 = CARRY((YB1_r_CntBit[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntBit[3]~10
YB1L0 = YB1_r_CntBit[3] $ (YB1L0);


--YB1_r_Acc[4] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[4]
YB1_r_Acc[4] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[2] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[2]
YB1_r_Acc[2] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[3] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[3]
YB1_r_Acc[3] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[0] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[0]
YB1_r_Acc[0] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[1] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[1]
YB1_r_Acc[1] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_CntClk[0] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[0]
YB1_r_CntClk[0] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[0]~6
YB1L0 = YB1_r_CntClk[0] $ (VCC);

--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[0]~7
YB1L0 = CARRY(YB1_r_CntClk[0]);


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[1]~8
YB1L0 = (YB1_r_CntClk[1] & (!YB1L0)) # (!YB1_r_CntClk[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[1]~9
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntClk[1]));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[2]~10
YB1L0 = (YB1_r_CntClk[2] & (YB1L0 $ (GND))) # (!YB1_r_CntClk[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[2]~11
YB1L0 = CARRY((YB1_r_CntClk[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[3]~12
YB1L0 = (YB1_r_CntClk[3] & (!YB1L0)) # (!YB1_r_CntClk[3] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[3]~13
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntClk[3]));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[4]~15
YB1L0 = YB1_r_CntClk[4] $ (!YB1L0);


--YB1_r_CntBit[0] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntBit[0]
YB1_r_CntBit[0] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntBit[0]~4
YB1L0 = (YB1L0 & (YB1_r_CntBit[0] & VCC)) # (!YB1L0 & (YB1_r_CntBit[0] $ (VCC)));

--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntBit[0]~5
YB1L0 = CARRY((!YB1L0 & YB1_r_CntBit[0]));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntBit[1]~6
YB1L0 = (YB1_r_CntBit[1] & (!YB1L0)) # (!YB1_r_CntBit[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntBit[1]~7
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntBit[1]));


--YB1_r_CntBit[2] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntBit[2]
YB1_r_CntBit[2] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntBit[2]~8
YB1L0 = (YB1_r_CntBit[2] & (YB1L0 $ (GND))) # (!YB1_r_CntBit[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntBit[2]~9
YB1L0 = CARRY((YB1_r_CntBit[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntBit[3]~10
YB1L0 = YB1_r_CntBit[3] $ (YB1L0);


--YB1_r_Acc[4] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[4]
YB1_r_Acc[4] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[2] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[2]
YB1_r_Acc[2] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[3] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[3]
YB1_r_Acc[3] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[0] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[0]
YB1_r_Acc[0] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[1] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[1]
YB1_r_Acc[1] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_CntClk[0] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[0]
YB1_r_CntClk[0] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[0]~6
YB1L0 = YB1_r_CntClk[0] $ (VCC);

--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[0]~7
YB1L0 = CARRY(YB1_r_CntClk[0]);


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[1]~8
YB1L0 = (YB1_r_CntClk[1] & (!YB1L0)) # (!YB1_r_CntClk[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[1]~9
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntClk[1]));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[2]~10
YB1L0 = (YB1_r_CntClk[2] & (YB1L0 $ (GND))) # (!YB1_r_CntClk[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[2]~11
YB1L0 = CARRY((YB1_r_CntClk[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[3]~12
YB1L0 = (YB1_r_CntClk[3] & (!YB1L0)) # (!YB1_r_CntClk[3] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[3]~13
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntClk[3]));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[4]~15
YB1L0 = YB1_r_CntClk[4] $ (!YB1L0);


--YB1_r_CntBit[0] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntBit[0]
YB1_r_CntBit[0] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntBit[0]~4
YB1L0 = (YB1L0 & (YB1_r_CntBit[0] & VCC)) # (!YB1L0 & (YB1_r_CntBit[0] $ (VCC)));

--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntBit[0]~5
YB1L0 = CARRY((!YB1L0 & YB1_r_CntBit[0]));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntBit[1]~6
YB1L0 = (YB1_r_CntBit[1] & (!YB1L0)) # (!YB1_r_CntBit[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntBit[1]~7
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntBit[1]));


--YB1_r_CntBit[2] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntBit[2]
YB1_r_CntBit[2] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntBit[2]~8
YB1L0 = (YB1_r_CntBit[2] & (YB1L0 $ (GND))) # (!YB1_r_CntBit[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntBit[2]~9
YB1L0 = CARRY((YB1_r_CntBit[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntBit[3]~10
YB1L0 = YB1_r_CntBit[3] $ (YB1L0);


--YB1_r_Acc[4] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[4]
YB1_r_Acc[4] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[2] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[2]
YB1_r_Acc[2] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[3] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[3]
YB1_r_Acc[3] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[0] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[0]
YB1_r_Acc[0] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[1] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[1]
YB1_r_Acc[1] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_CntClk[0] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[0]
YB1_r_CntClk[0] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , YB1L0,  );


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[0]~6
YB1L0 = YB1_r_CntClk[0] $ (VCC);

--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[0]~7
YB1L0 = CARRY(YB1_r_CntClk[0]);


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[1]~8
YB1L0 = (YB1_r_CntClk[1] & (!YB1L0)) # (!YB1_r_CntClk[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[1]~9
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntClk[1]));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[2]~10
YB1L0 = (YB1_r_CntClk[2] & (YB1L0 $ (GND))) # (!YB1_r_CntClk[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[2]~11
YB1L0 = CARRY((YB1_r_CntClk[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[3]~12
YB1L0 = (YB1_r_CntClk[3] & (!YB1L0)) # (!YB1_r_CntClk[3] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[3]~13
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntClk[3]));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[4]~15
YB1L0 = YB1_r_CntClk[4] $ (!YB1L0);


--YB1_r_CntBit[0] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntBit[0]
YB1_r_CntBit[0] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntBit[0]~4
YB1L0 = (YB1L0 & (YB1_r_CntBit[0] & VCC)) # (!YB1L0 & (YB1_r_CntBit[0] $ (VCC)));

--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntBit[0]~5
YB1L0 = CARRY((!YB1L0 & YB1_r_CntBit[0]));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntBit[1]~6
YB1L0 = (YB1_r_CntBit[1] & (!YB1L0)) # (!YB1_r_CntBit[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntBit[1]~7
YB1L0 = CARRY((!YB1L0) # (!YB1_r_CntBit[1]));


--YB1_r_CntBit[2] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntBit[2]
YB1_r_CntBit[2] = DFFEAS(YB1L0, !B1_inst56,  ,  ,  ,  ,  , !YB1_r_State.s_RxIn,  );


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntBit[2]~8
YB1L0 = (YB1_r_CntBit[2] & (YB1L0 $ (GND))) # (!YB1_r_CntBit[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntBit[2]~9
YB1L0 = CARRY((YB1_r_CntBit[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntBit[3]~10
YB1L0 = YB1_r_CntBit[3] $ (YB1L0);


--YB1_r_Acc[4] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[4]
YB1_r_Acc[4] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[2] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[2]
YB1_r_Acc[2] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[3] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[3]
YB1_r_Acc[3] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[0] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[0]
YB1_r_Acc[0] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1_r_Acc[1] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[1]
YB1_r_Acc[1] = DFFEAS(YB1L0, B1_inst56,  ,  , YB1L0,  ,  , YB1L0,  );


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[0]~5
YB1L0 = (YB1_r_RX & (YB1_r_Acc[0] & VCC)) # (!YB1_r_RX & (YB1_r_Acc[0] $ (VCC)));

--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[0]~6
YB1L0 = CARRY((!YB1_r_RX & YB1_r_Acc[0]));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[1]~7
YB1L0 = (YB1_r_Acc[1] & (!YB1L0)) # (!YB1_r_Acc[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[1]~8
YB1L0 = CARRY((!YB1L0) # (!YB1_r_Acc[1]));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[2]~9
YB1L0 = (YB1_r_Acc[2] & (YB1L0 $ (GND))) # (!YB1_r_Acc[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[2]~10
YB1L0 = CARRY((YB1_r_Acc[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[3]~11
YB1L0 = (YB1_r_Acc[3] & (!YB1L0)) # (!YB1_r_Acc[3] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[3]~12
YB1L0 = CARRY((!YB1L0) # (!YB1_r_Acc[3]));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[4]~13
YB1L0 = YB1_r_Acc[4] $ (!YB1L0);


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[0]~5
YB1L0 = (YB1_r_RX & (YB1_r_Acc[0] & VCC)) # (!YB1_r_RX & (YB1_r_Acc[0] $ (VCC)));

--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[0]~6
YB1L0 = CARRY((!YB1_r_RX & YB1_r_Acc[0]));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[1]~7
YB1L0 = (YB1_r_Acc[1] & (!YB1L0)) # (!YB1_r_Acc[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[1]~8
YB1L0 = CARRY((!YB1L0) # (!YB1_r_Acc[1]));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[2]~9
YB1L0 = (YB1_r_Acc[2] & (YB1L0 $ (GND))) # (!YB1_r_Acc[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[2]~10
YB1L0 = CARRY((YB1_r_Acc[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[3]~11
YB1L0 = (YB1_r_Acc[3] & (!YB1L0)) # (!YB1_r_Acc[3] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[3]~12
YB1L0 = CARRY((!YB1L0) # (!YB1_r_Acc[3]));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[4]~13
YB1L0 = YB1_r_Acc[4] $ (!YB1L0);


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[0]~5
YB1L0 = (YB1_r_RX & (YB1_r_Acc[0] & VCC)) # (!YB1_r_RX & (YB1_r_Acc[0] $ (VCC)));

--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[0]~6
YB1L0 = CARRY((!YB1_r_RX & YB1_r_Acc[0]));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[1]~7
YB1L0 = (YB1_r_Acc[1] & (!YB1L0)) # (!YB1_r_Acc[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[1]~8
YB1L0 = CARRY((!YB1L0) # (!YB1_r_Acc[1]));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[2]~9
YB1L0 = (YB1_r_Acc[2] & (YB1L0 $ (GND))) # (!YB1_r_Acc[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[2]~10
YB1L0 = CARRY((YB1_r_Acc[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[3]~11
YB1L0 = (YB1_r_Acc[3] & (!YB1L0)) # (!YB1_r_Acc[3] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[3]~12
YB1L0 = CARRY((!YB1L0) # (!YB1_r_Acc[3]));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[4]~13
YB1L0 = YB1_r_Acc[4] $ (!YB1L0);


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[0]~5
YB1L0 = (YB1_r_RX & (YB1_r_Acc[0] & VCC)) # (!YB1_r_RX & (YB1_r_Acc[0] $ (VCC)));

--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[0]~6
YB1L0 = CARRY((!YB1_r_RX & YB1_r_Acc[0]));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[1]~7
YB1L0 = (YB1_r_Acc[1] & (!YB1L0)) # (!YB1_r_Acc[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[1]~8
YB1L0 = CARRY((!YB1L0) # (!YB1_r_Acc[1]));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[2]~9
YB1L0 = (YB1_r_Acc[2] & (YB1L0 $ (GND))) # (!YB1_r_Acc[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[2]~10
YB1L0 = CARRY((YB1_r_Acc[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[3]~11
YB1L0 = (YB1_r_Acc[3] & (!YB1L0)) # (!YB1_r_Acc[3] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[3]~12
YB1L0 = CARRY((!YB1L0) # (!YB1_r_Acc[3]));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[4]~13
YB1L0 = YB1_r_Acc[4] $ (!YB1L0);


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[0]~5
YB1L0 = (YB1_r_RX & (YB1_r_Acc[0] & VCC)) # (!YB1_r_RX & (YB1_r_Acc[0] $ (VCC)));

--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[0]~6
YB1L0 = CARRY((!YB1_r_RX & YB1_r_Acc[0]));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[1]~7
YB1L0 = (YB1_r_Acc[1] & (!YB1L0)) # (!YB1_r_Acc[1] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[1]~8
YB1L0 = CARRY((!YB1L0) # (!YB1_r_Acc[1]));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[2]~9
YB1L0 = (YB1_r_Acc[2] & (YB1L0 $ (GND))) # (!YB1_r_Acc[2] & (!YB1L0 & VCC));

--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[2]~10
YB1L0 = CARRY((YB1_r_Acc[2] & !YB1L0));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[3]~11
YB1L0 = (YB1_r_Acc[3] & (!YB1L0)) # (!YB1_r_Acc[3] & ((YB1L0) # (GND)));

--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[3]~12
YB1L0 = CARRY((!YB1L0) # (!YB1_r_Acc[3]));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[4]~13
YB1L0 = YB1_r_Acc[4] $ (!YB1L0);


--SB1_o_TX_Active is UART_MODULE:inst7|UART_TX_BLOCK:inst5|o_TX_Active
SB1_o_TX_Active = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--W1_r_LINE1_SendBufer[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SendBufer[5]
W1_r_LINE1_SendBufer[5] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Bit_Tx[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Tx[2]
W1_r_Cnt_Bit_Tx[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1_r_LINE1_SendBufer[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SendBufer[3]
W1_r_LINE1_SendBufer[3] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Bit_Tx[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Tx[1]
W1_r_Cnt_Bit_Tx[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1_r_LINE1_SendBufer[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SendBufer[1]
W1_r_LINE1_SendBufer[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux127~0
W1L0 = (W1_r_Cnt_Bit_Tx[2] & (((W1_r_Cnt_Bit_Tx[1])))) # (!W1_r_Cnt_Bit_Tx[2] & ((W1_r_Cnt_Bit_Tx[1] & (W1_r_LINE1_SendBufer[3])) # (!W1_r_Cnt_Bit_Tx[1] & ((W1_r_LINE1_SendBufer[1])))));


--W1_r_LINE1_SendBufer[7] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SendBufer[7]
W1_r_LINE1_SendBufer[7] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux127~1
W1L0 = (W1_r_Cnt_Bit_Tx[2] & ((W1L0 & ((W1_r_LINE1_SendBufer[7]))) # (!W1L0 & (W1_r_LINE1_SendBufer[5])))) # (!W1_r_Cnt_Bit_Tx[2] & (((W1L0))));


--W1_r_LINE1_SendBufer[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SendBufer[2]
W1_r_LINE1_SendBufer[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SendBufer[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SendBufer[4]
W1_r_LINE1_SendBufer[4] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SendBufer[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SendBufer[0]
W1_r_LINE1_SendBufer[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux127~2
W1L0 = (W1_r_Cnt_Bit_Tx[1] & (((W1_r_Cnt_Bit_Tx[2])))) # (!W1_r_Cnt_Bit_Tx[1] & ((W1_r_Cnt_Bit_Tx[2] & (W1_r_LINE1_SendBufer[4])) # (!W1_r_Cnt_Bit_Tx[2] & ((W1_r_LINE1_SendBufer[0])))));


--W1_r_LINE1_SendBufer[6] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SendBufer[6]
W1_r_LINE1_SendBufer[6] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux127~3
W1L0 = (W1_r_Cnt_Bit_Tx[1] & ((W1L0 & ((W1_r_LINE1_SendBufer[6]))) # (!W1L0 & (W1_r_LINE1_SendBufer[2])))) # (!W1_r_Cnt_Bit_Tx[1] & (((W1L0))));


--W1_r_Cnt_Bit_Tx[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Tx[0]
W1_r_Cnt_Bit_Tx[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux127~4
W1L0 = (W1_r_Cnt_Bit_Tx[0] & (W1L0)) # (!W1_r_Cnt_Bit_Tx[0] & ((W1L0)));


--W1_r_1WIRE_BitLow is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_BitLow
W1_r_1WIRE_BitLow = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_1WIRE_BitHigh is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_BitHigh
W1_r_1WIRE_BitHigh = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_1WIRE_Main is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_Main
W1_r_1WIRE_Main = DFFEAS(W1L0, !CLK_25MHz2,  ,  , U1_o_MHz,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_1WIRE~0
W1L0 = (!W1_r_1WIRE_Main & ((W1L0 & ((!W1_r_1WIRE_BitHigh))) # (!W1L0 & (!W1_r_1WIRE_BitLow))));


--W1_r_LINE2_SendBufer[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SendBufer[5]
W1_r_LINE2_SendBufer[5] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SendBufer[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SendBufer[3]
W1_r_LINE2_SendBufer[3] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SendBufer[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SendBufer[1]
W1_r_LINE2_SendBufer[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux128~0
W1L0 = (W1_r_Cnt_Bit_Tx[2] & (((W1_r_Cnt_Bit_Tx[1])))) # (!W1_r_Cnt_Bit_Tx[2] & ((W1_r_Cnt_Bit_Tx[1] & (W1_r_LINE2_SendBufer[3])) # (!W1_r_Cnt_Bit_Tx[1] & ((W1_r_LINE2_SendBufer[1])))));


--W1_r_LINE2_SendBufer[7] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SendBufer[7]
W1_r_LINE2_SendBufer[7] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux128~1
W1L0 = (W1_r_Cnt_Bit_Tx[2] & ((W1L0 & ((W1_r_LINE2_SendBufer[7]))) # (!W1L0 & (W1_r_LINE2_SendBufer[5])))) # (!W1_r_Cnt_Bit_Tx[2] & (((W1L0))));


--W1_r_LINE2_SendBufer[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SendBufer[2]
W1_r_LINE2_SendBufer[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SendBufer[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SendBufer[4]
W1_r_LINE2_SendBufer[4] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SendBufer[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SendBufer[0]
W1_r_LINE2_SendBufer[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux128~2
W1L0 = (W1_r_Cnt_Bit_Tx[1] & (((W1_r_Cnt_Bit_Tx[2])))) # (!W1_r_Cnt_Bit_Tx[1] & ((W1_r_Cnt_Bit_Tx[2] & (W1_r_LINE2_SendBufer[4])) # (!W1_r_Cnt_Bit_Tx[2] & ((W1_r_LINE2_SendBufer[0])))));


--W1_r_LINE2_SendBufer[6] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SendBufer[6]
W1_r_LINE2_SendBufer[6] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux128~3
W1L0 = (W1_r_Cnt_Bit_Tx[1] & ((W1L0 & ((W1_r_LINE2_SendBufer[6]))) # (!W1L0 & (W1_r_LINE2_SendBufer[2])))) # (!W1_r_Cnt_Bit_Tx[1] & (((W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux128~4
W1L0 = (W1_r_Cnt_Bit_Tx[0] & (W1L0)) # (!W1_r_Cnt_Bit_Tx[0] & ((W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_1WIRE~0
W1L0 = (!W1_r_1WIRE_Main & ((W1L0 & ((!W1_r_1WIRE_BitHigh))) # (!W1L0 & (!W1_r_1WIRE_BitLow))));


--SB1_o_TX is UART_MODULE:inst5|UART_TX_BLOCK:inst5|o_TX
SB1_o_TX = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--RB1_o_Channel is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_Channel
RB1_o_Channel = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--B1_inst64 is UART_MODULE:inst5|inst64
B1_inst64 = (!RB1_o_Channel) # (!SB1_o_TX);


--B1_inst54 is UART_MODULE:inst5|inst54
B1_inst54 = (RB1_o_Channel) # (!SB1_o_TX);


--RB1_o_Channel is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_Channel
RB1_o_Channel = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--SB1_o_TX is UART_MODULE:inst2|UART_TX_BLOCK:inst5|o_TX
SB1_o_TX = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--B1_inst54 is UART_MODULE:inst2|inst54
B1_inst54 = (RB1_o_Channel) # (!SB1_o_TX);


--B1_inst64 is UART_MODULE:inst2|inst64
B1_inst64 = (!RB1_o_Channel) # (!SB1_o_TX);


--SB1_o_TX_Active is UART_MODULE:inst2|UART_TX_BLOCK:inst5|o_TX_Active
SB1_o_TX_Active = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--RB1_o_Channel is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_Channel
RB1_o_Channel = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--SB1_o_TX is UART_MODULE:inst3|UART_TX_BLOCK:inst5|o_TX
SB1_o_TX = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--B1_inst54 is UART_MODULE:inst3|inst54
B1_inst54 = (RB1_o_Channel) # (!SB1_o_TX);


--B1_inst64 is UART_MODULE:inst3|inst64
B1_inst64 = (!RB1_o_Channel) # (!SB1_o_TX);


--SB1_o_TX_Active is UART_MODULE:inst3|UART_TX_BLOCK:inst5|o_TX_Active
SB1_o_TX_Active = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--RB1_o_Channel is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_Channel
RB1_o_Channel = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--SB1_o_TX is UART_MODULE:inst7|UART_TX_BLOCK:inst5|o_TX
SB1_o_TX = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--B1_inst54 is UART_MODULE:inst7|inst54
B1_inst54 = (RB1_o_Channel) # (!SB1_o_TX);


--B1_inst64 is UART_MODULE:inst7|inst64
B1_inst64 = (!RB1_o_Channel) # (!SB1_o_TX);


--SB1_o_TX_Active is UART_MODULE:inst5|UART_TX_BLOCK:inst5|o_TX_Active
SB1_o_TX_Active = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--W1_r_LINE3_SendBufer[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SendBufer[5]
W1_r_LINE3_SendBufer[5] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SendBufer[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SendBufer[3]
W1_r_LINE3_SendBufer[3] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SendBufer[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SendBufer[1]
W1_r_LINE3_SendBufer[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux129~0
W1L0 = (W1_r_Cnt_Bit_Tx[2] & (((W1_r_Cnt_Bit_Tx[1])))) # (!W1_r_Cnt_Bit_Tx[2] & ((W1_r_Cnt_Bit_Tx[1] & (W1_r_LINE3_SendBufer[3])) # (!W1_r_Cnt_Bit_Tx[1] & ((W1_r_LINE3_SendBufer[1])))));


--W1_r_LINE3_SendBufer[7] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SendBufer[7]
W1_r_LINE3_SendBufer[7] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux129~1
W1L0 = (W1_r_Cnt_Bit_Tx[2] & ((W1L0 & ((W1_r_LINE3_SendBufer[7]))) # (!W1L0 & (W1_r_LINE3_SendBufer[5])))) # (!W1_r_Cnt_Bit_Tx[2] & (((W1L0))));


--W1_r_LINE3_SendBufer[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SendBufer[2]
W1_r_LINE3_SendBufer[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SendBufer[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SendBufer[4]
W1_r_LINE3_SendBufer[4] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SendBufer[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SendBufer[0]
W1_r_LINE3_SendBufer[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux129~2
W1L0 = (W1_r_Cnt_Bit_Tx[1] & (((W1_r_Cnt_Bit_Tx[2])))) # (!W1_r_Cnt_Bit_Tx[1] & ((W1_r_Cnt_Bit_Tx[2] & (W1_r_LINE3_SendBufer[4])) # (!W1_r_Cnt_Bit_Tx[2] & ((W1_r_LINE3_SendBufer[0])))));


--W1_r_LINE3_SendBufer[6] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SendBufer[6]
W1_r_LINE3_SendBufer[6] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux129~3
W1L0 = (W1_r_Cnt_Bit_Tx[1] & ((W1L0 & ((W1_r_LINE3_SendBufer[6]))) # (!W1L0 & (W1_r_LINE3_SendBufer[2])))) # (!W1_r_Cnt_Bit_Tx[1] & (((W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux129~4
W1L0 = (W1_r_Cnt_Bit_Tx[0] & (W1L0)) # (!W1_r_Cnt_Bit_Tx[0] & ((W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_1WIRE~0
W1L0 = (!W1_r_1WIRE_Main & ((W1L0 & ((!W1_r_1WIRE_BitHigh))) # (!W1L0 & (!W1_r_1WIRE_BitLow))));


--W1_r_LINE4_SendBufer[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SendBufer[5]
W1_r_LINE4_SendBufer[5] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SendBufer[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SendBufer[3]
W1_r_LINE4_SendBufer[3] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SendBufer[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SendBufer[1]
W1_r_LINE4_SendBufer[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux130~0
W1L0 = (W1_r_Cnt_Bit_Tx[2] & (((W1_r_Cnt_Bit_Tx[1])))) # (!W1_r_Cnt_Bit_Tx[2] & ((W1_r_Cnt_Bit_Tx[1] & (W1_r_LINE4_SendBufer[3])) # (!W1_r_Cnt_Bit_Tx[1] & ((W1_r_LINE4_SendBufer[1])))));


--W1_r_LINE4_SendBufer[7] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SendBufer[7]
W1_r_LINE4_SendBufer[7] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux130~1
W1L0 = (W1_r_Cnt_Bit_Tx[2] & ((W1L0 & ((W1_r_LINE4_SendBufer[7]))) # (!W1L0 & (W1_r_LINE4_SendBufer[5])))) # (!W1_r_Cnt_Bit_Tx[2] & (((W1L0))));


--W1_r_LINE4_SendBufer[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SendBufer[2]
W1_r_LINE4_SendBufer[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SendBufer[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SendBufer[4]
W1_r_LINE4_SendBufer[4] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SendBufer[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SendBufer[0]
W1_r_LINE4_SendBufer[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux130~2
W1L0 = (W1_r_Cnt_Bit_Tx[1] & (((W1_r_Cnt_Bit_Tx[2])))) # (!W1_r_Cnt_Bit_Tx[1] & ((W1_r_Cnt_Bit_Tx[2] & (W1_r_LINE4_SendBufer[4])) # (!W1_r_Cnt_Bit_Tx[2] & ((W1_r_LINE4_SendBufer[0])))));


--W1_r_LINE4_SendBufer[6] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SendBufer[6]
W1_r_LINE4_SendBufer[6] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux130~3
W1L0 = (W1_r_Cnt_Bit_Tx[1] & ((W1L0 & ((W1_r_LINE4_SendBufer[6]))) # (!W1L0 & (W1_r_LINE4_SendBufer[2])))) # (!W1_r_Cnt_Bit_Tx[1] & (((W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux130~4
W1L0 = (W1_r_Cnt_Bit_Tx[0] & (W1L0)) # (!W1_r_Cnt_Bit_Tx[0] & ((W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_1WIRE~0
W1L0 = (!W1_r_1WIRE_Main & ((W1L0 & ((!W1_r_1WIRE_BitHigh))) # (!W1L0 & (!W1_r_1WIRE_BitLow))));


--G1_o_A2 is PK_LIST_BLOCK:inst11|o_A2
G1_o_A2 = DFFEAS(C1L0, !CLK_25MHz2,  ,  , G1L0,  ,  ,  ,  );


--RB1_o_Channel is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_Channel
RB1_o_Channel = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--SB1_o_TX is UART_MODULE:inst6|UART_TX_BLOCK:inst5|o_TX
SB1_o_TX = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--B1_inst54 is UART_MODULE:inst6|inst54
B1_inst54 = (RB1_o_Channel) # (!SB1_o_TX);


--SB1_o_TX_Active is UART_MODULE:inst6|UART_TX_BLOCK:inst5|o_TX_Active
SB1_o_TX_Active = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--B1_inst64 is UART_MODULE:inst6|inst64
B1_inst64 = (!RB1_o_Channel) # (!SB1_o_TX);


--G1_o_A1 is PK_LIST_BLOCK:inst11|o_A1
G1_o_A1 = DFFEAS(C1L0, !CLK_25MHz2,  ,  , G1L0,  ,  ,  ,  );


--G1_o_A3 is PK_LIST_BLOCK:inst11|o_A3
G1_o_A3 = DFFEAS(C1L0, !CLK_25MHz2,  ,  , G1L0,  ,  ,  ,  );


--G1_o_A4 is PK_LIST_BLOCK:inst11|o_A4
G1_o_A4 = DFFEAS(C1L0, !CLK_25MHz2,  ,  , G1L0,  ,  ,  ,  );


--G1_o_OSN is PK_LIST_BLOCK:inst11|o_OSN
G1_o_OSN = DFFEAS(C1L0, !CLK_25MHz2,  ,  , G1L0,  ,  ,  ,  );


--N1_r_PkEn is PK_OUT_BLOCK:inst22|r_PkEn
N1_r_PkEn = DFFEAS(N1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--inst97 is inst97
inst97 = (G1_o_OSN & N1_r_PkEn);


--G1_o_REZ is PK_LIST_BLOCK:inst11|o_REZ
G1_o_REZ = DFFEAS(C1L0, !CLK_25MHz2,  ,  , G1L0,  ,  ,  ,  );


--inst99 is inst99
inst99 = (N1_r_PkEn & G1_o_REZ);


--M1_r_Key[0] is EMU_BLOCK:inst18|r_Key[0]
M1_r_Key[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1_r_Key[1] is EMU_BLOCK:inst18|r_Key[1]
M1_r_Key[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1L0 is EMU_BLOCK:inst18|Equal2~0
M1L0 = (M1_r_Key[0] & !M1_r_Key[1]);


--M1L0 is EMU_BLOCK:inst18|Equal1~0
M1L0 = (M1_r_Key[1] & !M1_r_Key[0]);


--M1_r_Key[3] is EMU_BLOCK:inst18|r_Key[3]
M1_r_Key[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1_r_Key[2] is EMU_BLOCK:inst18|r_Key[2]
M1_r_Key[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1L0 is EMU_BLOCK:inst18|Equal3~0
M1L0 = (M1_r_Key[3] & !M1_r_Key[2]);


--M1L0 is EMU_BLOCK:inst18|Equal4~0
M1L0 = (M1_r_Key[2] & !M1_r_Key[3]);


--M1_r_Key[4] is EMU_BLOCK:inst18|r_Key[4]
M1_r_Key[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1_r_Key[5] is EMU_BLOCK:inst18|r_Key[5]
M1_r_Key[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1L0 is EMU_BLOCK:inst18|Equal6~0
M1L0 = (M1_r_Key[4] & !M1_r_Key[5]);


--M1L0 is EMU_BLOCK:inst18|Equal5~0
M1L0 = (M1_r_Key[5] & !M1_r_Key[4]);


--M1_r_Key[7] is EMU_BLOCK:inst18|r_Key[7]
M1_r_Key[7] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1_r_Key[6] is EMU_BLOCK:inst18|r_Key[6]
M1_r_Key[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1L0 is EMU_BLOCK:inst18|Equal7~0
M1L0 = (M1_r_Key[7] & !M1_r_Key[6]);


--M1L0 is EMU_BLOCK:inst18|Equal8~0
M1L0 = (M1_r_Key[6] & !M1_r_Key[7]);


--M1_r_Key[9] is EMU_BLOCK:inst18|r_Key[9]
M1_r_Key[9] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1_r_Key[8] is EMU_BLOCK:inst18|r_Key[8]
M1_r_Key[8] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1L0 is EMU_BLOCK:inst18|Equal9~0
M1L0 = (M1_r_Key[9] & !M1_r_Key[8]);


--M1L0 is EMU_BLOCK:inst18|Equal10~0
M1L0 = (M1_r_Key[8] & !M1_r_Key[9]);


--M1_r_Key[11] is EMU_BLOCK:inst18|r_Key[11]
M1_r_Key[11] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1_r_Key[10] is EMU_BLOCK:inst18|r_Key[10]
M1_r_Key[10] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , M1L0,  ,  ,  ,  );


--M1L0 is EMU_BLOCK:inst18|Equal11~0
M1L0 = (M1_r_Key[11] & !M1_r_Key[10]);


--M1L0 is EMU_BLOCK:inst18|Equal12~0
M1L0 = (M1_r_Key[10] & !M1_r_Key[11]);


--A1L0 is inst164~0
A1L0 = (M1_r_Key[1] & ((M1_r_Key[5] $ (M1_r_Key[4])) # (!M1_r_Key[0]))) # (!M1_r_Key[1] & ((M1_r_Key[0]) # (M1_r_Key[5] $ (M1_r_Key[4]))));


--A1L0 is inst164~1
A1L0 = (M1_r_Key[3] & ((M1_r_Key[7] $ (M1_r_Key[6])) # (!M1_r_Key[2]))) # (!M1_r_Key[3] & ((M1_r_Key[2]) # (M1_r_Key[7] $ (M1_r_Key[6]))));


--A1L0 is inst164~2
A1L0 = (M1_r_Key[9] & ((M1_r_Key[11] $ (M1_r_Key[10])) # (!M1_r_Key[8]))) # (!M1_r_Key[9] & ((M1_r_Key[8]) # (M1_r_Key[11] $ (M1_r_Key[10]))));


--A1L0 is inst164~3
A1L0 = (A1L0) # ((A1L0) # (A1L0));


--SB1_r_State is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_State
SB1_r_State = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|o_TX_Active~0
SB1L0 = (!SB1_r_BitCnt[0] & (!SB1_r_BitCnt[1] & SB1_r_State));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|o_TX_Active~1
SB1L0 = (SB1_r_BitCnt[2] & (SB1_o_TX_Active & ((!SB1L0) # (!SB1_r_BitCnt[3])))) # (!SB1_r_BitCnt[2] & ((SB1_o_TX_Active) # ((!SB1_r_BitCnt[3] & SB1L0))));


--W1_r_State[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_State[2]
W1_r_State[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , U1_o_MHz,  ,  ,  ,  );


--W1_r_State[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_State[0]
W1_r_State[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1_r_State[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_State[1]
W1_r_State[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux5~0
W1L0 = (W1_r_State[2] & (!W1_r_State[1] & ((KC1_q_b[5]) # (W1_r_State[0]))));


--U1_o_MHz is FREQ_1MHz_BLOCK:inst34|o_MHz
U1_o_MHz = DFFEAS(U1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1_r_State_1WIRE.SEND is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.SEND
W1_r_State_1WIRE.SEND = DFFEAS(W1L0, !CLK_25MHz2,  ,  , U1_o_MHz,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SendBufer[6]~0
W1L0 = (W1_r_State[2]) # (!W1_r_State[0]);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SendBufer[0]~1
W1L0 = (U1_o_MHz & (W1_r_State_1WIRE.SEND & ((!W1L0) # (!W1_r_State[1]))));


--W1_r_State_1WIRE.WRITE_BIT is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.WRITE_BIT
W1_r_State_1WIRE.WRITE_BIT = DFFEAS(W1L0, !CLK_25MHz2,  ,  , U1_o_MHz,  ,  ,  ,  );


--W1_r_Write_BitLow is ONE_WIRE_BLOCK_v4_2:inst38|r_Write_BitLow
W1_r_Write_BitLow = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal6~4
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[0] & (!W1_r_Cnt_Time1MHz_BitLow[5] & (!W1_r_Cnt_Time1MHz_BitLow[4] & !W1_r_Cnt_Time1MHz_BitLow[9])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal6~5
W1L0 = (!W1_r_Cnt_Time1MHz_BitLow[7] & !W1_r_Cnt_Time1MHz_BitLow[8]);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal2~0
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[1] & !W1_r_Cnt_Time1MHz_BitLow[2]);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal6~6
W1L0 = (!W1_r_Cnt_Time1MHz_BitLow[6] & !W1_r_Cnt_Time1MHz_BitLow[3]);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal6~7
W1L0 = (W1L0 & (W1L0 & (W1L0 & W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Tx[2]~0
W1L0 = (U1_o_MHz & (W1_r_State_1WIRE.WRITE_BIT & (W1_r_Write_BitLow & W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Tx[2]~1
W1L0 = W1_r_Cnt_Bit_Tx[2] $ (((W1_r_Cnt_Bit_Tx[0] & (W1_r_Cnt_Bit_Tx[1] & W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux7~0
W1L0 = (!W1_r_State[1] & ((W1_r_State[2] & ((KC1_q_b[3]) # (W1_r_State[0]))) # (!W1_r_State[2] & ((!W1_r_State[0])))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Tx[1]~2
W1L0 = W1_r_Cnt_Bit_Tx[1] $ (((W1_r_Cnt_Bit_Tx[0] & W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux9~0
W1L0 = (W1_r_State[2] & (!W1_r_State[1] & ((W1_r_State[0]) # (KC1_q_b[1]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux3~0
W1L0 = (!W1_r_State[1] & ((W1_r_State[2] & ((KC1_q_b[7]) # (W1_r_State[0]))) # (!W1_r_State[2] & ((!W1_r_State[0])))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux8~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[0]) # ((KC1_q_b[2]) # (!W1_r_State[2])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux6~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[2] & ((W1_r_State[0]) # (KC1_q_b[4]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux10~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[2] & (KC1_q_b[0] & !W1_r_State[0])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux4~0
W1L0 = (W1_r_State[1]) # (((KC1_q_b[6] & !W1_r_State[0])) # (!W1_r_State[2]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_BitHigh~0
W1L0 = (U1_o_MHz & W1_r_State_1WIRE.WRITE_BIT);


--W1_r_Write_BitHigh is ONE_WIRE_BLOCK_v4_2:inst38|r_Write_BitHigh
W1_r_Write_BitHigh = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_State_1WIRE.READ_BIT is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.READ_BIT
W1_r_State_1WIRE.READ_BIT = DFFEAS(W1L0, !CLK_25MHz2,  ,  , U1_o_MHz,  ,  ,  ,  );


--W1_r_BitRecieve[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_BitRecieve[0]
W1_r_BitRecieve[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_Main~0
W1L0 = (W1_r_State_1WIRE.READ_BIT & !W1_r_BitRecieve[0]);


--W1_r_State_1WIRE.RESET is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.RESET
W1_r_State_1WIRE.RESET = DFFEAS(W1L0, !CLK_25MHz2,  ,  , U1_o_MHz,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_Main~1
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[8] & (W1_r_Cnt_Time1MHz_BitLow[6] & (W1_r_State_1WIRE.RESET & !W1_r_Cnt_Time1MHz_BitLow[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_Main~2
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[0] & (!W1_r_Cnt_Time1MHz_BitLow[4] & (!W1_r_Cnt_Time1MHz_BitLow[9] & !W1_r_Cnt_Time1MHz_BitLow[1])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_Main~3
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[5] & (W1_r_Cnt_Time1MHz_BitLow[7] & (W1_r_Cnt_Time1MHz_BitLow[2] & W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal12~0
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Time1MHz_BitLow[1] & !W1_r_Cnt_Time1MHz_BitLow[6])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_Main~4
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[2]) # ((W1_r_Cnt_Time1MHz_BitLow[3]) # ((!W1_r_State_1WIRE.RESET) # (!W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_Main~5
W1L0 = (W1L0 & ((W1L0) # ((W1L0 & !W1_r_1WIRE_Main)))) # (!W1L0 & (((W1L0 & !W1_r_1WIRE_Main))));


--W1_r_Cnt_Bit_Rx[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Rx[4]
W1_r_Cnt_Bit_Rx[4] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_State_1WIRE.GET_DATA is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.GET_DATA
W1_r_State_1WIRE.GET_DATA = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_Main~6
W1L0 = (!W1L0 & (((!W1_r_Cnt_Bit_Rx[4] & W1_r_State_1WIRE.GET_DATA)) # (!W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux13~0
W1L0 = (W1_r_State[2] & (!W1_r_State[1] & ((W1_r_State[0]) # (KC1_q_b[5]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux15~0
W1L0 = (!W1_r_State[1] & ((W1_r_State[2] & ((KC1_q_b[3]) # (W1_r_State[0]))) # (!W1_r_State[2] & ((!W1_r_State[0])))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux17~0
W1L0 = (W1_r_State[2] & (!W1_r_State[1] & ((W1_r_State[0]) # (KC1_q_b[1]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux11~0
W1L0 = (!W1_r_State[1] & ((W1_r_State[2] & ((KC1_q_b[7]) # (W1_r_State[0]))) # (!W1_r_State[2] & ((!W1_r_State[0])))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux16~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[0]) # ((KC1_q_b[2]) # (!W1_r_State[2])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux14~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[2] & ((W1_r_State[0]) # (KC1_q_b[4]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux18~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[2] & (KC1_q_b[0] & !W1_r_State[0])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux12~0
W1L0 = (W1_r_State[1]) # (((KC1_q_b[6] & !W1_r_State[0])) # (!W1_r_State[2]));


--XB1_o_TxData[4] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_TxData[4]
XB1_o_TxData[4] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[3] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_TxData[3]
XB1_o_TxData[3] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[2] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_TxData[2]
XB1_o_TxData[2] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|Mux1~0
SB1L0 = (SB1_r_BitCnt[1] & (((SB1_r_BitCnt[0])))) # (!SB1_r_BitCnt[1] & ((SB1_r_BitCnt[0] & (XB1_o_TxData[3])) # (!SB1_r_BitCnt[0] & ((XB1_o_TxData[2])))));


--XB1_o_TxData[5] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_TxData[5]
XB1_o_TxData[5] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|Mux1~1
SB1L0 = (SB1_r_BitCnt[1] & ((SB1L0 & ((XB1_o_TxData[5]))) # (!SB1L0 & (XB1_o_TxData[4])))) # (!SB1_r_BitCnt[1] & (((SB1L0))));


--XB1_o_TxData[7] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_TxData[7]
XB1_o_TxData[7] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[6] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_TxData[6]
XB1_o_TxData[6] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|Mux1~2
SB1L0 = (SB1_r_BitCnt[0] & ((XB1_o_TxData[7]) # ((SB1_r_BitCnt[1])))) # (!SB1_r_BitCnt[0] & (((XB1_o_TxData[6] & !SB1_r_BitCnt[1]))));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|o_TX~0
SB1L0 = XB1_o_TxData[4] $ (XB1_o_TxData[5] $ (XB1_o_TxData[7] $ (XB1_o_TxData[6])));


--XB1_o_TxData[1] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_TxData[1]
XB1_o_TxData[1] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[0] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_TxData[0]
XB1_o_TxData[0] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|o_TX~1
SB1L0 = XB1_o_TxData[3] $ (XB1_o_TxData[2] $ (XB1_o_TxData[1] $ (XB1_o_TxData[0])));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|Mux1~3
SB1L0 = (SB1L0) # ((SB1_r_BitCnt[1] & (SB1L0 $ (SB1L0))));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|Mux1~4
SB1L0 = (!SB1_r_BitCnt[0] & ((SB1_r_BitCnt[1] & (XB1_o_TxData[0])) # (!SB1_r_BitCnt[1] & ((!SB1_o_TX)))));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|Mux1~5
SB1L0 = (SB1L0) # ((SB1_r_BitCnt[1] & (SB1_r_BitCnt[0] & XB1_o_TxData[1])));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|Mux1~6
SB1L0 = (SB1_r_BitCnt[2] & (((SB1_r_BitCnt[3])))) # (!SB1_r_BitCnt[2] & ((SB1_r_BitCnt[3] & (SB1L0)) # (!SB1_r_BitCnt[3] & ((SB1L0)))));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|Mux1~7
SB1L0 = (SB1_r_BitCnt[2] & ((SB1L0 & ((!SB1_o_TX))) # (!SB1L0 & (SB1L0)))) # (!SB1_r_BitCnt[2] & (((SB1L0))));


--SB1_r_State is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_State
SB1_r_State = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|Mux1~8
SB1L0 = (!SB1L0 & SB1_r_State);


--CC1L0 is UART_MODULE:inst5|UART_CTRL_EN_BLOCK:inst35|Equal0~0
CC1L0 = (A12 & !A11);


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal0~0
GB1L0 = (A3 & (!A1 & (!A0 & !A2)));


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal0~1
GB1L0 = (!A9 & (!A14 & (!A5 & !A6)));


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal6~0
GB1L0 = (GB1L0 & (!A4 & (!A7 & !A8)));


--CC1L0 is UART_MODULE:inst5|UART_CTRL_EN_BLOCK:inst35|Equal0~1
CC1L0 = (A10 & (GB1L0 & (GB1L0 & !A13)));


--inst43 is inst43
inst43 = (CS3) # (WE_An);


--RB1L0 is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|process_0~0
RB1L0 = (CC1L0 & (!inst43 & (!A11 & !A12)));


--XB1_o_TxData[4] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_TxData[4]
XB1_o_TxData[4] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[3] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_TxData[3]
XB1_o_TxData[3] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[2] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_TxData[2]
XB1_o_TxData[2] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|Mux1~0
SB1L0 = (SB1_r_BitCnt[1] & (((SB1_r_BitCnt[0])))) # (!SB1_r_BitCnt[1] & ((SB1_r_BitCnt[0] & (XB1_o_TxData[3])) # (!SB1_r_BitCnt[0] & ((XB1_o_TxData[2])))));


--XB1_o_TxData[5] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_TxData[5]
XB1_o_TxData[5] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|Mux1~1
SB1L0 = (SB1_r_BitCnt[1] & ((SB1L0 & ((XB1_o_TxData[5]))) # (!SB1L0 & (XB1_o_TxData[4])))) # (!SB1_r_BitCnt[1] & (((SB1L0))));


--XB1_o_TxData[7] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_TxData[7]
XB1_o_TxData[7] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[6] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_TxData[6]
XB1_o_TxData[6] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|Mux1~2
SB1L0 = (SB1_r_BitCnt[0] & ((XB1_o_TxData[7]) # ((SB1_r_BitCnt[1])))) # (!SB1_r_BitCnt[0] & (((XB1_o_TxData[6] & !SB1_r_BitCnt[1]))));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|o_TX~0
SB1L0 = XB1_o_TxData[4] $ (XB1_o_TxData[5] $ (XB1_o_TxData[7] $ (XB1_o_TxData[6])));


--XB1_o_TxData[1] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_TxData[1]
XB1_o_TxData[1] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[0] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_TxData[0]
XB1_o_TxData[0] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|o_TX~1
SB1L0 = XB1_o_TxData[3] $ (XB1_o_TxData[2] $ (XB1_o_TxData[1] $ (XB1_o_TxData[0])));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|Mux1~3
SB1L0 = (SB1L0) # ((SB1_r_BitCnt[1] & (SB1L0 $ (SB1L0))));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|Mux1~4
SB1L0 = (!SB1_r_BitCnt[0] & ((SB1_r_BitCnt[1] & (XB1_o_TxData[0])) # (!SB1_r_BitCnt[1] & ((!SB1_o_TX)))));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|Mux1~5
SB1L0 = (SB1L0) # ((SB1_r_BitCnt[1] & (SB1_r_BitCnt[0] & XB1_o_TxData[1])));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|Mux1~6
SB1L0 = (SB1_r_BitCnt[2] & (((SB1_r_BitCnt[3])))) # (!SB1_r_BitCnt[2] & ((SB1_r_BitCnt[3] & (SB1L0)) # (!SB1_r_BitCnt[3] & ((SB1L0)))));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|Mux1~7
SB1L0 = (SB1_r_BitCnt[2] & ((SB1L0 & ((!SB1_o_TX))) # (!SB1L0 & (SB1L0)))) # (!SB1_r_BitCnt[2] & (((SB1L0))));


--SB1_r_State is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_State
SB1_r_State = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|Mux1~8
SB1L0 = (!SB1L0 & SB1_r_State);


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|o_TX_Active~0
SB1L0 = (!SB1_r_BitCnt[0] & (!SB1_r_BitCnt[1] & SB1_r_State));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|o_TX_Active~1
SB1L0 = (SB1_r_BitCnt[2] & (SB1_o_TX_Active & ((!SB1L0) # (!SB1_r_BitCnt[3])))) # (!SB1_r_BitCnt[2] & ((SB1_o_TX_Active) # ((!SB1_r_BitCnt[3] & SB1L0))));


--RB1L0 is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|process_0~0
RB1L0 = (A11 & (CC1L0 & (!inst43 & !A12)));


--XB1_o_TxData[4] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_TxData[4]
XB1_o_TxData[4] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[3] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_TxData[3]
XB1_o_TxData[3] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[2] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_TxData[2]
XB1_o_TxData[2] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|Mux1~0
SB1L0 = (SB1_r_BitCnt[1] & (((SB1_r_BitCnt[0])))) # (!SB1_r_BitCnt[1] & ((SB1_r_BitCnt[0] & (XB1_o_TxData[3])) # (!SB1_r_BitCnt[0] & ((XB1_o_TxData[2])))));


--XB1_o_TxData[5] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_TxData[5]
XB1_o_TxData[5] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|Mux1~1
SB1L0 = (SB1_r_BitCnt[1] & ((SB1L0 & ((XB1_o_TxData[5]))) # (!SB1L0 & (XB1_o_TxData[4])))) # (!SB1_r_BitCnt[1] & (((SB1L0))));


--XB1_o_TxData[7] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_TxData[7]
XB1_o_TxData[7] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[6] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_TxData[6]
XB1_o_TxData[6] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|Mux1~2
SB1L0 = (SB1_r_BitCnt[0] & ((XB1_o_TxData[7]) # ((SB1_r_BitCnt[1])))) # (!SB1_r_BitCnt[0] & (((XB1_o_TxData[6] & !SB1_r_BitCnt[1]))));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|o_TX~0
SB1L0 = XB1_o_TxData[4] $ (XB1_o_TxData[5] $ (XB1_o_TxData[7] $ (XB1_o_TxData[6])));


--XB1_o_TxData[1] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_TxData[1]
XB1_o_TxData[1] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[0] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_TxData[0]
XB1_o_TxData[0] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|o_TX~1
SB1L0 = XB1_o_TxData[3] $ (XB1_o_TxData[2] $ (XB1_o_TxData[1] $ (XB1_o_TxData[0])));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|Mux1~3
SB1L0 = (SB1L0) # ((SB1_r_BitCnt[1] & (SB1L0 $ (SB1L0))));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|Mux1~4
SB1L0 = (!SB1_r_BitCnt[0] & ((SB1_r_BitCnt[1] & (XB1_o_TxData[0])) # (!SB1_r_BitCnt[1] & ((!SB1_o_TX)))));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|Mux1~5
SB1L0 = (SB1L0) # ((SB1_r_BitCnt[1] & (SB1_r_BitCnt[0] & XB1_o_TxData[1])));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|Mux1~6
SB1L0 = (SB1_r_BitCnt[2] & (((SB1_r_BitCnt[3])))) # (!SB1_r_BitCnt[2] & ((SB1_r_BitCnt[3] & (SB1L0)) # (!SB1_r_BitCnt[3] & ((SB1L0)))));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|Mux1~7
SB1L0 = (SB1_r_BitCnt[2] & ((SB1L0 & ((!SB1_o_TX))) # (!SB1L0 & (SB1L0)))) # (!SB1_r_BitCnt[2] & (((SB1L0))));


--SB1_r_State is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_State
SB1_r_State = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|Mux1~8
SB1L0 = (!SB1L0 & SB1_r_State);


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|o_TX_Active~0
SB1L0 = (!SB1_r_BitCnt[0] & (!SB1_r_BitCnt[1] & SB1_r_State));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|o_TX_Active~1
SB1L0 = (SB1_r_BitCnt[2] & (SB1_o_TX_Active & ((!SB1L0) # (!SB1_r_BitCnt[3])))) # (!SB1_r_BitCnt[2] & ((SB1_o_TX_Active) # ((!SB1_r_BitCnt[3] & SB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal13~0
GB1L0 = (A13 & (GB1L0 & (!A7 & !A8)));


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal4~0
GB1L0 = (GB1L0 & (GB1L0 & !A4));


--BC1L0 is UART_MODULE:inst2|UART_TXHEAD_EN_BLOCK:inst33|Equal0~4
BC1L0 = (!A11 & !A12);


--RB1L0 is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|process_0~0
RB1L0 = (A10 & (GB1L0 & (BC1L0 & !inst43)));


--XB1_o_TxData[4] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_TxData[4]
XB1_o_TxData[4] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[3] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_TxData[3]
XB1_o_TxData[3] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[2] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_TxData[2]
XB1_o_TxData[2] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|Mux1~0
SB1L0 = (SB1_r_BitCnt[1] & (((SB1_r_BitCnt[0])))) # (!SB1_r_BitCnt[1] & ((SB1_r_BitCnt[0] & (XB1_o_TxData[3])) # (!SB1_r_BitCnt[0] & ((XB1_o_TxData[2])))));


--XB1_o_TxData[5] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_TxData[5]
XB1_o_TxData[5] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|Mux1~1
SB1L0 = (SB1_r_BitCnt[1] & ((SB1L0 & ((XB1_o_TxData[5]))) # (!SB1L0 & (XB1_o_TxData[4])))) # (!SB1_r_BitCnt[1] & (((SB1L0))));


--XB1_o_TxData[7] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_TxData[7]
XB1_o_TxData[7] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[6] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_TxData[6]
XB1_o_TxData[6] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|Mux1~2
SB1L0 = (SB1_r_BitCnt[0] & ((XB1_o_TxData[7]) # ((SB1_r_BitCnt[1])))) # (!SB1_r_BitCnt[0] & (((XB1_o_TxData[6] & !SB1_r_BitCnt[1]))));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|o_TX~0
SB1L0 = XB1_o_TxData[4] $ (XB1_o_TxData[5] $ (XB1_o_TxData[7] $ (XB1_o_TxData[6])));


--XB1_o_TxData[1] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_TxData[1]
XB1_o_TxData[1] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[0] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_TxData[0]
XB1_o_TxData[0] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|o_TX~1
SB1L0 = XB1_o_TxData[3] $ (XB1_o_TxData[2] $ (XB1_o_TxData[1] $ (XB1_o_TxData[0])));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|Mux1~3
SB1L0 = (SB1L0) # ((SB1_r_BitCnt[1] & (SB1L0 $ (SB1L0))));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|Mux1~4
SB1L0 = (!SB1_r_BitCnt[0] & ((SB1_r_BitCnt[1] & (XB1_o_TxData[0])) # (!SB1_r_BitCnt[1] & ((!SB1_o_TX)))));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|Mux1~5
SB1L0 = (SB1L0) # ((SB1_r_BitCnt[0] & (SB1_r_BitCnt[1] & XB1_o_TxData[1])));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|Mux1~6
SB1L0 = (SB1_r_BitCnt[2] & (((SB1_r_BitCnt[3])))) # (!SB1_r_BitCnt[2] & ((SB1_r_BitCnt[3] & (SB1L0)) # (!SB1_r_BitCnt[3] & ((SB1L0)))));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|Mux1~7
SB1L0 = (SB1_r_BitCnt[2] & ((SB1L0 & ((!SB1_o_TX))) # (!SB1L0 & (SB1L0)))) # (!SB1_r_BitCnt[2] & (((SB1L0))));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|Mux1~8
SB1L0 = (!SB1L0 & SB1_r_State);


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|o_TX_Active~0
SB1L0 = (!SB1_r_BitCnt[0] & (!SB1_r_BitCnt[1] & SB1_r_State));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|o_TX_Active~1
SB1L0 = (SB1_r_BitCnt[2] & (SB1_o_TX_Active & ((!SB1L0) # (!SB1_r_BitCnt[3])))) # (!SB1_r_BitCnt[2] & ((SB1_o_TX_Active) # ((!SB1_r_BitCnt[3] & SB1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux21~0
W1L0 = (W1_r_State[2] & (!W1_r_State[1] & ((W1_r_State[0]) # (KC1_q_b[5]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux23~0
W1L0 = (!W1_r_State[1] & ((W1_r_State[2] & ((KC1_q_b[3]) # (W1_r_State[0]))) # (!W1_r_State[2] & ((!W1_r_State[0])))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux25~0
W1L0 = (W1_r_State[2] & (!W1_r_State[1] & ((W1_r_State[0]) # (KC1_q_b[1]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux19~0
W1L0 = (!W1_r_State[1] & ((W1_r_State[2] & ((KC1_q_b[7]) # (W1_r_State[0]))) # (!W1_r_State[2] & ((!W1_r_State[0])))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux24~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[0]) # ((KC1_q_b[2]) # (!W1_r_State[2])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux22~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[2] & ((W1_r_State[0]) # (KC1_q_b[4]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux26~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[2] & (KC1_q_b[0] & !W1_r_State[0])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux20~0
W1L0 = (W1_r_State[1]) # (((KC1_q_b[6] & !W1_r_State[0])) # (!W1_r_State[2]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux29~0
W1L0 = (W1_r_State[2] & (!W1_r_State[1] & ((W1_r_State[0]) # (KC1_q_b[5]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux31~0
W1L0 = (!W1_r_State[1] & ((W1_r_State[2] & ((KC1_q_b[3]) # (W1_r_State[0]))) # (!W1_r_State[2] & ((!W1_r_State[0])))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux33~0
W1L0 = (W1_r_State[2] & (!W1_r_State[1] & ((W1_r_State[0]) # (KC1_q_b[1]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux27~0
W1L0 = (!W1_r_State[1] & ((W1_r_State[2] & ((KC1_q_b[7]) # (W1_r_State[0]))) # (!W1_r_State[2] & ((!W1_r_State[0])))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux32~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[0]) # ((KC1_q_b[2]) # (!W1_r_State[2])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux30~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[2] & ((W1_r_State[0]) # (KC1_q_b[4]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux34~0
W1L0 = (W1_r_State[1]) # ((W1_r_State[2] & (KC1_q_b[0] & !W1_r_State[0])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Mux28~0
W1L0 = (W1_r_State[1]) # (((KC1_q_b[6] & !W1_r_State[0])) # (!W1_r_State[2]));


--UB1L0 is UART_MODULE:inst3|UART_RXHEAD_EN_BLOCK:inst11|Equal0~0
UB1L0 = (A11 & !A12);


--G1L0 is PK_LIST_BLOCK:inst11|process_0~4
G1L0 = (GB1L0 & (A4 & (GB1L0 & G1L0)));


--BC1L0 is UART_MODULE:inst6|UART_TXHEAD_EN_BLOCK:inst33|Equal0~6
BC1L0 = (A11 & A12);


--XB1_o_TxData[4] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_TxData[4]
XB1_o_TxData[4] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[3] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_TxData[3]
XB1_o_TxData[3] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[2] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_TxData[2]
XB1_o_TxData[2] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|Mux1~0
SB1L0 = (SB1_r_BitCnt[1] & (((SB1_r_BitCnt[0])))) # (!SB1_r_BitCnt[1] & ((SB1_r_BitCnt[0] & (XB1_o_TxData[3])) # (!SB1_r_BitCnt[0] & ((XB1_o_TxData[2])))));


--XB1_o_TxData[5] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_TxData[5]
XB1_o_TxData[5] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|Mux1~1
SB1L0 = (SB1_r_BitCnt[1] & ((SB1L0 & ((XB1_o_TxData[5]))) # (!SB1L0 & (XB1_o_TxData[4])))) # (!SB1_r_BitCnt[1] & (((SB1L0))));


--XB1_o_TxData[7] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_TxData[7]
XB1_o_TxData[7] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[6] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_TxData[6]
XB1_o_TxData[6] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|Mux1~2
SB1L0 = (SB1_r_BitCnt[0] & ((XB1_o_TxData[7]) # ((SB1_r_BitCnt[1])))) # (!SB1_r_BitCnt[0] & (((XB1_o_TxData[6] & !SB1_r_BitCnt[1]))));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|o_TX~0
SB1L0 = XB1_o_TxData[4] $ (XB1_o_TxData[5] $ (XB1_o_TxData[7] $ (XB1_o_TxData[6])));


--XB1_o_TxData[1] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_TxData[1]
XB1_o_TxData[1] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--XB1_o_TxData[0] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_TxData[0]
XB1_o_TxData[0] = DFFEAS(XB1L0, !B1_inst56,  ,  , XB1_r_State.s_SetDV,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|o_TX~1
SB1L0 = XB1_o_TxData[3] $ (XB1_o_TxData[2] $ (XB1_o_TxData[1] $ (XB1_o_TxData[0])));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|Mux1~3
SB1L0 = (SB1L0) # ((SB1_r_BitCnt[1] & (SB1L0 $ (SB1L0))));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|Mux1~4
SB1L0 = (!SB1_r_BitCnt[0] & ((SB1_r_BitCnt[1] & (XB1_o_TxData[0])) # (!SB1_r_BitCnt[1] & ((!SB1_o_TX)))));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|Mux1~5
SB1L0 = (SB1L0) # ((SB1_r_BitCnt[1] & (SB1_r_BitCnt[0] & XB1_o_TxData[1])));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|Mux1~6
SB1L0 = (SB1_r_BitCnt[2] & (((SB1_r_BitCnt[3])))) # (!SB1_r_BitCnt[2] & ((SB1_r_BitCnt[3] & (SB1L0)) # (!SB1_r_BitCnt[3] & ((SB1L0)))));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|Mux1~7
SB1L0 = (SB1_r_BitCnt[2] & ((SB1L0 & ((!SB1_o_TX))) # (!SB1L0 & (SB1L0)))) # (!SB1_r_BitCnt[2] & (((SB1L0))));


--SB1_r_State is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_State
SB1_r_State = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|Mux1~8
SB1L0 = (!SB1L0 & SB1_r_State);


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|o_TX_Active~0
SB1L0 = (!SB1_r_BitCnt[0] & (!SB1_r_BitCnt[1] & SB1_r_State));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|o_TX_Active~1
SB1L0 = (SB1_r_BitCnt[2] & (SB1_o_TX_Active & ((!SB1L0) # (!SB1_r_BitCnt[3])))) # (!SB1_r_BitCnt[2] & ((SB1_o_TX_Active) # ((!SB1_r_BitCnt[3] & SB1L0))));


--inst66 is inst66
inst66 = DFFEAS(G1_o_En, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--inst92 is inst92
inst92 = DFFEAS(inst66, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--N1L0 is PK_OUT_BLOCK:inst22|r_PkEn~2
N1L0 = (inst66 & !inst92);


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~0
MC1L0 = (G1_o_A1 & !G1_o_A3);


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~1
MC1L0 = (G1_o_A3 & !G1_o_A4);


--J1_o_Pk7_Len[1] is PK_LEN_BLOCK:inst15|o_Pk7_Len[1]
J1_o_Pk7_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk6_Len[1] is PK_LEN_BLOCK:inst15|o_Pk6_Len[1]
J1_o_Pk6_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk8_Len[1] is PK_LEN_BLOCK:inst15|o_Pk8_Len[1]
J1_o_Pk8_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[1]~2
MC1L0 = (G1_o_A1 & (((G1_o_A2)))) # (!G1_o_A1 & ((G1_o_A2 & (J1_o_Pk6_Len[1])) # (!G1_o_A2 & ((J1_o_Pk8_Len[1])))));


--J1_o_Pk5_Len[1] is PK_LEN_BLOCK:inst15|o_Pk5_Len[1]
J1_o_Pk5_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[1]~3
MC1L0 = (G1_o_A1 & ((MC1L0 & ((J1_o_Pk5_Len[1]))) # (!MC1L0 & (J1_o_Pk7_Len[1])))) # (!G1_o_A1 & (((MC1L0))));


--J1_o_Pk3_Len[1] is PK_LEN_BLOCK:inst15|o_Pk3_Len[1]
J1_o_Pk3_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk9_Len[1] is PK_LEN_BLOCK:inst15|o_Pk9_Len[1]
J1_o_Pk9_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk11_Len[1] is PK_LEN_BLOCK:inst15|o_Pk11_Len[1]
J1_o_Pk11_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[1]~4
MC1L0 = (G1_o_A4 & (((G1_o_A2)))) # (!G1_o_A4 & ((G1_o_A2 & (J1_o_Pk9_Len[1])) # (!G1_o_A2 & ((J1_o_Pk11_Len[1])))));


--J1_o_Pk1_Len[1] is PK_LEN_BLOCK:inst15|o_Pk1_Len[1]
J1_o_Pk1_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[1]~5
MC1L0 = (G1_o_A4 & ((MC1L0 & ((J1_o_Pk1_Len[1]))) # (!MC1L0 & (J1_o_Pk3_Len[1])))) # (!G1_o_A4 & (((MC1L0))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[1]~6
MC1L0 = (MC1L0 & ((MC1L0) # ((MC1L0 & MC1L0)))) # (!MC1L0 & (MC1L0 & (MC1L0)));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~7
MC1L0 = (G1_o_A4 & !G1_o_A2);


--J1_o_Pk0_Len[1] is PK_LEN_BLOCK:inst15|o_Pk0_Len[1]
J1_o_Pk0_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk4_Len[1] is PK_LEN_BLOCK:inst15|o_Pk4_Len[1]
J1_o_Pk4_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[1]~8
MC1L0 = (MC1L0 & ((G1_o_A3 & (J1_o_Pk0_Len[1])) # (!G1_o_A3 & ((J1_o_Pk4_Len[1])))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~9
MC1L0 = (G1_o_A2 & !G1_o_A3);


--J1_o_Pk2_Len[1] is PK_LEN_BLOCK:inst15|o_Pk2_Len[1]
J1_o_Pk2_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk10_Len[1] is PK_LEN_BLOCK:inst15|o_Pk10_Len[1]
J1_o_Pk10_Len[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[1]~10
MC1L0 = (MC1L0 & ((G1_o_A4 & (J1_o_Pk2_Len[1])) # (!G1_o_A4 & ((J1_o_Pk10_Len[1])))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[1]~11
MC1L0 = (MC1L0) # ((!G1_o_A1 & ((MC1L0) # (MC1L0))));


--J1_o_Pk3_Len[0] is PK_LEN_BLOCK:inst15|o_Pk3_Len[0]
J1_o_Pk3_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk9_Len[0] is PK_LEN_BLOCK:inst15|o_Pk9_Len[0]
J1_o_Pk9_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk11_Len[0] is PK_LEN_BLOCK:inst15|o_Pk11_Len[0]
J1_o_Pk11_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~12
MC1L0 = (G1_o_A4 & (((G1_o_A2)))) # (!G1_o_A4 & ((G1_o_A2 & (J1_o_Pk9_Len[0])) # (!G1_o_A2 & ((J1_o_Pk11_Len[0])))));


--J1_o_Pk1_Len[0] is PK_LEN_BLOCK:inst15|o_Pk1_Len[0]
J1_o_Pk1_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~13
MC1L0 = (G1_o_A4 & ((MC1L0 & ((J1_o_Pk1_Len[0]))) # (!MC1L0 & (J1_o_Pk3_Len[0])))) # (!G1_o_A4 & (((MC1L0))));


--J1_o_Pk7_Len[0] is PK_LEN_BLOCK:inst15|o_Pk7_Len[0]
J1_o_Pk7_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk6_Len[0] is PK_LEN_BLOCK:inst15|o_Pk6_Len[0]
J1_o_Pk6_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk8_Len[0] is PK_LEN_BLOCK:inst15|o_Pk8_Len[0]
J1_o_Pk8_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~14
MC1L0 = (G1_o_A1 & (((G1_o_A2)))) # (!G1_o_A1 & ((G1_o_A2 & (J1_o_Pk6_Len[0])) # (!G1_o_A2 & ((J1_o_Pk8_Len[0])))));


--J1_o_Pk5_Len[0] is PK_LEN_BLOCK:inst15|o_Pk5_Len[0]
J1_o_Pk5_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~15
MC1L0 = (G1_o_A1 & ((MC1L0 & ((J1_o_Pk5_Len[0]))) # (!MC1L0 & (J1_o_Pk7_Len[0])))) # (!G1_o_A1 & (((MC1L0))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~16
MC1L0 = (MC1L0 & ((MC1L0) # ((MC1L0 & MC1L0)))) # (!MC1L0 & (MC1L0 & (MC1L0)));


--J1_o_Pk0_Len[0] is PK_LEN_BLOCK:inst15|o_Pk0_Len[0]
J1_o_Pk0_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk4_Len[0] is PK_LEN_BLOCK:inst15|o_Pk4_Len[0]
J1_o_Pk4_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~17
MC1L0 = (MC1L0 & ((G1_o_A3 & (J1_o_Pk0_Len[0])) # (!G1_o_A3 & ((J1_o_Pk4_Len[0])))));


--J1_o_Pk2_Len[0] is PK_LEN_BLOCK:inst15|o_Pk2_Len[0]
J1_o_Pk2_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk10_Len[0] is PK_LEN_BLOCK:inst15|o_Pk10_Len[0]
J1_o_Pk10_Len[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~18
MC1L0 = (MC1L0 & ((G1_o_A4 & (J1_o_Pk2_Len[0])) # (!G1_o_A4 & ((J1_o_Pk10_Len[0])))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[0]~19
MC1L0 = (MC1L0) # ((!G1_o_A1 & ((MC1L0) # (MC1L0))));


--N1L0 is PK_OUT_BLOCK:inst22|Equal0~0
N1L0 = (N1_r_Cnt[0] & (MC1L0 & (N1_r_Cnt[1] $ (!MC1L0)))) # (!N1_r_Cnt[0] & (!MC1L0 & (N1_r_Cnt[1] $ (!MC1L0))));


--J1_o_Pk7_Len[3] is PK_LEN_BLOCK:inst15|o_Pk7_Len[3]
J1_o_Pk7_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk6_Len[3] is PK_LEN_BLOCK:inst15|o_Pk6_Len[3]
J1_o_Pk6_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk8_Len[3] is PK_LEN_BLOCK:inst15|o_Pk8_Len[3]
J1_o_Pk8_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[3]~20
MC1L0 = (G1_o_A1 & (((G1_o_A2)))) # (!G1_o_A1 & ((G1_o_A2 & (J1_o_Pk6_Len[3])) # (!G1_o_A2 & ((J1_o_Pk8_Len[3])))));


--J1_o_Pk5_Len[3] is PK_LEN_BLOCK:inst15|o_Pk5_Len[3]
J1_o_Pk5_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[3]~21
MC1L0 = (G1_o_A1 & ((MC1L0 & ((J1_o_Pk5_Len[3]))) # (!MC1L0 & (J1_o_Pk7_Len[3])))) # (!G1_o_A1 & (((MC1L0))));


--J1_o_Pk3_Len[3] is PK_LEN_BLOCK:inst15|o_Pk3_Len[3]
J1_o_Pk3_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk9_Len[3] is PK_LEN_BLOCK:inst15|o_Pk9_Len[3]
J1_o_Pk9_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk11_Len[3] is PK_LEN_BLOCK:inst15|o_Pk11_Len[3]
J1_o_Pk11_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[3]~22
MC1L0 = (G1_o_A4 & (((G1_o_A2)))) # (!G1_o_A4 & ((G1_o_A2 & (J1_o_Pk9_Len[3])) # (!G1_o_A2 & ((J1_o_Pk11_Len[3])))));


--J1_o_Pk1_Len[3] is PK_LEN_BLOCK:inst15|o_Pk1_Len[3]
J1_o_Pk1_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[3]~23
MC1L0 = (G1_o_A4 & ((MC1L0 & ((J1_o_Pk1_Len[3]))) # (!MC1L0 & (J1_o_Pk3_Len[3])))) # (!G1_o_A4 & (((MC1L0))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[3]~24
MC1L0 = (MC1L0 & ((MC1L0) # ((MC1L0 & MC1L0)))) # (!MC1L0 & (MC1L0 & (MC1L0)));


--J1_o_Pk0_Len[3] is PK_LEN_BLOCK:inst15|o_Pk0_Len[3]
J1_o_Pk0_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk4_Len[3] is PK_LEN_BLOCK:inst15|o_Pk4_Len[3]
J1_o_Pk4_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[3]~25
MC1L0 = (MC1L0 & ((G1_o_A3 & (J1_o_Pk0_Len[3])) # (!G1_o_A3 & ((J1_o_Pk4_Len[3])))));


--J1_o_Pk2_Len[3] is PK_LEN_BLOCK:inst15|o_Pk2_Len[3]
J1_o_Pk2_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk10_Len[3] is PK_LEN_BLOCK:inst15|o_Pk10_Len[3]
J1_o_Pk10_Len[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[3]~26
MC1L0 = (MC1L0 & ((G1_o_A4 & (J1_o_Pk2_Len[3])) # (!G1_o_A4 & ((J1_o_Pk10_Len[3])))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[3]~27
MC1L0 = (MC1L0) # ((!G1_o_A1 & ((MC1L0) # (MC1L0))));


--J1_o_Pk7_Len[2] is PK_LEN_BLOCK:inst15|o_Pk7_Len[2]
J1_o_Pk7_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk6_Len[2] is PK_LEN_BLOCK:inst15|o_Pk6_Len[2]
J1_o_Pk6_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk8_Len[2] is PK_LEN_BLOCK:inst15|o_Pk8_Len[2]
J1_o_Pk8_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[2]~28
MC1L0 = (G1_o_A1 & (((G1_o_A2)))) # (!G1_o_A1 & ((G1_o_A2 & (J1_o_Pk6_Len[2])) # (!G1_o_A2 & ((J1_o_Pk8_Len[2])))));


--J1_o_Pk5_Len[2] is PK_LEN_BLOCK:inst15|o_Pk5_Len[2]
J1_o_Pk5_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[2]~29
MC1L0 = (G1_o_A1 & ((MC1L0 & ((J1_o_Pk5_Len[2]))) # (!MC1L0 & (J1_o_Pk7_Len[2])))) # (!G1_o_A1 & (((MC1L0))));


--J1_o_Pk3_Len[2] is PK_LEN_BLOCK:inst15|o_Pk3_Len[2]
J1_o_Pk3_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk9_Len[2] is PK_LEN_BLOCK:inst15|o_Pk9_Len[2]
J1_o_Pk9_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk11_Len[2] is PK_LEN_BLOCK:inst15|o_Pk11_Len[2]
J1_o_Pk11_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[2]~30
MC1L0 = (G1_o_A4 & (((G1_o_A2)))) # (!G1_o_A4 & ((G1_o_A2 & (J1_o_Pk9_Len[2])) # (!G1_o_A2 & ((J1_o_Pk11_Len[2])))));


--J1_o_Pk1_Len[2] is PK_LEN_BLOCK:inst15|o_Pk1_Len[2]
J1_o_Pk1_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[2]~31
MC1L0 = (G1_o_A4 & ((MC1L0 & ((J1_o_Pk1_Len[2]))) # (!MC1L0 & (J1_o_Pk3_Len[2])))) # (!G1_o_A4 & (((MC1L0))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[2]~32
MC1L0 = (MC1L0 & ((MC1L0) # ((MC1L0 & MC1L0)))) # (!MC1L0 & (MC1L0 & (MC1L0)));


--J1_o_Pk0_Len[2] is PK_LEN_BLOCK:inst15|o_Pk0_Len[2]
J1_o_Pk0_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk4_Len[2] is PK_LEN_BLOCK:inst15|o_Pk4_Len[2]
J1_o_Pk4_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[2]~33
MC1L0 = (MC1L0 & ((G1_o_A3 & (J1_o_Pk0_Len[2])) # (!G1_o_A3 & ((J1_o_Pk4_Len[2])))));


--J1_o_Pk2_Len[2] is PK_LEN_BLOCK:inst15|o_Pk2_Len[2]
J1_o_Pk2_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk10_Len[2] is PK_LEN_BLOCK:inst15|o_Pk10_Len[2]
J1_o_Pk10_Len[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[2]~34
MC1L0 = (MC1L0 & ((G1_o_A4 & (J1_o_Pk2_Len[2])) # (!G1_o_A4 & ((J1_o_Pk10_Len[2])))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[2]~35
MC1L0 = (MC1L0) # ((!G1_o_A1 & ((MC1L0) # (MC1L0))));


--N1L0 is PK_OUT_BLOCK:inst22|Equal0~1
N1L0 = (N1_r_Cnt[2] & (MC1L0 & (N1_r_Cnt[3] $ (!MC1L0)))) # (!N1_r_Cnt[2] & (!MC1L0 & (N1_r_Cnt[3] $ (!MC1L0))));


--J1_o_Pk7_Len[6] is PK_LEN_BLOCK:inst15|o_Pk7_Len[6]
J1_o_Pk7_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk6_Len[6] is PK_LEN_BLOCK:inst15|o_Pk6_Len[6]
J1_o_Pk6_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk8_Len[6] is PK_LEN_BLOCK:inst15|o_Pk8_Len[6]
J1_o_Pk8_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[6]~36
MC1L0 = (G1_o_A1 & (((G1_o_A2)))) # (!G1_o_A1 & ((G1_o_A2 & (J1_o_Pk6_Len[6])) # (!G1_o_A2 & ((J1_o_Pk8_Len[6])))));


--J1_o_Pk5_Len[6] is PK_LEN_BLOCK:inst15|o_Pk5_Len[6]
J1_o_Pk5_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[6]~37
MC1L0 = (G1_o_A1 & ((MC1L0 & ((J1_o_Pk5_Len[6]))) # (!MC1L0 & (J1_o_Pk7_Len[6])))) # (!G1_o_A1 & (((MC1L0))));


--J1_o_Pk3_Len[6] is PK_LEN_BLOCK:inst15|o_Pk3_Len[6]
J1_o_Pk3_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk9_Len[6] is PK_LEN_BLOCK:inst15|o_Pk9_Len[6]
J1_o_Pk9_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk11_Len[6] is PK_LEN_BLOCK:inst15|o_Pk11_Len[6]
J1_o_Pk11_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[6]~38
MC1L0 = (G1_o_A4 & (((G1_o_A2)))) # (!G1_o_A4 & ((G1_o_A2 & (J1_o_Pk9_Len[6])) # (!G1_o_A2 & ((J1_o_Pk11_Len[6])))));


--J1_o_Pk1_Len[6] is PK_LEN_BLOCK:inst15|o_Pk1_Len[6]
J1_o_Pk1_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[6]~39
MC1L0 = (G1_o_A4 & ((MC1L0 & ((J1_o_Pk1_Len[6]))) # (!MC1L0 & (J1_o_Pk3_Len[6])))) # (!G1_o_A4 & (((MC1L0))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[6]~40
MC1L0 = (MC1L0 & ((MC1L0) # ((MC1L0 & MC1L0)))) # (!MC1L0 & (MC1L0 & (MC1L0)));


--J1_o_Pk0_Len[6] is PK_LEN_BLOCK:inst15|o_Pk0_Len[6]
J1_o_Pk0_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk4_Len[6] is PK_LEN_BLOCK:inst15|o_Pk4_Len[6]
J1_o_Pk4_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[6]~41
MC1L0 = (MC1L0 & ((G1_o_A3 & (J1_o_Pk0_Len[6])) # (!G1_o_A3 & ((J1_o_Pk4_Len[6])))));


--J1_o_Pk2_Len[6] is PK_LEN_BLOCK:inst15|o_Pk2_Len[6]
J1_o_Pk2_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk10_Len[6] is PK_LEN_BLOCK:inst15|o_Pk10_Len[6]
J1_o_Pk10_Len[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[6]~42
MC1L0 = (MC1L0 & ((G1_o_A4 & (J1_o_Pk2_Len[6])) # (!G1_o_A4 & ((J1_o_Pk10_Len[6])))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[6]~43
MC1L0 = (MC1L0) # ((!G1_o_A1 & ((MC1L0) # (MC1L0))));


--J1_o_Pk7_Len[5] is PK_LEN_BLOCK:inst15|o_Pk7_Len[5]
J1_o_Pk7_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk6_Len[5] is PK_LEN_BLOCK:inst15|o_Pk6_Len[5]
J1_o_Pk6_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk8_Len[5] is PK_LEN_BLOCK:inst15|o_Pk8_Len[5]
J1_o_Pk8_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[5]~44
MC1L0 = (G1_o_A1 & (((G1_o_A2)))) # (!G1_o_A1 & ((G1_o_A2 & (J1_o_Pk6_Len[5])) # (!G1_o_A2 & ((J1_o_Pk8_Len[5])))));


--J1_o_Pk5_Len[5] is PK_LEN_BLOCK:inst15|o_Pk5_Len[5]
J1_o_Pk5_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[5]~45
MC1L0 = (G1_o_A1 & ((MC1L0 & ((J1_o_Pk5_Len[5]))) # (!MC1L0 & (J1_o_Pk7_Len[5])))) # (!G1_o_A1 & (((MC1L0))));


--J1_o_Pk3_Len[5] is PK_LEN_BLOCK:inst15|o_Pk3_Len[5]
J1_o_Pk3_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk9_Len[5] is PK_LEN_BLOCK:inst15|o_Pk9_Len[5]
J1_o_Pk9_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk11_Len[5] is PK_LEN_BLOCK:inst15|o_Pk11_Len[5]
J1_o_Pk11_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[5]~46
MC1L0 = (G1_o_A4 & (((G1_o_A2)))) # (!G1_o_A4 & ((G1_o_A2 & (J1_o_Pk9_Len[5])) # (!G1_o_A2 & ((J1_o_Pk11_Len[5])))));


--J1_o_Pk1_Len[5] is PK_LEN_BLOCK:inst15|o_Pk1_Len[5]
J1_o_Pk1_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[5]~47
MC1L0 = (G1_o_A4 & ((MC1L0 & ((J1_o_Pk1_Len[5]))) # (!MC1L0 & (J1_o_Pk3_Len[5])))) # (!G1_o_A4 & (((MC1L0))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[5]~48
MC1L0 = (MC1L0 & ((MC1L0) # ((MC1L0 & MC1L0)))) # (!MC1L0 & (MC1L0 & (MC1L0)));


--J1_o_Pk0_Len[5] is PK_LEN_BLOCK:inst15|o_Pk0_Len[5]
J1_o_Pk0_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk4_Len[5] is PK_LEN_BLOCK:inst15|o_Pk4_Len[5]
J1_o_Pk4_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[5]~49
MC1L0 = (MC1L0 & ((G1_o_A3 & (J1_o_Pk0_Len[5])) # (!G1_o_A3 & ((J1_o_Pk4_Len[5])))));


--J1_o_Pk2_Len[5] is PK_LEN_BLOCK:inst15|o_Pk2_Len[5]
J1_o_Pk2_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk10_Len[5] is PK_LEN_BLOCK:inst15|o_Pk10_Len[5]
J1_o_Pk10_Len[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[5]~50
MC1L0 = (MC1L0 & ((G1_o_A4 & (J1_o_Pk2_Len[5])) # (!G1_o_A4 & ((J1_o_Pk10_Len[5])))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[5]~51
MC1L0 = (MC1L0) # ((!G1_o_A1 & ((MC1L0) # (MC1L0))));


--N1L0 is PK_OUT_BLOCK:inst22|Equal0~2
N1L0 = (N1_r_Cnt[5] & (MC1L0 & (N1_r_Cnt[6] $ (!MC1L0)))) # (!N1_r_Cnt[5] & (!MC1L0 & (N1_r_Cnt[6] $ (!MC1L0))));


--J1_o_Pk2_Len[4] is PK_LEN_BLOCK:inst15|o_Pk2_Len[4]
J1_o_Pk2_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk10_Len[4] is PK_LEN_BLOCK:inst15|o_Pk10_Len[4]
J1_o_Pk10_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[4]~52
MC1L0 = (MC1L0 & ((G1_o_A4 & (J1_o_Pk2_Len[4])) # (!G1_o_A4 & ((J1_o_Pk10_Len[4])))));


--J1_o_Pk0_Len[4] is PK_LEN_BLOCK:inst15|o_Pk0_Len[4]
J1_o_Pk0_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk4_Len[4] is PK_LEN_BLOCK:inst15|o_Pk4_Len[4]
J1_o_Pk4_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[4]~53
MC1L0 = (G1_o_A3 & (J1_o_Pk0_Len[4])) # (!G1_o_A3 & ((J1_o_Pk4_Len[4])));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[4]~54
MC1L0 = (!G1_o_A1 & ((MC1L0) # ((MC1L0 & MC1L0))));


--J1_o_Pk7_Len[4] is PK_LEN_BLOCK:inst15|o_Pk7_Len[4]
J1_o_Pk7_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk6_Len[4] is PK_LEN_BLOCK:inst15|o_Pk6_Len[4]
J1_o_Pk6_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk8_Len[4] is PK_LEN_BLOCK:inst15|o_Pk8_Len[4]
J1_o_Pk8_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[4]~55
MC1L0 = (G1_o_A1 & (((G1_o_A2)))) # (!G1_o_A1 & ((G1_o_A2 & (J1_o_Pk6_Len[4])) # (!G1_o_A2 & ((J1_o_Pk8_Len[4])))));


--J1_o_Pk5_Len[4] is PK_LEN_BLOCK:inst15|o_Pk5_Len[4]
J1_o_Pk5_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[4]~56
MC1L0 = (G1_o_A1 & ((MC1L0 & ((J1_o_Pk5_Len[4]))) # (!MC1L0 & (J1_o_Pk7_Len[4])))) # (!G1_o_A1 & (((MC1L0))));


--J1_o_Pk3_Len[4] is PK_LEN_BLOCK:inst15|o_Pk3_Len[4]
J1_o_Pk3_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk9_Len[4] is PK_LEN_BLOCK:inst15|o_Pk9_Len[4]
J1_o_Pk9_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--J1_o_Pk11_Len[4] is PK_LEN_BLOCK:inst15|o_Pk11_Len[4]
J1_o_Pk11_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[4]~57
MC1L0 = (G1_o_A4 & (((G1_o_A2)))) # (!G1_o_A4 & ((G1_o_A2 & (J1_o_Pk9_Len[4])) # (!G1_o_A2 & ((J1_o_Pk11_Len[4])))));


--J1_o_Pk1_Len[4] is PK_LEN_BLOCK:inst15|o_Pk1_Len[4]
J1_o_Pk1_Len[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , J1L0,  ,  ,  ,  );


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[4]~58
MC1L0 = (G1_o_A4 & ((MC1L0 & ((J1_o_Pk1_Len[4]))) # (!MC1L0 & (J1_o_Pk3_Len[4])))) # (!G1_o_A4 & (((MC1L0))));


--MC1L0 is MUX_PK_LEN:inst113|lpm_mux:lpm_mux_component|mux_r4e:auto_generated|result_node[4]~59
MC1L0 = (MC1L0 & ((MC1L0) # ((MC1L0 & MC1L0)))) # (!MC1L0 & (MC1L0 & (MC1L0)));


--N1L0 is PK_OUT_BLOCK:inst22|Equal0~3
N1L0 = N1_r_Cnt[4] $ (((MC1L0) # (MC1L0)));


--N1L0 is PK_OUT_BLOCK:inst22|Equal0~4
N1L0 = (N1L0 & (N1L0 & (N1L0 & !N1L0)));


--M1L0 is EMU_BLOCK:inst18|r_Key[1]~0
M1L0 = (!CS3 & (!WE_An & !A10));


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal10~2
GB1L0 = (!A3 & (!A4 & (!A7 & !A8)));


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal10~3
GB1L0 = (A13 & (!A2 & (GB1L0 & GB1L0)));


--M1L0 is EMU_BLOCK:inst18|r_Key[1]~1
M1L0 = (A11 & (A12 & (!A1 & !A0)));


--M1L0 is EMU_BLOCK:inst18|r_Key[1]~2
M1L0 = (M1L0 & (GB1L0 & M1L0));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|Equal0~0
SB1L0 = (SB1_r_ClkCnt[0]) # ((SB1_r_ClkCnt[2]) # ((!SB1_r_ClkCnt[3]) # (!SB1_r_ClkCnt[1])));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|Equal0~1
SB1L0 = (SB1L0) # (!SB1_r_ClkCnt[4]);


--XB1_o_DV is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_DV
XB1_o_DV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|o_Ready~0
SB1L0 = (SB1_r_BitCnt[0] & (SB1_r_BitCnt[1] & (SB1_r_BitCnt[2] & SB1_r_BitCnt[3])));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_State~0
SB1L0 = (SB1_r_State & ((!SB1L0))) # (!SB1_r_State & (XB1_o_DV));


--RB1_o_Mode is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_Mode
RB1_o_Mode = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--B1_inst56 is UART_MODULE:inst7|inst56
B1_inst56 = LCELL((!RB1_o_Mode) # (!CLK_25MHz2));


--W1_r_Cnt_Bit_Rx[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Rx[0]
W1_r_Cnt_Bit_Rx[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Bit_Rx[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Rx[1]
W1_r_Cnt_Bit_Rx[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Bit_Rx[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Rx[2]
W1_r_Cnt_Bit_Rx[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_Cnt_Bit_Rx[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Rx[3]
W1_r_Cnt_Bit_Rx[3] = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal11~0
W1L0 = (!W1_r_Cnt_Bit_Rx[0] & (!W1_r_Cnt_Bit_Rx[1] & (!W1_r_Cnt_Bit_Rx[2] & !W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State[1]~0
W1L0 = (W1L0) # ((!W1_r_State_1WIRE.GET_DATA) # (!W1_r_Cnt_Bit_Rx[4]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.GET_DATA~0
W1L0 = (W1_r_State[1] & W1_r_State_1WIRE.SEND);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State~1
W1L0 = (W1L0 & ((W1_r_State[2]) # ((W1_r_State[0] & W1L0))));


--A1L0 is inst48~0
A1L0 = (!A5 & !A6);


--A1L0 is inst182~0
A1L0 = (!A10 & (!A9 & !A14));


--A1L0 is inst149~0
A1L0 = (A11 & (A12 & (A13 & A8)));


--A1L0 is inst49~0
A1L0 = (!CS3 & (!WE_An & !A7));


--inst48 is inst48
inst48 = (A1L0 & (A1L0 & (A1L0 & A1L0)));


--W1_r_CntSensor[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_CntSensor[0]
W1_r_CntSensor[0] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1_r_CntSensor[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_CntSensor[1]
W1_r_CntSensor[1] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1_r_CntSensor[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_CntSensor[2]
W1_r_CntSensor[2] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1_r_CntSensor[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_CntSensor[3]
W1_r_CntSensor[3] = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State~2
W1L0 = (((!W1_r_CntSensor[3]) # (!W1_r_CntSensor[2])) # (!W1_r_CntSensor[1])) # (!W1_r_CntSensor[0]);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State[0]~3
W1L0 = (W1_r_State[1] & W1_r_State[2]);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State[0]~4
W1L0 = (W1L0 & (((!W1_r_State[0] & !W1L0)))) # (!W1L0 & (W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SendBufer[6]~2
W1L0 = (W1_r_State[2] & (!W1_r_State[1] & !W1_r_State[0]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State[1]~5
W1L0 = (W1L0 & (((!W1_r_Cnt_Byte_Rom[2]) # (!W1_r_Cnt_Byte_Rom[1])) # (!W1_r_Cnt_Byte_Rom[0])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State[0]~6
W1L0 = (U1_o_MHz & ((W1_r_State_1WIRE.GET_DATA) # ((W1_r_State_1WIRE.SEND & !W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State[0]~7
W1L0 = (W1L0 & (((W1_r_Cnt_Bit_Rx[4] & !W1L0)) # (!W1_r_State_1WIRE.GET_DATA)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State[0]~8
W1L0 = (W1L0 & ((W1L0) # ((!W1_r_State_1WIRE.GET_DATA) # (!W1_r_Cnt_Bit_Rx[4]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State[0]~9
W1L0 = (W1L0 & ((W1L0) # ((W1_r_State[0] & W1L0)))) # (!W1L0 & (W1_r_State[0]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State[1]~10
W1L0 = (W1L0 & (((W1_r_State[0] & !W1_r_State[1])))) # (!W1L0 & (W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State[1]~11
W1L0 = (W1L0 & ((W1L0) # ((!W1_r_State_1WIRE.GET_DATA) # (!W1_r_Cnt_Bit_Rx[4]))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State[1]~12
W1L0 = (W1L0 & ((W1L0) # ((W1_r_State[1] & W1L0)))) # (!W1L0 & (W1_r_State[1]));


--U1_r_Cnt[4] is FREQ_1MHz_BLOCK:inst34|r_Cnt[4]
U1_r_Cnt[4] = DFFEAS(U1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--U1_r_Cnt[3] is FREQ_1MHz_BLOCK:inst34|r_Cnt[3]
U1_r_Cnt[3] = DFFEAS(U1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--U1_r_Cnt[0] is FREQ_1MHz_BLOCK:inst34|r_Cnt[0]
U1_r_Cnt[0] = DFFEAS(U1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--U1_r_Cnt[1] is FREQ_1MHz_BLOCK:inst34|r_Cnt[1]
U1_r_Cnt[1] = DFFEAS(U1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--U1_r_Cnt[2] is FREQ_1MHz_BLOCK:inst34|r_Cnt[2]
U1_r_Cnt[2] = DFFEAS(U1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--U1L0 is FREQ_1MHz_BLOCK:inst34|Equal0~0
U1L0 = (U1_r_Cnt[3] & (!U1_r_Cnt[0] & (!U1_r_Cnt[1] & !U1_r_Cnt[2])));


--U1L0 is FREQ_1MHz_BLOCK:inst34|Equal0~1
U1L0 = (U1_r_Cnt[4] & U1L0);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal2~1
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[0] & (W1_r_Cnt_Time1MHz_BitLow[4] & (W1L0 & !W1_r_Cnt_Time1MHz_BitLow[7])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal2~2
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[8] & (W1_r_Cnt_Time1MHz_BitLow[6] & (!W1_r_Cnt_Time1MHz_BitLow[5] & !W1_r_Cnt_Time1MHz_BitLow[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~22
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[9] & (W1_r_State_1WIRE.RESET & (W1L0 & W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Tx[2]~3
W1L0 = (W1_r_Write_BitLow & W1L0);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~23
W1L0 = (W1_r_Cnt_Bit_Tx[0] & (W1_r_Cnt_Bit_Tx[2] & (W1_r_Cnt_Bit_Tx[1] & W1_r_State_1WIRE.WRITE_BIT)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~24
W1L0 = (W1_r_Cnt_Bit_Rx[4] & (W1_r_State_1WIRE.GET_DATA & W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~25
W1L0 = (!W1_r_State_1WIRE.GET_DATA & (((!W1L0) # (!W1L0)) # (!W1_r_Write_BitLow)));


--W1_r_State_1WIRE.WAIT_800ms is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.WAIT_800ms
W1_r_State_1WIRE.WAIT_800ms = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal4~0
W1L0 = (W1_r_Cnt_Time125Hz[1] & (W1_r_Cnt_Time125Hz[2] & (W1_r_Cnt_Time125Hz[3] & !W1_r_Cnt_Time125Hz[0])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal4~1
W1L0 = (W1L0 & (W1_r_Cnt_Time125Hz[4] & (W1_r_Cnt_Time125Hz[6] & !W1_r_Cnt_Time125Hz[5])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~26
W1L0 = (W1L0) # ((W1L0 & ((W1_r_State_1WIRE.WAIT_800ms) # (!W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~27
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[6] & (W1_r_Cnt_Time1MHz_BitLow[3] & (W1_r_BitRecieve[0] & W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~28
W1L0 = (W1_r_State_1WIRE.READ_BIT & ((!W1L0))) # (!W1_r_State_1WIRE.READ_BIT & (W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~29
W1L0 = (W1L0 & (W1L0)) # (!W1L0 & (((W1L0 & W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~30
W1L0 = (W1_r_State_1WIRE.SEND & (((!W1L0) # (!W1_r_State[1])))) # (!W1_r_State_1WIRE.SEND & (W1_r_State_1WIRE.WRITE_BIT));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~31
W1L0 = (W1L0 & (((!W1L0) # (!W1L0)) # (!W1_r_Write_BitLow)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Write_BitLow~0
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[5] & (W1_r_Cnt_Time1MHz_BitLow[3] & (!W1_r_Cnt_Time1MHz_BitLow[6] & !W1_r_Write_BitLow)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Write_BitLow~1
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Time1MHz_BitLow[9] & !W1_r_Cnt_Time1MHz_BitLow[8])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Write_BitLow~2
W1L0 = (W1L0) # ((W1_r_Write_BitLow & !W1L0));


--W1_r_Reset_1MHz_BitLow is ONE_WIRE_BLOCK_v4_2:inst38|r_Reset_1MHz_BitLow
W1_r_Reset_1MHz_BitLow = DFFEAS(W1L0, !CLK_25MHz2,  ,  , U1_o_MHz,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Write_BitHigh~0
W1L0 = (W1_r_Cnt_Time1MHz_BitHigh[0] & (!W1_r_Write_BitHigh & (!W1_r_Cnt_Time1MHz_BitHigh[1] & !W1_r_Cnt_Time1MHz_BitHigh[2])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Write_BitHigh~1
W1L0 = (W1_r_Cnt_Time1MHz_BitHigh[3] & (W1L0 & (!W1_r_Cnt_Time1MHz_BitHigh[4] & !W1_r_Cnt_Time1MHz_BitHigh[5])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal9~0
W1L0 = (W1_r_Cnt_Time1MHz_BitHigh[0] & (W1_r_Cnt_Time1MHz_BitHigh[2] & (!W1_r_Cnt_Time1MHz_BitHigh[1] & !W1_r_Cnt_Time1MHz_BitHigh[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal9~1
W1L0 = (W1L0 & (W1_r_Cnt_Time1MHz_BitHigh[4] & W1_r_Cnt_Time1MHz_BitHigh[5]));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Write_BitHigh~2
W1L0 = (W1L0) # ((W1_r_Write_BitHigh & !W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~32
W1L0 = (W1_r_State_1WIRE.GET_DATA & !W1_r_State_1WIRE.READ_BIT);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_BitRecieve[1]~0
W1L0 = (W1_r_State_1WIRE.READ_BIT & U1_o_MHz);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_BitRecieve[0]~1
W1L0 = (((!W1L0) # (!W1L0)) # (!W1_r_Cnt_Time1MHz_BitLow[3])) # (!W1_r_Cnt_Time1MHz_BitLow[6]);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Rx[4]~2
W1L0 = (W1_r_BitRecieve[0]) # (((!W1_r_Cnt_Time1MHz_BitLow[3]) # (!W1_r_Cnt_Time1MHz_BitLow[2])) # (!W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_BitRecieve[0]~2
W1L0 = (W1_r_BitRecieve[0] & ((W1L0) # ((W1L0 & !W1L0)))) # (!W1_r_BitRecieve[0] & (((W1L0 & !W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~33
W1L0 = (W1_r_State[1] & (W1_r_State[0] & (W1_r_State[2] & W1_r_State_1WIRE.SEND)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal2~3
W1L0 = (W1_r_Cnt_Time1MHz_BitLow[9] & (W1L0 & W1L0));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~34
W1L0 = (W1L0) # ((W1_r_State_1WIRE.RESET & (!W1_r_State_1WIRE.SEND & !W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~35
W1L0 = (W1L0 & ((W1_r_State_1WIRE.WAIT_800ms & (W1L0)) # (!W1_r_State_1WIRE.WAIT_800ms & ((W1L0)))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Rx[4]~3
W1L0 = (((!W1L0) # (!W1_r_Cnt_Time1MHz_BitLow[3])) # (!W1_r_Cnt_Time1MHz_BitLow[2])) # (!W1L0);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.GET_DATA~1
W1L0 = (W1_r_State_1WIRE.READ_BIT & (W1L0 & !W1_r_State_1WIRE.SEND));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.GET_DATA~2
W1L0 = (W1L0) # ((W1_r_State[2] & (W1L0 & !W1_r_State[0])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~36
W1L0 = (!W1_r_State_1WIRE.SEND & ((!W1L0) # (!W1_r_State_1WIRE.RESET)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~37
W1L0 = (W1L0 & ((W1_r_State_1WIRE.READ_BIT & ((!W1L0))) # (!W1_r_State_1WIRE.READ_BIT & (W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.GET_DATA~3
W1L0 = (U1_o_MHz & ((W1L0 & (W1_r_State_1WIRE.GET_DATA)) # (!W1L0 & ((W1L0))))) # (!U1_o_MHz & (W1_r_State_1WIRE.GET_DATA));


--A1L0 is inst49~1
A1L0 = (A5 & !A6);


--inst49 is inst49
inst49 = (A1L0 & (A1L0 & (A1L0 & A1L0)));


--XB1_r_RamData[12] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[12]
XB1_r_RamData[12] = DFFEAS(GC1_q_b[12], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[20] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[20]
XB1_r_RamData[20] = DFFEAS(GC1_q_b[20], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[4] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[4]
XB1_r_RamData[4] = DFFEAS(GC1_q_b[4], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux3~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[20])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[4])))));


--XB1_r_RamData[28] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[28]
XB1_r_RamData[28] = DFFEAS(GC1_q_b[28], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux3~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[28]))) # (!XB1L0 & (XB1_r_RamData[12])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_State.s_SetDV is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_State.s_SetDV
XB1_r_State.s_SetDV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|Equal0~0
SB1L0 = (SB1_r_ClkCnt[0]) # ((SB1_r_ClkCnt[2]) # ((!SB1_r_ClkCnt[3]) # (!SB1_r_ClkCnt[1])));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|Equal0~1
SB1L0 = (SB1L0) # (!SB1_r_ClkCnt[4]);


--XB1_r_RamData[19] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[19]
XB1_r_RamData[19] = DFFEAS(GC1_q_b[19], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[11] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[11]
XB1_r_RamData[11] = DFFEAS(GC1_q_b[11], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[3] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[3]
XB1_r_RamData[3] = DFFEAS(GC1_q_b[3], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux4~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[11])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[3])))));


--XB1_r_RamData[27] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[27]
XB1_r_RamData[27] = DFFEAS(GC1_q_b[27], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux4~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[27]))) # (!XB1L0 & (XB1_r_RamData[19])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[10] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[10]
XB1_r_RamData[10] = DFFEAS(GC1_q_b[10], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[18] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[18]
XB1_r_RamData[18] = DFFEAS(GC1_q_b[18], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[2] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[2]
XB1_r_RamData[2] = DFFEAS(GC1_q_b[2], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux5~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[18])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[2])))));


--XB1_r_RamData[26] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[26]
XB1_r_RamData[26] = DFFEAS(GC1_q_b[26], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux5~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[26]))) # (!XB1L0 & (XB1_r_RamData[10])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_RamData[21] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[21]
XB1_r_RamData[21] = DFFEAS(GC1_q_b[21], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[13] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[13]
XB1_r_RamData[13] = DFFEAS(GC1_q_b[13], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[5] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[5]
XB1_r_RamData[5] = DFFEAS(GC1_q_b[5], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux2~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[13])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[5])))));


--XB1_r_RamData[29] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[29]
XB1_r_RamData[29] = DFFEAS(GC1_q_b[29], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux2~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[29]))) # (!XB1L0 & (XB1_r_RamData[21])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[23] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[23]
XB1_r_RamData[23] = DFFEAS(GC1_q_b[23], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[15] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[15]
XB1_r_RamData[15] = DFFEAS(GC1_q_b[15], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[7] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[7]
XB1_r_RamData[7] = DFFEAS(GC1_q_b[7], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux0~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[15])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[7])))));


--XB1_r_RamData[31] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[31]
XB1_r_RamData[31] = DFFEAS(GC1_q_b[31], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux0~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[31]))) # (!XB1L0 & (XB1_r_RamData[23])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[14] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[14]
XB1_r_RamData[14] = DFFEAS(GC1_q_b[14], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[22] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[22]
XB1_r_RamData[22] = DFFEAS(GC1_q_b[22], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[6] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[6]
XB1_r_RamData[6] = DFFEAS(GC1_q_b[6], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux1~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[22])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[6])))));


--XB1_r_RamData[30] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[30]
XB1_r_RamData[30] = DFFEAS(GC1_q_b[30], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux1~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[30]))) # (!XB1L0 & (XB1_r_RamData[14])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_RamData[17] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[17]
XB1_r_RamData[17] = DFFEAS(GC1_q_b[17], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[9] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[9]
XB1_r_RamData[9] = DFFEAS(GC1_q_b[9], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[1] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[1]
XB1_r_RamData[1] = DFFEAS(GC1_q_b[1], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux6~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[9])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[1])))));


--XB1_r_RamData[25] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[25]
XB1_r_RamData[25] = DFFEAS(GC1_q_b[25], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux6~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[25]))) # (!XB1L0 & (XB1_r_RamData[17])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[8] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[8]
XB1_r_RamData[8] = DFFEAS(GC1_q_b[8], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[16] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[16]
XB1_r_RamData[16] = DFFEAS(GC1_q_b[16], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[0] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[0]
XB1_r_RamData[0] = DFFEAS(GC1_q_b[0], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux7~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[16])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[0])))));


--XB1_r_RamData[24] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_RamData[24]
XB1_r_RamData[24] = DFFEAS(GC1_q_b[24], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Mux7~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[24]))) # (!XB1L0 & (XB1_r_RamData[8])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_o_DV is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_DV
XB1_o_DV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|o_Ready~0
SB1L0 = (SB1_r_BitCnt[1] & (SB1_r_BitCnt[0] & (SB1_r_BitCnt[2] & SB1_r_BitCnt[3])));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_State~0
SB1L0 = (SB1_r_State & ((!SB1L0))) # (!SB1_r_State & (XB1_o_DV));


--RB1_o_Mode is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_Mode
RB1_o_Mode = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--B1_inst56 is UART_MODULE:inst5|inst56
B1_inst56 = LCELL((!RB1_o_Mode) # (!CLK_25MHz2));


--XB1_r_RamData[12] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[12]
XB1_r_RamData[12] = DFFEAS(GC1_q_b[12], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[20] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[20]
XB1_r_RamData[20] = DFFEAS(GC1_q_b[20], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[4] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[4]
XB1_r_RamData[4] = DFFEAS(GC1_q_b[4], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux3~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[20])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[4])))));


--XB1_r_RamData[28] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[28]
XB1_r_RamData[28] = DFFEAS(GC1_q_b[28], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux3~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[28]))) # (!XB1L0 & (XB1_r_RamData[12])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_State.s_SetDV is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_State.s_SetDV
XB1_r_State.s_SetDV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|Equal0~0
SB1L0 = (SB1_r_ClkCnt[0]) # ((SB1_r_ClkCnt[2]) # ((!SB1_r_ClkCnt[3]) # (!SB1_r_ClkCnt[1])));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|Equal0~1
SB1L0 = (SB1L0) # (!SB1_r_ClkCnt[4]);


--XB1_r_RamData[19] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[19]
XB1_r_RamData[19] = DFFEAS(GC1_q_b[19], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[11] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[11]
XB1_r_RamData[11] = DFFEAS(GC1_q_b[11], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[3] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[3]
XB1_r_RamData[3] = DFFEAS(GC1_q_b[3], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux4~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[11])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[3])))));


--XB1_r_RamData[27] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[27]
XB1_r_RamData[27] = DFFEAS(GC1_q_b[27], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux4~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[27]))) # (!XB1L0 & (XB1_r_RamData[19])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[10] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[10]
XB1_r_RamData[10] = DFFEAS(GC1_q_b[10], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[18] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[18]
XB1_r_RamData[18] = DFFEAS(GC1_q_b[18], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[2] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[2]
XB1_r_RamData[2] = DFFEAS(GC1_q_b[2], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux5~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[18])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[2])))));


--XB1_r_RamData[26] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[26]
XB1_r_RamData[26] = DFFEAS(GC1_q_b[26], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux5~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[26]))) # (!XB1L0 & (XB1_r_RamData[10])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_RamData[21] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[21]
XB1_r_RamData[21] = DFFEAS(GC1_q_b[21], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[13] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[13]
XB1_r_RamData[13] = DFFEAS(GC1_q_b[13], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[5] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[5]
XB1_r_RamData[5] = DFFEAS(GC1_q_b[5], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux2~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[13])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[5])))));


--XB1_r_RamData[29] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[29]
XB1_r_RamData[29] = DFFEAS(GC1_q_b[29], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux2~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[29]))) # (!XB1L0 & (XB1_r_RamData[21])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[23] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[23]
XB1_r_RamData[23] = DFFEAS(GC1_q_b[23], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[15] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[15]
XB1_r_RamData[15] = DFFEAS(GC1_q_b[15], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[7] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[7]
XB1_r_RamData[7] = DFFEAS(GC1_q_b[7], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux0~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[15])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[7])))));


--XB1_r_RamData[31] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[31]
XB1_r_RamData[31] = DFFEAS(GC1_q_b[31], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux0~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[31]))) # (!XB1L0 & (XB1_r_RamData[23])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[14] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[14]
XB1_r_RamData[14] = DFFEAS(GC1_q_b[14], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[22] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[22]
XB1_r_RamData[22] = DFFEAS(GC1_q_b[22], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[6] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[6]
XB1_r_RamData[6] = DFFEAS(GC1_q_b[6], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux1~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[22])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[6])))));


--XB1_r_RamData[30] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[30]
XB1_r_RamData[30] = DFFEAS(GC1_q_b[30], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux1~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[30]))) # (!XB1L0 & (XB1_r_RamData[14])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_RamData[17] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[17]
XB1_r_RamData[17] = DFFEAS(GC1_q_b[17], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[9] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[9]
XB1_r_RamData[9] = DFFEAS(GC1_q_b[9], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[1] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[1]
XB1_r_RamData[1] = DFFEAS(GC1_q_b[1], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux6~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[9])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[1])))));


--XB1_r_RamData[25] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[25]
XB1_r_RamData[25] = DFFEAS(GC1_q_b[25], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux6~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[25]))) # (!XB1L0 & (XB1_r_RamData[17])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[8] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[8]
XB1_r_RamData[8] = DFFEAS(GC1_q_b[8], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[16] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[16]
XB1_r_RamData[16] = DFFEAS(GC1_q_b[16], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[0] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[0]
XB1_r_RamData[0] = DFFEAS(GC1_q_b[0], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux7~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[16])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[0])))));


--XB1_r_RamData[24] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_RamData[24]
XB1_r_RamData[24] = DFFEAS(GC1_q_b[24], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Mux7~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[24]))) # (!XB1L0 & (XB1_r_RamData[8])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_o_DV is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_DV
XB1_o_DV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|o_Ready~0
SB1L0 = (SB1_r_BitCnt[1] & (SB1_r_BitCnt[0] & (SB1_r_BitCnt[2] & SB1_r_BitCnt[3])));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_State~0
SB1L0 = (SB1_r_State & ((!SB1L0))) # (!SB1_r_State & (XB1_o_DV));


--RB1_o_Mode is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_Mode
RB1_o_Mode = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--B1_inst56 is UART_MODULE:inst2|inst56
B1_inst56 = LCELL((!RB1_o_Mode) # (!CLK_25MHz2));


--XB1_r_RamData[12] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[12]
XB1_r_RamData[12] = DFFEAS(GC1_q_b[12], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[20] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[20]
XB1_r_RamData[20] = DFFEAS(GC1_q_b[20], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[4] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[4]
XB1_r_RamData[4] = DFFEAS(GC1_q_b[4], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux3~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[20])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[4])))));


--XB1_r_RamData[28] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[28]
XB1_r_RamData[28] = DFFEAS(GC1_q_b[28], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux3~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[28]))) # (!XB1L0 & (XB1_r_RamData[12])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_State.s_SetDV is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_State.s_SetDV
XB1_r_State.s_SetDV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|Equal0~0
SB1L0 = (SB1_r_ClkCnt[0]) # ((SB1_r_ClkCnt[2]) # ((!SB1_r_ClkCnt[3]) # (!SB1_r_ClkCnt[1])));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|Equal0~1
SB1L0 = (SB1L0) # (!SB1_r_ClkCnt[4]);


--XB1_r_RamData[19] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[19]
XB1_r_RamData[19] = DFFEAS(GC1_q_b[19], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[11] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[11]
XB1_r_RamData[11] = DFFEAS(GC1_q_b[11], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[3] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[3]
XB1_r_RamData[3] = DFFEAS(GC1_q_b[3], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux4~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[11])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[3])))));


--XB1_r_RamData[27] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[27]
XB1_r_RamData[27] = DFFEAS(GC1_q_b[27], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux4~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[27]))) # (!XB1L0 & (XB1_r_RamData[19])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[10] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[10]
XB1_r_RamData[10] = DFFEAS(GC1_q_b[10], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[18] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[18]
XB1_r_RamData[18] = DFFEAS(GC1_q_b[18], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[2] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[2]
XB1_r_RamData[2] = DFFEAS(GC1_q_b[2], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux5~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[18])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[2])))));


--XB1_r_RamData[26] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[26]
XB1_r_RamData[26] = DFFEAS(GC1_q_b[26], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux5~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[26]))) # (!XB1L0 & (XB1_r_RamData[10])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_RamData[21] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[21]
XB1_r_RamData[21] = DFFEAS(GC1_q_b[21], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[13] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[13]
XB1_r_RamData[13] = DFFEAS(GC1_q_b[13], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[5] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[5]
XB1_r_RamData[5] = DFFEAS(GC1_q_b[5], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux2~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[13])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[5])))));


--XB1_r_RamData[29] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[29]
XB1_r_RamData[29] = DFFEAS(GC1_q_b[29], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux2~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[29]))) # (!XB1L0 & (XB1_r_RamData[21])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[23] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[23]
XB1_r_RamData[23] = DFFEAS(GC1_q_b[23], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[15] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[15]
XB1_r_RamData[15] = DFFEAS(GC1_q_b[15], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[7] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[7]
XB1_r_RamData[7] = DFFEAS(GC1_q_b[7], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux0~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[15])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[7])))));


--XB1_r_RamData[31] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[31]
XB1_r_RamData[31] = DFFEAS(GC1_q_b[31], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux0~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[31]))) # (!XB1L0 & (XB1_r_RamData[23])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[14] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[14]
XB1_r_RamData[14] = DFFEAS(GC1_q_b[14], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[22] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[22]
XB1_r_RamData[22] = DFFEAS(GC1_q_b[22], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[6] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[6]
XB1_r_RamData[6] = DFFEAS(GC1_q_b[6], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux1~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[22])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[6])))));


--XB1_r_RamData[30] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[30]
XB1_r_RamData[30] = DFFEAS(GC1_q_b[30], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux1~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[30]))) # (!XB1L0 & (XB1_r_RamData[14])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_RamData[17] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[17]
XB1_r_RamData[17] = DFFEAS(GC1_q_b[17], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[9] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[9]
XB1_r_RamData[9] = DFFEAS(GC1_q_b[9], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[1] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[1]
XB1_r_RamData[1] = DFFEAS(GC1_q_b[1], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux6~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[9])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[1])))));


--XB1_r_RamData[25] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[25]
XB1_r_RamData[25] = DFFEAS(GC1_q_b[25], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux6~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[25]))) # (!XB1L0 & (XB1_r_RamData[17])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[8] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[8]
XB1_r_RamData[8] = DFFEAS(GC1_q_b[8], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[16] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[16]
XB1_r_RamData[16] = DFFEAS(GC1_q_b[16], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[0] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[0]
XB1_r_RamData[0] = DFFEAS(GC1_q_b[0], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux7~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[16])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[0])))));


--XB1_r_RamData[24] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_RamData[24]
XB1_r_RamData[24] = DFFEAS(GC1_q_b[24], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Mux7~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[24]))) # (!XB1L0 & (XB1_r_RamData[8])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_o_DV is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_DV
XB1_o_DV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|o_Ready~0
SB1L0 = (SB1_r_BitCnt[1] & (SB1_r_BitCnt[0] & (SB1_r_BitCnt[2] & SB1_r_BitCnt[3])));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_State~0
SB1L0 = (SB1_r_State & ((!SB1L0))) # (!SB1_r_State & (XB1_o_DV));


--RB1_o_Mode is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_Mode
RB1_o_Mode = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--B1_inst56 is UART_MODULE:inst3|inst56
B1_inst56 = LCELL((!RB1_o_Mode) # (!CLK_25MHz2));


--XB1_r_RamData[12] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[12]
XB1_r_RamData[12] = DFFEAS(GC1_q_b[12], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[20] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[20]
XB1_r_RamData[20] = DFFEAS(GC1_q_b[20], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[4] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[4]
XB1_r_RamData[4] = DFFEAS(GC1_q_b[4], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux3~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[20])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[4])))));


--XB1_r_RamData[28] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[28]
XB1_r_RamData[28] = DFFEAS(GC1_q_b[28], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux3~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[28]))) # (!XB1L0 & (XB1_r_RamData[12])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_State.s_SetDV is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_State.s_SetDV
XB1_r_State.s_SetDV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_r_RamData[19] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[19]
XB1_r_RamData[19] = DFFEAS(GC1_q_b[19], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[11] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[11]
XB1_r_RamData[11] = DFFEAS(GC1_q_b[11], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[3] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[3]
XB1_r_RamData[3] = DFFEAS(GC1_q_b[3], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux4~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[11])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[3])))));


--XB1_r_RamData[27] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[27]
XB1_r_RamData[27] = DFFEAS(GC1_q_b[27], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux4~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[27]))) # (!XB1L0 & (XB1_r_RamData[19])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[10] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[10]
XB1_r_RamData[10] = DFFEAS(GC1_q_b[10], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[18] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[18]
XB1_r_RamData[18] = DFFEAS(GC1_q_b[18], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[2] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[2]
XB1_r_RamData[2] = DFFEAS(GC1_q_b[2], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux5~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[18])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[2])))));


--XB1_r_RamData[26] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[26]
XB1_r_RamData[26] = DFFEAS(GC1_q_b[26], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux5~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[26]))) # (!XB1L0 & (XB1_r_RamData[10])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_RamData[21] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[21]
XB1_r_RamData[21] = DFFEAS(GC1_q_b[21], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[13] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[13]
XB1_r_RamData[13] = DFFEAS(GC1_q_b[13], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[5] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[5]
XB1_r_RamData[5] = DFFEAS(GC1_q_b[5], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux2~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[13])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[5])))));


--XB1_r_RamData[29] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[29]
XB1_r_RamData[29] = DFFEAS(GC1_q_b[29], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux2~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[29]))) # (!XB1L0 & (XB1_r_RamData[21])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[23] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[23]
XB1_r_RamData[23] = DFFEAS(GC1_q_b[23], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[15] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[15]
XB1_r_RamData[15] = DFFEAS(GC1_q_b[15], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[7] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[7]
XB1_r_RamData[7] = DFFEAS(GC1_q_b[7], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux0~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[15])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[7])))));


--XB1_r_RamData[31] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[31]
XB1_r_RamData[31] = DFFEAS(GC1_q_b[31], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux0~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[31]))) # (!XB1L0 & (XB1_r_RamData[23])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[14] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[14]
XB1_r_RamData[14] = DFFEAS(GC1_q_b[14], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[22] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[22]
XB1_r_RamData[22] = DFFEAS(GC1_q_b[22], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[6] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[6]
XB1_r_RamData[6] = DFFEAS(GC1_q_b[6], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux1~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[22])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[6])))));


--XB1_r_RamData[30] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[30]
XB1_r_RamData[30] = DFFEAS(GC1_q_b[30], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux1~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[30]))) # (!XB1L0 & (XB1_r_RamData[14])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_RamData[17] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[17]
XB1_r_RamData[17] = DFFEAS(GC1_q_b[17], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[9] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[9]
XB1_r_RamData[9] = DFFEAS(GC1_q_b[9], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[1] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[1]
XB1_r_RamData[1] = DFFEAS(GC1_q_b[1], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux6~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[9])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[1])))));


--XB1_r_RamData[25] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[25]
XB1_r_RamData[25] = DFFEAS(GC1_q_b[25], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux6~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[25]))) # (!XB1L0 & (XB1_r_RamData[17])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[8] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[8]
XB1_r_RamData[8] = DFFEAS(GC1_q_b[8], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[16] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[16]
XB1_r_RamData[16] = DFFEAS(GC1_q_b[16], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[0] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[0]
XB1_r_RamData[0] = DFFEAS(GC1_q_b[0], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux7~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[16])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[0])))));


--XB1_r_RamData[24] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_RamData[24]
XB1_r_RamData[24] = DFFEAS(GC1_q_b[24], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Mux7~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[24]))) # (!XB1L0 & (XB1_r_RamData[8])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--A1L0 is inst182~1
A1L0 = (A13 & (A8 & (BC1L0 & A1L0)));


--inst51 is inst51
inst51 = (A6 & (A1L0 & (A1L0 & !A5)));


--inst57 is inst57
inst57 = (A5 & (A6 & (A1L0 & A1L0)));


--XB1_r_RamData[12] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[12]
XB1_r_RamData[12] = DFFEAS(GC1_q_b[12], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[20] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[20]
XB1_r_RamData[20] = DFFEAS(GC1_q_b[20], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[4] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[4]
XB1_r_RamData[4] = DFFEAS(GC1_q_b[4], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux3~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[20])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[4])))));


--XB1_r_RamData[28] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[28]
XB1_r_RamData[28] = DFFEAS(GC1_q_b[28], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux3~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[28]))) # (!XB1L0 & (XB1_r_RamData[12])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_State.s_SetDV is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_State.s_SetDV
XB1_r_State.s_SetDV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|Equal0~0
SB1L0 = (SB1_r_ClkCnt[0]) # ((SB1_r_ClkCnt[2]) # ((!SB1_r_ClkCnt[3]) # (!SB1_r_ClkCnt[1])));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|Equal0~1
SB1L0 = (SB1L0) # (!SB1_r_ClkCnt[4]);


--XB1_r_RamData[19] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[19]
XB1_r_RamData[19] = DFFEAS(GC1_q_b[19], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[11] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[11]
XB1_r_RamData[11] = DFFEAS(GC1_q_b[11], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[3] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[3]
XB1_r_RamData[3] = DFFEAS(GC1_q_b[3], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux4~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[11])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[3])))));


--XB1_r_RamData[27] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[27]
XB1_r_RamData[27] = DFFEAS(GC1_q_b[27], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux4~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[27]))) # (!XB1L0 & (XB1_r_RamData[19])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[10] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[10]
XB1_r_RamData[10] = DFFEAS(GC1_q_b[10], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[18] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[18]
XB1_r_RamData[18] = DFFEAS(GC1_q_b[18], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[2] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[2]
XB1_r_RamData[2] = DFFEAS(GC1_q_b[2], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux5~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[18])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[2])))));


--XB1_r_RamData[26] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[26]
XB1_r_RamData[26] = DFFEAS(GC1_q_b[26], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux5~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[26]))) # (!XB1L0 & (XB1_r_RamData[10])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_RamData[21] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[21]
XB1_r_RamData[21] = DFFEAS(GC1_q_b[21], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[13] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[13]
XB1_r_RamData[13] = DFFEAS(GC1_q_b[13], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[5] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[5]
XB1_r_RamData[5] = DFFEAS(GC1_q_b[5], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux2~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[13])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[5])))));


--XB1_r_RamData[29] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[29]
XB1_r_RamData[29] = DFFEAS(GC1_q_b[29], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux2~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[29]))) # (!XB1L0 & (XB1_r_RamData[21])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[23] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[23]
XB1_r_RamData[23] = DFFEAS(GC1_q_b[23], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[15] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[15]
XB1_r_RamData[15] = DFFEAS(GC1_q_b[15], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[7] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[7]
XB1_r_RamData[7] = DFFEAS(GC1_q_b[7], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux0~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[15])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[7])))));


--XB1_r_RamData[31] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[31]
XB1_r_RamData[31] = DFFEAS(GC1_q_b[31], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux0~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[31]))) # (!XB1L0 & (XB1_r_RamData[23])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[14] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[14]
XB1_r_RamData[14] = DFFEAS(GC1_q_b[14], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[22] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[22]
XB1_r_RamData[22] = DFFEAS(GC1_q_b[22], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[6] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[6]
XB1_r_RamData[6] = DFFEAS(GC1_q_b[6], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux1~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[22])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[6])))));


--XB1_r_RamData[30] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[30]
XB1_r_RamData[30] = DFFEAS(GC1_q_b[30], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux1~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[30]))) # (!XB1L0 & (XB1_r_RamData[14])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_r_RamData[17] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[17]
XB1_r_RamData[17] = DFFEAS(GC1_q_b[17], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[9] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[9]
XB1_r_RamData[9] = DFFEAS(GC1_q_b[9], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[1] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[1]
XB1_r_RamData[1] = DFFEAS(GC1_q_b[1], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux6~0
XB1L0 = (XB1_r_TxTail[1] & (((XB1_r_TxTail[0])))) # (!XB1_r_TxTail[1] & ((XB1_r_TxTail[0] & (XB1_r_RamData[9])) # (!XB1_r_TxTail[0] & ((XB1_r_RamData[1])))));


--XB1_r_RamData[25] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[25]
XB1_r_RamData[25] = DFFEAS(GC1_q_b[25], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux6~1
XB1L0 = (XB1_r_TxTail[1] & ((XB1L0 & ((XB1_r_RamData[25]))) # (!XB1L0 & (XB1_r_RamData[17])))) # (!XB1_r_TxTail[1] & (((XB1L0))));


--XB1_r_RamData[8] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[8]
XB1_r_RamData[8] = DFFEAS(GC1_q_b[8], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[16] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[16]
XB1_r_RamData[16] = DFFEAS(GC1_q_b[16], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1_r_RamData[0] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[0]
XB1_r_RamData[0] = DFFEAS(GC1_q_b[0], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux7~0
XB1L0 = (XB1_r_TxTail[0] & (((XB1_r_TxTail[1])))) # (!XB1_r_TxTail[0] & ((XB1_r_TxTail[1] & (XB1_r_RamData[16])) # (!XB1_r_TxTail[1] & ((XB1_r_RamData[0])))));


--XB1_r_RamData[24] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_RamData[24]
XB1_r_RamData[24] = DFFEAS(GC1_q_b[24], !B1_inst56,  ,  , XB1_r_State.s_GetData,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Mux7~1
XB1L0 = (XB1_r_TxTail[0] & ((XB1L0 & ((XB1_r_RamData[24]))) # (!XB1L0 & (XB1_r_RamData[8])))) # (!XB1_r_TxTail[0] & (((XB1L0))));


--XB1_o_DV is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_DV
XB1_o_DV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|o_Ready~0
SB1L0 = (SB1_r_BitCnt[1] & (SB1_r_BitCnt[0] & (SB1_r_BitCnt[2] & SB1_r_BitCnt[3])));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_State~0
SB1L0 = (SB1_r_State & ((!SB1L0))) # (!SB1_r_State & (XB1_o_DV));


--RB1_o_Mode is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_Mode
RB1_o_Mode = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--B1_inst56 is UART_MODULE:inst6|inst56
B1_inst56 = LCELL((!RB1_o_Mode) # (!CLK_25MHz2));


--G1_o_En is PK_LIST_BLOCK:inst11|o_En
G1_o_En = DFFEAS(G1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_o_kHz is FREQ_8kHz_BLOCK:inst27|o_kHz
Q1_o_kHz = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[0]~9
N1L0 = (!Q1_o_kHz) # (!N1_r_PkEn);


--N1L0 is PK_OUT_BLOCK:inst22|r_Cnt[0]~10
N1L0 = ((Q1_o_kHz) # ((!N1L0 & N1L0))) # (!N1_r_PkEn);


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk5_Len[6]~2
J1L0 = (A13 & A2);


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk5_Len[6]~3
J1L0 = (GB1L0 & (G1L0 & (J1L0 & !A3)));


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal1~0
GB1L0 = (A1 & A0);


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal6~1
GB1L0 = (A1 & !A0);


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk8_Len[6]~0
J1L0 = (GB1L0 & (GB1L0 & (G1L0 & !A4)));


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal3~0
GB1L0 = (A0 & !A1);


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk11_Len[6]~2
J1L0 = (!A4 & (A13 & (!A7 & !A8)));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk11_Len[6]~3
J1L0 = (A3 & (!A2 & (GB1L0 & J1L0)));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk0_Len[6]~0
J1L0 = (G1L0 & (GB1L0 & (!A1 & !A0)));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk4_Len[6]~0
J1L0 = (J1L0 & (!A1 & !A0));


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst12|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal0~2
GB1L0 = (A12 & (!A11 & !A10));


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal6~2
GB1L0 = (GB1L0 & (J1L0 & (GB1L0 & !A3)));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[10]~8
GB1L0 = (!GB1L0 & !GB1L0);


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~9
GB1L0 = ((A1 $ (!A0)) # (!GB1L0)) # (!J1L0);


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal0~3
GB1L0 = (GB1L0 & (A4 & (GB1L0 & GB1L0)));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[10]~10
GB1L0 = (GB1L0 & (((!GB1L0) # (!GB1L0)) # (!J1L0)));


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal4~1
GB1L0 = (GB1L0 & (GB1L0 & (GB1L0 & !A4)));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[10]~11
GB1L0 = (GB1L0 & (GB1L0 & !GB1L0));


--inst44 is inst44
inst44 = (CS3) # (OE);


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[0]~0
HC1L0 = ((H1_o_PkuFlag & (GB1L0 & GB1L0))) # (!inst91);


--BC1L0 is UART_MODULE:inst6|UART_TXHEAD_EN_BLOCK:inst33|Equal0~7
BC1L0 = (A10 & !A13);


--WB1L0 is UART_MODULE:inst5|UART_TXTAIL_EN_BLOCK:inst15|Equal0~0
WB1L0 = (!A2 & !A3);


--WB1L0 is UART_MODULE:inst5|UART_TXTAIL_EN_BLOCK:inst15|Equal0~1
WB1L0 = (GB1L0 & (BC1L0 & (GB1L0 & WB1L0)));


--B1_inst58 is UART_MODULE:inst6|inst58
B1_inst58 = (A11 & (A12 & (WB1L0 & !inst44)));


--B1_inst58 is UART_MODULE:inst3|inst58
B1_inst58 = (A11 & (WB1L0 & (!A12 & !inst44)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~8
HC1L0 = (XB1_r_TxTail[0] & ((XB1_r_TxTail[0]) # ((!B1_inst58)))) # (!XB1_r_TxTail[0] & (!B1_inst58 & ((XB1_r_TxTail[0]) # (!B1_inst58))));


--BC1L0 is UART_MODULE:inst6|UART_TXHEAD_EN_BLOCK:inst33|Equal0~8
BC1L0 = (BC1L0 & (GB1L0 & (!A2 & !A3)));


--B1_inst62 is UART_MODULE:inst2|inst62
B1_inst62 = (BC1L0 & (GB1L0 & (BC1L0 & !inst44)));


--B1_inst58 is UART_MODULE:inst2|inst58
B1_inst58 = (BC1L0 & (GB1L0 & (BC1L0 & !inst44)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~9
HC1L0 = (XB1_r_TxTail[0] & ((ZB1_r_RxHead[0]) # ((!B1_inst62)))) # (!XB1_r_TxTail[0] & (!B1_inst58 & ((ZB1_r_RxHead[0]) # (!B1_inst62))));


--B1_inst62 is UART_MODULE:inst3|inst62
B1_inst62 = (UB1L0 & (GB1L0 & (BC1L0 & !inst44)));


--B1_inst62 is UART_MODULE:inst5|inst62
B1_inst62 = (CC1L0 & (GB1L0 & (BC1L0 & !inst44)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~10
HC1L0 = (ZB1_r_RxHead[0] & ((ZB1_r_RxHead[0]) # ((!B1_inst62)))) # (!ZB1_r_RxHead[0] & (!B1_inst62 & ((ZB1_r_RxHead[0]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~11
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--B1_inst62 is UART_MODULE:inst6|inst62
B1_inst62 = (BC1L0 & (GB1L0 & (BC1L0 & !inst44)));


--B1_inst58 is UART_MODULE:inst5|inst58
B1_inst58 = (CC1L0 & (GB1L0 & (BC1L0 & !inst44)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~12
HC1L0 = (XB1_r_TxTail[0] & ((ZB1_r_RxHead[0]) # ((!B1_inst62)))) # (!XB1_r_TxTail[0] & (!B1_inst58 & ((ZB1_r_RxHead[0]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~13
HC1L0 = (XB1_r_TxTail[0] & ((ZB1_r_RxHead[0]) # ((!B1_inst62)))) # (!XB1_r_TxTail[0] & (!B1_inst58 & ((ZB1_r_RxHead[0]) # (!B1_inst62))));


--VB1_o_TxHead[0] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[0]
VB1_o_TxHead[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[0] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[0]
RB1_o_CtrlReg[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--CC1L0 is UART_MODULE:inst5|UART_CTRL_EN_BLOCK:inst35|Equal0~2
CC1L0 = (CC1L0 & (BC1L0 & (GB1L0 & GB1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~14
HC1L0 = (VB1_o_TxHead[0] & ((RB1_o_CtrlReg[0]) # ((!CC1L0)))) # (!VB1_o_TxHead[0] & (!BC1L0 & ((RB1_o_CtrlReg[0]) # (!CC1L0))));


--RB1_o_CtrlReg[0] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[0]
RB1_o_CtrlReg[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[0] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[0]
RB1_o_CtrlReg[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--CC1L0 is UART_MODULE:inst3|UART_CTRL_EN_BLOCK:inst35|Equal0~0
CC1L0 = (A11 & (CC1L0 & !A12));


--CC1L0 is UART_MODULE:inst2|UART_CTRL_EN_BLOCK:inst35|Equal0~0
CC1L0 = (CC1L0 & (!A11 & !A12));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~15
HC1L0 = (RB1_o_CtrlReg[0] & ((RB1_o_CtrlReg[0]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[0] & (!CC1L0 & ((RB1_o_CtrlReg[0]) # (!CC1L0))));


--VB1_o_TxHead[0] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[0]
VB1_o_TxHead[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[0] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[0]
RB1_o_CtrlReg[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--CC1L0 is UART_MODULE:inst6|UART_CTRL_EN_BLOCK:inst35|Equal0~0
CC1L0 = (BC1L0 & (GB1L0 & (GB1L0 & BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~16
HC1L0 = (VB1_o_TxHead[0] & ((RB1_o_CtrlReg[0]) # ((!CC1L0)))) # (!VB1_o_TxHead[0] & (!BC1L0 & ((RB1_o_CtrlReg[0]) # (!CC1L0))));


--VB1_o_TxHead[0] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[0]
VB1_o_TxHead[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[0] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[0]
RB1_o_CtrlReg[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~17
HC1L0 = (VB1_o_TxHead[0] & ((RB1_o_CtrlReg[0]) # ((!CC1L0)))) # (!VB1_o_TxHead[0] & (!BC1L0 & ((RB1_o_CtrlReg[0]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~18
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--VB1_o_TxHead[0] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[0]
VB1_o_TxHead[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is UART_MODULE:inst6|TRI31_1:inst34|lpm_bustri:lpm_bustri_component|dout[0]~0
HC1L0 = (VB1_o_TxHead[0]) # (((!BC1L0) # (!GB1L0)) # (!BC1L0));


--A1L0 is inst182~2
A1L0 = (A7 & (!CS3 & (!A6 & !OE)));


--A1L0 is inst182~3
A1L0 = (A1L0 & (A1L0 & A1L0));


--inst80 is inst80
inst80 = (A1L0 & (!A4 & !A5));


--inst146 is inst146
inst146 = (A4 & (A1L0 & !A5));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~19
HC1L0 = (LC1_q_b[0] & ((LC1_q_b[0]) # ((!inst80)))) # (!LC1_q_b[0] & (!inst146 & ((LC1_q_b[0]) # (!inst80))));


--A1L0 is inst182~4
A1L0 = (A4 & A5);


--inst182 is inst182
inst182 = (A1L0 & (A1L0 & (A1L0 & A1L0)));


--inst154 is inst154
inst154 = (A5 & (A1L0 & !A4));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~20
HC1L0 = (LC1_q_b[0] & ((LC1_q_b[0]) # ((!inst182)))) # (!LC1_q_b[0] & (!inst154 & ((LC1_q_b[0]) # (!inst182))));


--B1L0 is UART_MODULE:inst3|inst55~0
B1L0 = (UB1L0 & (A1L0 & (!A13 & !inst44)));


--B1L0 is UART_MODULE:inst2|inst55~0
B1L0 = (BC1L0 & (A1L0 & (!A13 & !inst44)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~21
HC1L0 = (GC1_q_b[0] & ((GC1_q_b[0]) # ((!B1L0)))) # (!GC1_q_b[0] & (!B1L0 & ((GC1_q_b[0]) # (!B1L0))));


--B1L0 is UART_MODULE:inst6|inst55~0
B1L0 = (BC1L0 & (A1L0 & (!A13 & !inst44)));


--B1L0 is UART_MODULE:inst5|inst55~0
B1L0 = (CC1L0 & (A1L0 & (!A13 & !inst44)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~22
HC1L0 = (GC1_q_b[0] & ((GC1_q_b[0]) # ((!B1L0)))) # (!GC1_q_b[0] & (!B1L0 & ((GC1_q_b[0]) # (!B1L0))));


--B1L0 is UART_MODULE:inst7|inst55~0
B1L0 = (A13 & (BC1L0 & (A1L0 & !inst44)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~23
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[0]) # (!B1L0))));


--VB1_o_TxHead[0] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[0]
VB1_o_TxHead[0] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--BC1L0 is UART_MODULE:inst7|UART_TXHEAD_EN_BLOCK:inst33|Equal0~2
BC1L0 = (A10 & (BC1L0 & (GB1L0 & GB1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~24
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[0]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~25
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~26
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~27
HC1L0 = (B1L0) # ((B1L0) # ((B1L0) # (HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~28
HC1L0 = (CC1L0) # ((BC1L0) # ((inst182) # (HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~29
HC1L0 = (inst154) # ((B1L0) # ((B1L0) # (HC1L0)));


--WB1L0 is UART_MODULE:inst7|UART_TXTAIL_EN_BLOCK:inst15|Equal0~0
WB1L0 = (A10 & (BC1L0 & (GB1L0 & GB1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~30
HC1L0 = (inst44) # ((!WB1L0 & ((!BC1L0) # (!GB1L0))));


--UB1L0 is UART_MODULE:inst6|UART_RXHEAD_EN_BLOCK:inst11|Equal0~0
UB1L0 = (A0 & (BC1L0 & !A1));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~31
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !inst91)));


--A1L0 is inst149~1
A1L0 = (A10 & (A2 & (A3 & A9)));


--A1L0 is inst149~2
A1L0 = (A6 & (A7 & (A1L0 & !inst44)));


--A1L0 is inst149~3
A1L0 = (A1L0 & (GB1L0 & (A1L0 & A1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~32
HC1L0 = (CC1L0) # ((BC1L0) # (A1L0));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~33
HC1L0 = (!inst44 & ((HC1L0) # ((HC1L0) # (!HC1L0))));


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst23|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[1]~1
HC1L0 = ((GB1L0 & (GB1L0 & H1_o_PkuFlag))) # (!inst91);


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~34
HC1L0 = (XB1_r_TxTail[1] & ((XB1_r_TxTail[1]) # ((!B1_inst58)))) # (!XB1_r_TxTail[1] & (!B1_inst58 & ((XB1_r_TxTail[1]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~35
HC1L0 = (XB1_r_TxTail[1] & ((ZB1_r_RxHead[1]) # ((!B1_inst62)))) # (!XB1_r_TxTail[1] & (!B1_inst58 & ((ZB1_r_RxHead[1]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~36
HC1L0 = (ZB1_r_RxHead[1] & ((ZB1_r_RxHead[1]) # ((!B1_inst62)))) # (!ZB1_r_RxHead[1] & (!B1_inst62 & ((ZB1_r_RxHead[1]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~37
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~38
HC1L0 = (XB1_r_TxTail[1] & ((ZB1_r_RxHead[1]) # ((!B1_inst62)))) # (!XB1_r_TxTail[1] & (!B1_inst58 & ((ZB1_r_RxHead[1]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~39
HC1L0 = (XB1_r_TxTail[1] & ((ZB1_r_RxHead[1]) # ((!B1_inst62)))) # (!XB1_r_TxTail[1] & (!B1_inst58 & ((ZB1_r_RxHead[1]) # (!B1_inst62))));


--VB1_o_TxHead[1] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[1]
VB1_o_TxHead[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[1] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[1]
RB1_o_CtrlReg[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~40
HC1L0 = (VB1_o_TxHead[1] & ((RB1_o_CtrlReg[1]) # ((!CC1L0)))) # (!VB1_o_TxHead[1] & (!BC1L0 & ((RB1_o_CtrlReg[1]) # (!CC1L0))));


--RB1_o_CtrlReg[1] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[1]
RB1_o_CtrlReg[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[1] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[1]
RB1_o_CtrlReg[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~41
HC1L0 = (RB1_o_CtrlReg[1] & ((RB1_o_CtrlReg[1]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[1] & (!CC1L0 & ((RB1_o_CtrlReg[1]) # (!CC1L0))));


--VB1_o_TxHead[1] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[1]
VB1_o_TxHead[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[1] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[1]
RB1_o_CtrlReg[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~42
HC1L0 = (VB1_o_TxHead[1] & ((RB1_o_CtrlReg[1]) # ((!CC1L0)))) # (!VB1_o_TxHead[1] & (!BC1L0 & ((RB1_o_CtrlReg[1]) # (!CC1L0))));


--VB1_o_TxHead[1] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[1]
VB1_o_TxHead[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is UART_MODULE:inst5|TRI31_1:inst34|lpm_bustri:lpm_bustri_component|dout[1]~0
HC1L0 = (VB1_o_TxHead[1]) # (((!BC1L0) # (!GB1L0)) # (!CC1L0));


--RB1_o_CtrlReg[1] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[1]
RB1_o_CtrlReg[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~43
HC1L0 = (HC1L0 & (HC1L0 & ((RB1_o_CtrlReg[1]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~44
HC1L0 = (LC1_q_b[1] & ((LC1_q_b[1]) # ((!inst80)))) # (!LC1_q_b[1] & (!inst146 & ((LC1_q_b[1]) # (!inst80))));


--VB1_o_TxHead[1] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[1]
VB1_o_TxHead[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~45
HC1L0 = (HC1L0 & ((VB1_o_TxHead[1]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~46
HC1L0 = (LC1_q_b[1] & ((LC1_q_b[1]) # ((!inst154)))) # (!LC1_q_b[1] & (!inst182 & ((LC1_q_b[1]) # (!inst154))));


--VB1_o_TxHead[1] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[1]
VB1_o_TxHead[1] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~47
HC1L0 = (HC1L0 & ((VB1_o_TxHead[1]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~48
HC1L0 = (GC1_q_b[1] & ((GC1_q_b[1]) # ((!B1L0)))) # (!GC1_q_b[1] & (!B1L0 & ((GC1_q_b[1]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~49
HC1L0 = (GC1_q_b[1] & ((GC1_q_b[1]) # ((!B1L0)))) # (!GC1_q_b[1] & (!B1L0 & ((GC1_q_b[1]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~50
HC1L0 = (HC1L0 & (!A1L0 & ((GC1_q_b[1]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~51
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~52
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[1]~53
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst39|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[2]~2
HC1L0 = ((GB1L0 & (GB1L0 & H1_o_PkuFlag))) # (!inst91);


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~54
HC1L0 = (XB1_r_TxTail[2] & ((XB1_r_TxTail[2]) # ((!B1_inst58)))) # (!XB1_r_TxTail[2] & (!B1_inst58 & ((XB1_r_TxTail[2]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~55
HC1L0 = (XB1_r_TxTail[2] & ((ZB1_r_RxHead[2]) # ((!B1_inst62)))) # (!XB1_r_TxTail[2] & (!B1_inst58 & ((ZB1_r_RxHead[2]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~56
HC1L0 = (ZB1_r_RxHead[2] & ((ZB1_r_RxHead[2]) # ((!B1_inst62)))) # (!ZB1_r_RxHead[2] & (!B1_inst62 & ((ZB1_r_RxHead[2]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~57
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~58
HC1L0 = (ZB1_r_RxHead[2] & ((XB1_r_TxTail[2]) # ((!B1_inst58)))) # (!ZB1_r_RxHead[2] & (!B1_inst62 & ((XB1_r_TxTail[2]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~59
HC1L0 = (XB1_r_TxTail[2] & ((ZB1_r_RxHead[2]) # ((!B1_inst62)))) # (!XB1_r_TxTail[2] & (!B1_inst58 & ((ZB1_r_RxHead[2]) # (!B1_inst62))));


--VB1_o_TxHead[2] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[2]
VB1_o_TxHead[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[2] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[2]
RB1_o_CtrlReg[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~60
HC1L0 = (VB1_o_TxHead[2] & ((RB1_o_CtrlReg[2]) # ((!CC1L0)))) # (!VB1_o_TxHead[2] & (!BC1L0 & ((RB1_o_CtrlReg[2]) # (!CC1L0))));


--RB1_o_CtrlReg[2] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[2]
RB1_o_CtrlReg[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[2] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[2]
RB1_o_CtrlReg[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~61
HC1L0 = (RB1_o_CtrlReg[2] & ((RB1_o_CtrlReg[2]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[2] & (!CC1L0 & ((RB1_o_CtrlReg[2]) # (!CC1L0))));


--VB1_o_TxHead[2] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[2]
VB1_o_TxHead[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[2] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[2]
RB1_o_CtrlReg[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~62
HC1L0 = (VB1_o_TxHead[2] & ((RB1_o_CtrlReg[2]) # ((!CC1L0)))) # (!VB1_o_TxHead[2] & (!BC1L0 & ((RB1_o_CtrlReg[2]) # (!CC1L0))));


--VB1_o_TxHead[2] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[2]
VB1_o_TxHead[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[2] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[2]
RB1_o_CtrlReg[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~63
HC1L0 = (VB1_o_TxHead[2] & ((RB1_o_CtrlReg[2]) # ((!CC1L0)))) # (!VB1_o_TxHead[2] & (!BC1L0 & ((RB1_o_CtrlReg[2]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~64
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--VB1_o_TxHead[2] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[2]
VB1_o_TxHead[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is UART_MODULE:inst6|TRI31_1:inst34|lpm_bustri:lpm_bustri_component|dout[2]~1
HC1L0 = (VB1_o_TxHead[2]) # (((!BC1L0) # (!GB1L0)) # (!BC1L0));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~65
HC1L0 = (LC1_q_b[2] & ((LC1_q_b[2]) # ((!inst80)))) # (!LC1_q_b[2] & (!inst146 & ((LC1_q_b[2]) # (!inst80))));


--VB1_o_TxHead[2] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[2]
VB1_o_TxHead[2] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is UART_MODULE:inst7|TRI31_1:inst34|lpm_bustri:lpm_bustri_component|dout[2]~0
HC1L0 = (VB1_o_TxHead[2]) # (!BC1L0);


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~66
HC1L0 = (LC1_q_b[2] & ((LC1_q_b[2]) # ((!inst154)))) # (!LC1_q_b[2] & (!inst182 & ((LC1_q_b[2]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~67
HC1L0 = (GC1_q_b[2] & ((GC1_q_b[2]) # ((!B1L0)))) # (!GC1_q_b[2] & (!B1L0 & ((GC1_q_b[2]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~68
HC1L0 = (GC1_q_b[2] & ((GC1_q_b[2]) # ((!B1L0)))) # (!GC1_q_b[2] & (!B1L0 & ((GC1_q_b[2]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~69
HC1L0 = (HC1L0 & (!A1L0 & ((GC1_q_b[2]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~70
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~71
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[2]~72
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~73
HC1L0 = (LC1_q_b[3] & ((LC1_q_b[3]) # ((!inst80)))) # (!LC1_q_b[3] & (!inst146 & ((LC1_q_b[3]) # (!inst80))));


--VB1_o_TxHead[3] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[3]
VB1_o_TxHead[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~74
HC1L0 = (HC1L0 & ((VB1_o_TxHead[3]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~75
HC1L0 = (LC1_q_b[3] & ((LC1_q_b[3]) # ((!inst154)))) # (!LC1_q_b[3] & (!inst182 & ((LC1_q_b[3]) # (!inst154))));


--VB1_o_TxHead[3] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[3]
VB1_o_TxHead[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~76
HC1L0 = (HC1L0 & ((VB1_o_TxHead[3]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~77
HC1L0 = (GC1_q_b[3] & ((GC1_q_b[3]) # ((!B1L0)))) # (!GC1_q_b[3] & (!B1L0 & ((GC1_q_b[3]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~78
HC1L0 = (GC1_q_b[3] & ((GC1_q_b[3]) # ((!B1L0)))) # (!GC1_q_b[3] & (!B1L0 & ((GC1_q_b[3]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~79
HC1L0 = (HC1L0 & (!A1L0 & ((GC1_q_b[3]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~80
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~81
HC1L0 = (XB1_r_TxTail[3] & ((XB1_r_TxTail[3]) # ((!B1_inst58)))) # (!XB1_r_TxTail[3] & (!B1_inst58 & ((XB1_r_TxTail[3]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~82
HC1L0 = (XB1_r_TxTail[3] & ((ZB1_r_RxHead[3]) # ((!B1_inst62)))) # (!XB1_r_TxTail[3] & (!B1_inst58 & ((ZB1_r_RxHead[3]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~83
HC1L0 = (ZB1_r_RxHead[3] & ((ZB1_r_RxHead[3]) # ((!B1_inst62)))) # (!ZB1_r_RxHead[3] & (!B1_inst62 & ((ZB1_r_RxHead[3]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~84
HC1L0 = (HC1L0 & (HC1L0 & HC1L0));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~85
HC1L0 = (ZB1_r_RxHead[3] & ((XB1_r_TxTail[3]) # ((!B1_inst58)))) # (!ZB1_r_RxHead[3] & (!B1_inst62 & ((XB1_r_TxTail[3]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~86
HC1L0 = (XB1_r_TxTail[3] & ((ZB1_r_RxHead[3]) # ((!B1_inst62)))) # (!XB1_r_TxTail[3] & (!B1_inst58 & ((ZB1_r_RxHead[3]) # (!B1_inst62))));


--VB1_o_TxHead[3] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[3]
VB1_o_TxHead[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[3] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[3]
RB1_o_CtrlReg[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~87
HC1L0 = (VB1_o_TxHead[3] & ((RB1_o_CtrlReg[3]) # ((!CC1L0)))) # (!VB1_o_TxHead[3] & (!BC1L0 & ((RB1_o_CtrlReg[3]) # (!CC1L0))));


--RB1_o_CtrlReg[3] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[3]
RB1_o_CtrlReg[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[3] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[3]
RB1_o_CtrlReg[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~88
HC1L0 = (RB1_o_CtrlReg[3] & ((RB1_o_CtrlReg[3]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[3] & (!CC1L0 & ((RB1_o_CtrlReg[3]) # (!CC1L0))));


--VB1_o_TxHead[3] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[3]
VB1_o_TxHead[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[3] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[3]
RB1_o_CtrlReg[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~89
HC1L0 = (VB1_o_TxHead[3] & ((RB1_o_CtrlReg[3]) # ((!CC1L0)))) # (!VB1_o_TxHead[3] & (!BC1L0 & ((RB1_o_CtrlReg[3]) # (!CC1L0))));


--VB1_o_TxHead[3] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[3]
VB1_o_TxHead[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[3] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[3]
RB1_o_CtrlReg[3] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~90
HC1L0 = (VB1_o_TxHead[3] & ((RB1_o_CtrlReg[3]) # ((!CC1L0)))) # (!VB1_o_TxHead[3] & (!BC1L0 & ((RB1_o_CtrlReg[3]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~91
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~92
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst12|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst68|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~12
GB1L0 = (GB1L0 & ((GB1L0) # ((GB1L0 & !GB1L0)))) # (!GB1L0 & (((GB1L0))));


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst69|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst55|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst74|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~13
GB1L0 = (A0 & (J1L0 & GB1L0));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~14
GB1L0 = (GB1L0 & ((GB1L0) # (GB1L0)));


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst72|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst71|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[3]~15
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & ((H1_o_PkuLen[0]))) # (!GB1L0 & (H1_o_PkuLen[0]))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[3]~16
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[0]))) # (!GB1L0 & (H1_o_PkuFlag)))) # (!GB1L0 & (((GB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[3]~17
GB1L0 = (GB1L0 & (GB1L0)) # (!GB1L0 & ((GB1L0 & ((GB1L0))) # (!GB1L0 & (H1_o_PkuLen[0]))));


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst70|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[3]~18
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[0]))) # (!GB1L0 & (H1_o_PkuLen[0])))) # (!GB1L0 & (((GB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~19
GB1L0 = (A1 & (((!GB1L0)))) # (!A1 & ((GB1L0 & ((!A0))) # (!GB1L0 & (!GB1L0))));


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst23|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~20
GB1L0 = (A1 & (((!GB1L0)))) # (!A1 & ((GB1L0 & (A0)) # (!GB1L0 & ((!GB1L0)))));


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst39|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst55|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~21
GB1L0 = ((!GB1L0) # (!GB1L0)) # (!A1);


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst56|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[0] is PKU_IN_BLOCK_v2:inst67|o_PkuLen[0]
H1_o_PkuLen[0] = DFFEAS(H1_r_CntkHz[0], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~22
GB1L0 = (!A0 & ((A1 & (GB1L0)) # (!A1 & ((GB1L0)))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[3]~23
GB1L0 = (GB1L0 & ((GB1L0 & (H1_o_PkuLen[0])) # (!GB1L0 & ((H1_o_PkuLen[0]))))) # (!GB1L0 & (((GB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[3]~24
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[0])) # (!GB1L0 & ((H1_o_PkuLen[0])))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~93
HC1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[0])) # (!GB1L0 & ((GB1L0)))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~94
HC1L0 = (GB1L0 & ((HC1L0 & ((GB1L0))) # (!HC1L0 & (H1_o_PkuLen[0])))) # (!GB1L0 & (((HC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[3]~95
HC1L0 = (HC1L0 & (HC1L0 & ((HC1L0) # (!inst91))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~96
HC1L0 = (LC1_q_b[4] & ((LC1_q_b[4]) # ((!inst80)))) # (!LC1_q_b[4] & (!inst146 & ((LC1_q_b[4]) # (!inst80))));


--VB1_o_TxHead[4] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[4]
VB1_o_TxHead[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~97
HC1L0 = (HC1L0 & ((VB1_o_TxHead[4]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~98
HC1L0 = (LC1_q_b[4] & ((LC1_q_b[4]) # ((!inst154)))) # (!LC1_q_b[4] & (!inst182 & ((LC1_q_b[4]) # (!inst154))));


--VB1_o_TxHead[4] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[4]
VB1_o_TxHead[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~99
HC1L0 = (HC1L0 & ((VB1_o_TxHead[4]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~100
HC1L0 = (GC1_q_b[4] & ((GC1_q_b[4]) # ((!B1L0)))) # (!GC1_q_b[4] & (!B1L0 & ((GC1_q_b[4]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~101
HC1L0 = (GC1_q_b[4] & ((GC1_q_b[4]) # ((!B1L0)))) # (!GC1_q_b[4] & (!B1L0 & ((GC1_q_b[4]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~102
HC1L0 = (HC1L0 & (!A1L0 & ((GC1_q_b[4]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~103
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~104
HC1L0 = (XB1_r_TxTail[4] & ((XB1_r_TxTail[4]) # ((!B1_inst58)))) # (!XB1_r_TxTail[4] & (!B1_inst58 & ((XB1_r_TxTail[4]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~105
HC1L0 = (XB1_r_TxTail[4] & ((ZB1_r_RxHead[4]) # ((!B1_inst62)))) # (!XB1_r_TxTail[4] & (!B1_inst58 & ((ZB1_r_RxHead[4]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~106
HC1L0 = (ZB1_r_RxHead[4] & ((ZB1_r_RxHead[4]) # ((!B1_inst62)))) # (!ZB1_r_RxHead[4] & (!B1_inst62 & ((ZB1_r_RxHead[4]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~107
HC1L0 = (HC1L0 & (HC1L0 & HC1L0));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~108
HC1L0 = (ZB1_r_RxHead[4] & ((XB1_r_TxTail[4]) # ((!B1_inst58)))) # (!ZB1_r_RxHead[4] & (!B1_inst62 & ((XB1_r_TxTail[4]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~109
HC1L0 = (XB1_r_TxTail[4] & ((ZB1_r_RxHead[4]) # ((!B1_inst62)))) # (!XB1_r_TxTail[4] & (!B1_inst58 & ((ZB1_r_RxHead[4]) # (!B1_inst62))));


--VB1_o_TxHead[4] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[4]
VB1_o_TxHead[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[4] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[4]
RB1_o_CtrlReg[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~110
HC1L0 = (VB1_o_TxHead[4] & ((RB1_o_CtrlReg[4]) # ((!CC1L0)))) # (!VB1_o_TxHead[4] & (!BC1L0 & ((RB1_o_CtrlReg[4]) # (!CC1L0))));


--RB1_o_CtrlReg[4] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[4]
RB1_o_CtrlReg[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[4] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[4]
RB1_o_CtrlReg[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~111
HC1L0 = (RB1_o_CtrlReg[4] & ((RB1_o_CtrlReg[4]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[4] & (!CC1L0 & ((RB1_o_CtrlReg[4]) # (!CC1L0))));


--VB1_o_TxHead[4] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[4]
VB1_o_TxHead[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[4] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[4]
RB1_o_CtrlReg[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~112
HC1L0 = (VB1_o_TxHead[4] & ((RB1_o_CtrlReg[4]) # ((!CC1L0)))) # (!VB1_o_TxHead[4] & (!BC1L0 & ((RB1_o_CtrlReg[4]) # (!CC1L0))));


--VB1_o_TxHead[4] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[4]
VB1_o_TxHead[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[4] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[4]
RB1_o_CtrlReg[4] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~113
HC1L0 = (VB1_o_TxHead[4] & ((RB1_o_CtrlReg[4]) # ((!CC1L0)))) # (!VB1_o_TxHead[4] & (!BC1L0 & ((RB1_o_CtrlReg[4]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~114
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~115
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst23|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst56|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst74|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst72|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst71|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[4]~25
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & ((H1_o_PkuLen[1]))) # (!GB1L0 & (H1_o_PkuLen[1]))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[4]~26
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[1]))) # (!GB1L0 & (H1_o_PkuFlag)))) # (!GB1L0 & (((GB1L0))));


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst68|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst69|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[4]~27
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[1])) # (!GB1L0 & ((H1_o_PkuLen[1])))));


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst70|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[4]~28
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[1]))) # (!GB1L0 & (GB1L0)))) # (!GB1L0 & (((GB1L0))));


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst12|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst67|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst39|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst55|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[4]~29
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[1])) # (!GB1L0 & ((H1_o_PkuLen[1])))));


--H1_o_PkuLen[1] is PKU_IN_BLOCK_v2:inst56|o_PkuLen[1]
H1_o_PkuLen[1] = DFFEAS(H1_r_CntkHz[1], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[4]~30
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[1]))) # (!GB1L0 & (H1_o_PkuLen[1])))) # (!GB1L0 & (((GB1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~116
HC1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[1])) # (!GB1L0 & ((GB1L0)))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~117
HC1L0 = (GB1L0 & ((HC1L0 & ((GB1L0))) # (!HC1L0 & (H1_o_PkuLen[1])))) # (!GB1L0 & (((HC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[4]~118
HC1L0 = (HC1L0 & (HC1L0 & ((HC1L0) # (!inst91))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~119
HC1L0 = (LC1_q_b[5] & ((LC1_q_b[5]) # ((!inst80)))) # (!LC1_q_b[5] & (!inst146 & ((LC1_q_b[5]) # (!inst80))));


--VB1_o_TxHead[5] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[5]
VB1_o_TxHead[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~120
HC1L0 = (HC1L0 & ((VB1_o_TxHead[5]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~121
HC1L0 = (LC1_q_b[5] & ((LC1_q_b[5]) # ((!inst154)))) # (!LC1_q_b[5] & (!inst182 & ((LC1_q_b[5]) # (!inst154))));


--VB1_o_TxHead[5] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[5]
VB1_o_TxHead[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~122
HC1L0 = (HC1L0 & ((VB1_o_TxHead[5]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~123
HC1L0 = (GC1_q_b[5] & ((GC1_q_b[5]) # ((!B1L0)))) # (!GC1_q_b[5] & (!B1L0 & ((GC1_q_b[5]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~124
HC1L0 = (GC1_q_b[5] & ((GC1_q_b[5]) # ((!B1L0)))) # (!GC1_q_b[5] & (!B1L0 & ((GC1_q_b[5]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~125
HC1L0 = (HC1L0 & (!A1L0 & ((GC1_q_b[5]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~126
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~127
HC1L0 = (XB1_r_TxTail[5] & ((XB1_r_TxTail[5]) # ((!B1_inst58)))) # (!XB1_r_TxTail[5] & (!B1_inst58 & ((XB1_r_TxTail[5]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~128
HC1L0 = (XB1_r_TxTail[5] & ((ZB1_r_RxHead[5]) # ((!B1_inst62)))) # (!XB1_r_TxTail[5] & (!B1_inst58 & ((ZB1_r_RxHead[5]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~129
HC1L0 = (ZB1_r_RxHead[5] & ((ZB1_r_RxHead[5]) # ((!B1_inst62)))) # (!ZB1_r_RxHead[5] & (!B1_inst62 & ((ZB1_r_RxHead[5]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~130
HC1L0 = (HC1L0 & (HC1L0 & HC1L0));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~131
HC1L0 = (ZB1_r_RxHead[5] & ((XB1_r_TxTail[5]) # ((!B1_inst58)))) # (!ZB1_r_RxHead[5] & (!B1_inst62 & ((XB1_r_TxTail[5]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~132
HC1L0 = (XB1_r_TxTail[5] & ((ZB1_r_RxHead[5]) # ((!B1_inst62)))) # (!XB1_r_TxTail[5] & (!B1_inst58 & ((ZB1_r_RxHead[5]) # (!B1_inst62))));


--VB1_o_TxHead[5] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[5]
VB1_o_TxHead[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~133
HC1L0 = (RB1_o_Channel & ((VB1_o_TxHead[5]) # ((!BC1L0)))) # (!RB1_o_Channel & (!CC1L0 & ((VB1_o_TxHead[5]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~134
HC1L0 = (RB1_o_Channel & ((RB1_o_Channel) # ((!CC1L0)))) # (!RB1_o_Channel & (!CC1L0 & ((RB1_o_Channel) # (!CC1L0))));


--VB1_o_TxHead[5] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[5]
VB1_o_TxHead[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~135
HC1L0 = (RB1_o_Channel & ((VB1_o_TxHead[5]) # ((!BC1L0)))) # (!RB1_o_Channel & (!CC1L0 & ((VB1_o_TxHead[5]) # (!BC1L0))));


--VB1_o_TxHead[5] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[5]
VB1_o_TxHead[5] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~136
HC1L0 = (RB1_o_Channel & ((VB1_o_TxHead[5]) # ((!BC1L0)))) # (!RB1_o_Channel & (!CC1L0 & ((VB1_o_TxHead[5]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~137
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~138
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst12|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst68|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst69|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst67|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst74|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst72|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst71|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~31
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & ((H1_o_PkuLen[2]))) # (!GB1L0 & (H1_o_PkuLen[2]))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~32
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[2]))) # (!GB1L0 & (H1_o_PkuFlag)))) # (!GB1L0 & (((GB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~33
GB1L0 = (GB1L0 & (GB1L0)) # (!GB1L0 & ((GB1L0 & ((GB1L0))) # (!GB1L0 & (H1_o_PkuLen[2]))));


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst70|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~34
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[2]))) # (!GB1L0 & (H1_o_PkuLen[2])))) # (!GB1L0 & (((GB1L0))));


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst23|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst39|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst55|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst56|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[2] is PKU_IN_BLOCK_v2:inst67|o_PkuLen[2]
H1_o_PkuLen[2] = DFFEAS(H1_r_CntkHz[2], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~35
GB1L0 = (GB1L0 & ((GB1L0 & (H1_o_PkuLen[2])) # (!GB1L0 & ((H1_o_PkuLen[2]))))) # (!GB1L0 & (((GB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~36
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[2])) # (!GB1L0 & ((H1_o_PkuLen[2])))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~139
HC1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[2])) # (!GB1L0 & ((GB1L0)))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~140
HC1L0 = (GB1L0 & ((HC1L0 & ((GB1L0))) # (!HC1L0 & (H1_o_PkuLen[2])))) # (!GB1L0 & (((HC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[5]~141
HC1L0 = (HC1L0 & (HC1L0 & ((HC1L0) # (!inst91))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~142
HC1L0 = (LC1_q_b[6] & ((LC1_q_b[6]) # ((!inst80)))) # (!LC1_q_b[6] & (!inst146 & ((LC1_q_b[6]) # (!inst80))));


--VB1_o_TxHead[6] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[6]
VB1_o_TxHead[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~143
HC1L0 = (HC1L0 & ((VB1_o_TxHead[6]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~144
HC1L0 = (LC1_q_b[6] & ((LC1_q_b[6]) # ((!inst154)))) # (!LC1_q_b[6] & (!inst182 & ((LC1_q_b[6]) # (!inst154))));


--VB1_o_TxHead[6] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[6]
VB1_o_TxHead[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~145
HC1L0 = (HC1L0 & ((VB1_o_TxHead[6]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~146
HC1L0 = (GC1_q_b[6] & ((GC1_q_b[6]) # ((!B1L0)))) # (!GC1_q_b[6] & (!B1L0 & ((GC1_q_b[6]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~147
HC1L0 = (GC1_q_b[6] & ((GC1_q_b[6]) # ((!B1L0)))) # (!GC1_q_b[6] & (!B1L0 & ((GC1_q_b[6]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~148
HC1L0 = (XB1_r_TxTail[6] & ((XB1_r_TxTail[6]) # ((!B1_inst58)))) # (!XB1_r_TxTail[6] & (!B1_inst58 & ((XB1_r_TxTail[6]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~149
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[6]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~150
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~151
HC1L0 = (XB1_r_TxTail[6] & ((ZB1_r_RxHead[6]) # ((!B1_inst62)))) # (!XB1_r_TxTail[6] & (!B1_inst58 & ((ZB1_r_RxHead[6]) # (!B1_inst62))));


--HC1L0 is UART_MODULE:inst3|TRI31_1:inst26|lpm_bustri:lpm_bustri_component|dout[6]~0
HC1L0 = (inst44) # ((ZB1_r_RxHead[6]) # ((!UB1L0) # (!UB1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~152
HC1L0 = (HC1L0 & (HC1L0 & ((ZB1_r_RxHead[6]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~153
HC1L0 = (ZB1_r_RxHead[6] & ((XB1_r_TxTail[6]) # ((!B1_inst58)))) # (!ZB1_r_RxHead[6] & (!B1_inst62 & ((XB1_r_TxTail[6]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~154
HC1L0 = (HC1L0 & (HC1L0 & ((ZB1_r_RxHead[6]) # (!B1_inst62))));


--VB1_o_TxHead[6] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[6]
VB1_o_TxHead[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[6] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[6]
RB1_o_CtrlReg[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~155
HC1L0 = (VB1_o_TxHead[6] & ((RB1_o_CtrlReg[6]) # ((!CC1L0)))) # (!VB1_o_TxHead[6] & (!BC1L0 & ((RB1_o_CtrlReg[6]) # (!CC1L0))));


--RB1_o_CtrlReg[6] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[6]
RB1_o_CtrlReg[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[6] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[6]
RB1_o_CtrlReg[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~156
HC1L0 = (RB1_o_CtrlReg[6] & ((RB1_o_CtrlReg[6]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[6] & (!CC1L0 & ((RB1_o_CtrlReg[6]) # (!CC1L0))));


--VB1_o_TxHead[6] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[6]
VB1_o_TxHead[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[6] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[6]
RB1_o_CtrlReg[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~157
HC1L0 = (VB1_o_TxHead[6] & ((RB1_o_CtrlReg[6]) # ((!CC1L0)))) # (!VB1_o_TxHead[6] & (!BC1L0 & ((RB1_o_CtrlReg[6]) # (!CC1L0))));


--VB1_o_TxHead[6] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[6]
VB1_o_TxHead[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[6] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[6]
RB1_o_CtrlReg[6] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~158
HC1L0 = (VB1_o_TxHead[6] & ((RB1_o_CtrlReg[6]) # ((!CC1L0)))) # (!VB1_o_TxHead[6] & (!BC1L0 & ((RB1_o_CtrlReg[6]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~159
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~160
HC1L0 = (HC1L0 & (HC1L0 & HC1L0));


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst23|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst12|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst67|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst39|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst55|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[6]~37
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[3])) # (!GB1L0 & ((H1_o_PkuLen[3])))));


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst56|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[6]~38
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[3]))) # (!GB1L0 & (H1_o_PkuLen[3])))) # (!GB1L0 & (((GB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[6]~39
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[3])) # (!GB1L0 & ((GB1L0)))));


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst68|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst74|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst72|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst71|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[6]~40
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & ((H1_o_PkuLen[3]))) # (!GB1L0 & (H1_o_PkuLen[3]))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[6]~41
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[3]))) # (!GB1L0 & (H1_o_PkuFlag)))) # (!GB1L0 & (((GB1L0))));


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst68|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst69|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[6]~42
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[3])) # (!GB1L0 & ((H1_o_PkuLen[3])))));


--H1_o_PkuLen[3] is PKU_IN_BLOCK_v2:inst70|o_PkuLen[3]
H1_o_PkuLen[3] = DFFEAS(H1_r_CntkHz[3], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[6]~43
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[3]))) # (!GB1L0 & (GB1L0)))) # (!GB1L0 & (((GB1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~161
HC1L0 = (GB1L0 & ((GB1L0 & ((GB1L0))) # (!GB1L0 & (H1_o_PkuLen[3])))) # (!GB1L0 & (((GB1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[6]~162
HC1L0 = (HC1L0 & (HC1L0 & ((HC1L0) # (!inst91))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~163
HC1L0 = (LC1_q_b[7] & ((LC1_q_b[7]) # ((!inst80)))) # (!LC1_q_b[7] & (!inst146 & ((LC1_q_b[7]) # (!inst80))));


--VB1_o_TxHead[7] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[7]
VB1_o_TxHead[7] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~164
HC1L0 = (HC1L0 & ((VB1_o_TxHead[7]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~165
HC1L0 = (LC1_q_b[7] & ((LC1_q_b[7]) # ((!inst154)))) # (!LC1_q_b[7] & (!inst182 & ((LC1_q_b[7]) # (!inst154))));


--VB1_o_TxHead[7] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[7]
VB1_o_TxHead[7] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~166
HC1L0 = (HC1L0 & ((VB1_o_TxHead[7]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~167
HC1L0 = (GC1_q_b[7] & ((GC1_q_b[7]) # ((!B1L0)))) # (!GC1_q_b[7] & (!B1L0 & ((GC1_q_b[7]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~168
HC1L0 = (GC1_q_b[7] & ((GC1_q_b[7]) # ((!B1L0)))) # (!GC1_q_b[7] & (!B1L0 & ((GC1_q_b[7]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~169
HC1L0 = (HC1L0 & (!A1L0 & ((GC1_q_b[7]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~170
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~171
HC1L0 = (XB1_r_TxTail[7] & ((XB1_r_TxTail[7]) # ((!B1_inst58)))) # (!XB1_r_TxTail[7] & (!B1_inst58 & ((XB1_r_TxTail[7]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~172
HC1L0 = (XB1_r_TxTail[7] & ((ZB1_r_RxHead[7]) # ((!B1_inst62)))) # (!XB1_r_TxTail[7] & (!B1_inst58 & ((ZB1_r_RxHead[7]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~173
HC1L0 = (ZB1_r_RxHead[7] & ((ZB1_r_RxHead[7]) # ((!B1_inst62)))) # (!ZB1_r_RxHead[7] & (!B1_inst62 & ((ZB1_r_RxHead[7]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~174
HC1L0 = (HC1L0 & (HC1L0 & HC1L0));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~175
HC1L0 = (ZB1_r_RxHead[7] & ((XB1_r_TxTail[7]) # ((!B1_inst58)))) # (!ZB1_r_RxHead[7] & (!B1_inst62 & ((XB1_r_TxTail[7]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~176
HC1L0 = (XB1_r_TxTail[7] & ((ZB1_r_RxHead[7]) # ((!B1_inst62)))) # (!XB1_r_TxTail[7] & (!B1_inst58 & ((ZB1_r_RxHead[7]) # (!B1_inst62))));


--VB1_o_TxHead[7] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[7]
VB1_o_TxHead[7] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[7] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[7]
RB1_o_CtrlReg[7] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~177
HC1L0 = (VB1_o_TxHead[7] & ((RB1_o_CtrlReg[7]) # ((!CC1L0)))) # (!VB1_o_TxHead[7] & (!BC1L0 & ((RB1_o_CtrlReg[7]) # (!CC1L0))));


--RB1_o_CtrlReg[7] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[7]
RB1_o_CtrlReg[7] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[7] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[7]
RB1_o_CtrlReg[7] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~178
HC1L0 = (RB1_o_CtrlReg[7] & ((RB1_o_CtrlReg[7]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[7] & (!CC1L0 & ((RB1_o_CtrlReg[7]) # (!CC1L0))));


--VB1_o_TxHead[7] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[7]
VB1_o_TxHead[7] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[7] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[7]
RB1_o_CtrlReg[7] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~179
HC1L0 = (VB1_o_TxHead[7] & ((RB1_o_CtrlReg[7]) # ((!CC1L0)))) # (!VB1_o_TxHead[7] & (!BC1L0 & ((RB1_o_CtrlReg[7]) # (!CC1L0))));


--VB1_o_TxHead[7] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[7]
VB1_o_TxHead[7] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[7] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[7]
RB1_o_CtrlReg[7] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~180
HC1L0 = (VB1_o_TxHead[7] & ((RB1_o_CtrlReg[7]) # ((!CC1L0)))) # (!VB1_o_TxHead[7] & (!BC1L0 & ((RB1_o_CtrlReg[7]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~181
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~182
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst12|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst68|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst69|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst69|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst74|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst72|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst71|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[7]~44
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & ((H1_o_PkuLen[4]))) # (!GB1L0 & (H1_o_PkuLen[4]))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[7]~45
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[4]))) # (!GB1L0 & (H1_o_PkuFlag)))) # (!GB1L0 & (((GB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[7]~46
GB1L0 = (GB1L0 & (GB1L0)) # (!GB1L0 & ((GB1L0 & ((GB1L0))) # (!GB1L0 & (H1_o_PkuLen[4]))));


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst70|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[7]~47
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[4]))) # (!GB1L0 & (H1_o_PkuLen[4])))) # (!GB1L0 & (((GB1L0))));


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst23|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst39|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst55|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst56|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[4] is PKU_IN_BLOCK_v2:inst67|o_PkuLen[4]
H1_o_PkuLen[4] = DFFEAS(H1_r_CntkHz[4], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[7]~48
GB1L0 = (GB1L0 & ((GB1L0 & (H1_o_PkuLen[4])) # (!GB1L0 & ((H1_o_PkuLen[4]))))) # (!GB1L0 & (((GB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[7]~49
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[4])) # (!GB1L0 & ((H1_o_PkuLen[4])))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~183
HC1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[4])) # (!GB1L0 & ((GB1L0)))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~184
HC1L0 = (GB1L0 & ((HC1L0 & ((GB1L0))) # (!HC1L0 & (H1_o_PkuLen[4])))) # (!GB1L0 & (((HC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[7]~185
HC1L0 = (HC1L0 & (HC1L0 & ((HC1L0) # (!inst91))));


--WB1L0 is UART_MODULE:inst3|UART_TXTAIL_EN_BLOCK:inst15|Equal0~0
WB1L0 = (A11 & (GB1L0 & (BC1L0 & !A12)));


--HC1L0 is UART_MODULE:inst3|TRI31_1:inst28|lpm_bustri:lpm_bustri_component|dout[8]~0
HC1L0 = (CS3) # ((OE) # ((XB1_r_TxTail[8]) # (!WB1L0)));


--WB1L0 is UART_MODULE:inst6|UART_TXTAIL_EN_BLOCK:inst15|Equal0~0
WB1L0 = (A11 & (A12 & (GB1L0 & BC1L0)));


--HC1L0 is UART_MODULE:inst6|TRI31_1:inst28|lpm_bustri:lpm_bustri_component|dout[8]~0
HC1L0 = (CS3) # ((OE) # ((XB1_r_TxTail[8]) # (!WB1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~186
HC1L0 = (XB1_r_TxTail[8] & ((ZB1_r_RxHead[8]) # ((!B1_inst62)))) # (!XB1_r_TxTail[8] & (!B1_inst58 & ((ZB1_r_RxHead[8]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~187
HC1L0 = (ZB1_r_RxHead[8] & ((ZB1_r_RxHead[8]) # ((!B1_inst62)))) # (!ZB1_r_RxHead[8] & (!B1_inst62 & ((ZB1_r_RxHead[8]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~188
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~189
HC1L0 = (ZB1_r_RxHead[8] & ((XB1_r_TxTail[8]) # ((!B1_inst58)))) # (!ZB1_r_RxHead[8] & (!B1_inst62 & ((XB1_r_TxTail[8]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~190
HC1L0 = (XB1_r_TxTail[8] & ((ZB1_r_RxHead[8]) # ((!B1_inst62)))) # (!XB1_r_TxTail[8] & (!B1_inst58 & ((ZB1_r_RxHead[8]) # (!B1_inst62))));


--VB1_o_TxHead[8] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[8]
VB1_o_TxHead[8] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[8] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[8]
RB1_o_CtrlReg[8] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~191
HC1L0 = (VB1_o_TxHead[8] & ((RB1_o_CtrlReg[8]) # ((!CC1L0)))) # (!VB1_o_TxHead[8] & (!BC1L0 & ((RB1_o_CtrlReg[8]) # (!CC1L0))));


--RB1_o_CtrlReg[8] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[8]
RB1_o_CtrlReg[8] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[8] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[8]
RB1_o_CtrlReg[8] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~192
HC1L0 = (RB1_o_CtrlReg[8] & ((RB1_o_CtrlReg[8]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[8] & (!CC1L0 & ((RB1_o_CtrlReg[8]) # (!CC1L0))));


--VB1_o_TxHead[8] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[8]
VB1_o_TxHead[8] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[8] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[8]
RB1_o_CtrlReg[8] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~193
HC1L0 = (VB1_o_TxHead[8] & ((RB1_o_CtrlReg[8]) # ((!CC1L0)))) # (!VB1_o_TxHead[8] & (!BC1L0 & ((RB1_o_CtrlReg[8]) # (!CC1L0))));


--VB1_o_TxHead[8] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[8]
VB1_o_TxHead[8] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[8] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[8]
RB1_o_CtrlReg[8] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~194
HC1L0 = (VB1_o_TxHead[8] & ((RB1_o_CtrlReg[8]) # ((!CC1L0)))) # (!VB1_o_TxHead[8] & (!BC1L0 & ((RB1_o_CtrlReg[8]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~195
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~196
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--VB1_o_TxHead[8] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[8]
VB1_o_TxHead[8] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is UART_MODULE:inst6|TRI31_1:inst34|lpm_bustri:lpm_bustri_component|dout[8]~2
HC1L0 = (VB1_o_TxHead[8]) # (((!BC1L0) # (!GB1L0)) # (!BC1L0));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~197
HC1L0 = (LC1_q_b[8] & ((LC1_q_b[8]) # ((!inst80)))) # (!LC1_q_b[8] & (!inst146 & ((LC1_q_b[8]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~198
HC1L0 = (LC1_q_b[8] & ((LC1_q_b[8]) # ((!inst154)))) # (!LC1_q_b[8] & (!inst182 & ((LC1_q_b[8]) # (!inst154))));


--VB1_o_TxHead[8] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[8]
VB1_o_TxHead[8] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~199
HC1L0 = (HC1L0 & ((VB1_o_TxHead[8]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~200
HC1L0 = (GC1_q_b[8] & ((GC1_q_b[8]) # ((!B1L0)))) # (!GC1_q_b[8] & (!B1L0 & ((GC1_q_b[8]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~201
HC1L0 = (GC1_q_b[8] & ((GC1_q_b[8]) # ((!B1L0)))) # (!GC1_q_b[8] & (!B1L0 & ((GC1_q_b[8]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~202
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[8]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~203
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst23|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst12|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst67|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst39|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst55|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[8]~50
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[5])) # (!GB1L0 & ((H1_o_PkuLen[5])))));


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst56|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[8]~51
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[5]))) # (!GB1L0 & (H1_o_PkuLen[5])))) # (!GB1L0 & (((GB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[8]~52
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[5])) # (!GB1L0 & ((GB1L0)))));


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst70|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst74|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst72|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst71|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[8]~53
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & ((H1_o_PkuLen[5]))) # (!GB1L0 & (H1_o_PkuLen[5]))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[8]~54
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[5]))) # (!GB1L0 & (H1_o_PkuFlag)))) # (!GB1L0 & (((GB1L0))));


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst68|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst69|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[8]~55
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[5])) # (!GB1L0 & ((H1_o_PkuLen[5])))));


--H1_o_PkuLen[5] is PKU_IN_BLOCK_v2:inst70|o_PkuLen[5]
H1_o_PkuLen[5] = DFFEAS(H1_r_CntkHz[5], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[8]~56
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[5]))) # (!GB1L0 & (GB1L0)))) # (!GB1L0 & (((GB1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~204
HC1L0 = (LC1_q_b[9] & ((LC1_q_b[9]) # ((!inst80)))) # (!LC1_q_b[9] & (!inst146 & ((LC1_q_b[9]) # (!inst80))));


--VB1_o_TxHead[9] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[9]
VB1_o_TxHead[9] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~205
HC1L0 = (HC1L0 & ((VB1_o_TxHead[9]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~206
HC1L0 = (LC1_q_b[9] & ((LC1_q_b[9]) # ((!inst154)))) # (!LC1_q_b[9] & (!inst182 & ((LC1_q_b[9]) # (!inst154))));


--VB1_o_TxHead[9] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[9]
VB1_o_TxHead[9] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~207
HC1L0 = (HC1L0 & ((VB1_o_TxHead[9]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~208
HC1L0 = (GC1_q_b[9] & ((GC1_q_b[9]) # ((!B1L0)))) # (!GC1_q_b[9] & (!B1L0 & ((GC1_q_b[9]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~209
HC1L0 = (GC1_q_b[9] & ((GC1_q_b[9]) # ((!B1L0)))) # (!GC1_q_b[9] & (!B1L0 & ((GC1_q_b[9]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~210
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~211
HC1L0 = (XB1_r_TxTail[9] & ((XB1_r_TxTail[9]) # ((!B1_inst58)))) # (!XB1_r_TxTail[9] & (!B1_inst58 & ((XB1_r_TxTail[9]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~212
HC1L0 = (XB1_r_TxTail[9] & ((ZB1_r_RxHead[9]) # ((!B1_inst62)))) # (!XB1_r_TxTail[9] & (!B1_inst58 & ((ZB1_r_RxHead[9]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~213
HC1L0 = (ZB1_r_RxHead[9] & ((ZB1_r_RxHead[9]) # ((!B1_inst62)))) # (!ZB1_r_RxHead[9] & (!B1_inst62 & ((ZB1_r_RxHead[9]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~214
HC1L0 = (HC1L0 & (HC1L0 & HC1L0));


--VB1_o_TxHead[9] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[9]
VB1_o_TxHead[9] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[9] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[9]
RB1_o_CtrlReg[9] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~215
HC1L0 = (VB1_o_TxHead[9] & ((RB1_o_CtrlReg[9]) # ((!CC1L0)))) # (!VB1_o_TxHead[9] & (!BC1L0 & ((RB1_o_CtrlReg[9]) # (!CC1L0))));


--RB1_o_CtrlReg[9] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[9]
RB1_o_CtrlReg[9] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[9] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[9]
RB1_o_CtrlReg[9] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~216
HC1L0 = (RB1_o_CtrlReg[9] & ((RB1_o_CtrlReg[9]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[9] & (!CC1L0 & ((RB1_o_CtrlReg[9]) # (!CC1L0))));


--VB1_o_TxHead[9] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[9]
VB1_o_TxHead[9] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[9] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[9]
RB1_o_CtrlReg[9] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~217
HC1L0 = (VB1_o_TxHead[9] & ((RB1_o_CtrlReg[9]) # ((!CC1L0)))) # (!VB1_o_TxHead[9] & (!BC1L0 & ((RB1_o_CtrlReg[9]) # (!CC1L0))));


--VB1_o_TxHead[9] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[9]
VB1_o_TxHead[9] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[9] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[9]
RB1_o_CtrlReg[9] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~218
HC1L0 = (VB1_o_TxHead[9] & ((RB1_o_CtrlReg[9]) # ((!CC1L0)))) # (!VB1_o_TxHead[9] & (!BC1L0 & ((RB1_o_CtrlReg[9]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~219
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~220
HC1L0 = (ZB1_r_RxHead[9] & ((XB1_r_TxTail[9]) # ((!B1_inst58)))) # (!ZB1_r_RxHead[9] & (!B1_inst62 & ((XB1_r_TxTail[9]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~221
HC1L0 = (XB1_r_TxTail[9] & ((ZB1_r_RxHead[9]) # ((!B1_inst62)))) # (!XB1_r_TxTail[9] & (!B1_inst58 & ((ZB1_r_RxHead[9]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~222
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[9]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~223
HC1L0 = (HC1L0 & (HC1L0 & HC1L0));


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst68|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst69|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst71|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst74|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst72|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst71|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[9]~57
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & ((H1_o_PkuLen[6]))) # (!GB1L0 & (H1_o_PkuLen[6]))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[9]~58
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[6]))) # (!GB1L0 & (H1_o_PkuFlag)))) # (!GB1L0 & (((GB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[9]~59
GB1L0 = (GB1L0 & (GB1L0)) # (!GB1L0 & ((GB1L0 & ((GB1L0))) # (!GB1L0 & (H1_o_PkuLen[6]))));


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst70|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[9]~60
GB1L0 = (GB1L0 & ((GB1L0 & ((H1_o_PkuLen[6]))) # (!GB1L0 & (H1_o_PkuLen[6])))) # (!GB1L0 & (((GB1L0))));


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst12|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst23|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst39|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst55|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst56|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--H1_o_PkuLen[6] is PKU_IN_BLOCK_v2:inst67|o_PkuLen[6]
H1_o_PkuLen[6] = DFFEAS(H1_r_CntkHz[6], !CLK_25MHz2,  ,  , H1L0,  ,  ,  ,  );


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[9]~61
GB1L0 = (GB1L0 & ((GB1L0 & (H1_o_PkuLen[6])) # (!GB1L0 & ((H1_o_PkuLen[6]))))) # (!GB1L0 & (((GB1L0))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[9]~62
GB1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[6])) # (!GB1L0 & ((H1_o_PkuLen[6])))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~224
HC1L0 = (GB1L0 & (((GB1L0)))) # (!GB1L0 & ((GB1L0 & (H1_o_PkuLen[6])) # (!GB1L0 & ((GB1L0)))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~225
HC1L0 = (GB1L0 & ((HC1L0 & (GB1L0)) # (!HC1L0 & ((H1_o_PkuLen[6]))))) # (!GB1L0 & (((HC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[9]~226
HC1L0 = (HC1L0 & (HC1L0 & ((HC1L0) # (!inst91))));


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst72|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[10]~3
HC1L0 = ((GB1L0 & (GB1L0 & H1_o_PkuFlag))) # (!inst91);


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~227
HC1L0 = (XB1_r_TxTail[10] & ((XB1_r_TxTail[10]) # ((!B1_inst58)))) # (!XB1_r_TxTail[10] & (!B1_inst58 & ((XB1_r_TxTail[10]) # (!B1_inst58))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~228
HC1L0 = (XB1_r_TxTail[10] & ((ZB1_r_RxHead[10]) # ((!B1_inst62)))) # (!XB1_r_TxTail[10] & (!B1_inst58 & ((ZB1_r_RxHead[10]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~229
HC1L0 = (ZB1_r_RxHead[10] & ((ZB1_r_RxHead[10]) # ((!B1_inst62)))) # (!ZB1_r_RxHead[10] & (!B1_inst62 & ((ZB1_r_RxHead[10]) # (!B1_inst62))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~230
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~231
HC1L0 = (ZB1_r_RxHead[10] & ((XB1_r_TxTail[10]) # ((!B1_inst58)))) # (!ZB1_r_RxHead[10] & (!B1_inst62 & ((XB1_r_TxTail[10]) # (!B1_inst58))));


--HC1L0 is UART_MODULE:inst7|TRI31_1:inst26|lpm_bustri:lpm_bustri_component|dout[10]~0
HC1L0 = (inst44) # ((ZB1_r_RxHead[10]) # ((!BC1L0) # (!GB1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~232
HC1L0 = (HC1L0 & (HC1L0 & ((XB1_r_TxTail[10]) # (!B1_inst58))));


--VB1_o_TxHead[10] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[10]
VB1_o_TxHead[10] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[10] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[10]
RB1_o_CtrlReg[10] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~233
HC1L0 = (VB1_o_TxHead[10] & ((RB1_o_CtrlReg[10]) # ((!CC1L0)))) # (!VB1_o_TxHead[10] & (!BC1L0 & ((RB1_o_CtrlReg[10]) # (!CC1L0))));


--RB1_o_CtrlReg[10] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[10]
RB1_o_CtrlReg[10] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[10] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[10]
RB1_o_CtrlReg[10] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~234
HC1L0 = (RB1_o_CtrlReg[10] & ((RB1_o_CtrlReg[10]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[10] & (!CC1L0 & ((RB1_o_CtrlReg[10]) # (!CC1L0))));


--VB1_o_TxHead[10] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[10]
VB1_o_TxHead[10] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[10] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[10]
RB1_o_CtrlReg[10] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~235
HC1L0 = (VB1_o_TxHead[10] & ((RB1_o_CtrlReg[10]) # ((!CC1L0)))) # (!VB1_o_TxHead[10] & (!BC1L0 & ((RB1_o_CtrlReg[10]) # (!CC1L0))));


--VB1_o_TxHead[10] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[10]
VB1_o_TxHead[10] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[10] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[10]
RB1_o_CtrlReg[10] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~236
HC1L0 = (VB1_o_TxHead[10] & ((RB1_o_CtrlReg[10]) # ((!CC1L0)))) # (!VB1_o_TxHead[10] & (!BC1L0 & ((RB1_o_CtrlReg[10]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~237
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~238
HC1L0 = (LC1_q_b[10] & ((LC1_q_b[10]) # ((!inst80)))) # (!LC1_q_b[10] & (!inst146 & ((LC1_q_b[10]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~239
HC1L0 = (LC1_q_b[10] & ((LC1_q_b[10]) # ((!inst154)))) # (!LC1_q_b[10] & (!inst182 & ((LC1_q_b[10]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~240
HC1L0 = (GC1_q_b[10] & ((GC1_q_b[10]) # ((!B1L0)))) # (!GC1_q_b[10] & (!B1L0 & ((GC1_q_b[10]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~241
HC1L0 = (GC1_q_b[10] & ((GC1_q_b[10]) # ((!B1L0)))) # (!GC1_q_b[10] & (!B1L0 & ((GC1_q_b[10]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~242
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[10]) # (!B1L0))));


--VB1_o_TxHead[10] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[10]
VB1_o_TxHead[10] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~243
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[10]) # (!BC1L0))));


--VB1_o_TxHead[10] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[10]
VB1_o_TxHead[10] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~244
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[10]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[10]~245
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~246
HC1L0 = (LC1_q_b[11] & ((LC1_q_b[11]) # ((!inst154)))) # (!LC1_q_b[11] & (!inst182 & ((LC1_q_b[11]) # (!inst154))));


--VB1_o_TxHead[11] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[11]
VB1_o_TxHead[11] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~247
HC1L0 = (HC1L0 & ((VB1_o_TxHead[11]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~248
HC1L0 = (GC1_q_b[11] & ((GC1_q_b[11]) # ((!B1L0)))) # (!GC1_q_b[11] & (!B1L0 & ((GC1_q_b[11]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~249
HC1L0 = (GC1_q_b[11] & ((GC1_q_b[11]) # ((!B1L0)))) # (!GC1_q_b[11] & (!B1L0 & ((GC1_q_b[11]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~250
HC1L0 = (HC1L0 & (!A1L0 & ((GC1_q_b[11]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~251
HC1L0 = (HC1L0 & (HC1L0 & (!B1_inst62 & !B1_inst58)));


--H1_o_PkuFlag is PKU_IN_BLOCK_v2:inst74|o_PkuFlag
H1_o_PkuFlag = DFFEAS(H1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[11]~4
HC1L0 = ((GB1L0 & (GB1L0 & H1_o_PkuFlag))) # (!inst91);


--RB1_o_CtrlReg[11] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[11]
RB1_o_CtrlReg[11] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[11] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[11]
RB1_o_CtrlReg[11] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~252
HC1L0 = (RB1_o_CtrlReg[11] & ((RB1_o_CtrlReg[11]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[11] & (!CC1L0 & ((RB1_o_CtrlReg[11]) # (!CC1L0))));


--VB1_o_TxHead[11] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[11]
VB1_o_TxHead[11] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[11] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[11]
RB1_o_CtrlReg[11] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~253
HC1L0 = (VB1_o_TxHead[11] & ((RB1_o_CtrlReg[11]) # ((!CC1L0)))) # (!VB1_o_TxHead[11] & (!BC1L0 & ((RB1_o_CtrlReg[11]) # (!CC1L0))));


--VB1_o_TxHead[11] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[11]
VB1_o_TxHead[11] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[11] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[11]
RB1_o_CtrlReg[11] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~254
HC1L0 = (VB1_o_TxHead[11] & ((RB1_o_CtrlReg[11]) # ((!CC1L0)))) # (!VB1_o_TxHead[11] & (!BC1L0 & ((RB1_o_CtrlReg[11]) # (!CC1L0))));


--VB1_o_TxHead[11] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[11]
VB1_o_TxHead[11] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[11] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[11]
RB1_o_CtrlReg[11] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~255
HC1L0 = (VB1_o_TxHead[11] & ((RB1_o_CtrlReg[11]) # ((!CC1L0)))) # (!VB1_o_TxHead[11] & (!BC1L0 & ((RB1_o_CtrlReg[11]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~256
HC1L0 = (LC1_q_b[11] & ((LC1_q_b[11]) # ((!inst80)))) # (!LC1_q_b[11] & (!inst146 & ((LC1_q_b[11]) # (!inst80))));


--VB1_o_TxHead[11] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[11]
VB1_o_TxHead[11] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~257
HC1L0 = (HC1L0 & ((VB1_o_TxHead[11]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~258
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~259
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~260
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--VB1_o_TxHead[12] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[12]
VB1_o_TxHead[12] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[12] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[12]
RB1_o_CtrlReg[12] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~261
HC1L0 = (VB1_o_TxHead[12] & ((RB1_o_CtrlReg[12]) # ((!CC1L0)))) # (!VB1_o_TxHead[12] & (!BC1L0 & ((RB1_o_CtrlReg[12]) # (!CC1L0))));


--RB1_o_CtrlReg[12] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[12]
RB1_o_CtrlReg[12] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[12] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[12]
RB1_o_CtrlReg[12] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~262
HC1L0 = (RB1_o_CtrlReg[12] & ((RB1_o_CtrlReg[12]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[12] & (!CC1L0 & ((RB1_o_CtrlReg[12]) # (!CC1L0))));


--VB1_o_TxHead[12] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[12]
VB1_o_TxHead[12] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[12] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[12]
RB1_o_CtrlReg[12] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~263
HC1L0 = (VB1_o_TxHead[12] & ((RB1_o_CtrlReg[12]) # ((!CC1L0)))) # (!VB1_o_TxHead[12] & (!BC1L0 & ((RB1_o_CtrlReg[12]) # (!CC1L0))));


--VB1_o_TxHead[12] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[12]
VB1_o_TxHead[12] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[12] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[12]
RB1_o_CtrlReg[12] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~264
HC1L0 = (VB1_o_TxHead[12] & ((RB1_o_CtrlReg[12]) # ((!CC1L0)))) # (!VB1_o_TxHead[12] & (!BC1L0 & ((RB1_o_CtrlReg[12]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~265
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~266
HC1L0 = (LC1_q_b[12] & ((LC1_q_b[12]) # ((!inst80)))) # (!LC1_q_b[12] & (!inst146 & ((LC1_q_b[12]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~267
HC1L0 = (LC1_q_b[12] & ((LC1_q_b[12]) # ((!inst154)))) # (!LC1_q_b[12] & (!inst182 & ((LC1_q_b[12]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~268
HC1L0 = (GC1_q_b[12] & ((GC1_q_b[12]) # ((!B1L0)))) # (!GC1_q_b[12] & (!B1L0 & ((GC1_q_b[12]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~269
HC1L0 = (GC1_q_b[12] & ((GC1_q_b[12]) # ((!B1L0)))) # (!GC1_q_b[12] & (!B1L0 & ((GC1_q_b[12]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~270
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[12]) # (!B1L0))));


--VB1_o_TxHead[12] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[12]
VB1_o_TxHead[12] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~271
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[12]) # (!BC1L0))));


--VB1_o_TxHead[12] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[12]
VB1_o_TxHead[12] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~272
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[12]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[12]~273
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[13] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[13]
VB1_o_TxHead[13] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[13] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[13]
RB1_o_CtrlReg[13] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~274
HC1L0 = (VB1_o_TxHead[13] & ((RB1_o_CtrlReg[13]) # ((!CC1L0)))) # (!VB1_o_TxHead[13] & (!BC1L0 & ((RB1_o_CtrlReg[13]) # (!CC1L0))));


--RB1_o_CtrlReg[13] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[13]
RB1_o_CtrlReg[13] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[13] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[13]
RB1_o_CtrlReg[13] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~275
HC1L0 = (RB1_o_CtrlReg[13] & ((RB1_o_CtrlReg[13]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[13] & (!CC1L0 & ((RB1_o_CtrlReg[13]) # (!CC1L0))));


--VB1_o_TxHead[13] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[13]
VB1_o_TxHead[13] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[13] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[13]
RB1_o_CtrlReg[13] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~276
HC1L0 = (VB1_o_TxHead[13] & ((RB1_o_CtrlReg[13]) # ((!CC1L0)))) # (!VB1_o_TxHead[13] & (!BC1L0 & ((RB1_o_CtrlReg[13]) # (!CC1L0))));


--VB1_o_TxHead[13] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[13]
VB1_o_TxHead[13] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[13] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[13]
RB1_o_CtrlReg[13] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~277
HC1L0 = (VB1_o_TxHead[13] & ((RB1_o_CtrlReg[13]) # ((!CC1L0)))) # (!VB1_o_TxHead[13] & (!BC1L0 & ((RB1_o_CtrlReg[13]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~278
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~279
HC1L0 = (LC1_q_b[13] & ((LC1_q_b[13]) # ((!inst80)))) # (!LC1_q_b[13] & (!inst146 & ((LC1_q_b[13]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~280
HC1L0 = (LC1_q_b[13] & ((LC1_q_b[13]) # ((!inst154)))) # (!LC1_q_b[13] & (!inst182 & ((LC1_q_b[13]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~281
HC1L0 = (GC1_q_b[13] & ((GC1_q_b[13]) # ((!B1L0)))) # (!GC1_q_b[13] & (!B1L0 & ((GC1_q_b[13]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~282
HC1L0 = (GC1_q_b[13] & ((GC1_q_b[13]) # ((!B1L0)))) # (!GC1_q_b[13] & (!B1L0 & ((GC1_q_b[13]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~283
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[13]) # (!B1L0))));


--VB1_o_TxHead[13] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[13]
VB1_o_TxHead[13] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~284
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[13]) # (!BC1L0))));


--VB1_o_TxHead[13] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[13]
VB1_o_TxHead[13] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~285
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[13]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[13]~286
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[14] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[14]
VB1_o_TxHead[14] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[14] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[14]
RB1_o_CtrlReg[14] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~5
HC1L0 = (VB1_o_TxHead[14] & ((RB1_o_CtrlReg[14]) # ((!CC1L0)))) # (!VB1_o_TxHead[14] & (!BC1L0 & ((RB1_o_CtrlReg[14]) # (!CC1L0))));


--RB1_o_CtrlReg[14] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[14]
RB1_o_CtrlReg[14] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[14] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[14]
RB1_o_CtrlReg[14] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~6
HC1L0 = (RB1_o_CtrlReg[14] & ((RB1_o_CtrlReg[14]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[14] & (!CC1L0 & ((RB1_o_CtrlReg[14]) # (!CC1L0))));


--VB1_o_TxHead[14] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[14]
VB1_o_TxHead[14] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[14] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[14]
RB1_o_CtrlReg[14] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~7
HC1L0 = (VB1_o_TxHead[14] & ((RB1_o_CtrlReg[14]) # ((!CC1L0)))) # (!VB1_o_TxHead[14] & (!BC1L0 & ((RB1_o_CtrlReg[14]) # (!CC1L0))));


--VB1_o_TxHead[14] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[14]
VB1_o_TxHead[14] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[14] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[14]
RB1_o_CtrlReg[14] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~8
HC1L0 = (VB1_o_TxHead[14] & ((RB1_o_CtrlReg[14]) # ((!CC1L0)))) # (!VB1_o_TxHead[14] & (!BC1L0 & ((RB1_o_CtrlReg[14]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~9
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~10
HC1L0 = (LC1_q_b[14] & ((LC1_q_b[14]) # ((!inst80)))) # (!LC1_q_b[14] & (!inst146 & ((LC1_q_b[14]) # (!inst80))));


--VB1_o_TxHead[14] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[14]
VB1_o_TxHead[14] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~11
HC1L0 = (HC1L0 & ((VB1_o_TxHead[14]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~12
HC1L0 = (LC1_q_b[14] & ((LC1_q_b[14]) # ((!inst154)))) # (!LC1_q_b[14] & (!inst182 & ((LC1_q_b[14]) # (!inst154))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~13
HC1L0 = (GC1_q_b[14] & ((GC1_q_b[14]) # ((!B1L0)))) # (!GC1_q_b[14] & (!B1L0 & ((GC1_q_b[14]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~14
HC1L0 = (GC1_q_b[14] & ((GC1_q_b[14]) # ((!B1L0)))) # (!GC1_q_b[14] & (!B1L0 & ((GC1_q_b[14]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~15
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[14]) # (!B1L0))));


--VB1_o_TxHead[14] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[14]
VB1_o_TxHead[14] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~16
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[14]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[14]~17
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--VB1_o_TxHead[15] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[15]
VB1_o_TxHead[15] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[15] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[15]
RB1_o_CtrlReg[15] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~287
HC1L0 = (VB1_o_TxHead[15] & ((RB1_o_CtrlReg[15]) # ((!CC1L0)))) # (!VB1_o_TxHead[15] & (!BC1L0 & ((RB1_o_CtrlReg[15]) # (!CC1L0))));


--RB1_o_CtrlReg[15] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[15]
RB1_o_CtrlReg[15] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[15] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[15]
RB1_o_CtrlReg[15] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~288
HC1L0 = (RB1_o_CtrlReg[15] & ((RB1_o_CtrlReg[15]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[15] & (!CC1L0 & ((RB1_o_CtrlReg[15]) # (!CC1L0))));


--VB1_o_TxHead[15] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[15]
VB1_o_TxHead[15] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[15] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[15]
RB1_o_CtrlReg[15] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~289
HC1L0 = (VB1_o_TxHead[15] & ((RB1_o_CtrlReg[15]) # ((!CC1L0)))) # (!VB1_o_TxHead[15] & (!BC1L0 & ((RB1_o_CtrlReg[15]) # (!CC1L0))));


--VB1_o_TxHead[15] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[15]
VB1_o_TxHead[15] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[15] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[15]
RB1_o_CtrlReg[15] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~290
HC1L0 = (VB1_o_TxHead[15] & ((RB1_o_CtrlReg[15]) # ((!CC1L0)))) # (!VB1_o_TxHead[15] & (!BC1L0 & ((RB1_o_CtrlReg[15]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~291
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~292
HC1L0 = (LC1_q_b[15] & ((LC1_q_b[15]) # ((!inst80)))) # (!LC1_q_b[15] & (!inst146 & ((LC1_q_b[15]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~293
HC1L0 = (LC1_q_b[15] & ((LC1_q_b[15]) # ((!inst154)))) # (!LC1_q_b[15] & (!inst182 & ((LC1_q_b[15]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~294
HC1L0 = (GC1_q_b[15] & ((GC1_q_b[15]) # ((!B1L0)))) # (!GC1_q_b[15] & (!B1L0 & ((GC1_q_b[15]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~295
HC1L0 = (GC1_q_b[15] & ((GC1_q_b[15]) # ((!B1L0)))) # (!GC1_q_b[15] & (!B1L0 & ((GC1_q_b[15]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~296
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[15]) # (!B1L0))));


--VB1_o_TxHead[15] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[15]
VB1_o_TxHead[15] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~297
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[15]) # (!BC1L0))));


--VB1_o_TxHead[15] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[15]
VB1_o_TxHead[15] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~298
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[15]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[15]~299
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[16] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[16]
VB1_o_TxHead[16] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[16] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[16]
RB1_o_CtrlReg[16] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~300
HC1L0 = (VB1_o_TxHead[16] & ((RB1_o_CtrlReg[16]) # ((!CC1L0)))) # (!VB1_o_TxHead[16] & (!BC1L0 & ((RB1_o_CtrlReg[16]) # (!CC1L0))));


--RB1_o_CtrlReg[16] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[16]
RB1_o_CtrlReg[16] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[16] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[16]
RB1_o_CtrlReg[16] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~301
HC1L0 = (RB1_o_CtrlReg[16] & ((RB1_o_CtrlReg[16]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[16] & (!CC1L0 & ((RB1_o_CtrlReg[16]) # (!CC1L0))));


--VB1_o_TxHead[16] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[16]
VB1_o_TxHead[16] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[16] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[16]
RB1_o_CtrlReg[16] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~302
HC1L0 = (VB1_o_TxHead[16] & ((RB1_o_CtrlReg[16]) # ((!CC1L0)))) # (!VB1_o_TxHead[16] & (!BC1L0 & ((RB1_o_CtrlReg[16]) # (!CC1L0))));


--VB1_o_TxHead[16] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[16]
VB1_o_TxHead[16] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[16] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[16]
RB1_o_CtrlReg[16] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~303
HC1L0 = (VB1_o_TxHead[16] & ((RB1_o_CtrlReg[16]) # ((!CC1L0)))) # (!VB1_o_TxHead[16] & (!BC1L0 & ((RB1_o_CtrlReg[16]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~304
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~305
HC1L0 = (LC1_q_b[16] & ((LC1_q_b[16]) # ((!inst80)))) # (!LC1_q_b[16] & (!inst146 & ((LC1_q_b[16]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~306
HC1L0 = (LC1_q_b[16] & ((LC1_q_b[16]) # ((!inst154)))) # (!LC1_q_b[16] & (!inst182 & ((LC1_q_b[16]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~307
HC1L0 = (GC1_q_b[16] & ((GC1_q_b[16]) # ((!B1L0)))) # (!GC1_q_b[16] & (!B1L0 & ((GC1_q_b[16]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~308
HC1L0 = (GC1_q_b[16] & ((GC1_q_b[16]) # ((!B1L0)))) # (!GC1_q_b[16] & (!B1L0 & ((GC1_q_b[16]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~309
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[16]) # (!B1L0))));


--VB1_o_TxHead[16] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[16]
VB1_o_TxHead[16] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~310
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[16]) # (!BC1L0))));


--VB1_o_TxHead[16] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[16]
VB1_o_TxHead[16] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~311
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[16]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[16]~312
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[17] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[17]
VB1_o_TxHead[17] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[17] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[17]
RB1_o_CtrlReg[17] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~313
HC1L0 = (VB1_o_TxHead[17] & ((RB1_o_CtrlReg[17]) # ((!CC1L0)))) # (!VB1_o_TxHead[17] & (!BC1L0 & ((RB1_o_CtrlReg[17]) # (!CC1L0))));


--RB1_o_CtrlReg[17] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[17]
RB1_o_CtrlReg[17] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[17] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[17]
RB1_o_CtrlReg[17] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~314
HC1L0 = (RB1_o_CtrlReg[17] & ((RB1_o_CtrlReg[17]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[17] & (!CC1L0 & ((RB1_o_CtrlReg[17]) # (!CC1L0))));


--VB1_o_TxHead[17] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[17]
VB1_o_TxHead[17] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[17] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[17]
RB1_o_CtrlReg[17] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~315
HC1L0 = (VB1_o_TxHead[17] & ((RB1_o_CtrlReg[17]) # ((!CC1L0)))) # (!VB1_o_TxHead[17] & (!BC1L0 & ((RB1_o_CtrlReg[17]) # (!CC1L0))));


--VB1_o_TxHead[17] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[17]
VB1_o_TxHead[17] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[17] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[17]
RB1_o_CtrlReg[17] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~316
HC1L0 = (VB1_o_TxHead[17] & ((RB1_o_CtrlReg[17]) # ((!CC1L0)))) # (!VB1_o_TxHead[17] & (!BC1L0 & ((RB1_o_CtrlReg[17]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~317
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~318
HC1L0 = (LC1_q_b[17] & ((LC1_q_b[17]) # ((!inst80)))) # (!LC1_q_b[17] & (!inst146 & ((LC1_q_b[17]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~319
HC1L0 = (LC1_q_b[17] & ((LC1_q_b[17]) # ((!inst154)))) # (!LC1_q_b[17] & (!inst182 & ((LC1_q_b[17]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~320
HC1L0 = (GC1_q_b[17] & ((GC1_q_b[17]) # ((!B1L0)))) # (!GC1_q_b[17] & (!B1L0 & ((GC1_q_b[17]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~321
HC1L0 = (GC1_q_b[17] & ((GC1_q_b[17]) # ((!B1L0)))) # (!GC1_q_b[17] & (!B1L0 & ((GC1_q_b[17]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~322
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[17]) # (!B1L0))));


--VB1_o_TxHead[17] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[17]
VB1_o_TxHead[17] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~323
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[17]) # (!BC1L0))));


--VB1_o_TxHead[17] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[17]
VB1_o_TxHead[17] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~324
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[17]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[17]~325
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[18] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[18]
VB1_o_TxHead[18] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[18] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[18]
RB1_o_CtrlReg[18] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~326
HC1L0 = (VB1_o_TxHead[18] & ((RB1_o_CtrlReg[18]) # ((!CC1L0)))) # (!VB1_o_TxHead[18] & (!BC1L0 & ((RB1_o_CtrlReg[18]) # (!CC1L0))));


--RB1_o_CtrlReg[18] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[18]
RB1_o_CtrlReg[18] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[18] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[18]
RB1_o_CtrlReg[18] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~327
HC1L0 = (RB1_o_CtrlReg[18] & ((RB1_o_CtrlReg[18]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[18] & (!CC1L0 & ((RB1_o_CtrlReg[18]) # (!CC1L0))));


--VB1_o_TxHead[18] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[18]
VB1_o_TxHead[18] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[18] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[18]
RB1_o_CtrlReg[18] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~328
HC1L0 = (VB1_o_TxHead[18] & ((RB1_o_CtrlReg[18]) # ((!CC1L0)))) # (!VB1_o_TxHead[18] & (!BC1L0 & ((RB1_o_CtrlReg[18]) # (!CC1L0))));


--VB1_o_TxHead[18] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[18]
VB1_o_TxHead[18] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[18] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[18]
RB1_o_CtrlReg[18] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~329
HC1L0 = (VB1_o_TxHead[18] & ((RB1_o_CtrlReg[18]) # ((!CC1L0)))) # (!VB1_o_TxHead[18] & (!BC1L0 & ((RB1_o_CtrlReg[18]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~330
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~331
HC1L0 = (LC1_q_b[18] & ((LC1_q_b[18]) # ((!inst80)))) # (!LC1_q_b[18] & (!inst146 & ((LC1_q_b[18]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~332
HC1L0 = (LC1_q_b[18] & ((LC1_q_b[18]) # ((!inst154)))) # (!LC1_q_b[18] & (!inst182 & ((LC1_q_b[18]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~333
HC1L0 = (GC1_q_b[18] & ((GC1_q_b[18]) # ((!B1L0)))) # (!GC1_q_b[18] & (!B1L0 & ((GC1_q_b[18]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~334
HC1L0 = (GC1_q_b[18] & ((GC1_q_b[18]) # ((!B1L0)))) # (!GC1_q_b[18] & (!B1L0 & ((GC1_q_b[18]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~335
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[18]) # (!B1L0))));


--VB1_o_TxHead[18] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[18]
VB1_o_TxHead[18] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~336
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[18]) # (!BC1L0))));


--VB1_o_TxHead[18] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[18]
VB1_o_TxHead[18] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~337
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[18]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[18]~338
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[19] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[19]
VB1_o_TxHead[19] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[19] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[19]
RB1_o_CtrlReg[19] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~339
HC1L0 = (VB1_o_TxHead[19] & ((RB1_o_CtrlReg[19]) # ((!CC1L0)))) # (!VB1_o_TxHead[19] & (!BC1L0 & ((RB1_o_CtrlReg[19]) # (!CC1L0))));


--RB1_o_CtrlReg[19] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[19]
RB1_o_CtrlReg[19] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[19] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[19]
RB1_o_CtrlReg[19] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~340
HC1L0 = (RB1_o_CtrlReg[19] & ((RB1_o_CtrlReg[19]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[19] & (!CC1L0 & ((RB1_o_CtrlReg[19]) # (!CC1L0))));


--VB1_o_TxHead[19] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[19]
VB1_o_TxHead[19] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[19] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[19]
RB1_o_CtrlReg[19] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~341
HC1L0 = (VB1_o_TxHead[19] & ((RB1_o_CtrlReg[19]) # ((!CC1L0)))) # (!VB1_o_TxHead[19] & (!BC1L0 & ((RB1_o_CtrlReg[19]) # (!CC1L0))));


--VB1_o_TxHead[19] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[19]
VB1_o_TxHead[19] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[19] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[19]
RB1_o_CtrlReg[19] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~342
HC1L0 = (VB1_o_TxHead[19] & ((RB1_o_CtrlReg[19]) # ((!CC1L0)))) # (!VB1_o_TxHead[19] & (!BC1L0 & ((RB1_o_CtrlReg[19]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~343
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~344
HC1L0 = (LC1_q_b[19] & ((LC1_q_b[19]) # ((!inst80)))) # (!LC1_q_b[19] & (!inst146 & ((LC1_q_b[19]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~345
HC1L0 = (LC1_q_b[19] & ((LC1_q_b[19]) # ((!inst154)))) # (!LC1_q_b[19] & (!inst182 & ((LC1_q_b[19]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~346
HC1L0 = (GC1_q_b[19] & ((GC1_q_b[19]) # ((!B1L0)))) # (!GC1_q_b[19] & (!B1L0 & ((GC1_q_b[19]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~347
HC1L0 = (GC1_q_b[19] & ((GC1_q_b[19]) # ((!B1L0)))) # (!GC1_q_b[19] & (!B1L0 & ((GC1_q_b[19]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~348
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[19]) # (!B1L0))));


--VB1_o_TxHead[19] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[19]
VB1_o_TxHead[19] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~349
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[19]) # (!BC1L0))));


--VB1_o_TxHead[19] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[19]
VB1_o_TxHead[19] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~350
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[19]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[19]~351
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[20] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[20]
VB1_o_TxHead[20] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[20] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[20]
RB1_o_CtrlReg[20] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~18
HC1L0 = (VB1_o_TxHead[20] & ((RB1_o_CtrlReg[20]) # ((!CC1L0)))) # (!VB1_o_TxHead[20] & (!BC1L0 & ((RB1_o_CtrlReg[20]) # (!CC1L0))));


--RB1_o_CtrlReg[20] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[20]
RB1_o_CtrlReg[20] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[20] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[20]
RB1_o_CtrlReg[20] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~19
HC1L0 = (RB1_o_CtrlReg[20] & ((RB1_o_CtrlReg[20]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[20] & (!CC1L0 & ((RB1_o_CtrlReg[20]) # (!CC1L0))));


--VB1_o_TxHead[20] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[20]
VB1_o_TxHead[20] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[20] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[20]
RB1_o_CtrlReg[20] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~20
HC1L0 = (VB1_o_TxHead[20] & ((RB1_o_CtrlReg[20]) # ((!CC1L0)))) # (!VB1_o_TxHead[20] & (!BC1L0 & ((RB1_o_CtrlReg[20]) # (!CC1L0))));


--VB1_o_TxHead[20] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[20]
VB1_o_TxHead[20] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[20] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[20]
RB1_o_CtrlReg[20] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~21
HC1L0 = (VB1_o_TxHead[20] & ((RB1_o_CtrlReg[20]) # ((!CC1L0)))) # (!VB1_o_TxHead[20] & (!BC1L0 & ((RB1_o_CtrlReg[20]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~22
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~23
HC1L0 = (LC1_q_b[20] & ((LC1_q_b[20]) # ((!inst80)))) # (!LC1_q_b[20] & (!inst146 & ((LC1_q_b[20]) # (!inst80))));


--VB1_o_TxHead[20] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[20]
VB1_o_TxHead[20] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~24
HC1L0 = (HC1L0 & ((VB1_o_TxHead[20]) # ((!BC1L0) # (!BC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~25
HC1L0 = (LC1_q_b[20] & ((LC1_q_b[20]) # ((!inst154)))) # (!LC1_q_b[20] & (!inst182 & ((LC1_q_b[20]) # (!inst154))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~26
HC1L0 = (GC1_q_b[20] & ((GC1_q_b[20]) # ((!B1L0)))) # (!GC1_q_b[20] & (!B1L0 & ((GC1_q_b[20]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~27
HC1L0 = (GC1_q_b[20] & ((GC1_q_b[20]) # ((!B1L0)))) # (!GC1_q_b[20] & (!B1L0 & ((GC1_q_b[20]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~28
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[20]) # (!B1L0))));


--VB1_o_TxHead[20] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[20]
VB1_o_TxHead[20] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~29
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[20]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[20]~30
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--VB1_o_TxHead[21] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[21]
VB1_o_TxHead[21] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[21] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[21]
RB1_o_CtrlReg[21] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~352
HC1L0 = (VB1_o_TxHead[21] & ((RB1_o_CtrlReg[21]) # ((!CC1L0)))) # (!VB1_o_TxHead[21] & (!BC1L0 & ((RB1_o_CtrlReg[21]) # (!CC1L0))));


--RB1_o_CtrlReg[21] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[21]
RB1_o_CtrlReg[21] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[21] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[21]
RB1_o_CtrlReg[21] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~353
HC1L0 = (RB1_o_CtrlReg[21] & ((RB1_o_CtrlReg[21]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[21] & (!CC1L0 & ((RB1_o_CtrlReg[21]) # (!CC1L0))));


--VB1_o_TxHead[21] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[21]
VB1_o_TxHead[21] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[21] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[21]
RB1_o_CtrlReg[21] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~354
HC1L0 = (VB1_o_TxHead[21] & ((RB1_o_CtrlReg[21]) # ((!CC1L0)))) # (!VB1_o_TxHead[21] & (!BC1L0 & ((RB1_o_CtrlReg[21]) # (!CC1L0))));


--VB1_o_TxHead[21] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[21]
VB1_o_TxHead[21] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[21] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[21]
RB1_o_CtrlReg[21] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~355
HC1L0 = (VB1_o_TxHead[21] & ((RB1_o_CtrlReg[21]) # ((!CC1L0)))) # (!VB1_o_TxHead[21] & (!BC1L0 & ((RB1_o_CtrlReg[21]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~356
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~357
HC1L0 = (LC1_q_b[21] & ((LC1_q_b[21]) # ((!inst80)))) # (!LC1_q_b[21] & (!inst146 & ((LC1_q_b[21]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~358
HC1L0 = (LC1_q_b[21] & ((LC1_q_b[21]) # ((!inst154)))) # (!LC1_q_b[21] & (!inst182 & ((LC1_q_b[21]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~359
HC1L0 = (GC1_q_b[21] & ((GC1_q_b[21]) # ((!B1L0)))) # (!GC1_q_b[21] & (!B1L0 & ((GC1_q_b[21]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~360
HC1L0 = (GC1_q_b[21] & ((GC1_q_b[21]) # ((!B1L0)))) # (!GC1_q_b[21] & (!B1L0 & ((GC1_q_b[21]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~361
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[21]) # (!B1L0))));


--VB1_o_TxHead[21] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[21]
VB1_o_TxHead[21] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~362
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[21]) # (!BC1L0))));


--VB1_o_TxHead[21] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[21]
VB1_o_TxHead[21] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~363
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[21]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[21]~364
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[22] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[22]
VB1_o_TxHead[22] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[22] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[22]
RB1_o_CtrlReg[22] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~31
HC1L0 = (VB1_o_TxHead[22] & ((RB1_o_CtrlReg[22]) # ((!CC1L0)))) # (!VB1_o_TxHead[22] & (!BC1L0 & ((RB1_o_CtrlReg[22]) # (!CC1L0))));


--RB1_o_CtrlReg[22] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[22]
RB1_o_CtrlReg[22] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[22] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[22]
RB1_o_CtrlReg[22] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~32
HC1L0 = (RB1_o_CtrlReg[22] & ((RB1_o_CtrlReg[22]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[22] & (!CC1L0 & ((RB1_o_CtrlReg[22]) # (!CC1L0))));


--VB1_o_TxHead[22] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[22]
VB1_o_TxHead[22] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[22] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[22]
RB1_o_CtrlReg[22] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~33
HC1L0 = (VB1_o_TxHead[22] & ((RB1_o_CtrlReg[22]) # ((!CC1L0)))) # (!VB1_o_TxHead[22] & (!BC1L0 & ((RB1_o_CtrlReg[22]) # (!CC1L0))));


--VB1_o_TxHead[22] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[22]
VB1_o_TxHead[22] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[22] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[22]
RB1_o_CtrlReg[22] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~34
HC1L0 = (VB1_o_TxHead[22] & ((RB1_o_CtrlReg[22]) # ((!CC1L0)))) # (!VB1_o_TxHead[22] & (!BC1L0 & ((RB1_o_CtrlReg[22]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~35
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~36
HC1L0 = (LC1_q_b[22] & ((LC1_q_b[22]) # ((!inst80)))) # (!LC1_q_b[22] & (!inst146 & ((LC1_q_b[22]) # (!inst80))));


--VB1_o_TxHead[22] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[22]
VB1_o_TxHead[22] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~37
HC1L0 = (HC1L0 & ((VB1_o_TxHead[22]) # ((!BC1L0) # (!BC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~38
HC1L0 = (LC1_q_b[22] & ((LC1_q_b[22]) # ((!inst154)))) # (!LC1_q_b[22] & (!inst182 & ((LC1_q_b[22]) # (!inst154))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~39
HC1L0 = (GC1_q_b[22] & ((GC1_q_b[22]) # ((!B1L0)))) # (!GC1_q_b[22] & (!B1L0 & ((GC1_q_b[22]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~40
HC1L0 = (GC1_q_b[22] & ((GC1_q_b[22]) # ((!B1L0)))) # (!GC1_q_b[22] & (!B1L0 & ((GC1_q_b[22]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~41
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[22]) # (!B1L0))));


--VB1_o_TxHead[22] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[22]
VB1_o_TxHead[22] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~42
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[22]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[22]~43
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--VB1_o_TxHead[23] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[23]
VB1_o_TxHead[23] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[23] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[23]
RB1_o_CtrlReg[23] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~365
HC1L0 = (VB1_o_TxHead[23] & ((RB1_o_CtrlReg[23]) # ((!CC1L0)))) # (!VB1_o_TxHead[23] & (!BC1L0 & ((RB1_o_CtrlReg[23]) # (!CC1L0))));


--RB1_o_CtrlReg[23] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[23]
RB1_o_CtrlReg[23] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[23] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[23]
RB1_o_CtrlReg[23] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~366
HC1L0 = (RB1_o_CtrlReg[23] & ((RB1_o_CtrlReg[23]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[23] & (!CC1L0 & ((RB1_o_CtrlReg[23]) # (!CC1L0))));


--VB1_o_TxHead[23] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[23]
VB1_o_TxHead[23] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[23] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[23]
RB1_o_CtrlReg[23] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~367
HC1L0 = (VB1_o_TxHead[23] & ((RB1_o_CtrlReg[23]) # ((!CC1L0)))) # (!VB1_o_TxHead[23] & (!BC1L0 & ((RB1_o_CtrlReg[23]) # (!CC1L0))));


--VB1_o_TxHead[23] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[23]
VB1_o_TxHead[23] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[23] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[23]
RB1_o_CtrlReg[23] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~368
HC1L0 = (VB1_o_TxHead[23] & ((RB1_o_CtrlReg[23]) # ((!CC1L0)))) # (!VB1_o_TxHead[23] & (!BC1L0 & ((RB1_o_CtrlReg[23]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~369
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~370
HC1L0 = (LC1_q_b[23] & ((LC1_q_b[23]) # ((!inst80)))) # (!LC1_q_b[23] & (!inst146 & ((LC1_q_b[23]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~371
HC1L0 = (LC1_q_b[23] & ((LC1_q_b[23]) # ((!inst154)))) # (!LC1_q_b[23] & (!inst182 & ((LC1_q_b[23]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~372
HC1L0 = (GC1_q_b[23] & ((GC1_q_b[23]) # ((!B1L0)))) # (!GC1_q_b[23] & (!B1L0 & ((GC1_q_b[23]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~373
HC1L0 = (GC1_q_b[23] & ((GC1_q_b[23]) # ((!B1L0)))) # (!GC1_q_b[23] & (!B1L0 & ((GC1_q_b[23]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~374
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[23]) # (!B1L0))));


--VB1_o_TxHead[23] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[23]
VB1_o_TxHead[23] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~375
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[23]) # (!BC1L0))));


--VB1_o_TxHead[23] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[23]
VB1_o_TxHead[23] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~376
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[23]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[23]~377
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[24] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[24]
VB1_o_TxHead[24] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[24] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[24]
RB1_o_CtrlReg[24] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~378
HC1L0 = (VB1_o_TxHead[24] & ((RB1_o_CtrlReg[24]) # ((!CC1L0)))) # (!VB1_o_TxHead[24] & (!BC1L0 & ((RB1_o_CtrlReg[24]) # (!CC1L0))));


--RB1_o_CtrlReg[24] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[24]
RB1_o_CtrlReg[24] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[24] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[24]
RB1_o_CtrlReg[24] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~379
HC1L0 = (RB1_o_CtrlReg[24] & ((RB1_o_CtrlReg[24]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[24] & (!CC1L0 & ((RB1_o_CtrlReg[24]) # (!CC1L0))));


--VB1_o_TxHead[24] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[24]
VB1_o_TxHead[24] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[24] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[24]
RB1_o_CtrlReg[24] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~380
HC1L0 = (VB1_o_TxHead[24] & ((RB1_o_CtrlReg[24]) # ((!CC1L0)))) # (!VB1_o_TxHead[24] & (!BC1L0 & ((RB1_o_CtrlReg[24]) # (!CC1L0))));


--VB1_o_TxHead[24] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[24]
VB1_o_TxHead[24] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[24] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[24]
RB1_o_CtrlReg[24] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~381
HC1L0 = (VB1_o_TxHead[24] & ((RB1_o_CtrlReg[24]) # ((!CC1L0)))) # (!VB1_o_TxHead[24] & (!BC1L0 & ((RB1_o_CtrlReg[24]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~382
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~383
HC1L0 = (LC1_q_b[24] & ((LC1_q_b[24]) # ((!inst80)))) # (!LC1_q_b[24] & (!inst146 & ((LC1_q_b[24]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~384
HC1L0 = (LC1_q_b[24] & ((LC1_q_b[24]) # ((!inst154)))) # (!LC1_q_b[24] & (!inst182 & ((LC1_q_b[24]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~385
HC1L0 = (GC1_q_b[24] & ((GC1_q_b[24]) # ((!B1L0)))) # (!GC1_q_b[24] & (!B1L0 & ((GC1_q_b[24]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~386
HC1L0 = (GC1_q_b[24] & ((GC1_q_b[24]) # ((!B1L0)))) # (!GC1_q_b[24] & (!B1L0 & ((GC1_q_b[24]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~387
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[24]) # (!B1L0))));


--VB1_o_TxHead[24] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[24]
VB1_o_TxHead[24] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~388
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[24]) # (!BC1L0))));


--VB1_o_TxHead[24] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[24]
VB1_o_TxHead[24] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~389
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[24]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[24]~390
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[25] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[25]
VB1_o_TxHead[25] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[25] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[25]
RB1_o_CtrlReg[25] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~44
HC1L0 = (VB1_o_TxHead[25] & ((RB1_o_CtrlReg[25]) # ((!CC1L0)))) # (!VB1_o_TxHead[25] & (!BC1L0 & ((RB1_o_CtrlReg[25]) # (!CC1L0))));


--RB1_o_CtrlReg[25] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[25]
RB1_o_CtrlReg[25] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[25] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[25]
RB1_o_CtrlReg[25] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~45
HC1L0 = (RB1_o_CtrlReg[25] & ((RB1_o_CtrlReg[25]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[25] & (!CC1L0 & ((RB1_o_CtrlReg[25]) # (!CC1L0))));


--VB1_o_TxHead[25] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[25]
VB1_o_TxHead[25] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[25] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[25]
RB1_o_CtrlReg[25] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~46
HC1L0 = (VB1_o_TxHead[25] & ((RB1_o_CtrlReg[25]) # ((!CC1L0)))) # (!VB1_o_TxHead[25] & (!BC1L0 & ((RB1_o_CtrlReg[25]) # (!CC1L0))));


--VB1_o_TxHead[25] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[25]
VB1_o_TxHead[25] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[25] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[25]
RB1_o_CtrlReg[25] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~47
HC1L0 = (VB1_o_TxHead[25] & ((RB1_o_CtrlReg[25]) # ((!CC1L0)))) # (!VB1_o_TxHead[25] & (!BC1L0 & ((RB1_o_CtrlReg[25]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~48
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~49
HC1L0 = (LC1_q_b[25] & ((LC1_q_b[25]) # ((!inst80)))) # (!LC1_q_b[25] & (!inst146 & ((LC1_q_b[25]) # (!inst80))));


--VB1_o_TxHead[25] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[25]
VB1_o_TxHead[25] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~50
HC1L0 = (HC1L0 & ((VB1_o_TxHead[25]) # (!BC1L0)));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~51
HC1L0 = (LC1_q_b[25] & ((LC1_q_b[25]) # ((!inst154)))) # (!LC1_q_b[25] & (!inst182 & ((LC1_q_b[25]) # (!inst154))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~52
HC1L0 = (GC1_q_b[25] & ((GC1_q_b[25]) # ((!B1L0)))) # (!GC1_q_b[25] & (!B1L0 & ((GC1_q_b[25]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~53
HC1L0 = (GC1_q_b[25] & ((GC1_q_b[25]) # ((!B1L0)))) # (!GC1_q_b[25] & (!B1L0 & ((GC1_q_b[25]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~54
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[25]) # (!B1L0))));


--VB1_o_TxHead[25] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[25]
VB1_o_TxHead[25] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~55
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[25]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[25]~56
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--VB1_o_TxHead[26] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[26]
VB1_o_TxHead[26] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[26] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[26]
RB1_o_CtrlReg[26] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~57
HC1L0 = (VB1_o_TxHead[26] & ((RB1_o_CtrlReg[26]) # ((!CC1L0)))) # (!VB1_o_TxHead[26] & (!BC1L0 & ((RB1_o_CtrlReg[26]) # (!CC1L0))));


--RB1_o_CtrlReg[26] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[26]
RB1_o_CtrlReg[26] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[26] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[26]
RB1_o_CtrlReg[26] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~58
HC1L0 = (RB1_o_CtrlReg[26] & ((RB1_o_CtrlReg[26]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[26] & (!CC1L0 & ((RB1_o_CtrlReg[26]) # (!CC1L0))));


--VB1_o_TxHead[26] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[26]
VB1_o_TxHead[26] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[26] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[26]
RB1_o_CtrlReg[26] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~59
HC1L0 = (VB1_o_TxHead[26] & ((RB1_o_CtrlReg[26]) # ((!CC1L0)))) # (!VB1_o_TxHead[26] & (!BC1L0 & ((RB1_o_CtrlReg[26]) # (!CC1L0))));


--VB1_o_TxHead[26] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[26]
VB1_o_TxHead[26] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[26] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[26]
RB1_o_CtrlReg[26] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~60
HC1L0 = (VB1_o_TxHead[26] & ((RB1_o_CtrlReg[26]) # ((!CC1L0)))) # (!VB1_o_TxHead[26] & (!BC1L0 & ((RB1_o_CtrlReg[26]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~61
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~62
HC1L0 = (LC1_q_b[26] & ((LC1_q_b[26]) # ((!inst80)))) # (!LC1_q_b[26] & (!inst146 & ((LC1_q_b[26]) # (!inst80))));


--VB1_o_TxHead[26] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[26]
VB1_o_TxHead[26] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~63
HC1L0 = (HC1L0 & ((VB1_o_TxHead[26]) # ((!BC1L0) # (!BC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~64
HC1L0 = (LC1_q_b[26] & ((LC1_q_b[26]) # ((!inst154)))) # (!LC1_q_b[26] & (!inst182 & ((LC1_q_b[26]) # (!inst154))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~65
HC1L0 = (GC1_q_b[26] & ((GC1_q_b[26]) # ((!B1L0)))) # (!GC1_q_b[26] & (!B1L0 & ((GC1_q_b[26]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~66
HC1L0 = (GC1_q_b[26] & ((GC1_q_b[26]) # ((!B1L0)))) # (!GC1_q_b[26] & (!B1L0 & ((GC1_q_b[26]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~67
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[26]) # (!B1L0))));


--VB1_o_TxHead[26] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[26]
VB1_o_TxHead[26] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~68
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[26]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[26]~69
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--VB1_o_TxHead[27] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[27]
VB1_o_TxHead[27] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[27] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[27]
RB1_o_CtrlReg[27] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~391
HC1L0 = (VB1_o_TxHead[27] & ((RB1_o_CtrlReg[27]) # ((!CC1L0)))) # (!VB1_o_TxHead[27] & (!BC1L0 & ((RB1_o_CtrlReg[27]) # (!CC1L0))));


--RB1_o_CtrlReg[27] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[27]
RB1_o_CtrlReg[27] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[27] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[27]
RB1_o_CtrlReg[27] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~392
HC1L0 = (RB1_o_CtrlReg[27] & ((RB1_o_CtrlReg[27]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[27] & (!CC1L0 & ((RB1_o_CtrlReg[27]) # (!CC1L0))));


--VB1_o_TxHead[27] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[27]
VB1_o_TxHead[27] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[27] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[27]
RB1_o_CtrlReg[27] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~393
HC1L0 = (VB1_o_TxHead[27] & ((RB1_o_CtrlReg[27]) # ((!CC1L0)))) # (!VB1_o_TxHead[27] & (!BC1L0 & ((RB1_o_CtrlReg[27]) # (!CC1L0))));


--VB1_o_TxHead[27] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[27]
VB1_o_TxHead[27] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[27] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[27]
RB1_o_CtrlReg[27] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~394
HC1L0 = (VB1_o_TxHead[27] & ((RB1_o_CtrlReg[27]) # ((!CC1L0)))) # (!VB1_o_TxHead[27] & (!BC1L0 & ((RB1_o_CtrlReg[27]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~395
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~396
HC1L0 = (LC1_q_b[27] & ((LC1_q_b[27]) # ((!inst80)))) # (!LC1_q_b[27] & (!inst146 & ((LC1_q_b[27]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~397
HC1L0 = (LC1_q_b[27] & ((LC1_q_b[27]) # ((!inst154)))) # (!LC1_q_b[27] & (!inst182 & ((LC1_q_b[27]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~398
HC1L0 = (GC1_q_b[27] & ((GC1_q_b[27]) # ((!B1L0)))) # (!GC1_q_b[27] & (!B1L0 & ((GC1_q_b[27]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~399
HC1L0 = (GC1_q_b[27] & ((GC1_q_b[27]) # ((!B1L0)))) # (!GC1_q_b[27] & (!B1L0 & ((GC1_q_b[27]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~400
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[27]) # (!B1L0))));


--VB1_o_TxHead[27] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[27]
VB1_o_TxHead[27] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~401
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[27]) # (!BC1L0))));


--VB1_o_TxHead[27] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[27]
VB1_o_TxHead[27] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~402
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[27]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[27]~403
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[28] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[28]
VB1_o_TxHead[28] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[28] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[28]
RB1_o_CtrlReg[28] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~404
HC1L0 = (VB1_o_TxHead[28] & ((RB1_o_CtrlReg[28]) # ((!CC1L0)))) # (!VB1_o_TxHead[28] & (!BC1L0 & ((RB1_o_CtrlReg[28]) # (!CC1L0))));


--RB1_o_CtrlReg[28] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[28]
RB1_o_CtrlReg[28] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[28] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[28]
RB1_o_CtrlReg[28] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~405
HC1L0 = (RB1_o_CtrlReg[28] & ((RB1_o_CtrlReg[28]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[28] & (!CC1L0 & ((RB1_o_CtrlReg[28]) # (!CC1L0))));


--VB1_o_TxHead[28] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[28]
VB1_o_TxHead[28] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[28] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[28]
RB1_o_CtrlReg[28] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~406
HC1L0 = (VB1_o_TxHead[28] & ((RB1_o_CtrlReg[28]) # ((!CC1L0)))) # (!VB1_o_TxHead[28] & (!BC1L0 & ((RB1_o_CtrlReg[28]) # (!CC1L0))));


--VB1_o_TxHead[28] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[28]
VB1_o_TxHead[28] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[28] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[28]
RB1_o_CtrlReg[28] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~407
HC1L0 = (VB1_o_TxHead[28] & ((RB1_o_CtrlReg[28]) # ((!CC1L0)))) # (!VB1_o_TxHead[28] & (!BC1L0 & ((RB1_o_CtrlReg[28]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~408
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~409
HC1L0 = (LC1_q_b[28] & ((LC1_q_b[28]) # ((!inst80)))) # (!LC1_q_b[28] & (!inst146 & ((LC1_q_b[28]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~410
HC1L0 = (LC1_q_b[28] & ((LC1_q_b[28]) # ((!inst154)))) # (!LC1_q_b[28] & (!inst182 & ((LC1_q_b[28]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~411
HC1L0 = (GC1_q_b[28] & ((GC1_q_b[28]) # ((!B1L0)))) # (!GC1_q_b[28] & (!B1L0 & ((GC1_q_b[28]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~412
HC1L0 = (GC1_q_b[28] & ((GC1_q_b[28]) # ((!B1L0)))) # (!GC1_q_b[28] & (!B1L0 & ((GC1_q_b[28]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~413
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[28]) # (!B1L0))));


--VB1_o_TxHead[28] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[28]
VB1_o_TxHead[28] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~414
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[28]) # (!BC1L0))));


--VB1_o_TxHead[28] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[28]
VB1_o_TxHead[28] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~415
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[28]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[28]~416
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[29] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[29]
VB1_o_TxHead[29] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[29] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[29]
RB1_o_CtrlReg[29] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~417
HC1L0 = (VB1_o_TxHead[29] & ((RB1_o_CtrlReg[29]) # ((!CC1L0)))) # (!VB1_o_TxHead[29] & (!BC1L0 & ((RB1_o_CtrlReg[29]) # (!CC1L0))));


--RB1_o_CtrlReg[29] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[29]
RB1_o_CtrlReg[29] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[29] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[29]
RB1_o_CtrlReg[29] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~418
HC1L0 = (RB1_o_CtrlReg[29] & ((RB1_o_CtrlReg[29]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[29] & (!CC1L0 & ((RB1_o_CtrlReg[29]) # (!CC1L0))));


--VB1_o_TxHead[29] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[29]
VB1_o_TxHead[29] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[29] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[29]
RB1_o_CtrlReg[29] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~419
HC1L0 = (VB1_o_TxHead[29] & ((RB1_o_CtrlReg[29]) # ((!CC1L0)))) # (!VB1_o_TxHead[29] & (!BC1L0 & ((RB1_o_CtrlReg[29]) # (!CC1L0))));


--VB1_o_TxHead[29] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[29]
VB1_o_TxHead[29] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[29] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[29]
RB1_o_CtrlReg[29] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~420
HC1L0 = (VB1_o_TxHead[29] & ((RB1_o_CtrlReg[29]) # ((!CC1L0)))) # (!VB1_o_TxHead[29] & (!BC1L0 & ((RB1_o_CtrlReg[29]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~421
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~422
HC1L0 = (LC1_q_b[29] & ((LC1_q_b[29]) # ((!inst80)))) # (!LC1_q_b[29] & (!inst146 & ((LC1_q_b[29]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~423
HC1L0 = (LC1_q_b[29] & ((LC1_q_b[29]) # ((!inst154)))) # (!LC1_q_b[29] & (!inst182 & ((LC1_q_b[29]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~424
HC1L0 = (GC1_q_b[29] & ((GC1_q_b[29]) # ((!B1L0)))) # (!GC1_q_b[29] & (!B1L0 & ((GC1_q_b[29]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~425
HC1L0 = (GC1_q_b[29] & ((GC1_q_b[29]) # ((!B1L0)))) # (!GC1_q_b[29] & (!B1L0 & ((GC1_q_b[29]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~426
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[29]) # (!B1L0))));


--VB1_o_TxHead[29] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[29]
VB1_o_TxHead[29] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~427
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[29]) # (!BC1L0))));


--VB1_o_TxHead[29] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[29]
VB1_o_TxHead[29] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~428
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[29]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[29]~429
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--VB1_o_TxHead[30] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[30]
VB1_o_TxHead[30] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[30] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[30]
RB1_o_CtrlReg[30] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~70
HC1L0 = (VB1_o_TxHead[30] & ((RB1_o_CtrlReg[30]) # ((!CC1L0)))) # (!VB1_o_TxHead[30] & (!BC1L0 & ((RB1_o_CtrlReg[30]) # (!CC1L0))));


--RB1_o_CtrlReg[30] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[30]
RB1_o_CtrlReg[30] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[30] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[30]
RB1_o_CtrlReg[30] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~71
HC1L0 = (RB1_o_CtrlReg[30] & ((RB1_o_CtrlReg[30]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[30] & (!CC1L0 & ((RB1_o_CtrlReg[30]) # (!CC1L0))));


--VB1_o_TxHead[30] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[30]
VB1_o_TxHead[30] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[30] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[30]
RB1_o_CtrlReg[30] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~72
HC1L0 = (VB1_o_TxHead[30] & ((RB1_o_CtrlReg[30]) # ((!CC1L0)))) # (!VB1_o_TxHead[30] & (!BC1L0 & ((RB1_o_CtrlReg[30]) # (!CC1L0))));


--VB1_o_TxHead[30] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[30]
VB1_o_TxHead[30] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[30] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[30]
RB1_o_CtrlReg[30] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~73
HC1L0 = (VB1_o_TxHead[30] & ((RB1_o_CtrlReg[30]) # ((!CC1L0)))) # (!VB1_o_TxHead[30] & (!BC1L0 & ((RB1_o_CtrlReg[30]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~74
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~75
HC1L0 = (LC1_q_b[30] & ((LC1_q_b[30]) # ((!inst80)))) # (!LC1_q_b[30] & (!inst146 & ((LC1_q_b[30]) # (!inst80))));


--VB1_o_TxHead[30] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[30]
VB1_o_TxHead[30] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~76
HC1L0 = (HC1L0 & ((VB1_o_TxHead[30]) # ((!BC1L0) # (!BC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~77
HC1L0 = (LC1_q_b[30] & ((LC1_q_b[30]) # ((!inst154)))) # (!LC1_q_b[30] & (!inst182 & ((LC1_q_b[30]) # (!inst154))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~78
HC1L0 = (GC1_q_b[30] & ((GC1_q_b[30]) # ((!B1L0)))) # (!GC1_q_b[30] & (!B1L0 & ((GC1_q_b[30]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~79
HC1L0 = (GC1_q_b[30] & ((GC1_q_b[30]) # ((!B1L0)))) # (!GC1_q_b[30] & (!B1L0 & ((GC1_q_b[30]) # (!B1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~80
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[30]) # (!B1L0))));


--VB1_o_TxHead[30] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[30]
VB1_o_TxHead[30] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~81
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[30]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst90|lpm_bustri:lpm_bustri_component|dout[30]~82
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--VB1_o_TxHead[31] is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|o_TxHead[31]
VB1_o_TxHead[31] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[31] is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|o_CtrlReg[31]
RB1_o_CtrlReg[31] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~430
HC1L0 = (VB1_o_TxHead[31] & ((RB1_o_CtrlReg[31]) # ((!CC1L0)))) # (!VB1_o_TxHead[31] & (!BC1L0 & ((RB1_o_CtrlReg[31]) # (!CC1L0))));


--RB1_o_CtrlReg[31] is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|o_CtrlReg[31]
RB1_o_CtrlReg[31] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[31] is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|o_CtrlReg[31]
RB1_o_CtrlReg[31] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~431
HC1L0 = (RB1_o_CtrlReg[31] & ((RB1_o_CtrlReg[31]) # ((!CC1L0)))) # (!RB1_o_CtrlReg[31] & (!CC1L0 & ((RB1_o_CtrlReg[31]) # (!CC1L0))));


--VB1_o_TxHead[31] is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|o_TxHead[31]
VB1_o_TxHead[31] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[31] is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|o_CtrlReg[31]
RB1_o_CtrlReg[31] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~432
HC1L0 = (VB1_o_TxHead[31] & ((RB1_o_CtrlReg[31]) # ((!CC1L0)))) # (!VB1_o_TxHead[31] & (!BC1L0 & ((RB1_o_CtrlReg[31]) # (!CC1L0))));


--VB1_o_TxHead[31] is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|o_TxHead[31]
VB1_o_TxHead[31] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--RB1_o_CtrlReg[31] is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|o_CtrlReg[31]
RB1_o_CtrlReg[31] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , RB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~433
HC1L0 = (VB1_o_TxHead[31] & ((RB1_o_CtrlReg[31]) # ((!CC1L0)))) # (!VB1_o_TxHead[31] & (!BC1L0 & ((RB1_o_CtrlReg[31]) # (!CC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~434
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & HC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~435
HC1L0 = (LC1_q_b[31] & ((LC1_q_b[31]) # ((!inst80)))) # (!LC1_q_b[31] & (!inst146 & ((LC1_q_b[31]) # (!inst80))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~436
HC1L0 = (LC1_q_b[31] & ((LC1_q_b[31]) # ((!inst154)))) # (!LC1_q_b[31] & (!inst182 & ((LC1_q_b[31]) # (!inst154))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~437
HC1L0 = (GC1_q_b[31] & ((GC1_q_b[31]) # ((!B1L0)))) # (!GC1_q_b[31] & (!B1L0 & ((GC1_q_b[31]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~438
HC1L0 = (GC1_q_b[31] & ((GC1_q_b[31]) # ((!B1L0)))) # (!GC1_q_b[31] & (!B1L0 & ((GC1_q_b[31]) # (!B1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~439
HC1L0 = (HC1L0 & (HC1L0 & ((GC1_q_b[31]) # (!B1L0))));


--VB1_o_TxHead[31] is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|o_TxHead[31]
VB1_o_TxHead[31] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~440
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[31]) # (!BC1L0))));


--VB1_o_TxHead[31] is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|o_TxHead[31]
VB1_o_TxHead[31] = DFFEAS(C1L0, !CLK_25MHz2,  ,  , VB1L0,  ,  ,  ,  );


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~441
HC1L0 = (HC1L0 & (HC1L0 & ((VB1_o_TxHead[31]) # (!BC1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[31]~442
HC1L0 = (HC1L0 & (HC1L0 & (HC1L0 & !A1L0)));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|r_ClkCnt[0]~7
SB1L0 = ((!SB1L0 & SB1_r_ClkCnt[4])) # (!SB1_r_State);


--XB1_r_State.s_ResetDV is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_State.s_ResetDV
XB1_r_State.s_ResetDV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1_o_Ready is UART_MODULE:inst7|UART_TX_BLOCK:inst5|o_Ready
SB1_o_Ready = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector21~0
XB1L0 = (XB1_o_DV & ((XB1_r_State.s_SetDV) # ((!XB1_r_State.s_ResetDV)))) # (!XB1_o_DV & (XB1_r_State.s_SetDV & ((!SB1_o_Ready))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~12
W1L0 = (W1L0 & !W1L0);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Rx[1]~4
W1L0 = (U1_o_MHz & (((W1_r_Cnt_Bit_Rx[4] & W1L0)) # (!W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~13
W1L0 = (W1L0 & !W1L0);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~14
W1L0 = (W1L0 & !W1L0);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Byte_Rom[0]~9
W1L0 = (U1_o_MHz & (W1L0 & W1_r_State_1WIRE.SEND));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_CntSensor[0]~0
W1L0 = (W1_r_State_1WIRE.GET_DATA & U1_o_MHz);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_CntSensor[0]~1
W1L0 = W1_r_CntSensor[0] $ (((!W1L0 & (W1_r_Cnt_Bit_Rx[4] & W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_CntSensor[1]~2
W1L0 = (W1_r_Cnt_Bit_Rx[4] & (W1_r_CntSensor[0] & (W1L0 & !W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_CntSensor[1]~3
W1L0 = W1_r_CntSensor[1] $ (W1L0);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_CntSensor[2]~4
W1L0 = W1_r_CntSensor[2] $ (((W1_r_CntSensor[1] & W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_CntSensor[3]~5
W1L0 = W1_r_CntSensor[3] $ (((W1_r_CntSensor[1] & (W1_r_CntSensor[2] & W1L0))));


--U1L0 is FREQ_1MHz_BLOCK:inst34|r_Cnt~0
U1L0 = (U1L0 & ((!U1L0) # (!U1_r_Cnt[4])));


--U1L0 is FREQ_1MHz_BLOCK:inst34|r_Cnt~1
U1L0 = (U1L0 & ((!U1L0) # (!U1_r_Cnt[4])));


--U1L0 is FREQ_1MHz_BLOCK:inst34|r_Cnt~2
U1L0 = (U1L0 & ((!U1L0) # (!U1_r_Cnt[4])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.WAIT_800ms~0
W1L0 = (W1_r_State[0]) # ((W1_r_State[2]) # ((!W1_r_State_1WIRE.SEND) # (!W1_r_State[1])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE.WAIT_800ms~1
W1L0 = (U1_o_MHz & ((W1L0 & (W1_r_State_1WIRE.WAIT_800ms)) # (!W1L0 & ((W1L0))))) # (!U1_o_MHz & (W1_r_State_1WIRE.WAIT_800ms));


--W1_r_Reset_125Hz is ONE_WIRE_BLOCK_v4_2:inst38|r_Reset_125Hz
W1_r_Reset_125Hz = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Reset_1MHz_BitLow~0
W1L0 = (!W1_r_State_1WIRE.WRITE_BIT & ((W1_r_State_1WIRE.RESET & (W1L0)) # (!W1_r_State_1WIRE.RESET & ((!W1_r_Reset_1MHz_BitLow)))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Reset_1MHz_BitLow~1
W1L0 = (W1_r_State_1WIRE.WRITE_BIT & ((W1L0) # ((W1_r_Write_BitLow & W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Reset_1MHz_BitLow~2
W1L0 = (W1_r_State_1WIRE.READ_BIT & (!W1L0)) # (!W1_r_State_1WIRE.READ_BIT & (((!W1L0 & !W1L0))));


--W1_r_Reset_1MHz_BitHigh is ONE_WIRE_BLOCK_v4_2:inst38|r_Reset_1MHz_BitHigh
W1_r_Reset_1MHz_BitHigh = DFFEAS(W1L0, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--XB1_r_State.s_GetData is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_State.s_GetData
XB1_r_State.s_GetData = DFFEAS(XB1_r_State.s_WaitData1, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1_o_Ready is UART_MODULE:inst5|UART_TX_BLOCK:inst5|o_Ready
SB1_o_Ready = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_Wait is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_State.s_Wait
XB1_r_State.s_Wait = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_Idle is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_State.s_Idle
XB1_r_State.s_Idle = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector10~0
XB1L0 = (!CS3 & (!WE_An & !XB1_r_State.s_Idle));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector10~1
XB1L0 = (XB1_r_State.s_Wait) # ((CC1L0 & (WB1L0 & XB1L0)));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector17~0
XB1L0 = (XB1_r_State.s_GetData) # ((XB1_r_State.s_SetDV & SB1_o_Ready));


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|r_ClkCnt[4]~7
SB1L0 = ((!SB1L0 & SB1_r_ClkCnt[4])) # (!SB1_r_State);


--XB1_r_State.s_ResetDV is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_State.s_ResetDV
XB1_r_State.s_ResetDV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector21~0
XB1L0 = (XB1_o_DV & ((XB1_r_State.s_SetDV) # ((!XB1_r_State.s_ResetDV)))) # (!XB1_o_DV & (XB1_r_State.s_SetDV & ((!SB1_o_Ready))));


--XB1_r_State.s_GetData is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_State.s_GetData
XB1_r_State.s_GetData = DFFEAS(XB1_r_State.s_WaitData1, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1_o_Ready is UART_MODULE:inst2|UART_TX_BLOCK:inst5|o_Ready
SB1_o_Ready = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_Wait is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_State.s_Wait
XB1_r_State.s_Wait = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_Idle is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_State.s_Idle
XB1_r_State.s_Idle = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector10~0
XB1L0 = (!CS3 & (!WE_An & !XB1_r_State.s_Idle));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector10~1
XB1L0 = (XB1_r_State.s_Wait) # ((BC1L0 & (WB1L0 & XB1L0)));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector17~0
XB1L0 = (XB1_r_State.s_GetData) # ((XB1_r_State.s_SetDV & SB1_o_Ready));


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|r_ClkCnt[3]~7
SB1L0 = ((!SB1L0 & SB1_r_ClkCnt[4])) # (!SB1_r_State);


--XB1_r_State.s_ResetDV is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_State.s_ResetDV
XB1_r_State.s_ResetDV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector21~0
XB1L0 = (XB1_o_DV & ((XB1_r_State.s_SetDV) # ((!XB1_r_State.s_ResetDV)))) # (!XB1_o_DV & (XB1_r_State.s_SetDV & ((!SB1_o_Ready))));


--XB1_r_State.s_GetData is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_State.s_GetData
XB1_r_State.s_GetData = DFFEAS(XB1_r_State.s_WaitData1, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1_o_Ready is UART_MODULE:inst3|UART_TX_BLOCK:inst5|o_Ready
SB1_o_Ready = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_Wait is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_State.s_Wait
XB1_r_State.s_Wait = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_Idle is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_State.s_Idle
XB1_r_State.s_Idle = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector10~0
XB1L0 = (XB1_r_State.s_Wait) # ((WB1L0 & (!inst43 & !XB1_r_State.s_Idle)));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector17~0
XB1L0 = (XB1_r_State.s_GetData) # ((XB1_r_State.s_SetDV & SB1_o_Ready));


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|r_ClkCnt[1]~7
SB1L0 = ((!SB1L0 & SB1_r_ClkCnt[4])) # (!SB1_r_State);


--XB1_r_State.s_ResetDV is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_State.s_ResetDV
XB1_r_State.s_ResetDV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector21~0
XB1L0 = (XB1_o_DV & ((XB1_r_State.s_SetDV) # ((!XB1_r_State.s_ResetDV)))) # (!XB1_o_DV & (XB1_r_State.s_SetDV & ((!SB1_o_Ready))));


--XB1_r_State.s_GetData is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_State.s_GetData
XB1_r_State.s_GetData = DFFEAS(XB1_r_State.s_WaitData1, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_Wait is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_State.s_Wait
XB1_r_State.s_Wait = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_Idle is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_State.s_Idle
XB1_r_State.s_Idle = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector10~0
XB1L0 = (XB1_r_State.s_Wait) # ((WB1L0 & (!inst43 & !XB1_r_State.s_Idle)));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector17~0
XB1L0 = (XB1_r_State.s_GetData) # ((XB1_r_State.s_SetDV & SB1_o_Ready));


--XB1_r_State.s_GetData is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_State.s_GetData
XB1_r_State.s_GetData = DFFEAS(XB1_r_State.s_WaitData1, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1_o_Ready is UART_MODULE:inst6|UART_TX_BLOCK:inst5|o_Ready
SB1_o_Ready = DFFEAS(SB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_Wait is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_State.s_Wait
XB1_r_State.s_Wait = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_Idle is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_State.s_Idle
XB1_r_State.s_Idle = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector10~0
XB1L0 = (XB1_r_State.s_Wait) # ((WB1L0 & (!inst43 & !XB1_r_State.s_Idle)));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector17~0
XB1L0 = (XB1_r_State.s_GetData) # ((XB1_r_State.s_SetDV & SB1_o_Ready));


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|r_ClkCnt[2]~7
SB1L0 = ((!SB1L0 & SB1_r_ClkCnt[4])) # (!SB1_r_State);


--XB1_r_State.s_ResetDV is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_State.s_ResetDV
XB1_r_State.s_ResetDV = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector21~0
XB1L0 = (XB1_o_DV & ((XB1_r_State.s_SetDV) # ((!XB1_r_State.s_ResetDV)))) # (!XB1_o_DV & (XB1_r_State.s_SetDV & ((!SB1_o_Ready))));


--Q1_r_Cnt[16] is FREQ_8kHz_BLOCK:inst27|r_Cnt[16]
Q1_r_Cnt[16] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[17] is FREQ_8kHz_BLOCK:inst27|r_Cnt[17]
Q1_r_Cnt[17] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[8] is FREQ_8kHz_BLOCK:inst27|r_Cnt[8]
Q1_r_Cnt[8] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[9] is FREQ_8kHz_BLOCK:inst27|r_Cnt[9]
Q1_r_Cnt[9] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[7] is FREQ_8kHz_BLOCK:inst27|r_Cnt[7]
Q1_r_Cnt[7] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[6] is FREQ_8kHz_BLOCK:inst27|r_Cnt[6]
Q1_r_Cnt[6] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Equal0~0
Q1L0 = (Q1_r_Cnt[8] & (!Q1_r_Cnt[9] & (!Q1_r_Cnt[7] & !Q1_r_Cnt[6])));


--Q1_r_Cnt[5] is FREQ_8kHz_BLOCK:inst27|r_Cnt[5]
Q1_r_Cnt[5] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[4] is FREQ_8kHz_BLOCK:inst27|r_Cnt[4]
Q1_r_Cnt[4] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[3] is FREQ_8kHz_BLOCK:inst27|r_Cnt[3]
Q1_r_Cnt[3] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[2] is FREQ_8kHz_BLOCK:inst27|r_Cnt[2]
Q1_r_Cnt[2] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Equal0~1
Q1L0 = (Q1_r_Cnt[5] & (Q1_r_Cnt[4] & (Q1_r_Cnt[3] & Q1_r_Cnt[2])));


--Q1_r_Cnt[1] is FREQ_8kHz_BLOCK:inst27|r_Cnt[1]
Q1_r_Cnt[1] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[0] is FREQ_8kHz_BLOCK:inst27|r_Cnt[0]
Q1_r_Cnt[0] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[10] is FREQ_8kHz_BLOCK:inst27|r_Cnt[10]
Q1_r_Cnt[10] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[11] is FREQ_8kHz_BLOCK:inst27|r_Cnt[11]
Q1_r_Cnt[11] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Equal0~2
Q1L0 = (Q1_r_Cnt[1] & (Q1_r_Cnt[0] & (Q1_r_Cnt[10] & Q1_r_Cnt[11])));


--Q1_r_Cnt[12] is FREQ_8kHz_BLOCK:inst27|r_Cnt[12]
Q1_r_Cnt[12] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[13] is FREQ_8kHz_BLOCK:inst27|r_Cnt[13]
Q1_r_Cnt[13] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[14] is FREQ_8kHz_BLOCK:inst27|r_Cnt[14]
Q1_r_Cnt[14] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1_r_Cnt[15] is FREQ_8kHz_BLOCK:inst27|r_Cnt[15]
Q1_r_Cnt[15] = DFFEAS(Q1L0, CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Equal0~3
Q1L0 = (!Q1_r_Cnt[12] & (!Q1_r_Cnt[13] & (!Q1_r_Cnt[14] & !Q1_r_Cnt[15])));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Equal0~4
Q1L0 = (Q1L0 & (Q1L0 & (Q1L0 & Q1L0)));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|Equal0~5
Q1L0 = (Q1_r_Cnt[16] & (Q1_r_Cnt[17] & Q1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst12|o_PkuFlag~0
H1L0 = (Q1_o_kHz & (!IO37 & !IO49));


--H1L0 is PKU_IN_BLOCK_v2:inst12|o_PkuFlag~1
H1L0 = (H1_o_PkuFlag & (!H1L0 & ((!inst125) # (!C1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst12|o_PkuFlag~2
H1L0 = (H1_r_CntkHz[2]) # ((H1_r_CntkHz[3]) # ((H1_r_CntkHz[4]) # (H1_r_CntkHz[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst12|o_PkuFlag~3
H1L0 = (H1L0) # ((H1L0 & ((H1_r_CntkHz[6]) # (H1L0))));


--B1_inst61 is UART_MODULE:inst2|inst61
B1_inst61 = (BC1L0 & (GB1L0 & (BC1L0 & !inst43)));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead~13
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[0])));


--ZB1_r_State is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_State
ZB1_r_State = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--B1_inst61 is UART_MODULE:inst5|inst61
B1_inst61 = (CC1L0 & (GB1L0 & (BC1L0 & !inst43)));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead~13
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[0])));


--ZB1_r_State is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_State
ZB1_r_State = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--B1_inst61 is UART_MODULE:inst3|inst61
B1_inst61 = (UB1L0 & (GB1L0 & (BC1L0 & !inst43)));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead~13
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[0])));


--ZB1_r_State is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_State
ZB1_r_State = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--B1_inst61 is UART_MODULE:inst6|inst61
B1_inst61 = (BC1L0 & (GB1L0 & (BC1L0 & !inst43)));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead~13
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[0])));


--ZB1_r_State is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_State
ZB1_r_State = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead~13
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[0])));


--ZB1_r_State is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_State
ZB1_r_State = DFFEAS(ZB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--VB1L0 is UART_MODULE:inst2|UART_TXHEAD_BLOCK:inst14|process_0~0
VB1L0 = (BC1L0 & (GB1L0 & (BC1L0 & !inst43)));


--VB1L0 is UART_MODULE:inst3|UART_TXHEAD_BLOCK:inst14|process_0~0
VB1L0 = (UB1L0 & (GB1L0 & (BC1L0 & !inst43)));


--VB1L0 is UART_MODULE:inst5|UART_TXHEAD_BLOCK:inst14|process_0~0
VB1L0 = (CC1L0 & (GB1L0 & (BC1L0 & !inst43)));


--VB1L0 is UART_MODULE:inst6|UART_TXHEAD_BLOCK:inst14|process_0~0
VB1L0 = (BC1L0 & (GB1L0 & (BC1L0 & !inst43)));


--W1_o_TEMP_WR is ONE_WIRE_BLOCK_v4_2:inst38|o_TEMP_WR
W1_o_TEMP_WR = DFFEAS(W1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--W1_o_LINE2_TEMP_DATA[0] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[0]
W1_o_LINE2_TEMP_DATA[0] = DFFEAS(W1_r_LINE2_SensData[0], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_TEMP_ADDR[0] is ONE_WIRE_BLOCK_v4_2:inst38|o_TEMP_ADDR[0]
W1_o_TEMP_ADDR[0] = DFFEAS(W1_r_CntSensor[0], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_TEMP_ADDR[1] is ONE_WIRE_BLOCK_v4_2:inst38|o_TEMP_ADDR[1]
W1_o_TEMP_ADDR[1] = DFFEAS(W1_r_CntSensor[1], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_TEMP_ADDR[2] is ONE_WIRE_BLOCK_v4_2:inst38|o_TEMP_ADDR[2]
W1_o_TEMP_ADDR[2] = DFFEAS(W1_r_CntSensor[2], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_TEMP_ADDR[3] is ONE_WIRE_BLOCK_v4_2:inst38|o_TEMP_ADDR[3]
W1_o_TEMP_ADDR[3] = DFFEAS(W1_r_CntSensor[3], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[0] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[0]
W1_o_LINE1_TEMP_DATA[0] = DFFEAS(W1_r_LINE1_SensData[0], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[0] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[0]
W1_o_LINE3_TEMP_DATA[0] = DFFEAS(W1_r_LINE3_SensData[0], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[0] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[0]
W1_o_LINE4_TEMP_DATA[0] = DFFEAS(W1_r_LINE4_SensData[0], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamWE is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamWE
ZB1_o_RamWE = DFFEAS(ZB1_r_State, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--ZB1_o_RamData[0] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[0]
ZB1_o_RamData[0] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[0] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamAddr[0]
ZB1_o_RamAddr[0] = DFFEAS(ZB1_r_RxHead[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[1] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamAddr[1]
ZB1_o_RamAddr[1] = DFFEAS(ZB1_r_RxHead[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[2] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamAddr[2]
ZB1_o_RamAddr[2] = DFFEAS(ZB1_r_RxHead[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[3] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamAddr[3]
ZB1_o_RamAddr[3] = DFFEAS(ZB1_r_RxHead[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[4] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamAddr[4]
ZB1_o_RamAddr[4] = DFFEAS(ZB1_r_RxHead[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[5] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamAddr[5]
ZB1_o_RamAddr[5] = DFFEAS(ZB1_r_RxHead[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[6] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamAddr[6]
ZB1_o_RamAddr[6] = DFFEAS(ZB1_r_RxHead[8], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[7] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamAddr[7]
ZB1_o_RamAddr[7] = DFFEAS(ZB1_r_RxHead[9], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[8] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamAddr[8]
ZB1_o_RamAddr[8] = DFFEAS(ZB1_r_RxHead[10], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[0] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_ByteSel[0]
ZB1_o_ByteSel[0] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamWE is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamWE
ZB1_o_RamWE = DFFEAS(ZB1_r_State, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--ZB1_o_RamData[0] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[0]
ZB1_o_RamData[0] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[0] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamAddr[0]
ZB1_o_RamAddr[0] = DFFEAS(ZB1_r_RxHead[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[1] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamAddr[1]
ZB1_o_RamAddr[1] = DFFEAS(ZB1_r_RxHead[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[2] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamAddr[2]
ZB1_o_RamAddr[2] = DFFEAS(ZB1_r_RxHead[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[3] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamAddr[3]
ZB1_o_RamAddr[3] = DFFEAS(ZB1_r_RxHead[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[4] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamAddr[4]
ZB1_o_RamAddr[4] = DFFEAS(ZB1_r_RxHead[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[5] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamAddr[5]
ZB1_o_RamAddr[5] = DFFEAS(ZB1_r_RxHead[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[6] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamAddr[6]
ZB1_o_RamAddr[6] = DFFEAS(ZB1_r_RxHead[8], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[7] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamAddr[7]
ZB1_o_RamAddr[7] = DFFEAS(ZB1_r_RxHead[9], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[8] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamAddr[8]
ZB1_o_RamAddr[8] = DFFEAS(ZB1_r_RxHead[10], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[0] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_ByteSel[0]
ZB1_o_ByteSel[0] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamWE is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamWE
ZB1_o_RamWE = DFFEAS(ZB1_r_State, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--ZB1_o_RamData[0] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[0]
ZB1_o_RamData[0] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[0] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamAddr[0]
ZB1_o_RamAddr[0] = DFFEAS(ZB1_r_RxHead[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[1] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamAddr[1]
ZB1_o_RamAddr[1] = DFFEAS(ZB1_r_RxHead[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[2] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamAddr[2]
ZB1_o_RamAddr[2] = DFFEAS(ZB1_r_RxHead[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[3] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamAddr[3]
ZB1_o_RamAddr[3] = DFFEAS(ZB1_r_RxHead[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[4] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamAddr[4]
ZB1_o_RamAddr[4] = DFFEAS(ZB1_r_RxHead[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[5] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamAddr[5]
ZB1_o_RamAddr[5] = DFFEAS(ZB1_r_RxHead[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[6] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamAddr[6]
ZB1_o_RamAddr[6] = DFFEAS(ZB1_r_RxHead[8], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[7] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamAddr[7]
ZB1_o_RamAddr[7] = DFFEAS(ZB1_r_RxHead[9], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[8] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamAddr[8]
ZB1_o_RamAddr[8] = DFFEAS(ZB1_r_RxHead[10], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[0] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_ByteSel[0]
ZB1_o_ByteSel[0] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamWE is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamWE
ZB1_o_RamWE = DFFEAS(ZB1_r_State, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--ZB1_o_RamData[0] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[0]
ZB1_o_RamData[0] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[0] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamAddr[0]
ZB1_o_RamAddr[0] = DFFEAS(ZB1_r_RxHead[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[1] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamAddr[1]
ZB1_o_RamAddr[1] = DFFEAS(ZB1_r_RxHead[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[2] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamAddr[2]
ZB1_o_RamAddr[2] = DFFEAS(ZB1_r_RxHead[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[3] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamAddr[3]
ZB1_o_RamAddr[3] = DFFEAS(ZB1_r_RxHead[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[4] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamAddr[4]
ZB1_o_RamAddr[4] = DFFEAS(ZB1_r_RxHead[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[5] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamAddr[5]
ZB1_o_RamAddr[5] = DFFEAS(ZB1_r_RxHead[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[6] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamAddr[6]
ZB1_o_RamAddr[6] = DFFEAS(ZB1_r_RxHead[8], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[7] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamAddr[7]
ZB1_o_RamAddr[7] = DFFEAS(ZB1_r_RxHead[9], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[8] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamAddr[8]
ZB1_o_RamAddr[8] = DFFEAS(ZB1_r_RxHead[10], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[0] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_ByteSel[0]
ZB1_o_ByteSel[0] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamWE is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamWE
ZB1_o_RamWE = DFFEAS(ZB1_r_State, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--ZB1_o_RamData[0] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[0]
ZB1_o_RamData[0] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[0] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamAddr[0]
ZB1_o_RamAddr[0] = DFFEAS(ZB1_r_RxHead[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[1] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamAddr[1]
ZB1_o_RamAddr[1] = DFFEAS(ZB1_r_RxHead[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[2] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamAddr[2]
ZB1_o_RamAddr[2] = DFFEAS(ZB1_r_RxHead[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[3] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamAddr[3]
ZB1_o_RamAddr[3] = DFFEAS(ZB1_r_RxHead[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[4] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamAddr[4]
ZB1_o_RamAddr[4] = DFFEAS(ZB1_r_RxHead[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[5] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamAddr[5]
ZB1_o_RamAddr[5] = DFFEAS(ZB1_r_RxHead[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[6] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamAddr[6]
ZB1_o_RamAddr[6] = DFFEAS(ZB1_r_RxHead[8], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[7] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamAddr[7]
ZB1_o_RamAddr[7] = DFFEAS(ZB1_r_RxHead[9], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamAddr[8] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamAddr[8]
ZB1_o_RamAddr[8] = DFFEAS(ZB1_r_RxHead[10], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[0] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_ByteSel[0]
ZB1_o_ByteSel[0] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--H1L0 is PKU_IN_BLOCK_v2:inst23|o_PkuFlag~0
H1L0 = (Q1_o_kHz & (!IO38 & !IO50));


--H1L0 is PKU_IN_BLOCK_v2:inst23|o_PkuFlag~1
H1L0 = (H1_o_PkuFlag & (!H1L0 & ((!inst125) # (!C1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst23|o_PkuFlag~2
H1L0 = (H1_r_CntkHz[2]) # ((H1_r_CntkHz[3]) # ((H1_r_CntkHz[4]) # (H1_r_CntkHz[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst23|o_PkuFlag~3
H1L0 = (H1L0) # ((H1L0 & ((H1_r_CntkHz[6]) # (H1L0))));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead~16
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[1])));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead~16
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[1])));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead~16
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[1])));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead~16
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[1])));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead~16
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[1])));


--W1_o_LINE2_TEMP_DATA[1] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[1]
W1_o_LINE2_TEMP_DATA[1] = DFFEAS(W1_r_LINE2_SensData[1], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[1] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[1]
W1_o_LINE1_TEMP_DATA[1] = DFFEAS(W1_r_LINE1_SensData[1], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[1] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[1]
W1_o_LINE4_TEMP_DATA[1] = DFFEAS(W1_r_LINE4_SensData[1], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[1] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[1]
W1_o_LINE3_TEMP_DATA[1] = DFFEAS(W1_r_LINE3_SensData[1], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[1] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[1]
ZB1_o_RamData[1] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[1] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[1]
ZB1_o_RamData[1] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[1] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[1]
ZB1_o_RamData[1] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[1] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[1]
ZB1_o_RamData[1] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[1] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[1]
ZB1_o_RamData[1] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--H1L0 is PKU_IN_BLOCK_v2:inst39|o_PkuFlag~0
H1L0 = (Q1_o_kHz & (!IO35 & !IO47));


--H1L0 is PKU_IN_BLOCK_v2:inst39|o_PkuFlag~1
H1L0 = (H1_o_PkuFlag & (!H1L0 & ((!inst125) # (!C1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst39|o_PkuFlag~2
H1L0 = (H1_r_CntkHz[2]) # ((H1_r_CntkHz[3]) # ((H1_r_CntkHz[4]) # (H1_r_CntkHz[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst39|o_PkuFlag~3
H1L0 = (H1L0) # ((H1L0 & ((H1_r_CntkHz[6]) # (H1L0))));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead~19
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[2])));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead~19
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[2])));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead~19
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[2])));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead~19
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[2])));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead~19
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[2])));


--W1_o_LINE2_TEMP_DATA[2] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[2]
W1_o_LINE2_TEMP_DATA[2] = DFFEAS(W1_r_LINE2_SensData[2], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[2] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[2]
W1_o_LINE1_TEMP_DATA[2] = DFFEAS(W1_r_LINE1_SensData[2], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[2] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[2]
W1_o_LINE4_TEMP_DATA[2] = DFFEAS(W1_r_LINE4_SensData[2], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[2] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[2]
W1_o_LINE3_TEMP_DATA[2] = DFFEAS(W1_r_LINE3_SensData[2], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[2] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[2]
ZB1_o_RamData[2] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[2] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[2]
ZB1_o_RamData[2] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[2] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[2]
ZB1_o_RamData[2] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[2] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[2]
ZB1_o_RamData[2] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[2] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[2]
ZB1_o_RamData[2] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--W1_o_LINE2_TEMP_DATA[3] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[3]
W1_o_LINE2_TEMP_DATA[3] = DFFEAS(W1_r_LINE2_SensData[3], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[3] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[3]
W1_o_LINE1_TEMP_DATA[3] = DFFEAS(W1_r_LINE1_SensData[3], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[3] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[3]
W1_o_LINE4_TEMP_DATA[3] = DFFEAS(W1_r_LINE4_SensData[3], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[3] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[3]
W1_o_LINE3_TEMP_DATA[3] = DFFEAS(W1_r_LINE3_SensData[3], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[3] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[3]
ZB1_o_RamData[3] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[3] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[3]
ZB1_o_RamData[3] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[3] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[3]
ZB1_o_RamData[3] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[3] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[3]
ZB1_o_RamData[3] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[3] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[3]
ZB1_o_RamData[3] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead~22
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[3])));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead~22
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[3])));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead~22
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[3])));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead~22
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[3])));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead~22
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[3])));


--H1L0 is PKU_IN_BLOCK_v2:inst68|o_PkuLen[3]~0
H1L0 = (Q1_o_kHz & (!IO31 & !IO43));


--H1L0 is PKU_IN_BLOCK_v2:inst69|o_PkuLen[2]~0
H1L0 = (Q1_o_kHz & (!IO28 & !IO44));


--H1L0 is PKU_IN_BLOCK_v2:inst55|o_PkuLen[0]~0
H1L0 = (Q1_o_kHz & (!IO36 & !IO48));


--H1L0 is PKU_IN_BLOCK_v2:inst55|o_PkuFlag~0
H1L0 = (H1_o_PkuFlag & (!H1L0 & ((!inst125) # (!C1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst55|o_PkuFlag~1
H1L0 = (H1_r_CntkHz[2]) # ((H1_r_CntkHz[3]) # ((H1_r_CntkHz[4]) # (H1_r_CntkHz[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst55|o_PkuFlag~2
H1L0 = (H1L0) # ((H1L0 & ((H1_r_CntkHz[6]) # (H1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst74|o_PkuLen[5]~0
H1L0 = (Q1_o_kHz & (!IO32 & !IO40));


--H1L0 is PKU_IN_BLOCK_v2:inst72|o_PkuLen[0]~0
H1L0 = (Q1_o_kHz & (!IO29 & !IO39));


--H1L0 is PKU_IN_BLOCK_v2:inst71|o_PkuLen[4]~0
H1L0 = (Q1_o_kHz & (!IO30 & !IO42));


--H1L0 is PKU_IN_BLOCK_v2:inst70|o_PkuLen[3]~0
H1L0 = (Q1_o_kHz & (!IO27 & !IO41));


--H1L0 is PKU_IN_BLOCK_v2:inst56|o_PkuLen[1]~0
H1L0 = (Q1_o_kHz & (!IO33 & !IO45));


--H1L0 is PKU_IN_BLOCK_v2:inst67|o_PkuLen[1]~0
H1L0 = (Q1_o_kHz & (!IO34 & !IO46));


--W1_o_LINE2_TEMP_DATA[4] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[4]
W1_o_LINE2_TEMP_DATA[4] = DFFEAS(W1_r_LINE2_SensData[4], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[4] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[4]
W1_o_LINE1_TEMP_DATA[4] = DFFEAS(W1_r_LINE1_SensData[4], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[4] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[4]
W1_o_LINE4_TEMP_DATA[4] = DFFEAS(W1_r_LINE4_SensData[4], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[4] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[4]
W1_o_LINE3_TEMP_DATA[4] = DFFEAS(W1_r_LINE3_SensData[4], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[4] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[4]
ZB1_o_RamData[4] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[4] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[4]
ZB1_o_RamData[4] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[4] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[4]
ZB1_o_RamData[4] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[4] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[4]
ZB1_o_RamData[4] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[4] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[4]
ZB1_o_RamData[4] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead~25
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[4])));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead~25
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[4])));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead~25
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[4])));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead~25
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[4])));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead~25
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[4])));


--H1L0 is PKU_IN_BLOCK_v2:inst56|o_PkuFlag~0
H1L0 = (H1_o_PkuFlag & (!H1L0 & ((!inst125) # (!C1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst56|o_PkuFlag~1
H1L0 = (H1_r_CntkHz[2]) # ((H1_r_CntkHz[3]) # ((H1_r_CntkHz[4]) # (H1_r_CntkHz[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst56|o_PkuFlag~2
H1L0 = (H1L0) # ((H1L0 & ((H1_r_CntkHz[6]) # (H1L0))));


--W1_o_LINE2_TEMP_DATA[5] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[5]
W1_o_LINE2_TEMP_DATA[5] = DFFEAS(W1_r_LINE2_SensData[5], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[5] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[5]
W1_o_LINE1_TEMP_DATA[5] = DFFEAS(W1_r_LINE1_SensData[5], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[5] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[5]
W1_o_LINE4_TEMP_DATA[5] = DFFEAS(W1_r_LINE4_SensData[5], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[5] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[5]
W1_o_LINE3_TEMP_DATA[5] = DFFEAS(W1_r_LINE3_SensData[5], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[5] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[5]
ZB1_o_RamData[5] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[5] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[5]
ZB1_o_RamData[5] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[5] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[5]
ZB1_o_RamData[5] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[5] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[5]
ZB1_o_RamData[5] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[5] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[5]
ZB1_o_RamData[5] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead~28
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[5])));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead~28
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[5])));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead~28
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[5])));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead~28
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[5])));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead~28
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst67|o_PkuFlag~0
H1L0 = (H1_o_PkuFlag & (!H1L0 & ((!inst125) # (!C1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst67|o_PkuFlag~1
H1L0 = (H1_r_CntkHz[2]) # ((H1_r_CntkHz[3]) # ((H1_r_CntkHz[4]) # (H1_r_CntkHz[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst67|o_PkuFlag~2
H1L0 = (H1L0) # ((H1L0 & ((H1_r_CntkHz[6]) # (H1L0))));


--W1_o_LINE2_TEMP_DATA[6] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[6]
W1_o_LINE2_TEMP_DATA[6] = DFFEAS(W1_r_LINE2_SensData[6], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[6] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[6]
W1_o_LINE1_TEMP_DATA[6] = DFFEAS(W1_r_LINE1_SensData[6], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[6] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[6]
W1_o_LINE4_TEMP_DATA[6] = DFFEAS(W1_r_LINE4_SensData[6], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[6] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[6]
W1_o_LINE3_TEMP_DATA[6] = DFFEAS(W1_r_LINE3_SensData[6], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[6] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[6]
ZB1_o_RamData[6] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[6] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[6]
ZB1_o_RamData[6] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[6] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[6]
ZB1_o_RamData[6] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[6] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[6]
ZB1_o_RamData[6] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[6] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[6]
ZB1_o_RamData[6] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead~31
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[6])));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead~31
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[6])));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead~31
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[6])));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead~31
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[6])));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead~31
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[6])));


--H1L0 is PKU_IN_BLOCK_v2:inst68|o_PkuFlag~0
H1L0 = (H1_o_PkuFlag & (!H1L0 & ((!inst125) # (!C1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst68|o_PkuFlag~1
H1L0 = (H1_r_CntkHz[2]) # ((H1_r_CntkHz[3]) # ((H1_r_CntkHz[4]) # (H1_r_CntkHz[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst68|o_PkuFlag~2
H1L0 = (H1L0) # ((H1L0 & ((H1_r_CntkHz[6]) # (H1L0))));


--W1_o_LINE2_TEMP_DATA[7] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[7]
W1_o_LINE2_TEMP_DATA[7] = DFFEAS(W1_r_LINE2_SensData[7], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[7] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[7]
W1_o_LINE1_TEMP_DATA[7] = DFFEAS(W1_r_LINE1_SensData[7], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[7] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[7]
W1_o_LINE4_TEMP_DATA[7] = DFFEAS(W1_r_LINE4_SensData[7], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[7] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[7]
W1_o_LINE3_TEMP_DATA[7] = DFFEAS(W1_r_LINE3_SensData[7], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[7] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[7]
ZB1_o_RamData[7] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[7] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[7]
ZB1_o_RamData[7] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[7] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[7]
ZB1_o_RamData[7] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[7] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[7]
ZB1_o_RamData[7] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[7] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[7]
ZB1_o_RamData[7] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead~34
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[7])));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead~34
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[7])));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead~34
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[7])));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead~34
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[7])));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead~34
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[7])));


--H1L0 is PKU_IN_BLOCK_v2:inst69|o_PkuFlag~0
H1L0 = (H1_o_PkuFlag & (!H1L0 & ((!inst125) # (!C1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst69|o_PkuFlag~1
H1L0 = (H1_r_CntkHz[2]) # ((H1_r_CntkHz[3]) # ((H1_r_CntkHz[4]) # (H1_r_CntkHz[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst69|o_PkuFlag~2
H1L0 = (H1L0) # ((H1L0 & ((H1_r_CntkHz[6]) # (H1L0))));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead~37
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[8])));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead~37
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[8])));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead~37
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[8])));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead~37
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[8])));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead~37
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[8])));


--W1_o_LINE2_TEMP_DATA[8] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[8]
W1_o_LINE2_TEMP_DATA[8] = DFFEAS(W1_r_LINE2_SensData[8], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[8] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[8]
W1_o_LINE1_TEMP_DATA[8] = DFFEAS(W1_r_LINE1_SensData[8], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[8] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[8]
W1_o_LINE4_TEMP_DATA[8] = DFFEAS(W1_r_LINE4_SensData[8], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[8] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[8]
W1_o_LINE3_TEMP_DATA[8] = DFFEAS(W1_r_LINE3_SensData[8], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[8] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[8]
ZB1_o_RamData[8] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[1] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_ByteSel[1]
ZB1_o_ByteSel[1] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[8] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[8]
ZB1_o_RamData[8] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[1] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_ByteSel[1]
ZB1_o_ByteSel[1] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[8] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[8]
ZB1_o_RamData[8] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[1] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_ByteSel[1]
ZB1_o_ByteSel[1] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[8] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[8]
ZB1_o_RamData[8] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[1] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_ByteSel[1]
ZB1_o_ByteSel[1] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[8] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[8]
ZB1_o_RamData[8] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[1] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_ByteSel[1]
ZB1_o_ByteSel[1] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--H1L0 is PKU_IN_BLOCK_v2:inst70|o_PkuFlag~0
H1L0 = (H1_o_PkuFlag & (!H1L0 & ((!inst125) # (!C1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst70|o_PkuFlag~1
H1L0 = (H1_r_CntkHz[2]) # ((H1_r_CntkHz[3]) # ((H1_r_CntkHz[4]) # (H1_r_CntkHz[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst70|o_PkuFlag~2
H1L0 = (H1L0) # ((H1L0 & ((H1_r_CntkHz[6]) # (H1L0))));


--W1_o_LINE2_TEMP_DATA[9] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[9]
W1_o_LINE2_TEMP_DATA[9] = DFFEAS(W1_r_LINE2_SensData[9], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[9] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[9]
W1_o_LINE1_TEMP_DATA[9] = DFFEAS(W1_r_LINE1_SensData[9], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[9] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[9]
W1_o_LINE4_TEMP_DATA[9] = DFFEAS(W1_r_LINE4_SensData[9], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[9] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[9]
W1_o_LINE3_TEMP_DATA[9] = DFFEAS(W1_r_LINE3_SensData[9], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[9] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[9]
ZB1_o_RamData[9] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[9] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[9]
ZB1_o_RamData[9] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[9] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[9]
ZB1_o_RamData[9] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[9] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[9]
ZB1_o_RamData[9] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead~40
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[9])));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead~40
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[9])));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead~40
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[9])));


--ZB1_o_RamData[9] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[9]
ZB1_o_RamData[9] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead~40
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[9])));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead~40
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[9])));


--H1L0 is PKU_IN_BLOCK_v2:inst71|o_PkuFlag~0
H1L0 = (H1_o_PkuFlag & (!H1L0 & ((!inst125) # (!C1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst71|o_PkuFlag~1
H1L0 = (H1_r_CntkHz[2]) # ((H1_r_CntkHz[3]) # ((H1_r_CntkHz[4]) # (H1_r_CntkHz[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst71|o_PkuFlag~2
H1L0 = (H1L0) # ((H1L0 & ((H1_r_CntkHz[6]) # (H1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst72|o_PkuFlag~0
H1L0 = (H1_o_PkuFlag & (!H1L0 & ((!inst125) # (!C1L0))));


--H1L0 is PKU_IN_BLOCK_v2:inst72|o_PkuFlag~1
H1L0 = (H1_r_CntkHz[2]) # ((H1_r_CntkHz[3]) # ((H1_r_CntkHz[4]) # (H1_r_CntkHz[5])));


--H1L0 is PKU_IN_BLOCK_v2:inst72|o_PkuFlag~2
H1L0 = (H1L0) # ((H1L0 & ((H1_r_CntkHz[6]) # (H1L0))));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_RxHead~43
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[10])));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_RxHead~43
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[10])));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_RxHead~43
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[10])));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_RxHead~43
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[10])));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_RxHead~43
ZB1L0 = (B1_inst61 & (C1L0)) # (!B1_inst61 & ((ZB1_r_RxHead[10])));


--W1_o_LINE2_TEMP_DATA[10] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[10]
W1_o_LINE2_TEMP_DATA[10] = DFFEAS(W1_r_LINE2_SensData[10], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[10] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[10]
W1_o_LINE1_TEMP_DATA[10] = DFFEAS(W1_r_LINE1_SensData[10], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[10] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[10]
W1_o_LINE4_TEMP_DATA[10] = DFFEAS(W1_r_LINE4_SensData[10], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[10] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[10]
W1_o_LINE3_TEMP_DATA[10] = DFFEAS(W1_r_LINE3_SensData[10], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[10] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[10]
ZB1_o_RamData[10] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[10] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[10]
ZB1_o_RamData[10] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[10] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[10]
ZB1_o_RamData[10] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[10] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[10]
ZB1_o_RamData[10] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[10] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[10]
ZB1_o_RamData[10] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[11] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[11]
W1_o_LINE4_TEMP_DATA[11] = DFFEAS(W1_r_LINE4_SensData[11], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[11] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[11]
W1_o_LINE3_TEMP_DATA[11] = DFFEAS(W1_r_LINE3_SensData[11], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[11] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[11]
ZB1_o_RamData[11] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[11] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[11]
ZB1_o_RamData[11] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[11] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[11]
ZB1_o_RamData[11] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[11] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[11]
ZB1_o_RamData[11] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[11] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[11]
ZB1_o_RamData[11] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--H1L0 is PKU_IN_BLOCK_v2:inst74|o_PkuFlag~0
H1L0 = (H1_r_CntkHz[2]) # (H1_r_CntkHz[3]);


--H1L0 is PKU_IN_BLOCK_v2:inst74|o_PkuFlag~1
H1L0 = (H1_r_CntkHz[4]) # ((H1_r_CntkHz[5]) # ((H1_r_CntkHz[6]) # (H1L0)));


--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[2]~7
H1L0 = (inst43) # (((!GB1L0) # (!GB1L0)) # (!C1L0));


--H1L0 is PKU_IN_BLOCK_v2:inst74|o_PkuFlag~2
H1L0 = (H1L0 & (H1L0)) # (!H1L0 & (((H1_o_PkuFlag & H1L0))));


--W1_o_LINE2_TEMP_DATA[11] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[11]
W1_o_LINE2_TEMP_DATA[11] = DFFEAS(W1_r_LINE2_SensData[11], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[11] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[11]
W1_o_LINE1_TEMP_DATA[11] = DFFEAS(W1_r_LINE1_SensData[11], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE2_TEMP_DATA[12] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[12]
W1_o_LINE2_TEMP_DATA[12] = DFFEAS(W1_r_LINE2_SensData[12], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[12] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[12]
W1_o_LINE1_TEMP_DATA[12] = DFFEAS(W1_r_LINE1_SensData[12], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[12] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[12]
W1_o_LINE4_TEMP_DATA[12] = DFFEAS(W1_r_LINE4_SensData[12], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[12] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[12]
W1_o_LINE3_TEMP_DATA[12] = DFFEAS(W1_r_LINE3_SensData[12], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[12] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[12]
ZB1_o_RamData[12] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[12] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[12]
ZB1_o_RamData[12] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[12] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[12]
ZB1_o_RamData[12] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[12] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[12]
ZB1_o_RamData[12] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[12] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[12]
ZB1_o_RamData[12] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--W1_o_LINE2_TEMP_DATA[13] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[13]
W1_o_LINE2_TEMP_DATA[13] = DFFEAS(W1_r_LINE2_SensData[13], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[13] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[13]
W1_o_LINE1_TEMP_DATA[13] = DFFEAS(W1_r_LINE1_SensData[13], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[13] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[13]
W1_o_LINE4_TEMP_DATA[13] = DFFEAS(W1_r_LINE4_SensData[13], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[13] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[13]
W1_o_LINE3_TEMP_DATA[13] = DFFEAS(W1_r_LINE3_SensData[13], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[13] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[13]
ZB1_o_RamData[13] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[13] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[13]
ZB1_o_RamData[13] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[13] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[13]
ZB1_o_RamData[13] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[13] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[13]
ZB1_o_RamData[13] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[13] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[13]
ZB1_o_RamData[13] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--W1_o_LINE2_TEMP_DATA[14] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[14]
W1_o_LINE2_TEMP_DATA[14] = DFFEAS(W1_r_LINE2_SensData[14], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[14] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[14]
W1_o_LINE1_TEMP_DATA[14] = DFFEAS(W1_r_LINE1_SensData[14], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[14] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[14]
W1_o_LINE4_TEMP_DATA[14] = DFFEAS(W1_r_LINE4_SensData[14], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[14] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[14]
W1_o_LINE3_TEMP_DATA[14] = DFFEAS(W1_r_LINE3_SensData[14], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[14] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[14]
ZB1_o_RamData[14] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[14] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[14]
ZB1_o_RamData[14] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[14] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[14]
ZB1_o_RamData[14] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[14] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[14]
ZB1_o_RamData[14] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[14] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[14]
ZB1_o_RamData[14] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--W1_o_LINE2_TEMP_DATA[15] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE2_TEMP_DATA[15]
W1_o_LINE2_TEMP_DATA[15] = DFFEAS(W1_r_LINE2_SensData[15], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE1_TEMP_DATA[15] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[15]
W1_o_LINE1_TEMP_DATA[15] = DFFEAS(W1_r_LINE1_SensData[15], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE4_TEMP_DATA[15] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE4_TEMP_DATA[15]
W1_o_LINE4_TEMP_DATA[15] = DFFEAS(W1_r_LINE4_SensData[15], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_o_LINE3_TEMP_DATA[15] is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE3_TEMP_DATA[15]
W1_o_LINE3_TEMP_DATA[15] = DFFEAS(W1_r_LINE3_SensData[15], !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1_o_RamData[15] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[15]
ZB1_o_RamData[15] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[15] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[15]
ZB1_o_RamData[15] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[15] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[15]
ZB1_o_RamData[15] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[15] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[15]
ZB1_o_RamData[15] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[15] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[15]
ZB1_o_RamData[15] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[16] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[16]
ZB1_o_RamData[16] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[2] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_ByteSel[2]
ZB1_o_ByteSel[2] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[16] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[16]
ZB1_o_RamData[16] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[2] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_ByteSel[2]
ZB1_o_ByteSel[2] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[16] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[16]
ZB1_o_RamData[16] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[2] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_ByteSel[2]
ZB1_o_ByteSel[2] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[16] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[16]
ZB1_o_RamData[16] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[2] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_ByteSel[2]
ZB1_o_ByteSel[2] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[16] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[16]
ZB1_o_RamData[16] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[2] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_ByteSel[2]
ZB1_o_ByteSel[2] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[17] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[17]
ZB1_o_RamData[17] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[17] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[17]
ZB1_o_RamData[17] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[17] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[17]
ZB1_o_RamData[17] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[17] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[17]
ZB1_o_RamData[17] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[17] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[17]
ZB1_o_RamData[17] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[18] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[18]
ZB1_o_RamData[18] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[18] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[18]
ZB1_o_RamData[18] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[18] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[18]
ZB1_o_RamData[18] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[18] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[18]
ZB1_o_RamData[18] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[18] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[18]
ZB1_o_RamData[18] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[19] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[19]
ZB1_o_RamData[19] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[19] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[19]
ZB1_o_RamData[19] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[19] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[19]
ZB1_o_RamData[19] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[19] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[19]
ZB1_o_RamData[19] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[19] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[19]
ZB1_o_RamData[19] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[20] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[20]
ZB1_o_RamData[20] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[20] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[20]
ZB1_o_RamData[20] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[20] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[20]
ZB1_o_RamData[20] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[20] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[20]
ZB1_o_RamData[20] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[20] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[20]
ZB1_o_RamData[20] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[21] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[21]
ZB1_o_RamData[21] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[21] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[21]
ZB1_o_RamData[21] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[21] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[21]
ZB1_o_RamData[21] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[21] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[21]
ZB1_o_RamData[21] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[21] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[21]
ZB1_o_RamData[21] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[22] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[22]
ZB1_o_RamData[22] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[22] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[22]
ZB1_o_RamData[22] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[22] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[22]
ZB1_o_RamData[22] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[22] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[22]
ZB1_o_RamData[22] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[22] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[22]
ZB1_o_RamData[22] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[23] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[23]
ZB1_o_RamData[23] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[23] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[23]
ZB1_o_RamData[23] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[23] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[23]
ZB1_o_RamData[23] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[23] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[23]
ZB1_o_RamData[23] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[23] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[23]
ZB1_o_RamData[23] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[24] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[24]
ZB1_o_RamData[24] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[3] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_ByteSel[3]
ZB1_o_ByteSel[3] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[24] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[24]
ZB1_o_RamData[24] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[3] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_ByteSel[3]
ZB1_o_ByteSel[3] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[24] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[24]
ZB1_o_RamData[24] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[3] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_ByteSel[3]
ZB1_o_ByteSel[3] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[24] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[24]
ZB1_o_RamData[24] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[3] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_ByteSel[3]
ZB1_o_ByteSel[3] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[24] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[24]
ZB1_o_RamData[24] = DFFEAS(YB1_o_RxData[0], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_ByteSel[3] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_ByteSel[3]
ZB1_o_ByteSel[3] = DFFEAS(ZB1L0, !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[25] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[25]
ZB1_o_RamData[25] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[25] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[25]
ZB1_o_RamData[25] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[25] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[25]
ZB1_o_RamData[25] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[25] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[25]
ZB1_o_RamData[25] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[25] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[25]
ZB1_o_RamData[25] = DFFEAS(YB1_o_RxData[1], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[26] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[26]
ZB1_o_RamData[26] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[26] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[26]
ZB1_o_RamData[26] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[26] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[26]
ZB1_o_RamData[26] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[26] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[26]
ZB1_o_RamData[26] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[26] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[26]
ZB1_o_RamData[26] = DFFEAS(YB1_o_RxData[2], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[27] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[27]
ZB1_o_RamData[27] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[27] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[27]
ZB1_o_RamData[27] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[27] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[27]
ZB1_o_RamData[27] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[27] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[27]
ZB1_o_RamData[27] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[27] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[27]
ZB1_o_RamData[27] = DFFEAS(YB1_o_RxData[3], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[28] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[28]
ZB1_o_RamData[28] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[28] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[28]
ZB1_o_RamData[28] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[28] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[28]
ZB1_o_RamData[28] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[28] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[28]
ZB1_o_RamData[28] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[28] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[28]
ZB1_o_RamData[28] = DFFEAS(YB1_o_RxData[4], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[29] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[29]
ZB1_o_RamData[29] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[29] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[29]
ZB1_o_RamData[29] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[29] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[29]
ZB1_o_RamData[29] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[29] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[29]
ZB1_o_RamData[29] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[29] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[29]
ZB1_o_RamData[29] = DFFEAS(YB1_o_RxData[5], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[30] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[30]
ZB1_o_RamData[30] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[30] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[30]
ZB1_o_RamData[30] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[30] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[30]
ZB1_o_RamData[30] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[30] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[30]
ZB1_o_RamData[30] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[30] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[30]
ZB1_o_RamData[30] = DFFEAS(YB1_o_RxData[6], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[31] is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[31]
ZB1_o_RamData[31] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[31] is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[31]
ZB1_o_RamData[31] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[31] is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[31]
ZB1_o_RamData[31] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[31] is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[31]
ZB1_o_RamData[31] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--ZB1_o_RamData[31] is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[31]
ZB1_o_RamData[31] = DFFEAS(YB1_o_RxData[7], !B1_inst56,  ,  , ZB1L0,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector21~1
XB1L0 = (XB1_r_State.s_SetDV & !SB1_o_Ready);


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|WideOr5~0
XB1L0 = (XB1_r_State.s_SetDV) # ((XB1_r_State.s_Wait) # (!XB1_r_State.s_Idle));


--RB1_r_TxStart2 is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|r_TxStart2
RB1_r_TxStart2 = DFFEAS(RB1_r_TxStart1, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--RB1_r_TxStart1 is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|r_TxStart1
RB1_r_TxStart1 = DFFEAS(RB1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector18~0
XB1L0 = (!XB1_r_State.s_Wait & ((XB1_r_State.s_Idle) # ((RB1_r_TxStart2) # (!RB1_r_TxStart1))));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector18~1
XB1L0 = (XB1L0 & ((XB1L0) # ((SB1_o_Ready & XB1_r_State.s_Wait))));


--SB1L0 is UART_MODULE:inst7|UART_TX_BLOCK:inst5|o_Ready~1
SB1L0 = (SB1_r_State & (!SB1L0 & ((SB1_o_Ready)))) # (!SB1_r_State & (((XB1_o_DV) # (SB1_o_Ready))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Reset_125Hz~0
W1L0 = (U1_o_MHz & ((W1_r_State_1WIRE.WAIT_800ms & (W1_r_Reset_125Hz)) # (!W1_r_State_1WIRE.WAIT_800ms & ((W1L0))))) # (!U1_o_MHz & (W1_r_Reset_125Hz));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Reset_1MHz_BitHigh~0
W1L0 = (!W1L0 & ((!W1L0) # (!W1_r_Write_BitHigh)));


--B1L0 is UART_MODULE:inst3|inst48~0
B1L0 = (A9 & !A14);


--B1L0 is UART_MODULE:inst5|inst48~0
B1L0 = (CC1L0 & (M1L0 & (B1L0 & !A13)));


--XB1_o_RamRE is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_RamRE
XB1_o_RamRE = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_o_RamAddr[0] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_RamAddr[0]
XB1_o_RamAddr[0] = DFFEAS(XB1_r_TxTail[2], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[1] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_RamAddr[1]
XB1_o_RamAddr[1] = DFFEAS(XB1_r_TxTail[3], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[2] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_RamAddr[2]
XB1_o_RamAddr[2] = DFFEAS(XB1_r_TxTail[4], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[3] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_RamAddr[3]
XB1_o_RamAddr[3] = DFFEAS(XB1_r_TxTail[5], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[4] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_RamAddr[4]
XB1_o_RamAddr[4] = DFFEAS(XB1_r_TxTail[6], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[5] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_RamAddr[5]
XB1_o_RamAddr[5] = DFFEAS(XB1_r_TxTail[7], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[6] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_RamAddr[6]
XB1_o_RamAddr[6] = DFFEAS(XB1_r_TxTail[8], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[7] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_RamAddr[7]
XB1_o_RamAddr[7] = DFFEAS(XB1_r_TxTail[9], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[8] is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|o_RamAddr[8]
XB1_o_RamAddr[8] = DFFEAS(XB1_r_TxTail[10], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_r_State.s_WaitData1 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_State.s_WaitData1
XB1_r_State.s_WaitData1 = DFFEAS(XB1_r_State.s_SetRE, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst5|UART_TX_BLOCK:inst5|o_Ready~1
SB1L0 = (SB1_r_State & (!SB1L0 & ((SB1_o_Ready)))) # (!SB1_r_State & (((XB1_o_DV) # (SB1_o_Ready))));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector19~0
XB1L0 = (XB1_r_State.s_ResetDV) # ((SB1_o_Ready & XB1_r_State.s_Wait));


--XB1_r_State.s_SetRE is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_State.s_SetRE
XB1_r_State.s_SetRE = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector11~0
XB1L0 = (!XB1_r_State.s_ResetDV & (!XB1_r_State.s_GetData & (!XB1_r_State.s_WaitData1 & !XB1_r_State.s_SetRE)));


--RB1_r_TxStart2 is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|r_TxStart2
RB1_r_TxStart2 = DFFEAS(RB1_r_TxStart1, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--RB1_r_TxStart1 is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|r_TxStart1
RB1_r_TxStart1 = DFFEAS(RB1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_CheckPtr is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_State.s_CheckPtr
XB1_r_State.s_CheckPtr = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector11~1
XB1L0 = (!XB1_r_State.s_Idle & (!XB1_r_State.s_CheckPtr & ((RB1_r_TxStart2) # (!RB1_r_TxStart1))));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Equal0~0
XB1L0 = (XB1_r_TxTail[0] & (VB1_o_TxHead[0] & (XB1_r_TxTail[1] $ (!VB1_o_TxHead[1])))) # (!XB1_r_TxTail[0] & (!VB1_o_TxHead[0] & (XB1_r_TxTail[1] $ (!VB1_o_TxHead[1]))));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Equal0~1
XB1L0 = (XB1_r_TxTail[2] & (VB1_o_TxHead[2] & (XB1_r_TxTail[3] $ (!VB1_o_TxHead[3])))) # (!XB1_r_TxTail[2] & (!VB1_o_TxHead[2] & (XB1_r_TxTail[3] $ (!VB1_o_TxHead[3]))));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Equal0~2
XB1L0 = (XB1_r_TxTail[4] & (VB1_o_TxHead[4] & (XB1_r_TxTail[5] $ (!VB1_o_TxHead[5])))) # (!XB1_r_TxTail[4] & (!VB1_o_TxHead[4] & (XB1_r_TxTail[5] $ (!VB1_o_TxHead[5]))));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Equal0~3
XB1L0 = (XB1_r_TxTail[6] & (VB1_o_TxHead[6] & (XB1_r_TxTail[7] $ (!VB1_o_TxHead[7])))) # (!XB1_r_TxTail[6] & (!VB1_o_TxHead[6] & (XB1_r_TxTail[7] $ (!VB1_o_TxHead[7]))));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Equal0~4
XB1L0 = (XB1L0 & (XB1L0 & (XB1L0 & XB1L0)));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Equal0~5
XB1L0 = (XB1_r_TxTail[8] & (VB1_o_TxHead[8] & (XB1_r_TxTail[9] $ (!VB1_o_TxHead[9])))) # (!XB1_r_TxTail[8] & (!VB1_o_TxHead[8] & (XB1_r_TxTail[9] $ (!VB1_o_TxHead[9]))));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Equal0~6
XB1L0 = (XB1L0 & (XB1L0 & (XB1_r_TxTail[10] $ (!VB1_o_TxHead[10]))));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector11~2
XB1L0 = ((!XB1L0 & ((!XB1L0) # (!XB1_r_State.s_CheckPtr)))) # (!XB1L0);


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector21~1
XB1L0 = (XB1_r_State.s_SetDV & !SB1_o_Ready);


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|WideOr5~0
XB1L0 = (XB1_r_State.s_SetDV) # ((XB1_r_State.s_Wait) # (!XB1_r_State.s_Idle));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector18~0
XB1L0 = (!XB1_r_State.s_Wait & ((XB1_r_State.s_Idle) # ((RB1_r_TxStart2) # (!RB1_r_TxStart1))));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector18~1
XB1L0 = (XB1L0 & ((XB1L0) # ((SB1_o_Ready & XB1_r_State.s_Wait))));


--B1L0 is UART_MODULE:inst2|inst48~0
B1L0 = (BC1L0 & (M1L0 & (B1L0 & !A13)));


--XB1_o_RamRE is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_RamRE
XB1_o_RamRE = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_o_RamAddr[0] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_RamAddr[0]
XB1_o_RamAddr[0] = DFFEAS(XB1_r_TxTail[2], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[1] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_RamAddr[1]
XB1_o_RamAddr[1] = DFFEAS(XB1_r_TxTail[3], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[2] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_RamAddr[2]
XB1_o_RamAddr[2] = DFFEAS(XB1_r_TxTail[4], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[3] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_RamAddr[3]
XB1_o_RamAddr[3] = DFFEAS(XB1_r_TxTail[5], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[4] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_RamAddr[4]
XB1_o_RamAddr[4] = DFFEAS(XB1_r_TxTail[6], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[5] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_RamAddr[5]
XB1_o_RamAddr[5] = DFFEAS(XB1_r_TxTail[7], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[6] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_RamAddr[6]
XB1_o_RamAddr[6] = DFFEAS(XB1_r_TxTail[8], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[7] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_RamAddr[7]
XB1_o_RamAddr[7] = DFFEAS(XB1_r_TxTail[9], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[8] is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|o_RamAddr[8]
XB1_o_RamAddr[8] = DFFEAS(XB1_r_TxTail[10], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_r_State.s_WaitData1 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_State.s_WaitData1
XB1_r_State.s_WaitData1 = DFFEAS(XB1_r_State.s_SetRE, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst2|UART_TX_BLOCK:inst5|o_Ready~1
SB1L0 = (SB1_r_State & (!SB1L0 & ((SB1_o_Ready)))) # (!SB1_r_State & (((XB1_o_DV) # (SB1_o_Ready))));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector19~0
XB1L0 = (XB1_r_State.s_ResetDV) # ((SB1_o_Ready & XB1_r_State.s_Wait));


--XB1_r_State.s_SetRE is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_State.s_SetRE
XB1_r_State.s_SetRE = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector11~0
XB1L0 = (!XB1_r_State.s_ResetDV & (!XB1_r_State.s_GetData & (!XB1_r_State.s_WaitData1 & !XB1_r_State.s_SetRE)));


--RB1_r_TxStart2 is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|r_TxStart2
RB1_r_TxStart2 = DFFEAS(RB1_r_TxStart1, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--RB1_r_TxStart1 is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|r_TxStart1
RB1_r_TxStart1 = DFFEAS(RB1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_CheckPtr is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_State.s_CheckPtr
XB1_r_State.s_CheckPtr = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector11~1
XB1L0 = (!XB1_r_State.s_Idle & (!XB1_r_State.s_CheckPtr & ((RB1_r_TxStart2) # (!RB1_r_TxStart1))));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Equal0~0
XB1L0 = (XB1_r_TxTail[0] & (VB1_o_TxHead[0] & (XB1_r_TxTail[1] $ (!VB1_o_TxHead[1])))) # (!XB1_r_TxTail[0] & (!VB1_o_TxHead[0] & (XB1_r_TxTail[1] $ (!VB1_o_TxHead[1]))));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Equal0~1
XB1L0 = (XB1_r_TxTail[2] & (VB1_o_TxHead[2] & (XB1_r_TxTail[3] $ (!VB1_o_TxHead[3])))) # (!XB1_r_TxTail[2] & (!VB1_o_TxHead[2] & (XB1_r_TxTail[3] $ (!VB1_o_TxHead[3]))));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Equal0~2
XB1L0 = (XB1_r_TxTail[4] & (VB1_o_TxHead[4] & (XB1_r_TxTail[5] $ (!VB1_o_TxHead[5])))) # (!XB1_r_TxTail[4] & (!VB1_o_TxHead[4] & (XB1_r_TxTail[5] $ (!VB1_o_TxHead[5]))));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Equal0~3
XB1L0 = (XB1_r_TxTail[6] & (VB1_o_TxHead[6] & (XB1_r_TxTail[7] $ (!VB1_o_TxHead[7])))) # (!XB1_r_TxTail[6] & (!VB1_o_TxHead[6] & (XB1_r_TxTail[7] $ (!VB1_o_TxHead[7]))));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Equal0~4
XB1L0 = (XB1L0 & (XB1L0 & (XB1L0 & XB1L0)));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Equal0~5
XB1L0 = (XB1_r_TxTail[8] & (VB1_o_TxHead[8] & (XB1_r_TxTail[9] $ (!VB1_o_TxHead[9])))) # (!XB1_r_TxTail[8] & (!VB1_o_TxHead[8] & (XB1_r_TxTail[9] $ (!VB1_o_TxHead[9]))));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Equal0~6
XB1L0 = (XB1L0 & (XB1L0 & (XB1_r_TxTail[10] $ (!VB1_o_TxHead[10]))));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector11~2
XB1L0 = ((!XB1L0 & ((!XB1L0) # (!XB1_r_State.s_CheckPtr)))) # (!XB1L0);


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector21~1
XB1L0 = (XB1_r_State.s_SetDV & !SB1_o_Ready);


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|WideOr5~0
XB1L0 = (XB1_r_State.s_SetDV) # ((XB1_r_State.s_Wait) # (!XB1_r_State.s_Idle));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector12~0
XB1L0 = (!XB1_r_State.s_Wait & ((XB1_r_State.s_Idle) # ((RB1_r_TxStart2) # (!RB1_r_TxStart1))));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector12~1
XB1L0 = (XB1L0 & ((XB1L0) # ((SB1_o_Ready & XB1_r_State.s_Wait))));


--B1L0 is UART_MODULE:inst3|inst48~1
B1L0 = (M1L0 & (UB1L0 & (B1L0 & !A13)));


--XB1_o_RamRE is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_RamRE
XB1_o_RamRE = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_o_RamAddr[0] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_RamAddr[0]
XB1_o_RamAddr[0] = DFFEAS(XB1_r_TxTail[2], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[1] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_RamAddr[1]
XB1_o_RamAddr[1] = DFFEAS(XB1_r_TxTail[3], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[2] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_RamAddr[2]
XB1_o_RamAddr[2] = DFFEAS(XB1_r_TxTail[4], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[3] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_RamAddr[3]
XB1_o_RamAddr[3] = DFFEAS(XB1_r_TxTail[5], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[4] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_RamAddr[4]
XB1_o_RamAddr[4] = DFFEAS(XB1_r_TxTail[6], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[5] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_RamAddr[5]
XB1_o_RamAddr[5] = DFFEAS(XB1_r_TxTail[7], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[6] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_RamAddr[6]
XB1_o_RamAddr[6] = DFFEAS(XB1_r_TxTail[8], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[7] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_RamAddr[7]
XB1_o_RamAddr[7] = DFFEAS(XB1_r_TxTail[9], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[8] is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|o_RamAddr[8]
XB1_o_RamAddr[8] = DFFEAS(XB1_r_TxTail[10], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_r_State.s_WaitData1 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_State.s_WaitData1
XB1_r_State.s_WaitData1 = DFFEAS(XB1_r_State.s_SetRE, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst3|UART_TX_BLOCK:inst5|o_Ready~1
SB1L0 = (SB1_r_State & (!SB1L0 & ((SB1_o_Ready)))) # (!SB1_r_State & (((XB1_o_DV) # (SB1_o_Ready))));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector19~0
XB1L0 = (XB1_r_State.s_ResetDV) # ((SB1_o_Ready & XB1_r_State.s_Wait));


--XB1_r_State.s_SetRE is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_State.s_SetRE
XB1_r_State.s_SetRE = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector11~0
XB1L0 = (!XB1_r_State.s_ResetDV & (!XB1_r_State.s_GetData & (!XB1_r_State.s_WaitData1 & !XB1_r_State.s_SetRE)));


--RB1_r_TxStart2 is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|r_TxStart2
RB1_r_TxStart2 = DFFEAS(RB1_r_TxStart1, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--RB1_r_TxStart1 is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|r_TxStart1
RB1_r_TxStart1 = DFFEAS(RB1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_CheckPtr is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_State.s_CheckPtr
XB1_r_State.s_CheckPtr = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector11~1
XB1L0 = (!XB1_r_State.s_Idle & (!XB1_r_State.s_CheckPtr & ((RB1_r_TxStart2) # (!RB1_r_TxStart1))));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Equal0~0
XB1L0 = (XB1_r_TxTail[0] & (VB1_o_TxHead[0] & (XB1_r_TxTail[1] $ (!VB1_o_TxHead[1])))) # (!XB1_r_TxTail[0] & (!VB1_o_TxHead[0] & (XB1_r_TxTail[1] $ (!VB1_o_TxHead[1]))));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Equal0~1
XB1L0 = (XB1_r_TxTail[2] & (VB1_o_TxHead[2] & (XB1_r_TxTail[3] $ (!VB1_o_TxHead[3])))) # (!XB1_r_TxTail[2] & (!VB1_o_TxHead[2] & (XB1_r_TxTail[3] $ (!VB1_o_TxHead[3]))));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Equal0~2
XB1L0 = (XB1_r_TxTail[4] & (VB1_o_TxHead[4] & (XB1_r_TxTail[5] $ (!VB1_o_TxHead[5])))) # (!XB1_r_TxTail[4] & (!VB1_o_TxHead[4] & (XB1_r_TxTail[5] $ (!VB1_o_TxHead[5]))));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Equal0~3
XB1L0 = (XB1_r_TxTail[6] & (VB1_o_TxHead[6] & (XB1_r_TxTail[7] $ (!VB1_o_TxHead[7])))) # (!XB1_r_TxTail[6] & (!VB1_o_TxHead[6] & (XB1_r_TxTail[7] $ (!VB1_o_TxHead[7]))));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Equal0~4
XB1L0 = (XB1L0 & (XB1L0 & (XB1L0 & XB1L0)));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Equal0~5
XB1L0 = (XB1_r_TxTail[8] & (VB1_o_TxHead[8] & (XB1_r_TxTail[9] $ (!VB1_o_TxHead[9])))) # (!XB1_r_TxTail[8] & (!VB1_o_TxHead[8] & (XB1_r_TxTail[9] $ (!VB1_o_TxHead[9]))));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Equal0~6
XB1L0 = (XB1L0 & (XB1L0 & (XB1_r_TxTail[10] $ (!VB1_o_TxHead[10]))));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector11~2
XB1L0 = ((!XB1L0 & ((!XB1L0) # (!XB1_r_State.s_CheckPtr)))) # (!XB1L0);


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector21~1
XB1L0 = (XB1_r_State.s_SetDV & !SB1_o_Ready);


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|WideOr5~0
XB1L0 = (XB1_r_State.s_SetDV) # ((XB1_r_State.s_Wait) # (!XB1_r_State.s_Idle));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector12~0
XB1L0 = (!XB1_r_State.s_Wait & ((XB1_r_State.s_Idle) # ((RB1_r_TxStart2) # (!RB1_r_TxStart1))));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector12~1
XB1L0 = (XB1L0 & ((XB1L0) # ((SB1_o_Ready & XB1_r_State.s_Wait))));


--B1L0 is UART_MODULE:inst7|inst48~0
B1L0 = (A13 & (BC1L0 & (M1L0 & B1L0)));


--XB1_o_RamRE is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_RamRE
XB1_o_RamRE = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_o_RamAddr[0] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_RamAddr[0]
XB1_o_RamAddr[0] = DFFEAS(XB1_r_TxTail[2], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[1] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_RamAddr[1]
XB1_o_RamAddr[1] = DFFEAS(XB1_r_TxTail[3], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[2] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_RamAddr[2]
XB1_o_RamAddr[2] = DFFEAS(XB1_r_TxTail[4], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[3] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_RamAddr[3]
XB1_o_RamAddr[3] = DFFEAS(XB1_r_TxTail[5], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[4] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_RamAddr[4]
XB1_o_RamAddr[4] = DFFEAS(XB1_r_TxTail[6], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[5] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_RamAddr[5]
XB1_o_RamAddr[5] = DFFEAS(XB1_r_TxTail[7], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[6] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_RamAddr[6]
XB1_o_RamAddr[6] = DFFEAS(XB1_r_TxTail[8], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[7] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_RamAddr[7]
XB1_o_RamAddr[7] = DFFEAS(XB1_r_TxTail[9], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[8] is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|o_RamAddr[8]
XB1_o_RamAddr[8] = DFFEAS(XB1_r_TxTail[10], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_r_State.s_WaitData1 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_State.s_WaitData1
XB1_r_State.s_WaitData1 = DFFEAS(XB1_r_State.s_SetRE, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector19~0
XB1L0 = (XB1_r_State.s_ResetDV) # ((SB1_o_Ready & XB1_r_State.s_Wait));


--XB1_r_State.s_SetRE is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_State.s_SetRE
XB1_r_State.s_SetRE = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector11~0
XB1L0 = (!XB1_r_State.s_ResetDV & (!XB1_r_State.s_GetData & (!XB1_r_State.s_WaitData1 & !XB1_r_State.s_SetRE)));


--XB1_r_State.s_CheckPtr is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_State.s_CheckPtr
XB1_r_State.s_CheckPtr = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector11~1
XB1L0 = (!XB1_r_State.s_Idle & (!XB1_r_State.s_CheckPtr & ((RB1_r_TxStart2) # (!RB1_r_TxStart1))));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Equal0~0
XB1L0 = (XB1_r_TxTail[0] & (VB1_o_TxHead[0] & (XB1_r_TxTail[1] $ (!VB1_o_TxHead[1])))) # (!XB1_r_TxTail[0] & (!VB1_o_TxHead[0] & (XB1_r_TxTail[1] $ (!VB1_o_TxHead[1]))));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Equal0~1
XB1L0 = (XB1_r_TxTail[2] & (VB1_o_TxHead[2] & (VB1_o_TxHead[3] $ (!XB1_r_TxTail[3])))) # (!XB1_r_TxTail[2] & (!VB1_o_TxHead[2] & (VB1_o_TxHead[3] $ (!XB1_r_TxTail[3]))));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Equal0~2
XB1L0 = (VB1_o_TxHead[4] & (XB1_r_TxTail[4] & (VB1_o_TxHead[5] $ (!XB1_r_TxTail[5])))) # (!VB1_o_TxHead[4] & (!XB1_r_TxTail[4] & (VB1_o_TxHead[5] $ (!XB1_r_TxTail[5]))));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Equal0~3
XB1L0 = (VB1_o_TxHead[6] & (XB1_r_TxTail[6] & (VB1_o_TxHead[7] $ (!XB1_r_TxTail[7])))) # (!VB1_o_TxHead[6] & (!XB1_r_TxTail[6] & (VB1_o_TxHead[7] $ (!XB1_r_TxTail[7]))));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Equal0~4
XB1L0 = (XB1L0 & (XB1L0 & (XB1L0 & XB1L0)));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Equal0~5
XB1L0 = (VB1_o_TxHead[8] & (XB1_r_TxTail[8] & (VB1_o_TxHead[9] $ (!XB1_r_TxTail[9])))) # (!VB1_o_TxHead[8] & (!XB1_r_TxTail[8] & (VB1_o_TxHead[9] $ (!XB1_r_TxTail[9]))));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Equal0~6
XB1L0 = (XB1L0 & (XB1L0 & (XB1_r_TxTail[10] $ (!VB1_o_TxHead[10]))));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector11~2
XB1L0 = ((!XB1L0 & ((!XB1L0) # (!XB1_r_State.s_CheckPtr)))) # (!XB1L0);


--B1L0 is UART_MODULE:inst6|inst48~0
B1L0 = (M1L0 & (BC1L0 & (B1L0 & !A13)));


--XB1_o_RamRE is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_RamRE
XB1_o_RamRE = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1_o_RamAddr[0] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_RamAddr[0]
XB1_o_RamAddr[0] = DFFEAS(XB1_r_TxTail[2], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[1] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_RamAddr[1]
XB1_o_RamAddr[1] = DFFEAS(XB1_r_TxTail[3], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[2] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_RamAddr[2]
XB1_o_RamAddr[2] = DFFEAS(XB1_r_TxTail[4], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[3] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_RamAddr[3]
XB1_o_RamAddr[3] = DFFEAS(XB1_r_TxTail[5], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[4] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_RamAddr[4]
XB1_o_RamAddr[4] = DFFEAS(XB1_r_TxTail[6], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[5] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_RamAddr[5]
XB1_o_RamAddr[5] = DFFEAS(XB1_r_TxTail[7], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[6] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_RamAddr[6]
XB1_o_RamAddr[6] = DFFEAS(XB1_r_TxTail[8], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[7] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_RamAddr[7]
XB1_o_RamAddr[7] = DFFEAS(XB1_r_TxTail[9], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_o_RamAddr[8] is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|o_RamAddr[8]
XB1_o_RamAddr[8] = DFFEAS(XB1_r_TxTail[10], !B1_inst56,  ,  , XB1_r_State.s_SetRE,  ,  ,  ,  );


--XB1_r_State.s_WaitData1 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_State.s_WaitData1
XB1_r_State.s_WaitData1 = DFFEAS(XB1_r_State.s_SetRE, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--SB1L0 is UART_MODULE:inst6|UART_TX_BLOCK:inst5|o_Ready~1
SB1L0 = (SB1_r_State & (!SB1L0 & ((SB1_o_Ready)))) # (!SB1_r_State & (((XB1_o_DV) # (SB1_o_Ready))));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector19~0
XB1L0 = (XB1_r_State.s_ResetDV) # ((SB1_o_Ready & XB1_r_State.s_Wait));


--XB1_r_State.s_SetRE is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_State.s_SetRE
XB1_r_State.s_SetRE = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector11~0
XB1L0 = (!XB1_r_State.s_ResetDV & (!XB1_r_State.s_GetData & (!XB1_r_State.s_WaitData1 & !XB1_r_State.s_SetRE)));


--RB1_r_TxStart2 is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|r_TxStart2
RB1_r_TxStart2 = DFFEAS(RB1_r_TxStart1, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--RB1_r_TxStart1 is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|r_TxStart1
RB1_r_TxStart1 = DFFEAS(RB1L0, !CLK_25MHz2,  ,  ,  ,  ,  ,  ,  );


--XB1_r_State.s_CheckPtr is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_State.s_CheckPtr
XB1_r_State.s_CheckPtr = DFFEAS(XB1L0, !B1_inst56,  ,  ,  ,  ,  ,  ,  );


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector11~1
XB1L0 = (!XB1_r_State.s_Idle & (!XB1_r_State.s_CheckPtr & ((RB1_r_TxStart2) # (!RB1_r_TxStart1))));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Equal0~0
XB1L0 = (XB1_r_TxTail[0] & (VB1_o_TxHead[0] & (XB1_r_TxTail[1] $ (!VB1_o_TxHead[1])))) # (!XB1_r_TxTail[0] & (!VB1_o_TxHead[0] & (XB1_r_TxTail[1] $ (!VB1_o_TxHead[1]))));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Equal0~1
XB1L0 = (XB1_r_TxTail[2] & (VB1_o_TxHead[2] & (VB1_o_TxHead[3] $ (!XB1_r_TxTail[3])))) # (!XB1_r_TxTail[2] & (!VB1_o_TxHead[2] & (VB1_o_TxHead[3] $ (!XB1_r_TxTail[3]))));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Equal0~2
XB1L0 = (VB1_o_TxHead[4] & (XB1_r_TxTail[4] & (VB1_o_TxHead[5] $ (!XB1_r_TxTail[5])))) # (!VB1_o_TxHead[4] & (!XB1_r_TxTail[4] & (VB1_o_TxHead[5] $ (!XB1_r_TxTail[5]))));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Equal0~3
XB1L0 = (VB1_o_TxHead[6] & (XB1_r_TxTail[6] & (VB1_o_TxHead[7] $ (!XB1_r_TxTail[7])))) # (!VB1_o_TxHead[6] & (!XB1_r_TxTail[6] & (VB1_o_TxHead[7] $ (!XB1_r_TxTail[7]))));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Equal0~4
XB1L0 = (XB1L0 & (XB1L0 & (XB1L0 & XB1L0)));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Equal0~5
XB1L0 = (VB1_o_TxHead[8] & (XB1_r_TxTail[8] & (VB1_o_TxHead[9] $ (!XB1_r_TxTail[9])))) # (!VB1_o_TxHead[8] & (!XB1_r_TxTail[8] & (VB1_o_TxHead[9] $ (!XB1_r_TxTail[9]))));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Equal0~6
XB1L0 = (XB1L0 & (XB1L0 & (XB1_r_TxTail[10] $ (!VB1_o_TxHead[10]))));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector11~2
XB1L0 = ((!XB1L0 & ((!XB1L0) # (!XB1_r_State.s_CheckPtr)))) # (!XB1L0);


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector21~1
XB1L0 = (XB1_r_State.s_SetDV & !SB1_o_Ready);


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|WideOr5~0
XB1L0 = (XB1_r_State.s_SetDV) # ((XB1_r_State.s_Wait) # (!XB1_r_State.s_Idle));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector12~0
XB1L0 = (!XB1_r_State.s_Wait & ((XB1_r_State.s_Idle) # ((RB1_r_TxStart2) # (!RB1_r_TxStart1))));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector12~1
XB1L0 = (XB1L0 & ((XB1L0) # ((SB1_o_Ready & XB1_r_State.s_Wait))));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|r_Cnt~0
Q1L0 = (Q1L0 & (((!Q1L0) # (!Q1_r_Cnt[17])) # (!Q1_r_Cnt[16])));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|r_Cnt~1
Q1L0 = (Q1L0 & (((!Q1L0) # (!Q1_r_Cnt[17])) # (!Q1_r_Cnt[16])));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|r_Cnt~2
Q1L0 = (Q1L0 & (((!Q1L0) # (!Q1_r_Cnt[17])) # (!Q1_r_Cnt[16])));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|r_Cnt~3
Q1L0 = (Q1L0 & (((!Q1L0) # (!Q1_r_Cnt[17])) # (!Q1_r_Cnt[16])));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|r_Cnt~4
Q1L0 = (Q1L0 & (((!Q1L0) # (!Q1_r_Cnt[17])) # (!Q1_r_Cnt[16])));


--Q1L0 is FREQ_8kHz_BLOCK:inst27|r_Cnt~5
Q1L0 = (Q1L0 & (((!Q1L0) # (!Q1_r_Cnt[17])) # (!Q1_r_Cnt[16])));


--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[6]~21
H1L0 = ((!IO37 & !IO49)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst12|r_CntkHz[6]~22
H1L0 = (Q1_o_kHz) # ((C1L0 & inst125));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|r_State~0
ZB1L0 = (YB1_r_RxDataValid & !ZB1_r_State);


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|r_State~0
ZB1L0 = (YB1_r_RxDataValid & !ZB1_r_State);


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|r_State~0
ZB1L0 = (YB1_r_RxDataValid & !ZB1_r_State);


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|r_State~0
ZB1L0 = (YB1_r_RxDataValid & !ZB1_r_State);


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|r_State~0
ZB1L0 = (YB1_r_RxDataValid & !ZB1_r_State);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|o_TEMP_WR~0
W1L0 = (W1_r_Cnt_Bit_Rx[4] & ((W1L0 & (W1L0)) # (!W1L0 & ((W1_o_TEMP_WR))))) # (!W1_r_Cnt_Bit_Rx[4] & (((W1_o_TEMP_WR))));


--W1_r_LINE2_SensData[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[0]
W1_r_LINE2_SensData[0] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[0]
W1_r_LINE1_SensData[0] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[0]
W1_r_LINE3_SensData[0] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[0] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[0]
W1_r_LINE4_SensData[0] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[0]~0
ZB1L0 = (YB1_r_RxDataValid & (!ZB1_r_RxHead[0] & (!ZB1_r_RxHead[1] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|Mux3~0
ZB1L0 = (!ZB1_r_RxHead[0] & !ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[0]~0
ZB1L0 = (YB1_r_RxDataValid & (!ZB1_r_RxHead[0] & (!ZB1_r_RxHead[1] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|Mux3~0
ZB1L0 = (!ZB1_r_RxHead[0] & !ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[0]~0
ZB1L0 = (YB1_r_RxDataValid & (!ZB1_r_RxHead[0] & (!ZB1_r_RxHead[1] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|Mux3~0
ZB1L0 = (!ZB1_r_RxHead[0] & !ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[0]~0
ZB1L0 = (YB1_r_RxDataValid & (!ZB1_r_RxHead[0] & (!ZB1_r_RxHead[1] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|Mux3~0
ZB1L0 = (!ZB1_r_RxHead[0] & !ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[0]~0
ZB1L0 = (YB1_r_RxDataValid & (!ZB1_r_RxHead[0] & (!ZB1_r_RxHead[1] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|Mux3~0
ZB1L0 = (!ZB1_r_RxHead[0] & !ZB1_r_RxHead[1]);


--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[0]~21
H1L0 = ((!IO38 & !IO50)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst23|r_CntkHz[0]~22
H1L0 = (Q1_o_kHz) # ((C1L0 & inst125));


--W1_r_LINE2_SensData[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[1]
W1_r_LINE2_SensData[1] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[1]
W1_r_LINE1_SensData[1] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[1]
W1_r_LINE4_SensData[1] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[1] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[1]
W1_r_LINE3_SensData[1] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[6]~21
H1L0 = ((!IO35 & !IO47)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst39|r_CntkHz[6]~22
H1L0 = (Q1_o_kHz) # ((C1L0 & inst125));


--W1_r_LINE2_SensData[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[2]
W1_r_LINE2_SensData[2] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[2]
W1_r_LINE1_SensData[2] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[2]
W1_r_LINE4_SensData[2] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[2] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[2]
W1_r_LINE3_SensData[2] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SensData[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[3]
W1_r_LINE2_SensData[3] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[3]
W1_r_LINE1_SensData[3] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[3]
W1_r_LINE4_SensData[3] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[3] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[3]
W1_r_LINE3_SensData[3] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[5]~9
H1L0 = ((!IO31 & !IO43)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst68|r_CntkHz[5]~10
H1L0 = (Q1_o_kHz) # ((C1L0 & inst125));


--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[5]~9
H1L0 = ((!IO28 & !IO44)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst69|r_CntkHz[5]~10
H1L0 = (Q1_o_kHz) # ((C1L0 & inst125));


--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[6]~21
H1L0 = ((!IO36 & !IO48)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst55|r_CntkHz[6]~22
H1L0 = (Q1_o_kHz) # ((C1L0 & inst125));


--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[2]~10
H1L0 = ((!IO32 & !IO40)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst74|r_CntkHz[2]~11
H1L0 = (Q1_o_kHz) # (!H1L0);


--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[2]~9
H1L0 = ((!IO29 & !IO39)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst72|r_CntkHz[2]~10
H1L0 = (Q1_o_kHz) # ((C1L0 & inst125));


--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[2]~9
H1L0 = ((!IO30 & !IO42)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst71|r_CntkHz[2]~10
H1L0 = (Q1_o_kHz) # ((C1L0 & inst125));


--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[0]~9
H1L0 = ((!IO27 & !IO41)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst70|r_CntkHz[0]~10
H1L0 = (Q1_o_kHz) # ((C1L0 & inst125));


--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[6]~9
H1L0 = ((!IO33 & !IO45)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst56|r_CntkHz[6]~10
H1L0 = (Q1_o_kHz) # ((C1L0 & inst125));


--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[1]~9
H1L0 = ((!IO34 & !IO46)) # (!Q1_o_kHz);


--H1L0 is PKU_IN_BLOCK_v2:inst67|r_CntkHz[1]~10
H1L0 = (Q1_o_kHz) # ((C1L0 & inst125));


--W1_r_LINE2_SensData[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[4]
W1_r_LINE2_SensData[4] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[4]
W1_r_LINE1_SensData[4] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[4]
W1_r_LINE4_SensData[4] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[4] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[4]
W1_r_LINE3_SensData[4] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SensData[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[5]
W1_r_LINE2_SensData[5] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[5]
W1_r_LINE1_SensData[5] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[5]
W1_r_LINE4_SensData[5] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[5] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[5]
W1_r_LINE3_SensData[5] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SensData[6] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[6]
W1_r_LINE2_SensData[6] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[6] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[6]
W1_r_LINE1_SensData[6] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[6] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[6]
W1_r_LINE4_SensData[6] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[6] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[6]
W1_r_LINE3_SensData[6] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SensData[7] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[7]
W1_r_LINE2_SensData[7] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[7] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[7]
W1_r_LINE1_SensData[7] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[7] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[7]
W1_r_LINE4_SensData[7] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[7] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[7]
W1_r_LINE3_SensData[7] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SensData[8] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[8]
W1_r_LINE2_SensData[8] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[8] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[8]
W1_r_LINE1_SensData[8] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[8] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[8]
W1_r_LINE4_SensData[8] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[8] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[8]
W1_r_LINE3_SensData[8] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[8]~1
ZB1L0 = (ZB1_r_RxHead[0] & (YB1_r_RxDataValid & (!ZB1_r_RxHead[1] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|Mux19~0
ZB1L0 = (ZB1_r_RxHead[0] & !ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[8]~1
ZB1L0 = (ZB1_r_RxHead[0] & (YB1_r_RxDataValid & (!ZB1_r_RxHead[1] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|Mux19~0
ZB1L0 = (ZB1_r_RxHead[0] & !ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[8]~1
ZB1L0 = (ZB1_r_RxHead[0] & (YB1_r_RxDataValid & (!ZB1_r_RxHead[1] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|Mux19~0
ZB1L0 = (ZB1_r_RxHead[0] & !ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[8]~1
ZB1L0 = (ZB1_r_RxHead[0] & (YB1_r_RxDataValid & (!ZB1_r_RxHead[1] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|Mux19~0
ZB1L0 = (ZB1_r_RxHead[0] & !ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[8]~1
ZB1L0 = (ZB1_r_RxHead[0] & (YB1_r_RxDataValid & (!ZB1_r_RxHead[1] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|Mux19~0
ZB1L0 = (ZB1_r_RxHead[0] & !ZB1_r_RxHead[1]);


--W1_r_LINE2_SensData[9] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[9]
W1_r_LINE2_SensData[9] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[9] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[9]
W1_r_LINE1_SensData[9] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[9] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[9]
W1_r_LINE4_SensData[9] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[9] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[9]
W1_r_LINE3_SensData[9] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SensData[10] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[10]
W1_r_LINE2_SensData[10] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[10] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[10]
W1_r_LINE1_SensData[10] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[10] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[10]
W1_r_LINE4_SensData[10] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[10] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[10]
W1_r_LINE3_SensData[10] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[11] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[11]
W1_r_LINE4_SensData[11] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[11] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[11]
W1_r_LINE3_SensData[11] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SensData[11] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[11]
W1_r_LINE2_SensData[11] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[11] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[11]
W1_r_LINE1_SensData[11] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SensData[12] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[12]
W1_r_LINE2_SensData[12] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[12] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[12]
W1_r_LINE1_SensData[12] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[12] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[12]
W1_r_LINE4_SensData[12] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[12] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[12]
W1_r_LINE3_SensData[12] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SensData[13] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[13]
W1_r_LINE2_SensData[13] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[13] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[13]
W1_r_LINE1_SensData[13] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[13] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[13]
W1_r_LINE4_SensData[13] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[13] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[13]
W1_r_LINE3_SensData[13] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SensData[14] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[14]
W1_r_LINE2_SensData[14] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[14] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[14]
W1_r_LINE1_SensData[14] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[14] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[14]
W1_r_LINE4_SensData[14] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[14] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[14]
W1_r_LINE3_SensData[14] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE2_SensData[15] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE2_SensData[15]
W1_r_LINE2_SensData[15] = DFFEAS(SW_2_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE1_SensData[15] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[15]
W1_r_LINE1_SensData[15] = DFFEAS(SW_1_W_I, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE4_SensData[15] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE4_SensData[15]
W1_r_LINE4_SensData[15] = DFFEAS(S2, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--W1_r_LINE3_SensData[15] is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE3_SensData[15]
W1_r_LINE3_SensData[15] = DFFEAS(S1, !CLK_25MHz2,  ,  , W1L0,  ,  ,  ,  );


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[16]~2
ZB1L0 = (ZB1_r_RxHead[1] & (YB1_r_RxDataValid & (!ZB1_r_RxHead[0] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|Mux19~1
ZB1L0 = (ZB1_r_RxHead[1] & !ZB1_r_RxHead[0]);


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[16]~2
ZB1L0 = (ZB1_r_RxHead[1] & (YB1_r_RxDataValid & (!ZB1_r_RxHead[0] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|Mux19~1
ZB1L0 = (ZB1_r_RxHead[1] & !ZB1_r_RxHead[0]);


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[16]~2
ZB1L0 = (ZB1_r_RxHead[1] & (YB1_r_RxDataValid & (!ZB1_r_RxHead[0] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|Mux19~1
ZB1L0 = (ZB1_r_RxHead[1] & !ZB1_r_RxHead[0]);


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[16]~2
ZB1L0 = (ZB1_r_RxHead[1] & (YB1_r_RxDataValid & (!ZB1_r_RxHead[0] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|Mux19~1
ZB1L0 = (ZB1_r_RxHead[1] & !ZB1_r_RxHead[0]);


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[16]~2
ZB1L0 = (ZB1_r_RxHead[1] & (YB1_r_RxDataValid & (!ZB1_r_RxHead[0] & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|Mux19~1
ZB1L0 = (ZB1_r_RxHead[1] & !ZB1_r_RxHead[0]);


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|o_RamData[24]~3
ZB1L0 = (ZB1_r_RxHead[0] & (ZB1_r_RxHead[1] & (YB1_r_RxDataValid & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst3|UART_RXDATA_BLOCK:inst23|Mux19~2
ZB1L0 = (ZB1_r_RxHead[0] & ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|o_RamData[24]~3
ZB1L0 = (ZB1_r_RxHead[0] & (ZB1_r_RxHead[1] & (YB1_r_RxDataValid & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst2|UART_RXDATA_BLOCK:inst23|Mux19~2
ZB1L0 = (ZB1_r_RxHead[0] & ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|o_RamData[24]~3
ZB1L0 = (ZB1_r_RxHead[0] & (ZB1_r_RxHead[1] & (YB1_r_RxDataValid & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst6|UART_RXDATA_BLOCK:inst23|Mux19~2
ZB1L0 = (ZB1_r_RxHead[0] & ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|o_RamData[24]~3
ZB1L0 = (ZB1_r_RxHead[0] & (ZB1_r_RxHead[1] & (YB1_r_RxDataValid & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst5|UART_RXDATA_BLOCK:inst23|Mux19~2
ZB1L0 = (ZB1_r_RxHead[0] & ZB1_r_RxHead[1]);


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|o_RamData[24]~3
ZB1L0 = (ZB1_r_RxHead[0] & (ZB1_r_RxHead[1] & (YB1_r_RxDataValid & !ZB1_r_State)));


--ZB1L0 is UART_MODULE:inst7|UART_RXDATA_BLOCK:inst23|Mux19~2
ZB1L0 = (ZB1_r_RxHead[0] & ZB1_r_RxHead[1]);


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector20~0
XB1L0 = (XB1_r_State.s_SetRE) # ((XB1_o_RamRE & !XB1_r_State.s_WaitData1));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector13~0
XB1L0 = (!XB1L0 & XB1_r_State.s_CheckPtr);


--RB1L0 is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|r_TxStart1~0
RB1L0 = (C1L0 & (CC1L0 & (CC1L0 & !inst43)));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|Selector12~0
XB1L0 = (!XB1L0 & ((XB1L0 & (XB1_r_State.s_CheckPtr)) # (!XB1L0 & ((XB1L0)))));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector20~0
XB1L0 = (XB1_r_State.s_SetRE) # ((XB1_o_RamRE & !XB1_r_State.s_WaitData1));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector13~0
XB1L0 = (!XB1L0 & XB1_r_State.s_CheckPtr);


--RB1L0 is UART_MODULE:inst2|UART_CTRL_BLOCK:inst3|r_TxStart1~0
RB1L0 = (C1L0 & RB1L0);


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|Selector12~2
XB1L0 = (!XB1L0 & ((XB1L0 & (XB1_r_State.s_CheckPtr)) # (!XB1L0 & ((XB1L0)))));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector20~0
XB1L0 = (XB1_r_State.s_SetRE) # ((XB1_o_RamRE & !XB1_r_State.s_WaitData1));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector13~0
XB1L0 = (!XB1L0 & XB1_r_State.s_CheckPtr);


--RB1L0 is UART_MODULE:inst3|UART_CTRL_BLOCK:inst3|r_TxStart1~0
RB1L0 = (C1L0 & RB1L0);


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|Selector12~2
XB1L0 = (!XB1L0 & ((XB1L0 & (XB1_r_State.s_CheckPtr)) # (!XB1L0 & ((XB1L0)))));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector20~0
XB1L0 = (XB1_r_State.s_SetRE) # ((XB1_o_RamRE & !XB1_r_State.s_WaitData1));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector13~0
XB1L0 = (!XB1L0 & XB1_r_State.s_CheckPtr);


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|Selector12~0
XB1L0 = (!XB1L0 & ((XB1L0 & (XB1_r_State.s_CheckPtr)) # (!XB1L0 & ((XB1L0)))));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector20~0
XB1L0 = (XB1_r_State.s_SetRE) # ((XB1_o_RamRE & !XB1_r_State.s_WaitData1));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector13~0
XB1L0 = (!XB1L0 & XB1_r_State.s_CheckPtr);


--RB1L0 is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|r_TxStart1~0
RB1L0 = (C1L0 & (CC1L0 & (BC1L0 & !inst43)));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|Selector12~2
XB1L0 = (!XB1L0 & ((XB1L0 & (XB1_r_State.s_CheckPtr)) # (!XB1L0 & ((XB1L0)))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_State~7
YB1L0 = (YB1_r_CntClk[3] & (YB1_r_CntClk[4] & ((YB1_r_CntClk[1]) # (YB1_r_CntClk[2]))));


--YB1_r_RxDataParity is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxDataParity
YB1_r_RxDataParity = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxBitBuffer is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxBitBuffer
YB1_r_RxBitBuffer = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxDataValid~0
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[3] & (!YB1_r_RxDataParity & !YB1_r_RxBitBuffer)));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxDataValid~1
YB1L0 = (YB1L0 & YB1L0);


--YB1_r_State.s_RxIn is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_State.s_RxIn
YB1_r_State.s_RxIn = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_State~7
YB1L0 = (YB1_r_CntClk[3] & (YB1_r_CntClk[4] & ((YB1_r_CntClk[1]) # (YB1_r_CntClk[2]))));


--YB1_r_RxDataParity is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxDataParity
YB1_r_RxDataParity = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxBitBuffer is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxBitBuffer
YB1_r_RxBitBuffer = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxDataValid~0
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[3] & (!YB1_r_RxDataParity & !YB1_r_RxBitBuffer)));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxDataValid~1
YB1L0 = (YB1L0 & YB1L0);


--YB1_r_State.s_RxIn is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_State.s_RxIn
YB1_r_State.s_RxIn = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_State~7
YB1L0 = (YB1_r_CntClk[3] & (YB1_r_CntClk[4] & ((YB1_r_CntClk[1]) # (YB1_r_CntClk[2]))));


--YB1_r_RxDataParity is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxDataParity
YB1_r_RxDataParity = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxBitBuffer is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxBitBuffer
YB1_r_RxBitBuffer = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxDataValid~0
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[3] & (!YB1_r_RxDataParity & !YB1_r_RxBitBuffer)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxDataValid~1
YB1L0 = (YB1L0 & YB1L0);


--YB1_r_State.s_RxIn is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_State.s_RxIn
YB1_r_State.s_RxIn = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_State~7
YB1L0 = (YB1_r_CntClk[3] & (YB1_r_CntClk[4] & ((YB1_r_CntClk[1]) # (YB1_r_CntClk[2]))));


--YB1_r_RxDataParity is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxDataParity
YB1_r_RxDataParity = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxBitBuffer is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxBitBuffer
YB1_r_RxBitBuffer = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxDataValid~0
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[3] & (!YB1_r_RxDataParity & !YB1_r_RxBitBuffer)));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxDataValid~1
YB1L0 = (YB1L0 & YB1L0);


--YB1_r_State.s_RxIn is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_State.s_RxIn
YB1_r_State.s_RxIn = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_State~7
YB1L0 = (YB1_r_CntClk[3] & (YB1_r_CntClk[4] & ((YB1_r_CntClk[1]) # (YB1_r_CntClk[2]))));


--YB1_r_RxDataParity is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxDataParity
YB1_r_RxDataParity = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxBitBuffer is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxBitBuffer
YB1_r_RxBitBuffer = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxDataValid~0
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[3] & (!YB1_r_RxDataParity & !YB1_r_RxBitBuffer)));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxDataValid~1
YB1L0 = (YB1L0 & YB1L0);


--YB1_r_State.s_RxIn is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_State.s_RxIn
YB1_r_State.s_RxIn = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[0]~0
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--YB1_r_RxData[0] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[0]
YB1_r_RxData[0] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[0] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[0]
YB1_r_RxData[0] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[0] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[0]
YB1_r_RxData[0] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[0] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[0]
YB1_r_RxData[0] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[0] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[0]
YB1_r_RxData[0] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~0
W1L0 = (W1_r_Cnt_Bit_Rx[0] & (!W1_r_Cnt_Bit_Rx[1] & (!W1_r_Cnt_Bit_Rx[2] & !W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[1]~1
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--YB1_r_RxData[1] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[1]
YB1_r_RxData[1] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[1] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[1]
YB1_r_RxData[1] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[1] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[1]
YB1_r_RxData[1] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[1] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[1]
YB1_r_RxData[1] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[1] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[1]
YB1_r_RxData[1] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~1
W1L0 = (!W1_r_Cnt_Bit_Rx[0] & (W1_r_Cnt_Bit_Rx[1] & (!W1_r_Cnt_Bit_Rx[2] & !W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[2]~2
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--YB1_r_RxData[2] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[2]
YB1_r_RxData[2] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[2] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[2]
YB1_r_RxData[2] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[2] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[2]
YB1_r_RxData[2] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[2] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[2]
YB1_r_RxData[2] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[2] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[2]
YB1_r_RxData[2] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~2
W1L0 = (W1_r_Cnt_Bit_Rx[0] & (W1_r_Cnt_Bit_Rx[1] & (!W1_r_Cnt_Bit_Rx[2] & !W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[3]~3
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--YB1_r_RxData[3] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[3]
YB1_r_RxData[3] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[3] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[3]
YB1_r_RxData[3] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[3] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[3]
YB1_r_RxData[3] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[3] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[3]
YB1_r_RxData[3] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[3] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[3]
YB1_r_RxData[3] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~3
W1L0 = (!W1_r_Cnt_Bit_Rx[0] & (!W1_r_Cnt_Bit_Rx[1] & (W1_r_Cnt_Bit_Rx[2] & !W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[4]~4
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--YB1_r_RxData[4] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[4]
YB1_r_RxData[4] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[4] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[4]
YB1_r_RxData[4] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[4] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[4]
YB1_r_RxData[4] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[4] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[4]
YB1_r_RxData[4] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[4] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[4]
YB1_r_RxData[4] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~4
W1L0 = (W1_r_Cnt_Bit_Rx[0] & (!W1_r_Cnt_Bit_Rx[1] & (W1_r_Cnt_Bit_Rx[2] & !W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[5]~5
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--YB1_r_RxData[5] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[5]
YB1_r_RxData[5] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[5] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[5]
YB1_r_RxData[5] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[5] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[5]
YB1_r_RxData[5] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[5] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[5]
YB1_r_RxData[5] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[5] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[5]
YB1_r_RxData[5] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~5
W1L0 = (!W1_r_Cnt_Bit_Rx[0] & (W1_r_Cnt_Bit_Rx[1] & (W1_r_Cnt_Bit_Rx[2] & !W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[6]~6
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--YB1_r_RxData[6] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[6]
YB1_r_RxData[6] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[6] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[6]
YB1_r_RxData[6] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[6] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[6]
YB1_r_RxData[6] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[6] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[6]
YB1_r_RxData[6] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[6] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[6]
YB1_r_RxData[6] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~6
W1L0 = (W1_r_Cnt_Bit_Rx[0] & (W1_r_Cnt_Bit_Rx[1] & (W1_r_Cnt_Bit_Rx[2] & !W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[7]~7
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--YB1_r_RxData[7] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[7]
YB1_r_RxData[7] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[7] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[7]
YB1_r_RxData[7] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[7] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[7]
YB1_r_RxData[7] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[7] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[7]
YB1_r_RxData[7] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_RxData[7] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[7]
YB1_r_RxData[7] = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~7
W1L0 = (!W1_r_Cnt_Bit_Rx[0] & (!W1_r_Cnt_Bit_Rx[1] & (!W1_r_Cnt_Bit_Rx[2] & W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[8]~8
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~8
W1L0 = (W1_r_Cnt_Bit_Rx[0] & (!W1_r_Cnt_Bit_Rx[1] & (!W1_r_Cnt_Bit_Rx[2] & W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[9]~9
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~9
W1L0 = (!W1_r_Cnt_Bit_Rx[0] & (W1_r_Cnt_Bit_Rx[1] & (!W1_r_Cnt_Bit_Rx[2] & W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[10]~10
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~10
W1L0 = (W1_r_Cnt_Bit_Rx[0] & (W1_r_Cnt_Bit_Rx[1] & (!W1_r_Cnt_Bit_Rx[2] & W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[11]~11
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~11
W1L0 = (!W1_r_Cnt_Bit_Rx[0] & (!W1_r_Cnt_Bit_Rx[1] & (W1_r_Cnt_Bit_Rx[2] & W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[12]~12
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~12
W1L0 = (W1_r_Cnt_Bit_Rx[0] & (!W1_r_Cnt_Bit_Rx[1] & (W1_r_Cnt_Bit_Rx[2] & W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[13]~13
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~13
W1L0 = (!W1_r_Cnt_Bit_Rx[0] & (W1_r_Cnt_Bit_Rx[1] & (W1_r_Cnt_Bit_Rx[2] & W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[14]~14
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Decoder0~14
W1L0 = (W1_r_Cnt_Bit_Rx[0] & (W1_r_Cnt_Bit_Rx[1] & (W1_r_Cnt_Bit_Rx[2] & W1_r_Cnt_Bit_Rx[3])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_LINE1_SensData[15]~15
W1L0 = (W1L0 & (W1L0 & (!W1_r_Cnt_Bit_Rx[4] & !W1L0)));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|Equal0~0
YB1L0 = (YB1_r_CntClk[2]) # (!YB1_r_CntClk[1]);


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|Equal1~0
YB1L0 = (YB1_r_CntClk[3] & YB1_r_CntClk[4]);


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_CntClk[4]~14
YB1L0 = ((!YB1_r_CntClk[0] & (!YB1L0 & YB1L0))) # (!YB1_r_State.s_RxIn);


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|Equal0~1
YB1L0 = (YB1_r_CntClk[2]) # ((YB1_r_CntClk[0]) # ((!YB1_r_CntClk[1]) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxDataParity~0
YB1L0 = YB1_r_RxData[0] $ (YB1_r_RxData[1] $ (YB1_r_RxData[2] $ (YB1_r_RxData[3])));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxDataParity~1
YB1L0 = YB1_r_RxData[4] $ (YB1_r_RxData[5] $ (YB1_r_RxData[6] $ (YB1_r_RxData[7])));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxDataParity~2
YB1L0 = YB1_r_RxBitBuffer $ (YB1L0 $ (!YB1L0));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|Equal1~1
YB1L0 = (!YB1_r_CntClk[1] & !YB1_r_CntClk[2]);


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxDataParity~3
YB1L0 = (YB1_r_CntBit[0] & YB1L0);


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxDataParity~4
YB1L0 = (YB1_r_CntBit[3] & ((YB1L0 & (YB1L0)) # (!YB1L0 & ((YB1_r_RxDataParity))))) # (!YB1_r_CntBit[3] & (((YB1_r_RxDataParity))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxBitBuffer~0
YB1L0 = (YB1L0 & (YB1L0 & (YB1_r_State.s_RxIn & YB1_r_CntClk[0])));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxBitBuffer~1
YB1L0 = (YB1_r_Acc[2] & (YB1_r_Acc[3] & ((YB1_r_Acc[0]) # (YB1_r_Acc[1]))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxBitBuffer~2
YB1L0 = (YB1L0 & (!YB1_r_Acc[4] & (!YB1L0))) # (!YB1L0 & (((YB1_r_RxBitBuffer))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_State~8
YB1L0 = (YB1_r_CntBit[1] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[1] & ((YB1_r_RxBitBuffer) # ((YB1_r_CntBit[2]) # (YB1_r_CntBit[3]))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|Selector2~0
YB1L0 = (YB1_r_State.s_RxIn & ((YB1_r_CntBit[0]) # ((YB1L0) # (!YB1L0))));


--YB1_r_RX is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RX
YB1_r_RX = DFFEAS(EC1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_State.s_Idle is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_State.s_Idle
YB1_r_State.s_Idle = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_FlagBreakLine is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_FlagBreakLine
YB1_r_FlagBreakLine = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|Selector2~1
YB1L0 = (YB1L0) # ((YB1_r_RX & (!YB1_r_State.s_Idle & !YB1_r_FlagBreakLine)));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|Equal0~0
YB1L0 = (YB1_r_CntClk[2]) # (!YB1_r_CntClk[1]);


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|Equal1~0
YB1L0 = (YB1_r_CntClk[3] & YB1_r_CntClk[4]);


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_CntClk[4]~14
YB1L0 = ((!YB1_r_CntClk[0] & (!YB1L0 & YB1L0))) # (!YB1_r_State.s_RxIn);


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|Equal0~1
YB1L0 = (YB1_r_CntClk[2]) # ((YB1_r_CntClk[0]) # ((!YB1_r_CntClk[1]) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxDataParity~0
YB1L0 = YB1_r_RxData[0] $ (YB1_r_RxData[1] $ (YB1_r_RxData[2] $ (YB1_r_RxData[3])));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxDataParity~1
YB1L0 = YB1_r_RxData[4] $ (YB1_r_RxData[5] $ (YB1_r_RxData[6] $ (YB1_r_RxData[7])));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxDataParity~2
YB1L0 = YB1_r_RxBitBuffer $ (YB1L0 $ (!YB1L0));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|Equal1~1
YB1L0 = (!YB1_r_CntClk[1] & !YB1_r_CntClk[2]);


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxDataParity~3
YB1L0 = (YB1_r_CntBit[0] & YB1L0);


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxDataParity~4
YB1L0 = (YB1_r_CntBit[3] & ((YB1L0 & (YB1L0)) # (!YB1L0 & ((YB1_r_RxDataParity))))) # (!YB1_r_CntBit[3] & (((YB1_r_RxDataParity))));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxBitBuffer~0
YB1L0 = (YB1L0 & (YB1L0 & (YB1_r_State.s_RxIn & YB1_r_CntClk[0])));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxBitBuffer~1
YB1L0 = (YB1_r_Acc[2] & (YB1_r_Acc[3] & ((YB1_r_Acc[0]) # (YB1_r_Acc[1]))));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxBitBuffer~2
YB1L0 = (YB1L0 & (!YB1_r_Acc[4] & (!YB1L0))) # (!YB1L0 & (((YB1_r_RxBitBuffer))));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_State~8
YB1L0 = (YB1_r_CntBit[1] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[1] & ((YB1_r_RxBitBuffer) # ((YB1_r_CntBit[2]) # (YB1_r_CntBit[3]))));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|Selector2~0
YB1L0 = (YB1_r_State.s_RxIn & ((YB1_r_CntBit[0]) # ((YB1L0) # (!YB1L0))));


--YB1_r_RX is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RX
YB1_r_RX = DFFEAS(EC1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_State.s_Idle is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_State.s_Idle
YB1_r_State.s_Idle = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_FlagBreakLine is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_FlagBreakLine
YB1_r_FlagBreakLine = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|Selector2~1
YB1L0 = (YB1L0) # ((YB1_r_RX & (!YB1_r_State.s_Idle & !YB1_r_FlagBreakLine)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|Equal0~0
YB1L0 = (YB1_r_CntClk[2]) # (!YB1_r_CntClk[1]);


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|Equal1~0
YB1L0 = (YB1_r_CntClk[3] & YB1_r_CntClk[4]);


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_CntClk[4]~14
YB1L0 = ((!YB1_r_CntClk[0] & (!YB1L0 & YB1L0))) # (!YB1_r_State.s_RxIn);


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|Equal0~1
YB1L0 = (YB1_r_CntClk[2]) # ((YB1_r_CntClk[0]) # ((!YB1_r_CntClk[1]) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxDataParity~0
YB1L0 = YB1_r_RxData[0] $ (YB1_r_RxData[1] $ (YB1_r_RxData[2] $ (YB1_r_RxData[3])));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxDataParity~1
YB1L0 = YB1_r_RxData[4] $ (YB1_r_RxData[5] $ (YB1_r_RxData[6] $ (YB1_r_RxData[7])));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxDataParity~2
YB1L0 = YB1_r_RxBitBuffer $ (YB1L0 $ (!YB1L0));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|Equal1~1
YB1L0 = (!YB1_r_CntClk[1] & !YB1_r_CntClk[2]);


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxDataParity~3
YB1L0 = (YB1_r_CntBit[0] & YB1L0);


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxDataParity~4
YB1L0 = (YB1_r_CntBit[3] & ((YB1L0 & (YB1L0)) # (!YB1L0 & ((YB1_r_RxDataParity))))) # (!YB1_r_CntBit[3] & (((YB1_r_RxDataParity))));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxBitBuffer~0
YB1L0 = (YB1L0 & (YB1L0 & (YB1_r_State.s_RxIn & YB1_r_CntClk[0])));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxBitBuffer~1
YB1L0 = (YB1_r_Acc[2] & (YB1_r_Acc[3] & ((YB1_r_Acc[0]) # (YB1_r_Acc[1]))));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxBitBuffer~2
YB1L0 = (YB1L0 & (!YB1_r_Acc[4] & (!YB1L0))) # (!YB1L0 & (((YB1_r_RxBitBuffer))));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_State~8
YB1L0 = (YB1_r_CntBit[1] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[1] & ((YB1_r_RxBitBuffer) # ((YB1_r_CntBit[2]) # (YB1_r_CntBit[3]))));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|Selector2~0
YB1L0 = (YB1_r_State.s_RxIn & ((YB1_r_CntBit[0]) # ((YB1L0) # (!YB1L0))));


--YB1_r_RX is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RX
YB1_r_RX = DFFEAS(EC1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_State.s_Idle is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_State.s_Idle
YB1_r_State.s_Idle = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_FlagBreakLine is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_FlagBreakLine
YB1_r_FlagBreakLine = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|Selector2~1
YB1L0 = (YB1L0) # ((YB1_r_RX & (!YB1_r_State.s_Idle & !YB1_r_FlagBreakLine)));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|Equal0~0
YB1L0 = (YB1_r_CntClk[2]) # (!YB1_r_CntClk[1]);


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|Equal1~0
YB1L0 = (YB1_r_CntClk[3] & YB1_r_CntClk[4]);


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_CntClk[2]~14
YB1L0 = ((!YB1_r_CntClk[0] & (!YB1L0 & YB1L0))) # (!YB1_r_State.s_RxIn);


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|Equal0~1
YB1L0 = (YB1_r_CntClk[2]) # ((YB1_r_CntClk[0]) # ((!YB1_r_CntClk[1]) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxDataParity~0
YB1L0 = YB1_r_RxData[0] $ (YB1_r_RxData[1] $ (YB1_r_RxData[2] $ (YB1_r_RxData[3])));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxDataParity~1
YB1L0 = YB1_r_RxData[4] $ (YB1_r_RxData[5] $ (YB1_r_RxData[6] $ (YB1_r_RxData[7])));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxDataParity~2
YB1L0 = YB1_r_RxBitBuffer $ (YB1L0 $ (!YB1L0));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|Equal1~1
YB1L0 = (!YB1_r_CntClk[1] & !YB1_r_CntClk[2]);


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxDataParity~3
YB1L0 = (YB1_r_CntBit[0] & YB1L0);


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxDataParity~4
YB1L0 = (YB1_r_CntBit[3] & ((YB1L0 & (YB1L0)) # (!YB1L0 & ((YB1_r_RxDataParity))))) # (!YB1_r_CntBit[3] & (((YB1_r_RxDataParity))));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxBitBuffer~0
YB1L0 = (YB1L0 & (YB1L0 & (YB1_r_State.s_RxIn & YB1_r_CntClk[0])));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxBitBuffer~1
YB1L0 = (YB1_r_Acc[2] & (YB1_r_Acc[3] & ((YB1_r_Acc[0]) # (YB1_r_Acc[1]))));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxBitBuffer~2
YB1L0 = (YB1L0 & (!YB1_r_Acc[4] & (!YB1L0))) # (!YB1L0 & (((YB1_r_RxBitBuffer))));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_State~8
YB1L0 = (YB1_r_CntBit[1] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[1] & ((YB1_r_RxBitBuffer) # ((YB1_r_CntBit[2]) # (YB1_r_CntBit[3]))));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|Selector2~0
YB1L0 = (YB1_r_State.s_RxIn & ((YB1_r_CntBit[0]) # ((YB1L0) # (!YB1L0))));


--YB1_r_RX is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RX
YB1_r_RX = DFFEAS(EC1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_State.s_Idle is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_State.s_Idle
YB1_r_State.s_Idle = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_FlagBreakLine is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_FlagBreakLine
YB1_r_FlagBreakLine = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|Selector2~1
YB1L0 = (YB1L0) # ((YB1_r_RX & (!YB1_r_State.s_Idle & !YB1_r_FlagBreakLine)));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|Equal0~0
YB1L0 = (YB1_r_CntClk[2]) # (!YB1_r_CntClk[1]);


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|Equal1~0
YB1L0 = (YB1_r_CntClk[3] & YB1_r_CntClk[4]);


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_CntClk[0]~14
YB1L0 = ((!YB1_r_CntClk[0] & (!YB1L0 & YB1L0))) # (!YB1_r_State.s_RxIn);


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|Equal0~1
YB1L0 = (YB1_r_CntClk[2]) # ((YB1_r_CntClk[0]) # ((!YB1_r_CntClk[1]) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxDataParity~0
YB1L0 = YB1_r_RxData[0] $ (YB1_r_RxData[1] $ (YB1_r_RxData[2] $ (YB1_r_RxData[3])));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxDataParity~1
YB1L0 = YB1_r_RxData[4] $ (YB1_r_RxData[5] $ (YB1_r_RxData[6] $ (YB1_r_RxData[7])));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxDataParity~2
YB1L0 = YB1_r_RxBitBuffer $ (YB1L0 $ (!YB1L0));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|Equal1~1
YB1L0 = (!YB1_r_CntClk[1] & !YB1_r_CntClk[2]);


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxDataParity~3
YB1L0 = (YB1_r_CntBit[0] & YB1L0);


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxDataParity~4
YB1L0 = (YB1_r_CntBit[3] & ((YB1L0 & (YB1L0)) # (!YB1L0 & ((YB1_r_RxDataParity))))) # (!YB1_r_CntBit[3] & (((YB1_r_RxDataParity))));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxBitBuffer~0
YB1L0 = (YB1L0 & (YB1L0 & (YB1_r_State.s_RxIn & YB1_r_CntClk[0])));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxBitBuffer~1
YB1L0 = (YB1_r_Acc[2] & (YB1_r_Acc[3] & ((YB1_r_Acc[0]) # (YB1_r_Acc[1]))));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxBitBuffer~2
YB1L0 = (YB1L0 & (!YB1_r_Acc[4] & (!YB1L0))) # (!YB1L0 & (((YB1_r_RxBitBuffer))));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_State~8
YB1L0 = (YB1_r_CntBit[1] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[1] & ((YB1_r_RxBitBuffer) # ((YB1_r_CntBit[2]) # (YB1_r_CntBit[3]))));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|Selector2~0
YB1L0 = (YB1_r_State.s_RxIn & ((YB1_r_CntBit[0]) # ((YB1L0) # (!YB1L0))));


--YB1_r_RX is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RX
YB1_r_RX = DFFEAS(EC1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_State.s_Idle is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_State.s_Idle
YB1_r_State.s_Idle = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1_r_FlagBreakLine is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_FlagBreakLine
YB1_r_FlagBreakLine = DFFEAS(YB1L0, B1_inst56,  ,  ,  ,  ,  ,  ,  );


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|Selector2~1
YB1L0 = (YB1L0) # ((YB1_r_RX & (!YB1_r_State.s_Idle & !YB1_r_FlagBreakLine)));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[0]~0
YB1L0 = (YB1_r_CntBit[2] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[2] & ((YB1_r_CntBit[1] $ (YB1_r_CntBit[3])) # (!YB1_r_CntBit[0])));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[0]~1
YB1L0 = (YB1_r_RxData[0] & ((YB1L0) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[0]~2
YB1L0 = (!YB1_r_CntBit[1] & (!YB1_r_CntBit[3] & !YB1_r_CntBit[2]));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[0]~3
YB1L0 = (YB1L0) # ((YB1L0 & (YB1L0 & !YB1_r_RxBitBuffer)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[0]~0
YB1L0 = (YB1_r_CntBit[2] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[2] & ((YB1_r_CntBit[1] $ (YB1_r_CntBit[3])) # (!YB1_r_CntBit[0])));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[0]~1
YB1L0 = (YB1_r_RxData[0] & ((YB1L0) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[0]~2
YB1L0 = (!YB1_r_CntBit[1] & (!YB1_r_CntBit[3] & !YB1_r_CntBit[2]));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[0]~3
YB1L0 = (YB1L0) # ((YB1L0 & (YB1L0 & !YB1_r_RxBitBuffer)));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[0]~0
YB1L0 = (YB1_r_CntBit[2] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[2] & ((YB1_r_CntBit[1] $ (YB1_r_CntBit[3])) # (!YB1_r_CntBit[0])));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[0]~1
YB1L0 = (YB1_r_RxData[0] & ((YB1L0) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[0]~2
YB1L0 = (!YB1_r_CntBit[1] & (!YB1_r_CntBit[3] & !YB1_r_CntBit[2]));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[0]~3
YB1L0 = (YB1L0) # ((YB1L0 & (YB1L0 & !YB1_r_RxBitBuffer)));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[0]~0
YB1L0 = (YB1_r_CntBit[2] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[2] & ((YB1_r_CntBit[1] $ (YB1_r_CntBit[3])) # (!YB1_r_CntBit[0])));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[0]~1
YB1L0 = (YB1_r_RxData[0] & ((YB1L0) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[0]~2
YB1L0 = (!YB1_r_CntBit[1] & (!YB1_r_CntBit[3] & !YB1_r_CntBit[2]));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[0]~3
YB1L0 = (YB1L0) # ((YB1L0 & (YB1L0 & !YB1_r_RxBitBuffer)));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[0]~0
YB1L0 = (YB1_r_CntBit[2] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[2] & ((YB1_r_CntBit[1] $ (YB1_r_CntBit[3])) # (!YB1_r_CntBit[0])));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[0]~1
YB1L0 = (YB1_r_RxData[0] & ((YB1L0) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[0]~2
YB1L0 = (!YB1_r_CntBit[1] & (!YB1_r_CntBit[3] & !YB1_r_CntBit[2]));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[0]~3
YB1L0 = (YB1L0) # ((YB1L0 & (YB1L0 & !YB1_r_RxBitBuffer)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[1]~4
YB1L0 = (YB1_r_CntBit[2] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[2] & ((YB1_r_CntBit[0] $ (YB1_r_CntBit[3])) # (!YB1_r_CntBit[1])));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[1]~5
YB1L0 = (YB1_r_RxData[1] & ((YB1L0) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[5]~6
YB1L0 = (YB1_r_CntBit[1] & (YB1L0 & (!YB1_r_RxBitBuffer & !YB1_r_CntBit[0])));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[1]~7
YB1L0 = (YB1L0) # ((YB1L0 & (!YB1_r_CntBit[3] & !YB1_r_CntBit[2])));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[1]~4
YB1L0 = (YB1_r_CntBit[2] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[2] & ((YB1_r_CntBit[0] $ (YB1_r_CntBit[3])) # (!YB1_r_CntBit[1])));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[1]~5
YB1L0 = (YB1_r_RxData[1] & ((YB1L0) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[5]~6
YB1L0 = (YB1_r_CntBit[1] & (YB1L0 & (!YB1_r_RxBitBuffer & !YB1_r_CntBit[0])));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[1]~7
YB1L0 = (YB1L0) # ((YB1L0 & (!YB1_r_CntBit[3] & !YB1_r_CntBit[2])));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[1]~4
YB1L0 = (YB1_r_CntBit[2] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[2] & ((YB1_r_CntBit[0] $ (YB1_r_CntBit[3])) # (!YB1_r_CntBit[1])));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[1]~5
YB1L0 = (YB1_r_RxData[1] & ((YB1L0) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[5]~6
YB1L0 = (YB1_r_CntBit[1] & (YB1L0 & (!YB1_r_RxBitBuffer & !YB1_r_CntBit[0])));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[1]~7
YB1L0 = (YB1L0) # ((YB1L0 & (!YB1_r_CntBit[3] & !YB1_r_CntBit[2])));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[1]~4
YB1L0 = (YB1_r_CntBit[2] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[2] & ((YB1_r_CntBit[0] $ (YB1_r_CntBit[3])) # (!YB1_r_CntBit[1])));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[1]~5
YB1L0 = (YB1_r_RxData[1] & ((YB1L0) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[5]~6
YB1L0 = (YB1_r_CntBit[1] & (YB1L0 & (!YB1_r_RxBitBuffer & !YB1_r_CntBit[0])));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[1]~7
YB1L0 = (YB1L0) # ((YB1L0 & (!YB1_r_CntBit[3] & !YB1_r_CntBit[2])));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[1]~4
YB1L0 = (YB1_r_CntBit[2] & (((!YB1_r_CntBit[3])))) # (!YB1_r_CntBit[2] & ((YB1_r_CntBit[0] $ (YB1_r_CntBit[3])) # (!YB1_r_CntBit[1])));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[1]~5
YB1L0 = (YB1_r_RxData[1] & ((YB1L0) # (!YB1L0)));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[5]~6
YB1L0 = (YB1_r_CntBit[1] & (YB1L0 & (!YB1_r_RxBitBuffer & !YB1_r_CntBit[0])));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[1]~7
YB1L0 = (YB1L0) # ((YB1L0 & (!YB1_r_CntBit[3] & !YB1_r_CntBit[2])));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[2]~8
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[0] & YB1L0));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[2]~9
YB1L0 = (YB1_r_CntBit[2] & (YB1_r_RxData[2])) # (!YB1_r_CntBit[2] & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[2]))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[2]~8
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[0] & YB1L0));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[2]~9
YB1L0 = (YB1_r_CntBit[2] & (YB1_r_RxData[2])) # (!YB1_r_CntBit[2] & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[2]))));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[2]~8
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[0] & YB1L0));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[2]~9
YB1L0 = (YB1_r_CntBit[2] & (YB1_r_RxData[2])) # (!YB1_r_CntBit[2] & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[2]))));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[2]~8
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[0] & YB1L0));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[2]~9
YB1L0 = (YB1_r_CntBit[2] & (YB1_r_RxData[2])) # (!YB1_r_CntBit[2] & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[2]))));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[2]~8
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[0] & YB1L0));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[2]~9
YB1L0 = (YB1_r_CntBit[2] & (YB1_r_RxData[2])) # (!YB1_r_CntBit[2] & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[2]))));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[3]~10
YB1L0 = (YB1L0 & (!YB1_r_RxBitBuffer & !YB1_r_CntBit[0]));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[3]~11
YB1L0 = (YB1_r_CntBit[2] & !YB1_r_CntBit[1]);


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[3]~12
YB1L0 = (YB1_r_CntBit[1]) # ((YB1_r_CntBit[0]) # ((!YB1L0) # (!YB1_r_CntBit[2])));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[3]~13
YB1L0 = (YB1_r_RxData[3] & ((YB1L0) # ((YB1L0 & YB1L0)))) # (!YB1_r_RxData[3] & (YB1L0 & (YB1L0)));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[3]~10
YB1L0 = (YB1L0 & (!YB1_r_RxBitBuffer & !YB1_r_CntBit[0]));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[3]~11
YB1L0 = (YB1_r_CntBit[2] & !YB1_r_CntBit[1]);


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[3]~12
YB1L0 = (YB1_r_CntBit[1]) # ((YB1_r_CntBit[0]) # ((!YB1L0) # (!YB1_r_CntBit[2])));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[3]~13
YB1L0 = (YB1_r_RxData[3] & ((YB1L0) # ((YB1L0 & YB1L0)))) # (!YB1_r_RxData[3] & (YB1L0 & (YB1L0)));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[3]~10
YB1L0 = (YB1L0 & (!YB1_r_RxBitBuffer & !YB1_r_CntBit[0]));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[3]~11
YB1L0 = (YB1_r_CntBit[2] & !YB1_r_CntBit[1]);


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[3]~12
YB1L0 = (YB1_r_CntBit[1]) # ((YB1_r_CntBit[0]) # ((!YB1L0) # (!YB1_r_CntBit[2])));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[3]~13
YB1L0 = (YB1_r_RxData[3] & ((YB1L0) # ((YB1L0 & YB1L0)))) # (!YB1_r_RxData[3] & (YB1L0 & (YB1L0)));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[3]~10
YB1L0 = (YB1L0 & (!YB1_r_RxBitBuffer & !YB1_r_CntBit[0]));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[3]~11
YB1L0 = (YB1_r_CntBit[2] & !YB1_r_CntBit[1]);


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[3]~12
YB1L0 = (YB1_r_CntBit[1]) # ((YB1_r_CntBit[0]) # ((!YB1L0) # (!YB1_r_CntBit[2])));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[3]~13
YB1L0 = (YB1_r_RxData[3] & ((YB1L0) # ((YB1L0 & YB1L0)))) # (!YB1_r_RxData[3] & (YB1L0 & (YB1L0)));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[3]~10
YB1L0 = (YB1L0 & (!YB1_r_RxBitBuffer & !YB1_r_CntBit[0]));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[3]~11
YB1L0 = (YB1_r_CntBit[2] & !YB1_r_CntBit[1]);


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[3]~12
YB1L0 = (YB1_r_CntBit[1]) # ((YB1_r_CntBit[0]) # ((!YB1L0) # (!YB1_r_CntBit[2])));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[3]~13
YB1L0 = (YB1_r_RxData[3] & ((YB1L0) # ((YB1L0 & YB1L0)))) # (!YB1_r_RxData[3] & (YB1L0 & (YB1L0)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[4]~14
YB1L0 = (YB1L0 & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[4])))) # (!YB1L0 & (YB1_r_RxData[4]));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[4]~14
YB1L0 = (YB1L0 & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[4])))) # (!YB1L0 & (YB1_r_RxData[4]));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[4]~14
YB1L0 = (YB1L0 & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[4])))) # (!YB1L0 & (YB1_r_RxData[4]));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[4]~14
YB1L0 = (YB1L0 & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[4])))) # (!YB1L0 & (YB1_r_RxData[4]));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[4]~14
YB1L0 = (YB1L0 & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[4])))) # (!YB1L0 & (YB1_r_RxData[4]));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[5]~15
YB1L0 = (YB1_r_CntBit[0]) # (((!YB1L0) # (!YB1_r_CntBit[2])) # (!YB1_r_CntBit[1]));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[5]~16
YB1L0 = (YB1_r_RxData[5] & ((YB1L0) # ((YB1_r_CntBit[2] & YB1L0)))) # (!YB1_r_RxData[5] & (YB1_r_CntBit[2] & (YB1L0)));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[5]~15
YB1L0 = (YB1_r_CntBit[0]) # (((!YB1L0) # (!YB1_r_CntBit[2])) # (!YB1_r_CntBit[1]));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[5]~16
YB1L0 = (YB1_r_RxData[5] & ((YB1L0) # ((YB1_r_CntBit[2] & YB1L0)))) # (!YB1_r_RxData[5] & (YB1_r_CntBit[2] & (YB1L0)));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[5]~15
YB1L0 = (YB1_r_CntBit[0]) # (((!YB1L0) # (!YB1_r_CntBit[2])) # (!YB1_r_CntBit[1]));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[5]~16
YB1L0 = (YB1_r_RxData[5] & ((YB1L0) # ((YB1_r_CntBit[2] & YB1L0)))) # (!YB1_r_RxData[5] & (YB1_r_CntBit[2] & (YB1L0)));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[5]~15
YB1L0 = (YB1_r_CntBit[0]) # (((!YB1L0) # (!YB1_r_CntBit[2])) # (!YB1_r_CntBit[1]));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[5]~16
YB1L0 = (YB1_r_RxData[5] & ((YB1L0) # ((YB1_r_CntBit[2] & YB1L0)))) # (!YB1_r_RxData[5] & (YB1_r_CntBit[2] & (YB1L0)));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[5]~15
YB1L0 = (YB1_r_CntBit[0]) # (((!YB1L0) # (!YB1_r_CntBit[2])) # (!YB1_r_CntBit[1]));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[5]~16
YB1L0 = (YB1_r_RxData[5] & ((YB1L0) # ((YB1_r_CntBit[2] & YB1L0)))) # (!YB1_r_RxData[5] & (YB1_r_CntBit[2] & (YB1L0)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[6]~17
YB1L0 = (YB1_r_CntBit[2] & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[6])))) # (!YB1_r_CntBit[2] & (YB1_r_RxData[6]));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[6]~17
YB1L0 = (YB1_r_CntBit[2] & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[6])))) # (!YB1_r_CntBit[2] & (YB1_r_RxData[6]));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[6]~17
YB1L0 = (YB1_r_CntBit[2] & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[6])))) # (!YB1_r_CntBit[2] & (YB1_r_RxData[6]));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[6]~17
YB1L0 = (YB1_r_CntBit[2] & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[6])))) # (!YB1_r_CntBit[2] & (YB1_r_RxData[6]));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[6]~17
YB1L0 = (YB1_r_CntBit[2] & ((YB1L0 & ((!YB1_r_RxBitBuffer))) # (!YB1L0 & (YB1_r_RxData[6])))) # (!YB1_r_CntBit[2] & (YB1_r_RxData[6]));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[7]~18
YB1L0 = (YB1_r_CntBit[1] & (!YB1_r_CntBit[0] & (YB1_r_RxData[7]))) # (!YB1_r_CntBit[1] & ((YB1L0) # ((YB1_r_CntBit[0] & YB1_r_RxData[7]))));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[7]~19
YB1L0 = (YB1_r_CntBit[3] & ((YB1L0) # ((!YB1L0 & YB1_r_RxData[7])))) # (!YB1_r_CntBit[3] & (((YB1_r_RxData[7]))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[7]~18
YB1L0 = (YB1_r_CntBit[1] & (!YB1_r_CntBit[0] & (YB1_r_RxData[7]))) # (!YB1_r_CntBit[1] & ((YB1L0) # ((YB1_r_CntBit[0] & YB1_r_RxData[7]))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[7]~19
YB1L0 = (YB1_r_CntBit[3] & ((YB1L0) # ((!YB1L0 & YB1_r_RxData[7])))) # (!YB1_r_CntBit[3] & (((YB1_r_RxData[7]))));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[7]~18
YB1L0 = (YB1_r_CntBit[1] & (!YB1_r_CntBit[0] & (YB1_r_RxData[7]))) # (!YB1_r_CntBit[1] & ((YB1L0) # ((YB1_r_CntBit[0] & YB1_r_RxData[7]))));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[7]~19
YB1L0 = (YB1_r_CntBit[3] & ((YB1L0) # ((!YB1L0 & YB1_r_RxData[7])))) # (!YB1_r_CntBit[3] & (((YB1_r_RxData[7]))));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[7]~18
YB1L0 = (YB1_r_CntBit[1] & (!YB1_r_CntBit[0] & (YB1_r_RxData[7]))) # (!YB1_r_CntBit[1] & ((YB1L0) # ((YB1_r_CntBit[0] & YB1_r_RxData[7]))));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[7]~19
YB1L0 = (YB1_r_CntBit[3] & ((YB1L0) # ((!YB1L0 & YB1_r_RxData[7])))) # (!YB1_r_CntBit[3] & (((YB1_r_RxData[7]))));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[7]~18
YB1L0 = (YB1_r_CntBit[1] & (!YB1_r_CntBit[0] & (YB1_r_RxData[7]))) # (!YB1_r_CntBit[1] & ((YB1L0) # ((YB1_r_CntBit[0] & YB1_r_RxData[7]))));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[7]~19
YB1L0 = (YB1_r_CntBit[3] & ((YB1L0) # ((!YB1L0 & YB1_r_RxData[7])))) # (!YB1_r_CntBit[3] & (((YB1_r_RxData[7]))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_Acc[4]~15
YB1L0 = (YB1_r_State.s_RxIn & (((!YB1_r_CntClk[0]) # (!YB1L0)) # (!YB1L0)));


--EC1L0 is UART_MODULE:inst2|MUX1:inst9|lpm_mux:lpm_mux_component|mux_03e:auto_generated|result_node[0]~0
EC1L0 = (RB1_o_Channel & (!RO2)) # (!RB1_o_Channel & ((!RO1)));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_RxData[0]~20
YB1L0 = (!YB1_r_CntBit[0] & (!YB1_r_CntBit[2] & (YB1_r_CntBit[1] $ (!YB1_r_CntBit[3]))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|Selector0~0
YB1L0 = (YB1L0 & (YB1L0 & ((YB1_r_CntBit[1]) # (!YB1_r_RxBitBuffer))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|Selector0~1
YB1L0 = (!YB1L0 & ((YB1_r_State.s_RxIn) # ((!YB1_r_FlagBreakLine & YB1_r_RX))));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_FlagBreakLine~4
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[3] & YB1_r_RxBitBuffer));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_FlagBreakLine~5
YB1L0 = (YB1L0 & ((YB1L0) # ((YB1_r_FlagBreakLine & YB1_r_RX)))) # (!YB1L0 & (YB1_r_FlagBreakLine & (YB1_r_RX)));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_Acc[4]~15
YB1L0 = (YB1_r_State.s_RxIn & (((!YB1_r_CntClk[0]) # (!YB1L0)) # (!YB1L0)));


--EC1L0 is UART_MODULE:inst5|MUX1:inst9|lpm_mux:lpm_mux_component|mux_03e:auto_generated|result_node[0]~0
EC1L0 = (RB1_o_Channel & (!RO6)) # (!RB1_o_Channel & ((!RO5)));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_RxData[0]~20
YB1L0 = (!YB1_r_CntBit[0] & (!YB1_r_CntBit[2] & (YB1_r_CntBit[1] $ (!YB1_r_CntBit[3]))));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|Selector0~0
YB1L0 = (YB1L0 & (YB1L0 & ((YB1_r_CntBit[1]) # (!YB1_r_RxBitBuffer))));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|Selector0~1
YB1L0 = (!YB1L0 & ((YB1_r_State.s_RxIn) # ((!YB1_r_FlagBreakLine & YB1_r_RX))));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_FlagBreakLine~4
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[3] & YB1_r_RxBitBuffer));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_FlagBreakLine~5
YB1L0 = (YB1L0 & ((YB1L0) # ((YB1_r_FlagBreakLine & YB1_r_RX)))) # (!YB1L0 & (YB1_r_FlagBreakLine & (YB1_r_RX)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_Acc[4]~15
YB1L0 = (YB1_r_State.s_RxIn & (((!YB1_r_CntClk[0]) # (!YB1L0)) # (!YB1L0)));


--EC1L0 is UART_MODULE:inst3|MUX1:inst9|lpm_mux:lpm_mux_component|mux_03e:auto_generated|result_node[0]~0
EC1L0 = (RB1_o_Channel & (!RO4)) # (!RB1_o_Channel & ((!RO3)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_RxData[0]~20
YB1L0 = (!YB1_r_CntBit[0] & (!YB1_r_CntBit[2] & (YB1_r_CntBit[1] $ (!YB1_r_CntBit[3]))));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|Selector0~0
YB1L0 = (YB1L0 & (YB1L0 & ((YB1_r_CntBit[1]) # (!YB1_r_RxBitBuffer))));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|Selector0~1
YB1L0 = (!YB1L0 & ((YB1_r_State.s_RxIn) # ((!YB1_r_FlagBreakLine & YB1_r_RX))));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_FlagBreakLine~4
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[3] & YB1_r_RxBitBuffer));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_FlagBreakLine~5
YB1L0 = (YB1L0 & ((YB1L0) # ((YB1_r_FlagBreakLine & YB1_r_RX)))) # (!YB1L0 & (YB1_r_FlagBreakLine & (YB1_r_RX)));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_Acc[4]~15
YB1L0 = (YB1_r_State.s_RxIn & (((!YB1_r_CntClk[0]) # (!YB1L0)) # (!YB1L0)));


--EC1L0 is UART_MODULE:inst6|MUX1:inst9|lpm_mux:lpm_mux_component|mux_03e:auto_generated|result_node[0]~0
EC1L0 = (RB1_o_Channel & (!RO8)) # (!RB1_o_Channel & ((!RO7)));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_RxData[0]~20
YB1L0 = (!YB1_r_CntBit[0] & (!YB1_r_CntBit[2] & (YB1_r_CntBit[1] $ (!YB1_r_CntBit[3]))));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|Selector0~0
YB1L0 = (YB1L0 & (YB1L0 & ((YB1_r_CntBit[1]) # (!YB1_r_RxBitBuffer))));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|Selector0~1
YB1L0 = (!YB1L0 & ((YB1_r_State.s_RxIn) # ((!YB1_r_FlagBreakLine & YB1_r_RX))));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_FlagBreakLine~4
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[3] & YB1_r_RxBitBuffer));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_FlagBreakLine~5
YB1L0 = (YB1L0 & ((YB1L0) # ((YB1_r_FlagBreakLine & YB1_r_RX)))) # (!YB1L0 & (YB1_r_FlagBreakLine & (YB1_r_RX)));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_Acc[4]~15
YB1L0 = (YB1_r_State.s_RxIn & (((!YB1_r_CntClk[0]) # (!YB1L0)) # (!YB1L0)));


--EC1L0 is UART_MODULE:inst7|MUX1:inst9|lpm_mux:lpm_mux_component|mux_03e:auto_generated|result_node[0]~0
EC1L0 = (RB1_o_Channel & (!RO10)) # (!RB1_o_Channel & ((!RO9)));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_RxData[0]~20
YB1L0 = (!YB1_r_CntBit[0] & (!YB1_r_CntBit[2] & (YB1_r_CntBit[1] $ (!YB1_r_CntBit[3]))));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|Selector0~0
YB1L0 = (YB1L0 & (YB1L0 & ((YB1_r_CntBit[1]) # (!YB1_r_RxBitBuffer))));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|Selector0~1
YB1L0 = (!YB1L0 & ((YB1_r_State.s_RxIn) # ((!YB1_r_FlagBreakLine & YB1_r_RX))));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_FlagBreakLine~4
YB1L0 = (YB1_r_CntBit[1] & (YB1_r_CntBit[3] & YB1_r_RxBitBuffer));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_FlagBreakLine~5
YB1L0 = (YB1L0 & ((YB1L0) # ((YB1_r_FlagBreakLine & YB1_r_RX)))) # (!YB1L0 & (YB1_r_FlagBreakLine & (YB1_r_RX)));


--RB1L0 is UART_MODULE:inst5|UART_CTRL_BLOCK:inst3|process_0~4
RB1L0 = (A12 & (!A11 & (CC1L0 & !inst43)));


--G1L0 is PK_LIST_BLOCK:inst11|process_0~5
G1L0 = (A11 & (!A12 & (!inst43 & !A10)));


--RB1L0 is UART_MODULE:inst6|UART_CTRL_BLOCK:inst3|process_0~4
RB1L0 = (A11 & (A12 & (CC1L0 & !inst43)));


--N1L0 is PK_OUT_BLOCK:inst22|r_PkEn~3
N1L0 = (!N1L0 & ((N1_r_PkEn) # ((inst66 & !inst92))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Equal6~8
W1L0 = (!W1_r_Cnt_Time1MHz_BitLow[7] & (!W1_r_Cnt_Time1MHz_BitLow[8] & (W1L0 & W1L0)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~38
W1L0 = (W1_r_State_1WIRE.READ_BIT & (((!W1L0)))) # (!W1_r_State_1WIRE.READ_BIT & (W1_r_State_1WIRE.GET_DATA & (!W1_r_Cnt_Bit_Rx[4])));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_State_1WIRE~39
W1L0 = (W1L0) # ((!W1L0 & (W1_r_Cnt_Bit_Rx[4] & W1_r_State_1WIRE.GET_DATA)));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~15
W1L0 = (W1L0 & (W1_r_Cnt_Bit_Rx[4] & (W1L0))) # (!W1L0 & (((W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Rx[0]~5
W1L0 = (U1_o_MHz & ((W1_r_State_1WIRE.READ_BIT & ((!W1L0))) # (!W1_r_State_1WIRE.READ_BIT & (W1_r_State_1WIRE.GET_DATA))));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk7_Len[6]~2
J1L0 = (A1 & (A0 & J1L0));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk6_Len[6]~2
J1L0 = (A1 & (!A0 & J1L0));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk5_Len[6]~4
J1L0 = (A0 & (!A1 & J1L0));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk3_Len[6]~2
J1L0 = (A1 & (A0 & (G1L0 & GB1L0)));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk9_Len[6]~2
J1L0 = (A0 & (!A1 & (G1L0 & J1L0)));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk11_Len[6]~4
J1L0 = (A1 & (A0 & (G1L0 & J1L0)));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk1_Len[6]~2
J1L0 = (A0 & (!A1 & (G1L0 & GB1L0)));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk2_Len[6]~2
J1L0 = (A1 & (!A0 & (G1L0 & GB1L0)));


--J1L0 is PK_LEN_BLOCK:inst15|o_Pk10_Len[6]~2
J1L0 = (A1 & (!A0 & (G1L0 & J1L0)));


--GB1L0 is PKU_DATA_BLOCK:inst65|Equal10~4
GB1L0 = (A12 & (!A11 & (!A10 & GB1L0)));


--inst91 is inst91
inst91 = (!CS3 & (!OE & (GB1L0 & GB1L0)));


--BC1L0 is UART_MODULE:inst7|UART_TXHEAD_EN_BLOCK:inst33|Equal0~3
BC1L0 = (!A11 & (!A12 & (A10 & GB1L0)));


--B1_inst62 is UART_MODULE:inst7|inst62
B1_inst62 = (A0 & (!A1 & (BC1L0 & !inst44)));


--B1_inst58 is UART_MODULE:inst7|inst58
B1_inst58 = (A1 & (!A0 & (BC1L0 & !inst44)));


--BC1L0 is UART_MODULE:inst2|UART_TXHEAD_EN_BLOCK:inst33|Equal0~5
BC1L0 = (!A11 & (!A12 & (GB1L0 & BC1L0)));


--BC1L0 is UART_MODULE:inst3|UART_TXHEAD_EN_BLOCK:inst33|Equal0~4
BC1L0 = (A11 & (!A12 & (GB1L0 & BC1L0)));


--CC1L0 is UART_MODULE:inst7|UART_CTRL_EN_BLOCK:inst35|Equal0~2
CC1L0 = (!A11 & (!A12 & (A10 & GB1L0)));


--BC1L0 is UART_MODULE:inst5|UART_TXHEAD_EN_BLOCK:inst33|Equal0~4
BC1L0 = (A12 & (!A11 & (GB1L0 & BC1L0)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[0]~443
HC1L0 = (A1L0 & (A1L0 & (A1L0 & !A5)));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~444
HC1L0 = (CS3) # ((OE) # (!WB1L0));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[11]~445
HC1L0 = (CS3) # ((OE) # (!UB1L0));


--BC1L0 is UART_MODULE:inst6|UART_TXHEAD_EN_BLOCK:inst33|Equal0~9
BC1L0 = (A1 & (A0 & BC1L0));


--BC1L0 is UART_MODULE:inst6|UART_TXHEAD_EN_BLOCK:inst33|Equal0~10
BC1L0 = (A11 & (A12 & (GB1L0 & BC1L0)));


--HC1L0 is UART_MODULE:inst7|TRI31_1:inst28|lpm_bustri:lpm_bustri_component|dout[6]~2
HC1L0 = (CS3) # ((OE) # ((XB1_r_TxTail[6]) # (!WB1L0)));


--inst125 is inst125
inst125 = (!CS3 & (!WE_An & (GB1L0 & GB1L0)));


--B1_inst61 is UART_MODULE:inst7|inst61
B1_inst61 = (A0 & (!A1 & (BC1L0 & !inst43)));


--VB1L0 is UART_MODULE:inst7|UART_TXHEAD_BLOCK:inst14|process_0~2
VB1L0 = (!CS3 & (!WE_An & BC1L0));


--XB1L0 is UART_MODULE:inst7|UART_TXDATA_BLOCK:inst16|r_State.s_ResetDV~2
XB1L0 = (XB1_r_State.s_SetDV & (((XB1_r_State.s_ResetDV & XB1L0)) # (!SB1_o_Ready))) # (!XB1_r_State.s_SetDV & (((XB1_r_State.s_ResetDV & XB1L0))));


--XB1L0 is UART_MODULE:inst5|UART_TXDATA_BLOCK:inst16|r_State.s_ResetDV~2
XB1L0 = (XB1_r_State.s_SetDV & (((XB1_r_State.s_ResetDV & XB1L0)) # (!SB1_o_Ready))) # (!XB1_r_State.s_SetDV & (((XB1_r_State.s_ResetDV & XB1L0))));


--XB1L0 is UART_MODULE:inst2|UART_TXDATA_BLOCK:inst16|r_State.s_ResetDV~2
XB1L0 = (XB1_r_State.s_SetDV & (((XB1_r_State.s_ResetDV & XB1L0)) # (!SB1_o_Ready))) # (!XB1_r_State.s_SetDV & (((XB1_r_State.s_ResetDV & XB1L0))));


--XB1L0 is UART_MODULE:inst3|UART_TXDATA_BLOCK:inst16|r_State.s_ResetDV~2
XB1L0 = (XB1_r_State.s_SetDV & (((XB1_r_State.s_ResetDV & XB1L0)) # (!SB1_o_Ready))) # (!XB1_r_State.s_SetDV & (((XB1_r_State.s_ResetDV & XB1L0))));


--XB1L0 is UART_MODULE:inst6|UART_TXDATA_BLOCK:inst16|r_State.s_ResetDV~2
XB1L0 = (XB1_r_State.s_SetDV & (((XB1_r_State.s_ResetDV & XB1L0)) # (!SB1_o_Ready))) # (!XB1_r_State.s_SetDV & (((XB1_r_State.s_ResetDV & XB1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|o_LINE1_TEMP_DATA[0]~2
W1L0 = (W1_r_State_1WIRE.GET_DATA & (U1_o_MHz & (W1_r_Cnt_Bit_Rx[4] & W1L0)));


--RB1L0 is UART_MODULE:inst7|UART_CTRL_BLOCK:inst3|r_TxStart1~2
RB1L0 = (!CS3 & (!WE_An & (C1L0 & CC1L0)));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|r_FlagBreakLine~6
YB1L0 = (YB1_r_CntClk[3] & (YB1_r_CntClk[4] & (YB1_r_State.s_RxIn & !YB1L0)));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|r_FlagBreakLine~6
YB1L0 = (YB1_r_CntClk[3] & (YB1_r_CntClk[4] & (YB1_r_State.s_RxIn & !YB1L0)));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|r_FlagBreakLine~6
YB1L0 = (YB1_r_CntClk[3] & (YB1_r_CntClk[4] & (YB1_r_State.s_RxIn & !YB1L0)));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|r_FlagBreakLine~6
YB1L0 = (YB1_r_CntClk[3] & (YB1_r_CntClk[4] & (YB1_r_State.s_RxIn & !YB1L0)));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|r_FlagBreakLine~6
YB1L0 = (YB1_r_CntClk[3] & (YB1_r_CntClk[4] & (YB1_r_State.s_RxIn & !YB1L0)));


--YB1L0 is UART_MODULE:inst2|UART_RX_BLOCK:inst22|LessThan0~4
YB1L0 = (YB1L0 & ((YB1_r_CntClk[1]) # ((YB1_r_CntClk[2]) # (YB1_r_CntClk[0]))));


--YB1L0 is UART_MODULE:inst5|UART_RX_BLOCK:inst22|LessThan0~4
YB1L0 = (YB1L0 & ((YB1_r_CntClk[1]) # ((YB1_r_CntClk[2]) # (YB1_r_CntClk[0]))));


--YB1L0 is UART_MODULE:inst3|UART_RX_BLOCK:inst22|LessThan0~4
YB1L0 = (YB1L0 & ((YB1_r_CntClk[1]) # ((YB1_r_CntClk[2]) # (YB1_r_CntClk[0]))));


--YB1L0 is UART_MODULE:inst6|UART_RX_BLOCK:inst22|LessThan0~4
YB1L0 = (YB1L0 & ((YB1_r_CntClk[1]) # ((YB1_r_CntClk[2]) # (YB1_r_CntClk[0]))));


--YB1L0 is UART_MODULE:inst7|UART_RX_BLOCK:inst22|LessThan0~4
YB1L0 = (YB1L0 & ((YB1_r_CntClk[1]) # ((YB1_r_CntClk[2]) # (YB1_r_CntClk[0]))));


--GB1L0 is PKU_DATA_BLOCK:inst65|o_Data[5]~63
GB1L0 = (!GB1L0) # (!A1);


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~16
W1L0 = (W1L0 & (W1_r_Cnt_Bit_Rx[0] $ ((W1_r_Cnt_Bit_Rx[4])))) # (!W1L0 & (((W1L0))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|Add6~17
W1L0 = (W1_r_Cnt_Bit_Rx[0] & ((W1L0) # ((W1L0 & W1L0)))) # (!W1_r_Cnt_Bit_Rx[0] & (W1L0 & ((W1L0) # (!W1L0))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~446
HC1L0 = (GB1L0 & ((GB1L0) # ((!GB1L0)))) # (!GB1L0 & (((GB1L0 & H1_o_PkuLen[5]))));


--HC1L0 is TRI31_1:inst129|lpm_bustri:lpm_bustri_component|dout[8]~447
HC1L0 = (HC1L0 & (HC1L0 & ((HC1L0) # (!inst91))));


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_Cnt_Bit_Tx[0]~4
W1L0 = !W1_r_Cnt_Bit_Tx[0];


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_BitLow~0
W1L0 = !W1_r_Write_BitLow;


--W1L0 is ONE_WIRE_BLOCK_v4_2:inst38|r_1WIRE_BitHigh~1
W1L0 = !W1_r_Write_BitHigh;


--YB1_o_RxData[0] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|o_RxData[0]
YB1_o_RxData[0] = (YB1_r_RxDataValid & (YB1_r_RxData[0])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[0])));


--YB1_o_RxData[0] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|o_RxData[0]
YB1_o_RxData[0] = (YB1_r_RxDataValid & (YB1_r_RxData[0])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[0])));


--YB1_o_RxData[0] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|o_RxData[0]
YB1_o_RxData[0] = (YB1_r_RxDataValid & (YB1_r_RxData[0])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[0])));


--YB1_o_RxData[0] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|o_RxData[0]
YB1_o_RxData[0] = (YB1_r_RxDataValid & (YB1_r_RxData[0])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[0])));


--YB1_o_RxData[0] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|o_RxData[0]
YB1_o_RxData[0] = (YB1_r_RxDataValid & (YB1_r_RxData[0])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[0])));


--YB1_o_RxData[1] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|o_RxData[1]
YB1_o_RxData[1] = (YB1_r_RxDataValid & (YB1_r_RxData[1])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[1])));


--YB1_o_RxData[1] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|o_RxData[1]
YB1_o_RxData[1] = (YB1_r_RxDataValid & (YB1_r_RxData[1])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[1])));


--YB1_o_RxData[1] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|o_RxData[1]
YB1_o_RxData[1] = (YB1_r_RxDataValid & (YB1_r_RxData[1])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[1])));


--YB1_o_RxData[1] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|o_RxData[1]
YB1_o_RxData[1] = (YB1_r_RxDataValid & (YB1_r_RxData[1])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[1])));


--YB1_o_RxData[1] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|o_RxData[1]
YB1_o_RxData[1] = (YB1_r_RxDataValid & (YB1_r_RxData[1])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[1])));


--YB1_o_RxData[2] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|o_RxData[2]
YB1_o_RxData[2] = (YB1_r_RxDataValid & (YB1_r_RxData[2])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[2])));


--YB1_o_RxData[2] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|o_RxData[2]
YB1_o_RxData[2] = (YB1_r_RxDataValid & (YB1_r_RxData[2])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[2])));


--YB1_o_RxData[2] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|o_RxData[2]
YB1_o_RxData[2] = (YB1_r_RxDataValid & (YB1_r_RxData[2])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[2])));


--YB1_o_RxData[2] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|o_RxData[2]
YB1_o_RxData[2] = (YB1_r_RxDataValid & (YB1_r_RxData[2])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[2])));


--YB1_o_RxData[2] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|o_RxData[2]
YB1_o_RxData[2] = (YB1_r_RxDataValid & (YB1_r_RxData[2])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[2])));


--YB1_o_RxData[3] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|o_RxData[3]
YB1_o_RxData[3] = (YB1_r_RxDataValid & (YB1_r_RxData[3])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[3])));


--YB1_o_RxData[3] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|o_RxData[3]
YB1_o_RxData[3] = (YB1_r_RxDataValid & (YB1_r_RxData[3])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[3])));


--YB1_o_RxData[3] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|o_RxData[3]
YB1_o_RxData[3] = (YB1_r_RxDataValid & (YB1_r_RxData[3])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[3])));


--YB1_o_RxData[3] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|o_RxData[3]
YB1_o_RxData[3] = (YB1_r_RxDataValid & (YB1_r_RxData[3])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[3])));


--YB1_o_RxData[3] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|o_RxData[3]
YB1_o_RxData[3] = (YB1_r_RxDataValid & (YB1_r_RxData[3])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[3])));


--YB1_o_RxData[4] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|o_RxData[4]
YB1_o_RxData[4] = (YB1_r_RxDataValid & (YB1_r_RxData[4])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[4])));


--YB1_o_RxData[4] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|o_RxData[4]
YB1_o_RxData[4] = (YB1_r_RxDataValid & (YB1_r_RxData[4])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[4])));


--YB1_o_RxData[4] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|o_RxData[4]
YB1_o_RxData[4] = (YB1_r_RxDataValid & (YB1_r_RxData[4])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[4])));


--YB1_o_RxData[4] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|o_RxData[4]
YB1_o_RxData[4] = (YB1_r_RxDataValid & (YB1_r_RxData[4])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[4])));


--YB1_o_RxData[4] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|o_RxData[4]
YB1_o_RxData[4] = (YB1_r_RxDataValid & (YB1_r_RxData[4])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[4])));


--YB1_o_RxData[5] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|o_RxData[5]
YB1_o_RxData[5] = (YB1_r_RxDataValid & (YB1_r_RxData[5])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[5])));


--YB1_o_RxData[5] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|o_RxData[5]
YB1_o_RxData[5] = (YB1_r_RxDataValid & (YB1_r_RxData[5])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[5])));


--YB1_o_RxData[5] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|o_RxData[5]
YB1_o_RxData[5] = (YB1_r_RxDataValid & (YB1_r_RxData[5])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[5])));


--YB1_o_RxData[5] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|o_RxData[5]
YB1_o_RxData[5] = (YB1_r_RxDataValid & (YB1_r_RxData[5])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[5])));


--YB1_o_RxData[5] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|o_RxData[5]
YB1_o_RxData[5] = (YB1_r_RxDataValid & (YB1_r_RxData[5])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[5])));


--YB1_o_RxData[6] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|o_RxData[6]
YB1_o_RxData[6] = (YB1_r_RxDataValid & (YB1_r_RxData[6])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[6])));


--YB1_o_RxData[6] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|o_RxData[6]
YB1_o_RxData[6] = (YB1_r_RxDataValid & (YB1_r_RxData[6])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[6])));


--YB1_o_RxData[6] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|o_RxData[6]
YB1_o_RxData[6] = (YB1_r_RxDataValid & (YB1_r_RxData[6])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[6])));


--YB1_o_RxData[6] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|o_RxData[6]
YB1_o_RxData[6] = (YB1_r_RxDataValid & (YB1_r_RxData[6])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[6])));


--YB1_o_RxData[6] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|o_RxData[6]
YB1_o_RxData[6] = (YB1_r_RxDataValid & (YB1_r_RxData[6])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[6])));


--YB1_o_RxData[7] is UART_MODULE:inst3|UART_RX_BLOCK:inst22|o_RxData[7]
YB1_o_RxData[7] = (YB1_r_RxDataValid & (YB1_r_RxData[7])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[7])));


--YB1_o_RxData[7] is UART_MODULE:inst2|UART_RX_BLOCK:inst22|o_RxData[7]
YB1_o_RxData[7] = (YB1_r_RxDataValid & (YB1_r_RxData[7])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[7])));


--YB1_o_RxData[7] is UART_MODULE:inst6|UART_RX_BLOCK:inst22|o_RxData[7]
YB1_o_RxData[7] = (YB1_r_RxDataValid & (YB1_r_RxData[7])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[7])));


--YB1_o_RxData[7] is UART_MODULE:inst5|UART_RX_BLOCK:inst22|o_RxData[7]
YB1_o_RxData[7] = (YB1_r_RxDataValid & (YB1_r_RxData[7])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[7])));


--YB1_o_RxData[7] is UART_MODULE:inst7|UART_RX_BLOCK:inst22|o_RxData[7]
YB1_o_RxData[7] = (YB1_r_RxDataValid & (YB1_r_RxData[7])) # (!YB1_r_RxDataValid & ((YB1_o_RxData[7])));


--A1L0 is ~GND
A1L0 = GND;


--C1L0 is TRI_32:inst4|tridata[0]~0
--operation mode is bidir

C1L0 = D0;

--D0 is D0
--operation mode is bidir

D0_tri_out = TRI(HC1L0, HC1L0);
D0 = BIDIR(D0_tri_out);


--C1L0 is TRI_32:inst4|tridata[1]~1
--operation mode is bidir

C1L0 = D1;

--D1 is D1
--operation mode is bidir

D1_tri_out = TRI(HC1L0, HC1L0);
D1 = BIDIR(D1_tri_out);


--C1L0 is TRI_32:inst4|tridata[2]~2
--operation mode is bidir

C1L0 = D2;

--D2 is D2
--operation mode is bidir

D2_tri_out = TRI(HC1L0, HC1L0);
D2 = BIDIR(D2_tri_out);


--C1L0 is TRI_32:inst4|tridata[3]~3
--operation mode is bidir

C1L0 = D3;

--D3 is D3
--operation mode is bidir

D3_tri_out = TRI(HC1L0, HC1L0);
D3 = BIDIR(D3_tri_out);


--C1L0 is TRI_32:inst4|tridata[4]~4
--operation mode is bidir

C1L0 = D4;

--D4 is D4
--operation mode is bidir

D4_tri_out = TRI(HC1L0, HC1L0);
D4 = BIDIR(D4_tri_out);


--C1L0 is TRI_32:inst4|tridata[5]~5
--operation mode is bidir

C1L0 = D5;

--D5 is D5
--operation mode is bidir

D5_tri_out = TRI(HC1L0, HC1L0);
D5 = BIDIR(D5_tri_out);


--C1L0 is TRI_32:inst4|tridata[6]~6
--operation mode is bidir

C1L0 = D6;

--D6 is D6
--operation mode is bidir

D6_tri_out = TRI(HC1L0, HC1L0);
D6 = BIDIR(D6_tri_out);


--C1L0 is TRI_32:inst4|tridata[7]~7
--operation mode is bidir

C1L0 = D7;

--D7 is D7
--operation mode is bidir

D7_tri_out = TRI(HC1L0, HC1L0);
D7 = BIDIR(D7_tri_out);


--C1L0 is TRI_32:inst4|tridata[8]~8
--operation mode is bidir

C1L0 = D8;

--D8 is D8
--operation mode is bidir

D8_tri_out = TRI(HC1L0, HC1L0);
D8 = BIDIR(D8_tri_out);


--C1L0 is TRI_32:inst4|tridata[9]~9
--operation mode is bidir

C1L0 = D9;

--D9 is D9
--operation mode is bidir

D9_tri_out = TRI(HC1L0, HC1L0);
D9 = BIDIR(D9_tri_out);


--C1L0 is TRI_32:inst4|tridata[10]~10
--operation mode is bidir

C1L0 = D10;

--D10 is D10
--operation mode is bidir

D10_tri_out = TRI(HC1L0, HC1L0);
D10 = BIDIR(D10_tri_out);


--C1L0 is TRI_32:inst4|tridata[11]~11
--operation mode is bidir

C1L0 = D11;

--D11 is D11
--operation mode is bidir

D11_tri_out = TRI(HC1L0, HC1L0);
D11 = BIDIR(D11_tri_out);


--C1L0 is TRI_32:inst4|tridata[12]~12
--operation mode is bidir

C1L0 = D12;

--D12 is D12
--operation mode is bidir

D12_tri_out = TRI(HC1L0, HC1L0);
D12 = BIDIR(D12_tri_out);


--C1L0 is TRI_32:inst4|tridata[13]~13
--operation mode is bidir

C1L0 = D13;

--D13 is D13
--operation mode is bidir

D13_tri_out = TRI(HC1L0, HC1L0);
D13 = BIDIR(D13_tri_out);


--C1L0 is TRI_32:inst4|tridata[14]~14
--operation mode is bidir

C1L0 = D14;

--D14 is D14
--operation mode is bidir

D14_tri_out = TRI(HC1L0, HC1L0);
D14 = BIDIR(D14_tri_out);


--C1L0 is TRI_32:inst4|tridata[15]~15
--operation mode is bidir

C1L0 = D15;

--D15 is D15
--operation mode is bidir

D15_tri_out = TRI(HC1L0, HC1L0);
D15 = BIDIR(D15_tri_out);


--C1L0 is TRI_32:inst4|tridata[16]~16
--operation mode is bidir

C1L0 = D16;

--D16 is D16
--operation mode is bidir

D16_tri_out = TRI(HC1L0, HC1L0);
D16 = BIDIR(D16_tri_out);


--C1L0 is TRI_32:inst4|tridata[17]~17
--operation mode is bidir

C1L0 = D17;

--D17 is D17
--operation mode is bidir

D17_tri_out = TRI(HC1L0, HC1L0);
D17 = BIDIR(D17_tri_out);


--C1L0 is TRI_32:inst4|tridata[18]~18
--operation mode is bidir

C1L0 = D18;

--D18 is D18
--operation mode is bidir

D18_tri_out = TRI(HC1L0, HC1L0);
D18 = BIDIR(D18_tri_out);


--C1L0 is TRI_32:inst4|tridata[19]~19
--operation mode is bidir

C1L0 = D19;

--D19 is D19
--operation mode is bidir

D19_tri_out = TRI(HC1L0, HC1L0);
D19 = BIDIR(D19_tri_out);


--C1L0 is TRI_32:inst4|tridata[20]~20
--operation mode is bidir

C1L0 = D20;

--D20 is D20
--operation mode is bidir

D20_tri_out = TRI(HC1L0, HC1L0);
D20 = BIDIR(D20_tri_out);


--C1L0 is TRI_32:inst4|tridata[21]~21
--operation mode is bidir

C1L0 = D21;

--D21 is D21
--operation mode is bidir

D21_tri_out = TRI(HC1L0, HC1L0);
D21 = BIDIR(D21_tri_out);


--C1L0 is TRI_32:inst4|tridata[22]~22
--operation mode is bidir

C1L0 = D22;

--D22 is D22
--operation mode is bidir

D22_tri_out = TRI(HC1L0, HC1L0);
D22 = BIDIR(D22_tri_out);


--C1L0 is TRI_32:inst4|tridata[23]~23
--operation mode is bidir

C1L0 = D23;

--D23 is D23
--operation mode is bidir

D23_tri_out = TRI(HC1L0, HC1L0);
D23 = BIDIR(D23_tri_out);


--C1L0 is TRI_32:inst4|tridata[24]~24
--operation mode is bidir

C1L0 = D24;

--D24 is D24
--operation mode is bidir

D24_tri_out = TRI(HC1L0, HC1L0);
D24 = BIDIR(D24_tri_out);


--C1L0 is TRI_32:inst4|tridata[25]~25
--operation mode is bidir

C1L0 = D25;

--D25 is D25
--operation mode is bidir

D25_tri_out = TRI(HC1L0, HC1L0);
D25 = BIDIR(D25_tri_out);


--C1L0 is TRI_32:inst4|tridata[26]~26
--operation mode is bidir

C1L0 = D26;

--D26 is D26
--operation mode is bidir

D26_tri_out = TRI(HC1L0, HC1L0);
D26 = BIDIR(D26_tri_out);


--C1L0 is TRI_32:inst4|tridata[27]~27
--operation mode is bidir

C1L0 = D27;

--D27 is D27
--operation mode is bidir

D27_tri_out = TRI(HC1L0, HC1L0);
D27 = BIDIR(D27_tri_out);


--C1L0 is TRI_32:inst4|tridata[28]~28
--operation mode is bidir

C1L0 = D28;

--D28 is D28
--operation mode is bidir

D28_tri_out = TRI(HC1L0, HC1L0);
D28 = BIDIR(D28_tri_out);


--C1L0 is TRI_32:inst4|tridata[29]~29
--operation mode is bidir

C1L0 = D29;

--D29 is D29
--operation mode is bidir

D29_tri_out = TRI(HC1L0, HC1L0);
D29 = BIDIR(D29_tri_out);


--C1L0 is TRI_32:inst4|tridata[30]~30
--operation mode is bidir

C1L0 = D30;

--D30 is D30
--operation mode is bidir

D30_tri_out = TRI(HC1L0, HC1L0);
D30 = BIDIR(D30_tri_out);


--C1L0 is TRI_32:inst4|tridata[31]~31
--operation mode is bidir

C1L0 = D31;

--D31 is D31
--operation mode is bidir

D31_tri_out = TRI(HC1L0, HC1L0);
D31 = BIDIR(D31_tri_out);


--A1L0 is DQMBn0~_wirecell
A1L0 = !DQMBn0;


--A1L0 is DQMBn1~_wirecell
A1L0 = !DQMBn1;


--A1L0 is DQMBn2~_wirecell
A1L0 = !DQMBn2;


--A1L0 is DQMBn3~_wirecell
A1L0 = !DQMBn3;


--INT0 is INT0
--operation mode is output

INT0 = OUTPUT(GND);


--INT1 is INT1
--operation mode is output

INT1 = OUTPUT(GND);


--INT2 is INT2
--operation mode is output

INT2 = OUTPUT(GND);


--INT3 is INT3
--operation mode is output

INT3 = OUTPUT(GND);


--INT4 is INT4
--operation mode is output

INT4 = OUTPUT(GND);


--INT5 is INT5
--operation mode is output

INT5 = OUTPUT(GND);


--MISO_1 is MISO_1
--operation mode is output

MISO_1 = OUTPUT(GND);


--IRQ_1 is IRQ_1
--operation mode is output

IRQ_1 = OUTPUT(GND);


--ResetP is ResetP
--operation mode is output

ResetP = OUTPUT(GND);


--GAP is GAP
--operation mode is output

GAP = OUTPUT(SB1_o_TX_Active);


--GA0 is GA0
--operation mode is output

GA0 = OUTPUT(GND);


--GA1 is GA1
--operation mode is output

GA1 = OUTPUT(GND);


--GA2 is GA2
--operation mode is output

GA2 = OUTPUT(GND);


--GA3 is GA3
--operation mode is output

GA3 = OUTPUT(GND);


--GA4 is GA4
--operation mode is output

GA4 = OUTPUT(GND);


--SW_1_W_O is SW_1_W_O
--operation mode is output

SW_1_W_O = OUTPUT(!W1L0);


--SW_2_W_O is SW_2_W_O
--operation mode is output

SW_2_W_O = OUTPUT(!W1L0);


--DI6 is DI6
--operation mode is output

DI6 = OUTPUT(B1_inst64);


--DI5 is DI5
--operation mode is output

DI5 = OUTPUT(B1_inst54);


--DI1 is DI1
--operation mode is output

DI1 = OUTPUT(B1_inst54);


--DI2 is DI2
--operation mode is output

DI2 = OUTPUT(B1_inst64);


--NRE1 is NRE1
--operation mode is output

NRE1 = OUTPUT(SB1_o_TX_Active);


--DI3 is DI3
--operation mode is output

DI3 = OUTPUT(B1_inst54);


--DI4 is DI4
--operation mode is output

DI4 = OUTPUT(B1_inst64);


--NRE2 is NRE2
--operation mode is output

NRE2 = OUTPUT(SB1_o_TX_Active);


--DI9 is DI9
--operation mode is output

DI9 = OUTPUT(B1_inst54);


--DI10 is DI10
--operation mode is output

DI10 = OUTPUT(B1_inst64);


--NRE3 is NRE3
--operation mode is output

NRE3 = OUTPUT(SB1_o_TX_Active);


--SM1P_OR_1WIRE_O is SM1P_OR_1WIRE_O
--operation mode is output

SM1P_OR_1WIRE_O = OUTPUT(!W1L0);


--SM2P_OR_1WIRE_O is SM2P_OR_1WIRE_O
--operation mode is output

SM2P_OR_1WIRE_O = OUTPUT(!W1L0);


--IO26 is IO26
--operation mode is output

IO26 = OUTPUT(G1_o_A2);


--DI7 is DI7
--operation mode is output

DI7 = OUTPUT(B1_inst54);


--NRE4 is NRE4
--operation mode is output

NRE4 = OUTPUT(SB1_o_TX_Active);


--DI8 is DI8
--operation mode is output

DI8 = OUTPUT(B1_inst64);


--IO25 is IO25
--operation mode is output

IO25 = OUTPUT(G1_o_A1);


--IO55 is IO55
--operation mode is output

IO55 = OUTPUT(G1_o_A1);


--IO56 is IO56
--operation mode is output

IO56 = OUTPUT(G1_o_A2);


--IO57 is IO57
--operation mode is output

IO57 = OUTPUT(G1_o_A3);


--IO58 is IO58
--operation mode is output

IO58 = OUTPUT(G1_o_A4);


--IO51 is IO51
--operation mode is output

IO51 = OUTPUT(!inst97);


--IO52 is IO52
--operation mode is output

IO52 = OUTPUT(!inst99);


--IO60 is IO60
--operation mode is output

IO60 = OUTPUT(G1_o_A3);


--IO59 is IO59
--operation mode is output

IO59 = OUTPUT(G1_o_A4);


--IO17 is IO17
--operation mode is output

IO17 = OUTPUT(M1L0);


--IO18 is IO18
--operation mode is output

IO18 = OUTPUT(M1L0);


--IO15 is IO15
--operation mode is output

IO15 = OUTPUT(M1L0);


--IO16 is IO16
--operation mode is output

IO16 = OUTPUT(M1L0);


--IO23 is IO23
--operation mode is output

IO23 = OUTPUT(M1L0);


--IO24 is IO24
--operation mode is output

IO24 = OUTPUT(M1L0);


--IO19 is IO19
--operation mode is output

IO19 = OUTPUT(M1L0);


--IO20 is IO20
--operation mode is output

IO20 = OUTPUT(M1L0);


--IO13 is IO13
--operation mode is output

IO13 = OUTPUT(M1L0);


--IO14 is IO14
--operation mode is output

IO14 = OUTPUT(M1L0);


--IO21 is IO21
--operation mode is output

IO21 = OUTPUT(M1L0);


--IO22 is IO22
--operation mode is output

IO22 = OUTPUT(M1L0);


--IO11 is IO11
--operation mode is output

IO11 = OUTPUT(M1L0);


--IO12 is IO12
--operation mode is output

IO12 = OUTPUT(M1L0);


--IO9 is IO9
--operation mode is output

IO9 = OUTPUT(M1L0);


--IO10 is IO10
--operation mode is output

IO10 = OUTPUT(M1L0);


--IO8 is IO8
--operation mode is output

IO8 = OUTPUT(M1L0);


--IO7 is IO7
--operation mode is output

IO7 = OUTPUT(M1L0);


--IO6 is IO6
--operation mode is output

IO6 = OUTPUT(M1L0);


--IO5 is IO5
--operation mode is output

IO5 = OUTPUT(M1L0);


--IO2 is IO2
--operation mode is output

IO2 = OUTPUT(M1L0);


--IO1 is IO1
--operation mode is output

IO1 = OUTPUT(M1L0);


--IO4 is IO4
--operation mode is output

IO4 = OUTPUT(M1L0);


--IO3 is IO3
--operation mode is output

IO3 = OUTPUT(M1L0);


--IO54 is IO54
--operation mode is output

IO54 = OUTPUT(!A1L0);


--IO53 is IO53
--operation mode is input

IO53 = INPUT();


--CLK_1 is CLK_1
--operation mode is input

CLK_1 = INPUT();


--MOSI_1 is MOSI_1
--operation mode is input

MOSI_1 = INPUT();


--SS_1 is SS_1
--operation mode is input

SS_1 = INPUT();


--A0_MARK_SEC is A0_MARK_SEC
--operation mode is input

A0_MARK_SEC = INPUT();


--A1_MARK_SEC is A1_MARK_SEC
--operation mode is input

A1_MARK_SEC = INPUT();


--MHz_36_864 is MHz_36_864
--operation mode is input

MHz_36_864 = INPUT();


--DEV_Cle is DEV_Cle
--operation mode is input

DEV_Cle = INPUT();


--DEV_OE is DEV_OE
--operation mode is input

DEV_OE = INPUT();


--RDY_An is RDY_An
--operation mode is input

RDY_An = INPUT();


--MHz_18_432 is MHz_18_432
--operation mode is input

MHz_18_432 = INPUT();


--EXT_CLK is EXT_CLK
--operation mode is input

EXT_CLK = INPUT();


--NRE5 is NRE5
--operation mode is input

NRE5 = INPUT();


--CLK_25MHz2 is CLK_25MHz2
--operation mode is input

CLK_25MHz2 = INPUT();


--A12 is A12
--operation mode is input

A12 = INPUT();


--A11 is A11
--operation mode is input

A11 = INPUT();


--A10 is A10
--operation mode is input

A10 = INPUT();


--A3 is A3
--operation mode is input

A3 = INPUT();


--A1 is A1
--operation mode is input

A1 = INPUT();


--A0 is A0
--operation mode is input

A0 = INPUT();


--A2 is A2
--operation mode is input

A2 = INPUT();


--A9 is A9
--operation mode is input

A9 = INPUT();


--A14 is A14
--operation mode is input

A14 = INPUT();


--A5 is A5
--operation mode is input

A5 = INPUT();


--A6 is A6
--operation mode is input

A6 = INPUT();


--A4 is A4
--operation mode is input

A4 = INPUT();


--A7 is A7
--operation mode is input

A7 = INPUT();


--A8 is A8
--operation mode is input

A8 = INPUT();


--A13 is A13
--operation mode is input

A13 = INPUT();


--CS3 is CS3
--operation mode is input

CS3 = INPUT();


--WE_An is WE_An
--operation mode is input

WE_An = INPUT();


--OE is OE
--operation mode is input

OE = INPUT();


--IO37 is IO37
--operation mode is input

IO37 = INPUT();


--IO49 is IO49
--operation mode is input

IO49 = INPUT();


--DQMBn0 is DQMBn0
--operation mode is input

DQMBn0 = INPUT();


--IO38 is IO38
--operation mode is input

IO38 = INPUT();


--IO50 is IO50
--operation mode is input

IO50 = INPUT();


--IO35 is IO35
--operation mode is input

IO35 = INPUT();


--IO47 is IO47
--operation mode is input

IO47 = INPUT();


--IO31 is IO31
--operation mode is input

IO31 = INPUT();


--IO43 is IO43
--operation mode is input

IO43 = INPUT();


--IO28 is IO28
--operation mode is input

IO28 = INPUT();


--IO44 is IO44
--operation mode is input

IO44 = INPUT();


--IO36 is IO36
--operation mode is input

IO36 = INPUT();


--IO48 is IO48
--operation mode is input

IO48 = INPUT();


--IO32 is IO32
--operation mode is input

IO32 = INPUT();


--IO40 is IO40
--operation mode is input

IO40 = INPUT();


--IO29 is IO29
--operation mode is input

IO29 = INPUT();


--IO39 is IO39
--operation mode is input

IO39 = INPUT();


--IO30 is IO30
--operation mode is input

IO30 = INPUT();


--IO42 is IO42
--operation mode is input

IO42 = INPUT();


--IO27 is IO27
--operation mode is input

IO27 = INPUT();


--IO41 is IO41
--operation mode is input

IO41 = INPUT();


--IO33 is IO33
--operation mode is input

IO33 = INPUT();


--IO45 is IO45
--operation mode is input

IO45 = INPUT();


--IO34 is IO34
--operation mode is input

IO34 = INPUT();


--IO46 is IO46
--operation mode is input

IO46 = INPUT();


--DQMBn1 is DQMBn1
--operation mode is input

DQMBn1 = INPUT();


--DQMBn2 is DQMBn2
--operation mode is input

DQMBn2 = INPUT();


--DQMBn3 is DQMBn3
--operation mode is input

DQMBn3 = INPUT();


--SW_2_W_I is SW_2_W_I
--operation mode is input

SW_2_W_I = INPUT();


--SW_1_W_I is SW_1_W_I
--operation mode is input

SW_1_W_I = INPUT();


--S1 is S1
--operation mode is input

S1 = INPUT();


--S2 is S2
--operation mode is input

S2 = INPUT();


--RO2 is RO2
--operation mode is input

RO2 = INPUT();


--RO1 is RO1
--operation mode is input

RO1 = INPUT();


--RO6 is RO6
--operation mode is input

RO6 = INPUT();


--RO5 is RO5
--operation mode is input

RO5 = INPUT();


--RO4 is RO4
--operation mode is input

RO4 = INPUT();


--RO3 is RO3
--operation mode is input

RO3 = INPUT();


--RO8 is RO8
--operation mode is input

RO8 = INPUT();


--RO7 is RO7
--operation mode is input

RO7 = INPUT();


--RO10 is RO10
--operation mode is input

RO10 = INPUT();


--RO9 is RO9
--operation mode is input

RO9 = INPUT();


